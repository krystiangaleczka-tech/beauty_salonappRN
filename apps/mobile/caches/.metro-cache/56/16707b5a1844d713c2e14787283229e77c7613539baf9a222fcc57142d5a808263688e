{"dependencies":[{"name":"./_baseSlice","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":16,"index":16},"end":{"line":1,"column":39,"index":39}}],"key":"Hd6NFofocTW5sOIG/kbxrde+VEQ=","exportNames":["*"],"imports":1}},{"name":"./toInteger","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":16,"index":57},"end":{"line":2,"column":38,"index":79}}],"key":"7q74FT3KOenrPt1kztNMUTmUjuc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseSlice = require(_dependencyMap[0], \"./_baseSlice\"),\n    toInteger = require(_dependencyMap[1], \"./toInteger\");\n\n  /**\n   * Creates a slice of `array` with `n` elements dropped from the end.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @param {number} [n=1] The number of elements to drop.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {Array} Returns the slice of `array`.\n   * @example\n   *\n   * _.dropRight([1, 2, 3]);\n   * // => [1, 2]\n   *\n   * _.dropRight([1, 2, 3], 2);\n   * // => [1]\n   *\n   * _.dropRight([1, 2, 3], 5);\n   * // => []\n   *\n   * _.dropRight([1, 2, 3], 0);\n   * // => [1, 2, 3]\n   */\n  function dropRight(array, n, guard) {\n    var length = array == null ? 0 : array.length;\n    if (!length) {\n      return [];\n    }\n    n = guard || n === undefined ? 1 : toInteger(n);\n    n = length - n;\n    return baseSlice(array, 0, n < 0 ? 0 : n);\n  }\n  module.exports = dropRight;\n});","lineCount":40,"map":[[2,2,1,0],[2,6,1,4,"baseSlice"],[2,15,1,13],[2,18,1,16,"require"],[2,25,1,23],[2,26,1,23,"_dependencyMap"],[2,40,1,23],[2,59,1,38],[2,60,1,39],[3,4,2,4,"toInteger"],[3,13,2,13],[3,16,2,16,"require"],[3,23,2,23],[3,24,2,23,"_dependencyMap"],[3,38,2,23],[3,56,2,37],[3,57,2,38],[5,2,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,2,29,0],[30,11,29,9,"dropRight"],[30,20,29,18,"dropRight"],[30,21,29,19,"array"],[30,26,29,24],[30,28,29,26,"n"],[30,29,29,27],[30,31,29,29,"guard"],[30,36,29,34],[30,38,29,36],[31,4,30,2],[31,8,30,6,"length"],[31,14,30,12],[31,17,30,15,"array"],[31,22,30,20],[31,26,30,24],[31,30,30,28],[31,33,30,31],[31,34,30,32],[31,37,30,35,"array"],[31,42,30,40],[31,43,30,41,"length"],[31,49,30,47],[32,4,31,2],[32,8,31,6],[32,9,31,7,"length"],[32,15,31,13],[32,17,31,15],[33,6,32,4],[33,13,32,11],[33,15,32,13],[34,4,33,2],[35,4,34,2,"n"],[35,5,34,3],[35,8,34,7,"guard"],[35,13,34,12],[35,17,34,16,"n"],[35,18,34,17],[35,23,34,22,"undefined"],[35,32,34,31],[35,35,34,35],[35,36,34,36],[35,39,34,39,"toInteger"],[35,48,34,48],[35,49,34,49,"n"],[35,50,34,50],[35,51,34,51],[36,4,35,2,"n"],[36,5,35,3],[36,8,35,6,"length"],[36,14,35,12],[36,17,35,15,"n"],[36,18,35,16],[37,4,36,2],[37,11,36,9,"baseSlice"],[37,20,36,18],[37,21,36,19,"array"],[37,26,36,24],[37,28,36,26],[37,29,36,27],[37,31,36,29,"n"],[37,32,36,30],[37,35,36,33],[37,36,36,34],[37,39,36,37],[37,40,36,38],[37,43,36,41,"n"],[37,44,36,42],[37,45,36,43],[38,2,37,0],[39,2,39,0,"module"],[39,8,39,6],[39,9,39,7,"exports"],[39,16,39,14],[39,19,39,17,"dropRight"],[39,28,39,26],[40,0,39,27],[40,3]],"functionMap":{"names":["<global>","dropRight"],"mappings":"AAA;AC4B;CDQ"},"hasCjsExports":true},"type":"js/module"}]}