{"dependencies":[{"name":"./_baseKeys","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":37,"index":37}}],"key":"u7bnle8MSAwFot0yM3hMvVMLM1k=","exportNames":["*"]}},{"name":"./_getTag","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":13,"index":52},"end":{"line":2,"column":33,"index":72}}],"key":"QzKfm+fv5BQ5svWDQDDSsIdz/ZE=","exportNames":["*"]}},{"name":"./isArguments","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":18,"index":92},"end":{"line":3,"column":42,"index":116}}],"key":"HD8q1j8YwiXe5LPVP2ZkI1qLoNI=","exportNames":["*"]}},{"name":"./isArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":132},"end":{"line":4,"column":34,"index":152}}],"key":"cpLl3Nq+ZgzwmgESYQ2NCH3CqEk=","exportNames":["*"]}},{"name":"./isArrayLike","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":18,"index":172},"end":{"line":5,"column":42,"index":196}}],"key":"uFBhDXuXNSDFu0t5DF80nwq22rc=","exportNames":["*"]}},{"name":"./isBuffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":15,"index":213},"end":{"line":6,"column":36,"index":234}}],"key":"MnKE+aOfiHt1/Xaur83FQ9Y3csg=","exportNames":["*"]}},{"name":"./_isPrototype","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18,"index":254},"end":{"line":7,"column":43,"index":279}}],"key":"vBiRDUMqg88JHs1hByVxS5nSkEc=","exportNames":["*"]}},{"name":"./isTypedArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":19,"index":300},"end":{"line":8,"column":44,"index":325}}],"key":"dqzi9z07s46ENslw0ZkrSg3FYTY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseKeys = require(_dependencyMap[0], \"./_baseKeys\"),\n    getTag = require(_dependencyMap[1], \"./_getTag\"),\n    isArguments = require(_dependencyMap[2], \"./isArguments\"),\n    isArray = require(_dependencyMap[3], \"./isArray\"),\n    isArrayLike = require(_dependencyMap[4], \"./isArrayLike\"),\n    isBuffer = require(_dependencyMap[5], \"./isBuffer\"),\n    isPrototype = require(_dependencyMap[6], \"./_isPrototype\"),\n    isTypedArray = require(_dependencyMap[7], \"./isTypedArray\");\n\n  /** `Object#toString` result references. */\n  var mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n  /** Used for built-in method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (value == null) {\n      return true;\n    }\n    if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n      return !value.length;\n    }\n    var tag = getTag(value);\n    if (tag == mapTag || tag == setTag) {\n      return !value.size;\n    }\n    if (isPrototype(value)) {\n      return !baseKeys(value).length;\n    }\n    for (var key in value) {\n      if (hasOwnProperty.call(value, key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  module.exports = isEmpty;\n});","lineCount":76,"map":[[2,2,1,0],[2,6,1,4,"baseKeys"],[2,14,1,12],[2,17,1,15,"require"],[2,24,1,22],[2,25,1,22,"_dependencyMap"],[2,39,1,22],[2,57,1,36],[2,58,1,37],[3,4,2,4,"getTag"],[3,10,2,10],[3,13,2,13,"require"],[3,20,2,20],[3,21,2,20,"_dependencyMap"],[3,35,2,20],[3,51,2,32],[3,52,2,33],[4,4,3,4,"isArguments"],[4,15,3,15],[4,18,3,18,"require"],[4,25,3,25],[4,26,3,25,"_dependencyMap"],[4,40,3,25],[4,60,3,41],[4,61,3,42],[5,4,4,4,"isArray"],[5,11,4,11],[5,14,4,14,"require"],[5,21,4,21],[5,22,4,21,"_dependencyMap"],[5,36,4,21],[5,52,4,33],[5,53,4,34],[6,4,5,4,"isArrayLike"],[6,15,5,15],[6,18,5,18,"require"],[6,25,5,25],[6,26,5,25,"_dependencyMap"],[6,40,5,25],[6,60,5,41],[6,61,5,42],[7,4,6,4,"isBuffer"],[7,12,6,12],[7,15,6,15,"require"],[7,22,6,22],[7,23,6,22,"_dependencyMap"],[7,37,6,22],[7,54,6,35],[7,55,6,36],[8,4,7,4,"isPrototype"],[8,15,7,15],[8,18,7,18,"require"],[8,25,7,25],[8,26,7,25,"_dependencyMap"],[8,40,7,25],[8,61,7,42],[8,62,7,43],[9,4,8,4,"isTypedArray"],[9,16,8,16],[9,19,8,19,"require"],[9,26,8,26],[9,27,8,26,"_dependencyMap"],[9,41,8,26],[9,62,8,43],[9,63,8,44],[11,2,10,0],[12,2,11,0],[12,6,11,4,"mapTag"],[12,12,11,10],[12,15,11,13],[12,29,11,27],[13,4,12,4,"setTag"],[13,10,12,10],[13,13,12,13],[13,27,12,27],[15,2,14,0],[16,2,15,0],[16,6,15,4,"objectProto"],[16,17,15,15],[16,20,15,18,"Object"],[16,26,15,24],[16,27,15,25,"prototype"],[16,36,15,34],[18,2,17,0],[19,2,18,0],[19,6,18,4,"hasOwnProperty"],[19,20,18,18],[19,23,18,21,"objectProto"],[19,34,18,32],[19,35,18,33,"hasOwnProperty"],[19,49,18,47],[21,2,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,0,43,0],[45,0,44,0],[46,0,45,0],[47,0,46,0],[48,0,47,0],[49,0,48,0],[50,0,49,0],[51,0,50,0],[52,0,51,0],[53,0,52,0],[54,2,53,0],[54,11,53,9,"isEmpty"],[54,18,53,16,"isEmpty"],[54,19,53,17,"value"],[54,24,53,22],[54,26,53,24],[55,4,54,2],[55,8,54,6,"value"],[55,13,54,11],[55,17,54,15],[55,21,54,19],[55,23,54,21],[56,6,55,4],[56,13,55,11],[56,17,55,15],[57,4,56,2],[58,4,57,2],[58,8,57,6,"isArrayLike"],[58,19,57,17],[58,20,57,18,"value"],[58,25,57,23],[58,26,57,24],[58,31,58,7,"isArray"],[58,38,58,14],[58,39,58,15,"value"],[58,44,58,20],[58,45,58,21],[58,49,58,25],[58,56,58,32,"value"],[58,61,58,37],[58,65,58,41],[58,73,58,49],[58,77,58,53],[58,84,58,60,"value"],[58,89,58,65],[58,90,58,66,"splice"],[58,96,58,72],[58,100,58,76],[58,110,58,86],[58,114,59,8,"isBuffer"],[58,122,59,16],[58,123,59,17,"value"],[58,128,59,22],[58,129,59,23],[58,133,59,27,"isTypedArray"],[58,145,59,39],[58,146,59,40,"value"],[58,151,59,45],[58,152,59,46],[58,156,59,50,"isArguments"],[58,167,59,61],[58,168,59,62,"value"],[58,173,59,67],[58,174,59,68],[58,175,59,69],[58,177,59,71],[59,6,60,4],[59,13,60,11],[59,14,60,12,"value"],[59,19,60,17],[59,20,60,18,"length"],[59,26,60,24],[60,4,61,2],[61,4,62,2],[61,8,62,6,"tag"],[61,11,62,9],[61,14,62,12,"getTag"],[61,20,62,18],[61,21,62,19,"value"],[61,26,62,24],[61,27,62,25],[62,4,63,2],[62,8,63,6,"tag"],[62,11,63,9],[62,15,63,13,"mapTag"],[62,21,63,19],[62,25,63,23,"tag"],[62,28,63,26],[62,32,63,30,"setTag"],[62,38,63,36],[62,40,63,38],[63,6,64,4],[63,13,64,11],[63,14,64,12,"value"],[63,19,64,17],[63,20,64,18,"size"],[63,24,64,22],[64,4,65,2],[65,4,66,2],[65,8,66,6,"isPrototype"],[65,19,66,17],[65,20,66,18,"value"],[65,25,66,23],[65,26,66,24],[65,28,66,26],[66,6,67,4],[66,13,67,11],[66,14,67,12,"baseKeys"],[66,22,67,20],[66,23,67,21,"value"],[66,28,67,26],[66,29,67,27],[66,30,67,28,"length"],[66,36,67,34],[67,4,68,2],[68,4,69,2],[68,9,69,7],[68,13,69,11,"key"],[68,16,69,14],[68,20,69,18,"value"],[68,25,69,23],[68,27,69,25],[69,6,70,4],[69,10,70,8,"hasOwnProperty"],[69,24,70,22],[69,25,70,23,"call"],[69,29,70,27],[69,30,70,28,"value"],[69,35,70,33],[69,37,70,35,"key"],[69,40,70,38],[69,41,70,39],[69,43,70,41],[70,8,71,6],[70,15,71,13],[70,20,71,18],[71,6,72,4],[72,4,73,2],[73,4,74,2],[73,11,74,9],[73,15,74,13],[74,2,75,0],[75,2,77,0,"module"],[75,8,77,6],[75,9,77,7,"exports"],[75,16,77,14],[75,19,77,17,"isEmpty"],[75,26,77,24],[76,0,77,25],[76,3]],"functionMap":{"names":["<global>","isEmpty"],"mappings":"AAA;ACoD;CDsB"}},"type":"js/module"}]}