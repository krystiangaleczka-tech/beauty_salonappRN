{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}},{"name":"../../animation/utils/is-animation-controls.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":86,"index":151}}],"key":"DlsnybhptTj+gBYOZ2Yih1QuWtE=","exportNames":["*"],"imports":1}},{"name":"../../animation/utils/is-keyframes-target.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":152},"end":{"line":3,"column":82,"index":234}}],"key":"n9QBBgP//0MUDycUGuNrDmIDiMU=","exportNames":["*"],"imports":1}},{"name":"../../utils/shallow-compare.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":235},"end":{"line":4,"column":65,"index":300}}],"key":"aldt5M1gNNWPDHwWpApV/Bg4Kw4=","exportNames":["*"],"imports":1}},{"name":"./animation.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":301},"end":{"line":5,"column":55,"index":356}}],"key":"ZpwLKv6StTvXW+N9nHFL7q3yL08=","exportNames":["*"],"imports":1}},{"name":"./types.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":357},"end":{"line":6,"column":44,"index":401}}],"key":"4UqV1wvuNptJ4Ng2esdbhI4dos0=","exportNames":["*"],"imports":1}},{"name":"./variants.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":402},"end":{"line":7,"column":81,"index":483}}],"key":"TQrZmYkgA7MgDzQG+HyAZZldAMk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"checkVariantsDidChange\", {\n    enumerable: true,\n    get: function () {\n      return checkVariantsDidChange;\n    }\n  });\n  Object.defineProperty(exports, \"createAnimationState\", {\n    enumerable: true,\n    get: function () {\n      return createAnimationState;\n    }\n  });\n  Object.defineProperty(exports, \"variantPriorityOrder\", {\n    enumerable: true,\n    get: function () {\n      return variantPriorityOrder;\n    }\n  });\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _animationUtilsIsAnimationControlsMjs = require(_dependencyMap[1], \"../../animation/utils/is-animation-controls.mjs\");\n  var _animationUtilsIsKeyframesTargetMjs = require(_dependencyMap[2], \"../../animation/utils/is-keyframes-target.mjs\");\n  var _utilsShallowCompareMjs = require(_dependencyMap[3], \"../../utils/shallow-compare.mjs\");\n  var _animationMjs = require(_dependencyMap[4], \"./animation.mjs\");\n  var _typesMjs = require(_dependencyMap[5], \"./types.mjs\");\n  var _variantsMjs = require(_dependencyMap[6], \"./variants.mjs\");\n  var variantPriorityOrder = [_typesMjs.AnimationType.Animate, _typesMjs.AnimationType.InView, _typesMjs.AnimationType.Focus, _typesMjs.AnimationType.Hover, _typesMjs.AnimationType.Tap, _typesMjs.AnimationType.Drag, _typesMjs.AnimationType.Exit];\n  var reversePriorityOrder = (0, _tslib.__spreadArray)([], (0, _tslib.__read)(variantPriorityOrder), false).reverse();\n  var numAnimationTypes = variantPriorityOrder.length;\n  function animateList(visualElement) {\n    return function (animations) {\n      return Promise.all(animations.map(function (_a) {\n        var animation = _a.animation,\n          options = _a.options;\n        return (0, _animationMjs.animateVisualElement)(visualElement, animation, options);\n      }));\n    };\n  }\n  function createAnimationState(visualElement) {\n    var animate = animateList(visualElement);\n    var state = createState();\n    var allAnimatedKeys = {};\n    var isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    var buildResolvedTypeValues = function (acc, definition) {\n      var resolved = (0, _variantsMjs.resolveVariant)(visualElement, definition);\n      if (resolved) {\n        resolved.transition;\n        var transitionEnd = resolved.transitionEnd,\n          target = (0, _tslib.__rest)(resolved, [\"transition\", \"transitionEnd\"]);\n        acc = (0, _tslib.__assign)((0, _tslib.__assign)((0, _tslib.__assign)({}, acc), target), transitionEnd);\n      }\n      return acc;\n    };\n    function isAnimated(key) {\n      return allAnimatedKeys[key] !== undefined;\n    }\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n      animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n      var _a;\n      var props = visualElement.getProps();\n      var context = visualElement.getVariantContext(true) || {};\n      /**\n       * A list of animations that we'll build into as we iterate through the animation\n       * types. This will get executed at the end of the function.\n       */\n      var animations = [];\n      /**\n       * Keep track of which values have been removed. Then, as we hit lower priority\n       * animation types, we can check if they contain removed values and animate to that.\n       */\n      var removedKeys = new Set();\n      /**\n       * A dictionary of all encountered keys. This is an object to let us build into and\n       * copy it without iteration. Each time we hit an animation type we set its protected\n       * keys - the keys its not allowed to animate - to the latest version of this object.\n       */\n      var encounteredKeys = {};\n      /**\n       * If a variant has been removed at a given index, and this component is controlling\n       * variant animations, we want to ensure lower-priority variants are forced to animate.\n       */\n      var removedVariantIndex = Infinity;\n      var _loop_1 = function (i) {\n        var type = reversePriorityOrder[i];\n        var typeState = state[type];\n        var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n        var propIsVariant = (0, _variantsMjs.isVariantLabel)(prop);\n        /**\n         * If this type has *just* changed isActive status, set activeDelta\n         * to that status. Otherwise set to null.\n         */\n        var activeDelta = type === changedActiveType ? typeState.isActive : null;\n        if (activeDelta === false) removedVariantIndex = i;\n        /**\n         * If this prop is an inherited variant, rather than been set directly on the\n         * component itself, we want to make sure we allow the parent to trigger animations.\n         *\n         * TODO: Can probably change this to a !isControllingVariants check\n         */\n        var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n        /**\n         *\n         */\n        if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount) {\n          isInherited = false;\n        }\n        /**\n         * Set all encountered keys so far as the protected keys for this type. This will\n         * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n         */\n        typeState.protectedKeys = (0, _tslib.__assign)({}, encounteredKeys);\n        // Check if we can skip analysing this prop early\n        if (\n        // If it isn't active and hasn't *just* been set as inactive\n        !typeState.isActive && activeDelta === null ||\n        // If we didn't and don't have any defined prop for this animation type\n        !prop && !typeState.prevProp ||\n        // Or if the prop doesn't define an animation\n        (0, _animationUtilsIsAnimationControlsMjs.isAnimationControls)(prop) || typeof prop === \"boolean\") {\n          return \"continue\";\n        }\n        /**\n         * As we go look through the values defined on this type, if we detect\n         * a changed value or a value that was removed in a higher priority, we set\n         * this to true and add this prop to the animation list.\n         */\n        var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n        var shouldAnimateType = variantDidChange ||\n        // If we're making this variant active, we want to always make it active\n        type === changedActiveType && typeState.isActive && !isInherited && propIsVariant ||\n        // If we removed a higher-priority variant (i is in reverse order)\n        i > removedVariantIndex && propIsVariant;\n        /**\n         * As animations can be set as variant lists, variants or target objects, we\n         * coerce everything to an array if it isn't one already\n         */\n        var definitionList = Array.isArray(prop) ? prop : [prop];\n        /**\n         * Build an object of all the resolved values. We'll use this in the subsequent\n         * animateChanges calls to determine whether a value has changed.\n         */\n        var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n        if (activeDelta === false) resolvedValues = {};\n        /**\n         * Now we need to loop through all the keys in the prev prop and this prop,\n         * and decide:\n         * 1. If the value has changed, and needs animating\n         * 2. If it has been removed, and needs adding to the removedKeys set\n         * 3. If it has been removed in a higher priority type and needs animating\n         * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n         *    needs adding to the type's protectedKeys list.\n         */\n        var _b = typeState.prevResolvedValues,\n          prevResolvedValues = _b === void 0 ? {} : _b;\n        var allKeys = (0, _tslib.__assign)((0, _tslib.__assign)({}, prevResolvedValues), resolvedValues);\n        var markToAnimate = function (key) {\n          shouldAnimateType = true;\n          removedKeys.delete(key);\n          typeState.needsAnimating[key] = true;\n        };\n        for (var key in allKeys) {\n          var next = resolvedValues[key];\n          var prev = prevResolvedValues[key];\n          // If we've already handled this we can just skip ahead\n          if (encounteredKeys.hasOwnProperty(key)) continue;\n          /**\n           * If the value has changed, we probably want to animate it.\n           */\n          if (next !== prev) {\n            /**\n             * If both values are keyframes, we need to shallow compare them to\n             * detect whether any value has changed. If it has, we animate it.\n             */\n            if ((0, _animationUtilsIsKeyframesTargetMjs.isKeyframesTarget)(next) && (0, _animationUtilsIsKeyframesTargetMjs.isKeyframesTarget)(prev)) {\n              if (!(0, _utilsShallowCompareMjs.shallowCompare)(next, prev) || variantDidChange) {\n                markToAnimate(key);\n              } else {\n                /**\n                 * If it hasn't changed, we want to ensure it doesn't animate by\n                 * adding it to the list of protected keys.\n                 */\n                typeState.protectedKeys[key] = true;\n              }\n            } else if (next !== undefined) {\n              // If next is defined and doesn't equal prev, it needs animating\n              markToAnimate(key);\n            } else {\n              // If it's undefined, it's been removed.\n              removedKeys.add(key);\n            }\n          } else if (next !== undefined && removedKeys.has(key)) {\n            /**\n             * If next hasn't changed and it isn't undefined, we want to check if it's\n             * been removed by a higher priority\n             */\n            markToAnimate(key);\n          } else {\n            /**\n             * If it hasn't changed, we add it to the list of protected values\n             * to ensure it doesn't get animated.\n             */\n            typeState.protectedKeys[key] = true;\n          }\n        }\n        /**\n         * Update the typeState so next time animateChanges is called we can compare the\n         * latest prop and resolvedValues to these.\n         */\n        typeState.prevProp = prop;\n        typeState.prevResolvedValues = resolvedValues;\n        /**\n         *\n         */\n        if (typeState.isActive) {\n          encounteredKeys = (0, _tslib.__assign)((0, _tslib.__assign)({}, encounteredKeys), resolvedValues);\n        }\n        if (isInitialRender && visualElement.blockInitialAnimation) {\n          shouldAnimateType = false;\n        }\n        /**\n         * If this is an inherited prop we want to hard-block animations\n         * TODO: Test as this should probably still handle animations triggered\n         * by removed values?\n         */\n        if (shouldAnimateType && !isInherited) {\n          animations.push.apply(animations, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(definitionList.map(function (animation) {\n            return {\n              animation: animation,\n              options: (0, _tslib.__assign)({\n                type: type\n              }, options)\n            };\n          })), false));\n        }\n      };\n      /**\n       * Iterate through all animation types in reverse priority order. For each, we want to\n       * detect which values it's handling and whether or not they've changed (and therefore\n       * need to be animated). If any values have been removed, we want to detect those in\n       * lower priority props and flag for animation.\n       */\n      for (var i = 0; i < numAnimationTypes; i++) {\n        _loop_1(i);\n      }\n      allAnimatedKeys = (0, _tslib.__assign)({}, encounteredKeys);\n      /**\n       * If there are some removed value that haven't been dealt with,\n       * we need to create a new animation that falls back either to the value\n       * defined in the style prop, or the last read value.\n       */\n      if (removedKeys.size) {\n        var fallbackAnimation_1 = {};\n        removedKeys.forEach(function (key) {\n          var fallbackTarget = visualElement.getBaseTarget(key);\n          if (fallbackTarget !== undefined) {\n            fallbackAnimation_1[key] = fallbackTarget;\n          }\n        });\n        animations.push({\n          animation: fallbackAnimation_1\n        });\n      }\n      var shouldAnimate = Boolean(animations.length);\n      if (isInitialRender && props.initial === false && !visualElement.manuallyAnimateOnMount) {\n        shouldAnimate = false;\n      }\n      isInitialRender = false;\n      return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n      var _a;\n      // If the active state hasn't changed, we can safely do nothing here\n      if (state[type].isActive === isActive) return Promise.resolve();\n      // Propagate active change to children\n      (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n        var _a;\n        return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive);\n      });\n      state[type].isActive = isActive;\n      var animations = animateChanges(options, type);\n      for (var key in state) {\n        state[key].protectedKeys = {};\n      }\n      return animations;\n    }\n    return {\n      isAnimated: isAnimated,\n      animateChanges: animateChanges,\n      setActive: setActive,\n      setAnimateFunction: setAnimateFunction,\n      getState: function () {\n        return state;\n      }\n    };\n  }\n  function checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n      return next !== prev;\n    } else if ((0, _variantsMjs.isVariantLabels)(next)) {\n      return !(0, _utilsShallowCompareMjs.shallowCompare)(next, prev);\n    }\n    return false;\n  }\n  function createTypeState(isActive) {\n    if (isActive === void 0) {\n      isActive = false;\n    }\n    return {\n      isActive: isActive,\n      protectedKeys: {},\n      needsAnimating: {},\n      prevResolvedValues: {}\n    };\n  }\n  function createState() {\n    var _a;\n    return _a = {}, _a[_typesMjs.AnimationType.Animate] = createTypeState(true), _a[_typesMjs.AnimationType.InView] = createTypeState(), _a[_typesMjs.AnimationType.Hover] = createTypeState(), _a[_typesMjs.AnimationType.Tap] = createTypeState(), _a[_typesMjs.AnimationType.Drag] = createTypeState(), _a[_typesMjs.AnimationType.Focus] = createTypeState(), _a[_typesMjs.AnimationType.Exit] = createTypeState(), _a;\n  }\n});","lineCount":347,"map":[[7,2,342,0,"Object"],[7,8,342,0],[7,9,342,0,"defineProperty"],[7,23,342,0],[7,24,342,0,"exports"],[7,31,342,0],[8,4,342,0,"enumerable"],[8,14,342,0],[9,4,342,0,"get"],[9,7,342,0],[9,18,342,0,"get"],[9,19,342,0],[10,6,342,0],[10,13,342,9,"checkVariantsDidChange"],[10,35,342,31],[11,4,342,31],[12,2,342,31],[13,2,342,0,"Object"],[13,8,342,0],[13,9,342,0,"defineProperty"],[13,23,342,0],[13,24,342,0,"exports"],[13,31,342,0],[14,4,342,0,"enumerable"],[14,14,342,0],[15,4,342,0,"get"],[15,7,342,0],[15,18,342,0,"get"],[15,19,342,0],[16,6,342,0],[16,13,342,33,"createAnimationState"],[16,33,342,53],[17,4,342,53],[18,2,342,53],[19,2,342,0,"Object"],[19,8,342,0],[19,9,342,0,"defineProperty"],[19,23,342,0],[19,24,342,0,"exports"],[19,31,342,0],[20,4,342,0,"enumerable"],[20,14,342,0],[21,4,342,0,"get"],[21,7,342,0],[21,18,342,0,"get"],[21,19,342,0],[22,6,342,0],[22,13,342,55,"variantPriorityOrder"],[22,33,342,75],[23,4,342,75],[24,2,342,75],[25,2,1,0],[25,6,1,0,"_tslib"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_animationUtilsIsAnimationControlsMjs"],[26,43,2,0],[26,46,2,0,"require"],[26,53,2,0],[26,54,2,0,"_dependencyMap"],[26,68,2,0],[27,2,3,0],[27,6,3,0,"_animationUtilsIsKeyframesTargetMjs"],[27,41,3,0],[27,44,3,0,"require"],[27,51,3,0],[27,52,3,0,"_dependencyMap"],[27,66,3,0],[28,2,4,0],[28,6,4,0,"_utilsShallowCompareMjs"],[28,29,4,0],[28,32,4,0,"require"],[28,39,4,0],[28,40,4,0,"_dependencyMap"],[28,54,4,0],[29,2,5,0],[29,6,5,0,"_animationMjs"],[29,19,5,0],[29,22,5,0,"require"],[29,29,5,0],[29,30,5,0,"_dependencyMap"],[29,44,5,0],[30,2,6,0],[30,6,6,0,"_typesMjs"],[30,15,6,0],[30,18,6,0,"require"],[30,25,6,0],[30,26,6,0,"_dependencyMap"],[30,40,6,0],[31,2,7,0],[31,6,7,0,"_variantsMjs"],[31,18,7,0],[31,21,7,0,"require"],[31,28,7,0],[31,29,7,0,"_dependencyMap"],[31,43,7,0],[32,2,9,0],[32,6,9,4,"variantPriorityOrder"],[32,26,9,24],[32,29,9,27],[32,30,10,4,"AnimationType"],[32,39,10,17],[32,40,10,17,"AnimationType"],[32,53,10,17],[32,54,10,18,"Animate"],[32,61,10,25],[32,63,11,4,"AnimationType"],[32,72,11,17],[32,73,11,17,"AnimationType"],[32,86,11,17],[32,87,11,18,"InView"],[32,93,11,24],[32,95,12,4,"AnimationType"],[32,104,12,17],[32,105,12,17,"AnimationType"],[32,118,12,17],[32,119,12,18,"Focus"],[32,124,12,23],[32,126,13,4,"AnimationType"],[32,135,13,17],[32,136,13,17,"AnimationType"],[32,149,13,17],[32,150,13,18,"Hover"],[32,155,13,23],[32,157,14,4,"AnimationType"],[32,166,14,17],[32,167,14,17,"AnimationType"],[32,180,14,17],[32,181,14,18,"Tap"],[32,184,14,21],[32,186,15,4,"AnimationType"],[32,195,15,17],[32,196,15,17,"AnimationType"],[32,209,15,17],[32,210,15,18,"Drag"],[32,214,15,22],[32,216,16,4,"AnimationType"],[32,225,16,17],[32,226,16,17,"AnimationType"],[32,239,16,17],[32,240,16,18,"Exit"],[32,244,16,22],[32,245,17,1],[33,2,18,0],[33,6,18,4,"reversePriorityOrder"],[33,26,18,24],[33,29,18,27],[33,33,18,27,"__spreadArray"],[33,39,18,40],[33,40,18,40,"__spreadArray"],[33,53,18,40],[33,55,18,41],[33,57,18,43],[33,59,18,45],[33,63,18,45,"__read"],[33,69,18,51],[33,70,18,51,"__read"],[33,76,18,51],[33,78,18,52,"variantPriorityOrder"],[33,98,18,72],[33,99,18,73],[33,101,18,75],[33,106,18,80],[33,107,18,81],[33,108,18,82,"reverse"],[33,115,18,89],[33,116,18,90],[33,117,18,91],[34,2,19,0],[34,6,19,4,"numAnimationTypes"],[34,23,19,21],[34,26,19,24,"variantPriorityOrder"],[34,46,19,44],[34,47,19,45,"length"],[34,53,19,51],[35,2,20,0],[35,11,20,9,"animateList"],[35,22,20,20,"animateList"],[35,23,20,21,"visualElement"],[35,36,20,34],[35,38,20,36],[36,4,21,4],[36,11,21,11],[36,21,21,21,"animations"],[36,31,21,31],[36,33,21,33],[37,6,22,8],[37,13,22,15,"Promise"],[37,20,22,22],[37,21,22,23,"all"],[37,24,22,26],[37,25,22,27,"animations"],[37,35,22,37],[37,36,22,38,"map"],[37,39,22,41],[37,40,22,42],[37,50,22,52,"_a"],[37,52,22,54],[37,54,22,56],[38,8,23,12],[38,12,23,16,"animation"],[38,21,23,25],[38,24,23,28,"_a"],[38,26,23,30],[38,27,23,31,"animation"],[38,36,23,40],[39,10,23,42,"options"],[39,17,23,49],[39,20,23,52,"_a"],[39,22,23,54],[39,23,23,55,"options"],[39,30,23,62],[40,8,24,12],[40,15,24,19],[40,19,24,19,"animateVisualElement"],[40,32,24,39],[40,33,24,39,"animateVisualElement"],[40,53,24,39],[40,55,24,40,"visualElement"],[40,68,24,53],[40,70,24,55,"animation"],[40,79,24,64],[40,81,24,66,"options"],[40,88,24,73],[40,89,24,74],[41,6,25,8],[41,7,25,9],[41,8,25,10],[41,9,25,11],[42,4,26,4],[42,5,26,5],[43,2,27,0],[44,2,28,0],[44,11,28,9,"createAnimationState"],[44,31,28,29,"createAnimationState"],[44,32,28,30,"visualElement"],[44,45,28,43],[44,47,28,45],[45,4,29,4],[45,8,29,8,"animate"],[45,15,29,15],[45,18,29,18,"animateList"],[45,29,29,29],[45,30,29,30,"visualElement"],[45,43,29,43],[45,44,29,44],[46,4,30,4],[46,8,30,8,"state"],[46,13,30,13],[46,16,30,16,"createState"],[46,27,30,27],[46,28,30,28],[46,29,30,29],[47,4,31,4],[47,8,31,8,"allAnimatedKeys"],[47,23,31,23],[47,26,31,26],[47,27,31,27],[47,28,31,28],[48,4,32,4],[48,8,32,8,"isInitialRender"],[48,23,32,23],[48,26,32,26],[48,30,32,30],[49,4,33,4],[50,0,34,0],[51,0,35,0],[52,0,36,0],[53,4,37,4],[53,8,37,8,"buildResolvedTypeValues"],[53,31,37,31],[53,34,37,34],[53,43,37,34,"buildResolvedTypeValues"],[53,44,37,44,"acc"],[53,47,37,47],[53,49,37,49,"definition"],[53,59,37,59],[53,61,37,61],[54,6,38,8],[54,10,38,12,"resolved"],[54,18,38,20],[54,21,38,23],[54,25,38,23,"resolveVariant"],[54,37,38,37],[54,38,38,37,"resolveVariant"],[54,52,38,37],[54,54,38,38,"visualElement"],[54,67,38,51],[54,69,38,53,"definition"],[54,79,38,63],[54,80,38,64],[55,6,39,8],[55,10,39,12,"resolved"],[55,18,39,20],[55,20,39,22],[56,8,40,12,"resolved"],[56,16,40,20],[56,17,40,21,"transition"],[56,27,40,31],[57,8,40,33],[57,12,40,37,"transitionEnd"],[57,25,40,50],[57,28,40,53,"resolved"],[57,36,40,61],[57,37,40,62,"transitionEnd"],[57,50,40,75],[58,10,40,77,"target"],[58,16,40,83],[58,19,40,86],[58,23,40,86,"__rest"],[58,29,40,92],[58,30,40,92,"__rest"],[58,36,40,92],[58,38,40,93,"resolved"],[58,46,40,101],[58,48,40,103],[58,49,40,104],[58,61,40,116],[58,63,40,118],[58,78,40,133],[58,79,40,134],[58,80,40,135],[59,8,41,12,"acc"],[59,11,41,15],[59,14,41,18],[59,18,41,18,"__assign"],[59,24,41,26],[59,25,41,26,"__assign"],[59,33,41,26],[59,35,41,27],[59,39,41,27,"__assign"],[59,45,41,35],[59,46,41,35,"__assign"],[59,54,41,35],[59,56,41,36],[59,60,41,36,"__assign"],[59,66,41,44],[59,67,41,44,"__assign"],[59,75,41,44],[59,77,41,45],[59,78,41,46],[59,79,41,47],[59,81,41,49,"acc"],[59,84,41,52],[59,85,41,53],[59,87,41,55,"target"],[59,93,41,61],[59,94,41,62],[59,96,41,64,"transitionEnd"],[59,109,41,77],[59,110,41,78],[60,6,42,8],[61,6,43,8],[61,13,43,15,"acc"],[61,16,43,18],[62,4,44,4],[62,5,44,5],[63,4,45,4],[63,13,45,13,"isAnimated"],[63,23,45,23,"isAnimated"],[63,24,45,24,"key"],[63,27,45,27],[63,29,45,29],[64,6,46,8],[64,13,46,15,"allAnimatedKeys"],[64,28,46,30],[64,29,46,31,"key"],[64,32,46,34],[64,33,46,35],[64,38,46,40,"undefined"],[64,47,46,49],[65,4,47,4],[66,4,48,4],[67,0,49,0],[68,0,50,0],[69,0,51,0],[70,4,52,4],[70,13,52,13,"setAnimateFunction"],[70,31,52,31,"setAnimateFunction"],[70,32,52,32,"makeAnimator"],[70,44,52,44],[70,46,52,46],[71,6,53,8,"animate"],[71,13,53,15],[71,16,53,18,"makeAnimator"],[71,28,53,30],[71,29,53,31,"visualElement"],[71,42,53,44],[71,43,53,45],[72,4,54,4],[73,4,55,4],[74,0,56,0],[75,0,57,0],[76,0,58,0],[77,0,59,0],[78,0,60,0],[79,0,61,0],[80,0,62,0],[81,0,63,0],[82,0,64,0],[83,4,65,4],[83,13,65,13,"animateChanges"],[83,27,65,27,"animateChanges"],[83,28,65,28,"options"],[83,35,65,35],[83,37,65,37,"changedActiveType"],[83,54,65,54],[83,56,65,56],[84,6,66,8],[84,10,66,12,"_a"],[84,12,66,14],[85,6,67,8],[85,10,67,12,"props"],[85,15,67,17],[85,18,67,20,"visualElement"],[85,31,67,33],[85,32,67,34,"getProps"],[85,40,67,42],[85,41,67,43],[85,42,67,44],[86,6,68,8],[86,10,68,12,"context"],[86,17,68,19],[86,20,68,22,"visualElement"],[86,33,68,35],[86,34,68,36,"getVariantContext"],[86,51,68,53],[86,52,68,54],[86,56,68,58],[86,57,68,59],[86,61,68,63],[86,62,68,64],[86,63,68,65],[87,6,69,8],[88,0,70,0],[89,0,71,0],[90,0,72,0],[91,6,73,8],[91,10,73,12,"animations"],[91,20,73,22],[91,23,73,25],[91,25,73,27],[92,6,74,8],[93,0,75,0],[94,0,76,0],[95,0,77,0],[96,6,78,8],[96,10,78,12,"removedKeys"],[96,21,78,23],[96,24,78,26],[96,28,78,30,"Set"],[96,31,78,33],[96,32,78,34],[96,33,78,35],[97,6,79,8],[98,0,80,0],[99,0,81,0],[100,0,82,0],[101,0,83,0],[102,6,84,8],[102,10,84,12,"encounteredKeys"],[102,25,84,27],[102,28,84,30],[102,29,84,31],[102,30,84,32],[103,6,85,8],[104,0,86,0],[105,0,87,0],[106,0,88,0],[107,6,89,8],[107,10,89,12,"removedVariantIndex"],[107,29,89,31],[107,32,89,34,"Infinity"],[107,40,89,42],[108,6,90,8],[108,10,90,12,"_loop_1"],[108,17,90,19],[108,20,90,22],[108,29,90,22,"_loop_1"],[108,30,90,32,"i"],[108,31,90,33],[108,33,90,35],[109,8,91,12],[109,12,91,16,"type"],[109,16,91,20],[109,19,91,23,"reversePriorityOrder"],[109,39,91,43],[109,40,91,44,"i"],[109,41,91,45],[109,42,91,46],[110,8,92,12],[110,12,92,16,"typeState"],[110,21,92,25],[110,24,92,28,"state"],[110,29,92,33],[110,30,92,34,"type"],[110,34,92,38],[110,35,92,39],[111,8,93,12],[111,12,93,16,"prop"],[111,16,93,20],[111,19,93,23],[111,20,93,24,"_a"],[111,22,93,26],[111,25,93,29,"props"],[111,30,93,34],[111,31,93,35,"type"],[111,35,93,39],[111,36,93,40],[111,42,93,46],[111,46,93,50],[111,50,93,54,"_a"],[111,52,93,56],[111,57,93,61],[111,62,93,66],[111,63,93,67],[111,66,93,70,"_a"],[111,68,93,72],[111,71,93,75,"context"],[111,78,93,82],[111,79,93,83,"type"],[111,83,93,87],[111,84,93,88],[112,8,94,12],[112,12,94,16,"propIsVariant"],[112,25,94,29],[112,28,94,32],[112,32,94,32,"isVariantLabel"],[112,44,94,46],[112,45,94,46,"isVariantLabel"],[112,59,94,46],[112,61,94,47,"prop"],[112,65,94,51],[112,66,94,52],[113,8,95,12],[114,0,96,0],[115,0,97,0],[116,0,98,0],[117,8,99,12],[117,12,99,16,"activeDelta"],[117,23,99,27],[117,26,99,30,"type"],[117,30,99,34],[117,35,99,39,"changedActiveType"],[117,52,99,56],[117,55,99,59,"typeState"],[117,64,99,68],[117,65,99,69,"isActive"],[117,73,99,77],[117,76,99,80],[117,80,99,84],[118,8,100,12],[118,12,100,16,"activeDelta"],[118,23,100,27],[118,28,100,32],[118,33,100,37],[118,35,101,16,"removedVariantIndex"],[118,54,101,35],[118,57,101,38,"i"],[118,58,101,39],[119,8,102,12],[120,0,103,0],[121,0,104,0],[122,0,105,0],[123,0,106,0],[124,0,107,0],[125,8,108,12],[125,12,108,16,"isInherited"],[125,23,108,27],[125,26,108,30,"prop"],[125,30,108,34],[125,35,108,39,"context"],[125,42,108,46],[125,43,108,47,"type"],[125,47,108,51],[125,48,108,52],[125,52,108,56,"prop"],[125,56,108,60],[125,61,108,65,"props"],[125,66,108,70],[125,67,108,71,"type"],[125,71,108,75],[125,72,108,76],[125,76,108,80,"propIsVariant"],[125,89,108,93],[126,8,109,12],[127,0,110,0],[128,0,111,0],[129,8,112,12],[129,12,112,16,"isInherited"],[129,23,112,27],[129,27,113,16,"isInitialRender"],[129,42,113,31],[129,46,114,16,"visualElement"],[129,59,114,29],[129,60,114,30,"manuallyAnimateOnMount"],[129,82,114,52],[129,84,114,54],[130,10,115,16,"isInherited"],[130,21,115,27],[130,24,115,30],[130,29,115,35],[131,8,116,12],[132,8,117,12],[133,0,118,0],[134,0,119,0],[135,0,120,0],[136,8,121,12,"typeState"],[136,17,121,21],[136,18,121,22,"protectedKeys"],[136,31,121,35],[136,34,121,38],[136,38,121,38,"__assign"],[136,44,121,46],[136,45,121,46,"__assign"],[136,53,121,46],[136,55,121,47],[136,56,121,48],[136,57,121,49],[136,59,121,51,"encounteredKeys"],[136,74,121,66],[136,75,121,67],[137,8,122,12],[138,8,123,12],[139,8,124,12],[140,8,125,13],[140,9,125,14,"typeState"],[140,18,125,23],[140,19,125,24,"isActive"],[140,27,125,32],[140,31,125,36,"activeDelta"],[140,42,125,47],[140,47,125,52],[140,51,125,56],[141,8,126,16],[142,8,127,17],[142,9,127,18,"prop"],[142,13,127,22],[142,17,127,26],[142,18,127,27,"typeState"],[142,27,127,36],[142,28,127,37,"prevProp"],[142,36,127,46],[143,8,128,16],[144,8,129,16],[144,12,129,16,"isAnimationControls"],[144,49,129,35],[144,50,129,35,"isAnimationControls"],[144,69,129,35],[144,71,129,36,"prop"],[144,75,129,40],[144,76,129,41],[144,80,130,16],[144,87,130,23,"prop"],[144,91,130,27],[144,96,130,32],[144,105,130,41],[144,107,130,43],[145,10,131,16],[145,17,131,23],[145,27,131,33],[146,8,132,12],[147,8,133,12],[148,0,134,0],[149,0,135,0],[150,0,136,0],[151,0,137,0],[152,8,138,12],[152,12,138,16,"variantDidChange"],[152,28,138,32],[152,31,138,35,"checkVariantsDidChange"],[152,53,138,57],[152,54,138,58,"typeState"],[152,63,138,67],[152,64,138,68,"prevProp"],[152,72,138,76],[152,74,138,78,"prop"],[152,78,138,82],[152,79,138,83],[153,8,139,12],[153,12,139,16,"shouldAnimateType"],[153,29,139,33],[153,32,139,36,"variantDidChange"],[153,48,139,52],[154,8,140,16],[155,8,141,17,"type"],[155,12,141,21],[155,17,141,26,"changedActiveType"],[155,34,141,43],[155,38,142,20,"typeState"],[155,47,142,29],[155,48,142,30,"isActive"],[155,56,142,38],[155,60,143,20],[155,61,143,21,"isInherited"],[155,72,143,32],[155,76,144,20,"propIsVariant"],[155,89,144,34],[156,8,145,16],[157,8,146,17,"i"],[157,9,146,18],[157,12,146,21,"removedVariantIndex"],[157,31,146,40],[157,35,146,44,"propIsVariant"],[157,48,146,58],[158,8,147,12],[159,0,148,0],[160,0,149,0],[161,0,150,0],[162,8,151,12],[162,12,151,16,"definitionList"],[162,26,151,30],[162,29,151,33,"Array"],[162,34,151,38],[162,35,151,39,"isArray"],[162,42,151,46],[162,43,151,47,"prop"],[162,47,151,51],[162,48,151,52],[162,51,151,55,"prop"],[162,55,151,59],[162,58,151,62],[162,59,151,63,"prop"],[162,63,151,67],[162,64,151,68],[163,8,152,12],[164,0,153,0],[165,0,154,0],[166,0,155,0],[167,8,156,12],[167,12,156,16,"resolvedValues"],[167,26,156,30],[167,29,156,33,"definitionList"],[167,43,156,47],[167,44,156,48,"reduce"],[167,50,156,54],[167,51,156,55,"buildResolvedTypeValues"],[167,74,156,78],[167,76,156,80],[167,77,156,81],[167,78,156,82],[167,79,156,83],[168,8,157,12],[168,12,157,16,"activeDelta"],[168,23,157,27],[168,28,157,32],[168,33,157,37],[168,35,158,16,"resolvedValues"],[168,49,158,30],[168,52,158,33],[168,53,158,34],[168,54,158,35],[169,8,159,12],[170,0,160,0],[171,0,161,0],[172,0,162,0],[173,0,163,0],[174,0,164,0],[175,0,165,0],[176,0,166,0],[177,0,167,0],[178,8,168,12],[178,12,168,16,"_b"],[178,14,168,18],[178,17,168,21,"typeState"],[178,26,168,30],[178,27,168,31,"prevResolvedValues"],[178,45,168,49],[179,10,168,51,"prevResolvedValues"],[179,28,168,69],[179,31,168,72,"_b"],[179,33,168,74],[179,38,168,79],[179,43,168,84],[179,44,168,85],[179,47,168,88],[179,48,168,89],[179,49,168,90],[179,52,168,93,"_b"],[179,54,168,95],[180,8,169,12],[180,12,169,16,"allKeys"],[180,19,169,23],[180,22,169,26],[180,26,169,26,"__assign"],[180,32,169,34],[180,33,169,34,"__assign"],[180,41,169,34],[180,43,169,35],[180,47,169,35,"__assign"],[180,53,169,43],[180,54,169,43,"__assign"],[180,62,169,43],[180,64,169,44],[180,65,169,45],[180,66,169,46],[180,68,169,48,"prevResolvedValues"],[180,86,169,66],[180,87,169,67],[180,89,169,69,"resolvedValues"],[180,103,169,83],[180,104,169,84],[181,8,170,12],[181,12,170,16,"markToAnimate"],[181,25,170,29],[181,28,170,32],[181,37,170,32,"markToAnimate"],[181,38,170,42,"key"],[181,41,170,45],[181,43,170,47],[182,10,171,16,"shouldAnimateType"],[182,27,171,33],[182,30,171,36],[182,34,171,40],[183,10,172,16,"removedKeys"],[183,21,172,27],[183,22,172,28,"delete"],[183,28,172,34],[183,29,172,35,"key"],[183,32,172,38],[183,33,172,39],[184,10,173,16,"typeState"],[184,19,173,25],[184,20,173,26,"needsAnimating"],[184,34,173,40],[184,35,173,41,"key"],[184,38,173,44],[184,39,173,45],[184,42,173,48],[184,46,173,52],[185,8,174,12],[185,9,174,13],[186,8,175,12],[186,13,175,17],[186,17,175,21,"key"],[186,20,175,24],[186,24,175,28,"allKeys"],[186,31,175,35],[186,33,175,37],[187,10,176,16],[187,14,176,20,"next"],[187,18,176,24],[187,21,176,27,"resolvedValues"],[187,35,176,41],[187,36,176,42,"key"],[187,39,176,45],[187,40,176,46],[188,10,177,16],[188,14,177,20,"prev"],[188,18,177,24],[188,21,177,27,"prevResolvedValues"],[188,39,177,45],[188,40,177,46,"key"],[188,43,177,49],[188,44,177,50],[189,10,178,16],[190,10,179,16],[190,14,179,20,"encounteredKeys"],[190,29,179,35],[190,30,179,36,"hasOwnProperty"],[190,44,179,50],[190,45,179,51,"key"],[190,48,179,54],[190,49,179,55],[190,51,180,20],[191,10,181,16],[192,0,182,0],[193,0,183,0],[194,10,184,16],[194,14,184,20,"next"],[194,18,184,24],[194,23,184,29,"prev"],[194,27,184,33],[194,29,184,35],[195,12,185,20],[196,0,186,0],[197,0,187,0],[198,0,188,0],[199,12,189,20],[199,16,189,24],[199,20,189,24,"isKeyframesTarget"],[199,55,189,41],[199,56,189,41,"isKeyframesTarget"],[199,73,189,41],[199,75,189,42,"next"],[199,79,189,46],[199,80,189,47],[199,84,189,51],[199,88,189,51,"isKeyframesTarget"],[199,123,189,68],[199,124,189,68,"isKeyframesTarget"],[199,141,189,68],[199,143,189,69,"prev"],[199,147,189,73],[199,148,189,74],[199,150,189,76],[200,14,190,24],[200,18,190,28],[200,19,190,29],[200,23,190,29,"shallowCompare"],[200,46,190,43],[200,47,190,43,"shallowCompare"],[200,61,190,43],[200,63,190,44,"next"],[200,67,190,48],[200,69,190,50,"prev"],[200,73,190,54],[200,74,190,55],[200,78,190,59,"variantDidChange"],[200,94,190,75],[200,96,190,77],[201,16,191,28,"markToAnimate"],[201,29,191,41],[201,30,191,42,"key"],[201,33,191,45],[201,34,191,46],[202,14,192,24],[202,15,192,25],[202,21,193,29],[203,16,194,28],[204,0,195,0],[205,0,196,0],[206,0,197,0],[207,16,198,28,"typeState"],[207,25,198,37],[207,26,198,38,"protectedKeys"],[207,39,198,51],[207,40,198,52,"key"],[207,43,198,55],[207,44,198,56],[207,47,198,59],[207,51,198,63],[208,14,199,24],[209,12,200,20],[209,13,200,21],[209,19,201,25],[209,23,201,29,"next"],[209,27,201,33],[209,32,201,38,"undefined"],[209,41,201,47],[209,43,201,49],[210,14,202,24],[211,14,203,24,"markToAnimate"],[211,27,203,37],[211,28,203,38,"key"],[211,31,203,41],[211,32,203,42],[212,12,204,20],[212,13,204,21],[212,19,205,25],[213,14,206,24],[214,14,207,24,"removedKeys"],[214,25,207,35],[214,26,207,36,"add"],[214,29,207,39],[214,30,207,40,"key"],[214,33,207,43],[214,34,207,44],[215,12,208,20],[216,10,209,16],[216,11,209,17],[216,17,210,21],[216,21,210,25,"next"],[216,25,210,29],[216,30,210,34,"undefined"],[216,39,210,43],[216,43,210,47,"removedKeys"],[216,54,210,58],[216,55,210,59,"has"],[216,58,210,62],[216,59,210,63,"key"],[216,62,210,66],[216,63,210,67],[216,65,210,69],[217,12,211,20],[218,0,212,0],[219,0,213,0],[220,0,214,0],[221,12,215,20,"markToAnimate"],[221,25,215,33],[221,26,215,34,"key"],[221,29,215,37],[221,30,215,38],[222,10,216,16],[222,11,216,17],[222,17,217,21],[223,12,218,20],[224,0,219,0],[225,0,220,0],[226,0,221,0],[227,12,222,20,"typeState"],[227,21,222,29],[227,22,222,30,"protectedKeys"],[227,35,222,43],[227,36,222,44,"key"],[227,39,222,47],[227,40,222,48],[227,43,222,51],[227,47,222,55],[228,10,223,16],[229,8,224,12],[230,8,225,12],[231,0,226,0],[232,0,227,0],[233,0,228,0],[234,8,229,12,"typeState"],[234,17,229,21],[234,18,229,22,"prevProp"],[234,26,229,30],[234,29,229,33,"prop"],[234,33,229,37],[235,8,230,12,"typeState"],[235,17,230,21],[235,18,230,22,"prevResolvedValues"],[235,36,230,40],[235,39,230,43,"resolvedValues"],[235,53,230,57],[236,8,231,12],[237,0,232,0],[238,0,233,0],[239,8,234,12],[239,12,234,16,"typeState"],[239,21,234,25],[239,22,234,26,"isActive"],[239,30,234,34],[239,32,234,36],[240,10,235,16,"encounteredKeys"],[240,25,235,31],[240,28,235,34],[240,32,235,34,"__assign"],[240,38,235,42],[240,39,235,42,"__assign"],[240,47,235,42],[240,49,235,43],[240,53,235,43,"__assign"],[240,59,235,51],[240,60,235,51,"__assign"],[240,68,235,51],[240,70,235,52],[240,71,235,53],[240,72,235,54],[240,74,235,56,"encounteredKeys"],[240,89,235,71],[240,90,235,72],[240,92,235,74,"resolvedValues"],[240,106,235,88],[240,107,235,89],[241,8,236,12],[242,8,237,12],[242,12,237,16,"isInitialRender"],[242,27,237,31],[242,31,237,35,"visualElement"],[242,44,237,48],[242,45,237,49,"blockInitialAnimation"],[242,66,237,70],[242,68,237,72],[243,10,238,16,"shouldAnimateType"],[243,27,238,33],[243,30,238,36],[243,35,238,41],[244,8,239,12],[245,8,240,12],[246,0,241,0],[247,0,242,0],[248,0,243,0],[249,0,244,0],[250,8,245,12],[250,12,245,16,"shouldAnimateType"],[250,29,245,33],[250,33,245,37],[250,34,245,38,"isInherited"],[250,45,245,49],[250,47,245,51],[251,10,246,16,"animations"],[251,20,246,26],[251,21,246,27,"push"],[251,25,246,31],[251,26,246,32,"apply"],[251,31,246,37],[251,32,246,38,"animations"],[251,42,246,48],[251,44,246,50],[251,48,246,50,"__spreadArray"],[251,54,246,63],[251,55,246,63,"__spreadArray"],[251,68,246,63],[251,70,246,64],[251,72,246,66],[251,74,246,68],[251,78,246,68,"__read"],[251,84,246,74],[251,85,246,74,"__read"],[251,91,246,74],[251,93,246,75,"definitionList"],[251,107,246,89],[251,108,246,90,"map"],[251,111,246,93],[251,112,246,94],[251,122,246,104,"animation"],[251,131,246,113],[251,133,246,115],[252,12,246,117],[252,19,246,125],[253,14,247,20,"animation"],[253,23,247,29],[253,25,247,31,"animation"],[253,34,247,40],[254,14,248,20,"options"],[254,21,248,27],[254,23,248,29],[254,27,248,29,"__assign"],[254,33,248,37],[254,34,248,37,"__assign"],[254,42,248,37],[254,44,248,38],[255,16,248,40,"type"],[255,20,248,44],[255,22,248,46,"type"],[256,14,248,51],[256,15,248,52],[256,17,248,54,"options"],[256,24,248,61],[257,12,249,16],[257,13,249,17],[258,10,249,20],[258,11,249,21],[258,12,249,22],[258,13,249,23],[258,15,249,25],[258,20,249,30],[258,21,249,31],[258,22,249,32],[259,8,250,12],[260,6,251,8],[260,7,251,9],[261,6,252,8],[262,0,253,0],[263,0,254,0],[264,0,255,0],[265,0,256,0],[266,0,257,0],[267,6,258,8],[267,11,258,13],[267,15,258,17,"i"],[267,16,258,18],[267,19,258,21],[267,20,258,22],[267,22,258,24,"i"],[267,23,258,25],[267,26,258,28,"numAnimationTypes"],[267,43,258,45],[267,45,258,47,"i"],[267,46,258,48],[267,48,258,50],[267,50,258,52],[268,8,259,12,"_loop_1"],[268,15,259,19],[268,16,259,20,"i"],[268,17,259,21],[268,18,259,22],[269,6,260,8],[270,6,261,8,"allAnimatedKeys"],[270,21,261,23],[270,24,261,26],[270,28,261,26,"__assign"],[270,34,261,34],[270,35,261,34,"__assign"],[270,43,261,34],[270,45,261,35],[270,46,261,36],[270,47,261,37],[270,49,261,39,"encounteredKeys"],[270,64,261,54],[270,65,261,55],[271,6,262,8],[272,0,263,0],[273,0,264,0],[274,0,265,0],[275,0,266,0],[276,6,267,8],[276,10,267,12,"removedKeys"],[276,21,267,23],[276,22,267,24,"size"],[276,26,267,28],[276,28,267,30],[277,8,268,12],[277,12,268,16,"fallbackAnimation_1"],[277,31,268,35],[277,34,268,38],[277,35,268,39],[277,36,268,40],[278,8,269,12,"removedKeys"],[278,19,269,23],[278,20,269,24,"forEach"],[278,27,269,31],[278,28,269,32],[278,38,269,42,"key"],[278,41,269,45],[278,43,269,47],[279,10,270,16],[279,14,270,20,"fallbackTarget"],[279,28,270,34],[279,31,270,37,"visualElement"],[279,44,270,50],[279,45,270,51,"getBaseTarget"],[279,58,270,64],[279,59,270,65,"key"],[279,62,270,68],[279,63,270,69],[280,10,271,16],[280,14,271,20,"fallbackTarget"],[280,28,271,34],[280,33,271,39,"undefined"],[280,42,271,48],[280,44,271,50],[281,12,272,20,"fallbackAnimation_1"],[281,31,272,39],[281,32,272,40,"key"],[281,35,272,43],[281,36,272,44],[281,39,272,47,"fallbackTarget"],[281,53,272,61],[282,10,273,16],[283,8,274,12],[283,9,274,13],[283,10,274,14],[284,8,275,12,"animations"],[284,18,275,22],[284,19,275,23,"push"],[284,23,275,27],[284,24,275,28],[285,10,275,30,"animation"],[285,19,275,39],[285,21,275,41,"fallbackAnimation_1"],[286,8,275,61],[286,9,275,62],[286,10,275,63],[287,6,276,8],[288,6,277,8],[288,10,277,12,"shouldAnimate"],[288,23,277,25],[288,26,277,28,"Boolean"],[288,33,277,35],[288,34,277,36,"animations"],[288,44,277,46],[288,45,277,47,"length"],[288,51,277,53],[288,52,277,54],[289,6,278,8],[289,10,278,12,"isInitialRender"],[289,25,278,27],[289,29,279,12,"props"],[289,34,279,17],[289,35,279,18,"initial"],[289,42,279,25],[289,47,279,30],[289,52,279,35],[289,56,280,12],[289,57,280,13,"visualElement"],[289,70,280,26],[289,71,280,27,"manuallyAnimateOnMount"],[289,93,280,49],[289,95,280,51],[290,8,281,12,"shouldAnimate"],[290,21,281,25],[290,24,281,28],[290,29,281,33],[291,6,282,8],[292,6,283,8,"isInitialRender"],[292,21,283,23],[292,24,283,26],[292,29,283,31],[293,6,284,8],[293,13,284,15,"shouldAnimate"],[293,26,284,28],[293,29,284,31,"animate"],[293,36,284,38],[293,37,284,39,"animations"],[293,47,284,49],[293,48,284,50],[293,51,284,53,"Promise"],[293,58,284,60],[293,59,284,61,"resolve"],[293,66,284,68],[293,67,284,69],[293,68,284,70],[294,4,285,4],[295,4,286,4],[296,0,287,0],[297,0,288,0],[298,4,289,4],[298,13,289,13,"setActive"],[298,22,289,22,"setActive"],[298,23,289,23,"type"],[298,27,289,27],[298,29,289,29,"isActive"],[298,37,289,37],[298,39,289,39,"options"],[298,46,289,46],[298,48,289,48],[299,6,290,8],[299,10,290,12,"_a"],[299,12,290,14],[300,6,291,8],[301,6,292,8],[301,10,292,12,"state"],[301,15,292,17],[301,16,292,18,"type"],[301,20,292,22],[301,21,292,23],[301,22,292,24,"isActive"],[301,30,292,32],[301,35,292,37,"isActive"],[301,43,292,45],[301,45,293,12],[301,52,293,19,"Promise"],[301,59,293,26],[301,60,293,27,"resolve"],[301,67,293,34],[301,68,293,35],[301,69,293,36],[302,6,294,8],[303,6,295,8],[303,7,295,9,"_a"],[303,9,295,11],[303,12,295,14,"visualElement"],[303,25,295,27],[303,26,295,28,"variantChildren"],[303,41,295,43],[303,47,295,49],[303,51,295,53],[303,55,295,57,"_a"],[303,57,295,59],[303,62,295,64],[303,67,295,69],[303,68,295,70],[303,71,295,73],[303,76,295,78],[303,77,295,79],[303,80,295,82,"_a"],[303,82,295,84],[303,83,295,85,"forEach"],[303,90,295,92],[303,91,295,93],[303,101,295,103,"child"],[303,106,295,108],[303,108,295,110],[304,8,295,112],[304,12,295,116,"_a"],[304,14,295,118],[305,8,295,120],[305,15,295,127],[305,16,295,128,"_a"],[305,18,295,130],[305,21,295,133,"child"],[305,26,295,138],[305,27,295,139,"animationState"],[305,41,295,153],[305,47,295,159],[305,51,295,163],[305,55,295,167,"_a"],[305,57,295,169],[305,62,295,174],[305,67,295,179],[305,68,295,180],[305,71,295,183],[305,76,295,188],[305,77,295,189],[305,80,295,192,"_a"],[305,82,295,194],[305,83,295,195,"setActive"],[305,92,295,204],[305,93,295,205,"type"],[305,97,295,209],[305,99,295,211,"isActive"],[305,107,295,219],[305,108,295,220],[306,6,295,222],[306,7,295,223],[306,8,295,224],[307,6,296,8,"state"],[307,11,296,13],[307,12,296,14,"type"],[307,16,296,18],[307,17,296,19],[307,18,296,20,"isActive"],[307,26,296,28],[307,29,296,31,"isActive"],[307,37,296,39],[308,6,297,8],[308,10,297,12,"animations"],[308,20,297,22],[308,23,297,25,"animateChanges"],[308,37,297,39],[308,38,297,40,"options"],[308,45,297,47],[308,47,297,49,"type"],[308,51,297,53],[308,52,297,54],[309,6,298,8],[309,11,298,13],[309,15,298,17,"key"],[309,18,298,20],[309,22,298,24,"state"],[309,27,298,29],[309,29,298,31],[310,8,299,12,"state"],[310,13,299,17],[310,14,299,18,"key"],[310,17,299,21],[310,18,299,22],[310,19,299,23,"protectedKeys"],[310,32,299,36],[310,35,299,39],[310,36,299,40],[310,37,299,41],[311,6,300,8],[312,6,301,8],[312,13,301,15,"animations"],[312,23,301,25],[313,4,302,4],[314,4,303,4],[314,11,303,11],[315,6,304,8,"isAnimated"],[315,16,304,18],[315,18,304,20,"isAnimated"],[315,28,304,30],[316,6,305,8,"animateChanges"],[316,20,305,22],[316,22,305,24,"animateChanges"],[316,36,305,38],[317,6,306,8,"setActive"],[317,15,306,17],[317,17,306,19,"setActive"],[317,26,306,28],[318,6,307,8,"setAnimateFunction"],[318,24,307,26],[318,26,307,28,"setAnimateFunction"],[318,44,307,46],[319,6,308,8,"getState"],[319,14,308,16],[319,16,308,18],[319,25,308,18,"getState"],[319,26,308,18],[319,28,308,30],[320,8,308,32],[320,15,308,39,"state"],[320,20,308,44],[321,6,308,46],[322,4,309,4],[322,5,309,5],[323,2,310,0],[324,2,311,0],[324,11,311,9,"checkVariantsDidChange"],[324,33,311,31,"checkVariantsDidChange"],[324,34,311,32,"prev"],[324,38,311,36],[324,40,311,38,"next"],[324,44,311,42],[324,46,311,44],[325,4,312,4],[325,8,312,8],[325,15,312,15,"next"],[325,19,312,19],[325,24,312,24],[325,32,312,32],[325,34,312,34],[326,6,313,8],[326,13,313,15,"next"],[326,17,313,19],[326,22,313,24,"prev"],[326,26,313,28],[327,4,314,4],[327,5,314,5],[327,11,315,9],[327,15,315,13],[327,19,315,13,"isVariantLabels"],[327,31,315,28],[327,32,315,28,"isVariantLabels"],[327,47,315,28],[327,49,315,29,"next"],[327,53,315,33],[327,54,315,34],[327,56,315,36],[328,6,316,8],[328,13,316,15],[328,14,316,16],[328,18,316,16,"shallowCompare"],[328,41,316,30],[328,42,316,30,"shallowCompare"],[328,56,316,30],[328,58,316,31,"next"],[328,62,316,35],[328,64,316,37,"prev"],[328,68,316,41],[328,69,316,42],[329,4,317,4],[330,4,318,4],[330,11,318,11],[330,16,318,16],[331,2,319,0],[332,2,320,0],[332,11,320,9,"createTypeState"],[332,26,320,24,"createTypeState"],[332,27,320,25,"isActive"],[332,35,320,33],[332,37,320,35],[333,4,321,4],[333,8,321,8,"isActive"],[333,16,321,16],[333,21,321,21],[333,26,321,26],[333,27,321,27],[333,29,321,29],[334,6,321,31,"isActive"],[334,14,321,39],[334,17,321,42],[334,22,321,47],[335,4,321,49],[336,4,322,4],[336,11,322,11],[337,6,323,8,"isActive"],[337,14,323,16],[337,16,323,18,"isActive"],[337,24,323,26],[338,6,324,8,"protectedKeys"],[338,19,324,21],[338,21,324,23],[338,22,324,24],[338,23,324,25],[339,6,325,8,"needsAnimating"],[339,20,325,22],[339,22,325,24],[339,23,325,25],[339,24,325,26],[340,6,326,8,"prevResolvedValues"],[340,24,326,26],[340,26,326,28],[340,27,326,29],[341,4,327,4],[341,5,327,5],[342,2,328,0],[343,2,329,0],[343,11,329,9,"createState"],[343,22,329,20,"createState"],[343,23,329,20],[343,25,329,23],[344,4,330,4],[344,8,330,8,"_a"],[344,10,330,10],[345,4,331,4],[345,11,331,11,"_a"],[345,13,331,13],[345,16,331,16],[345,17,331,17],[345,18,331,18],[345,20,332,8,"_a"],[345,22,332,10],[345,23,332,11,"AnimationType"],[345,32,332,24],[345,33,332,24,"AnimationType"],[345,46,332,24],[345,47,332,25,"Animate"],[345,54,332,32],[345,55,332,33],[345,58,332,36,"createTypeState"],[345,73,332,51],[345,74,332,52],[345,78,332,56],[345,79,332,57],[345,81,333,8,"_a"],[345,83,333,10],[345,84,333,11,"AnimationType"],[345,93,333,24],[345,94,333,24,"AnimationType"],[345,107,333,24],[345,108,333,25,"InView"],[345,114,333,31],[345,115,333,32],[345,118,333,35,"createTypeState"],[345,133,333,50],[345,134,333,51],[345,135,333,52],[345,137,334,8,"_a"],[345,139,334,10],[345,140,334,11,"AnimationType"],[345,149,334,24],[345,150,334,24,"AnimationType"],[345,163,334,24],[345,164,334,25,"Hover"],[345,169,334,30],[345,170,334,31],[345,173,334,34,"createTypeState"],[345,188,334,49],[345,189,334,50],[345,190,334,51],[345,192,335,8,"_a"],[345,194,335,10],[345,195,335,11,"AnimationType"],[345,204,335,24],[345,205,335,24,"AnimationType"],[345,218,335,24],[345,219,335,25,"Tap"],[345,222,335,28],[345,223,335,29],[345,226,335,32,"createTypeState"],[345,241,335,47],[345,242,335,48],[345,243,335,49],[345,245,336,8,"_a"],[345,247,336,10],[345,248,336,11,"AnimationType"],[345,257,336,24],[345,258,336,24,"AnimationType"],[345,271,336,24],[345,272,336,25,"Drag"],[345,276,336,29],[345,277,336,30],[345,280,336,33,"createTypeState"],[345,295,336,48],[345,296,336,49],[345,297,336,50],[345,299,337,8,"_a"],[345,301,337,10],[345,302,337,11,"AnimationType"],[345,311,337,24],[345,312,337,24,"AnimationType"],[345,325,337,24],[345,326,337,25,"Focus"],[345,331,337,30],[345,332,337,31],[345,335,337,34,"createTypeState"],[345,350,337,49],[345,351,337,50],[345,352,337,51],[345,354,338,8,"_a"],[345,356,338,10],[345,357,338,11,"AnimationType"],[345,366,338,24],[345,367,338,24,"AnimationType"],[345,380,338,24],[345,381,338,25,"Exit"],[345,385,338,29],[345,386,338,30],[345,389,338,33,"createTypeState"],[345,404,338,48],[345,405,338,49],[345,406,338,50],[345,408,339,8,"_a"],[345,410,339,10],[346,2,340,0],[347,0,340,1],[347,3]],"functionMap":{"names":["<global>","animateList","<anonymous>","animations.map$argument_0","createAnimationState","buildResolvedTypeValues","isAnimated","setAnimateFunction","animateChanges","_loop_1","markToAnimate","definitionList.map$argument_0","removedKeys.forEach$argument_0","setActive","_a.forEach$argument_0","getState","checkVariantsDidChange","createTypeState","createState"],"mappings":"AAA;ACmB;WCC;0CCC;SDG;KDC;CDC;AIC;kCCS;KDO;IEC;KFE;IGK;KHE;IIW;sBCyB;gCCgF;aDI;8FEwE;qBFG;SDE;gCIkB;aJK;KJW;ISI;6FCM,kID;KTO;kBWM,6BX;CJE;AgBC;ChBQ;AiBC;CjBQ;AkBC;ClBW"},"hasCjsExports":false},"type":"js/module"}]}