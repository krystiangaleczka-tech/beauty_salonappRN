{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":40,"index":83}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":143},"end":{"line":5,"column":38,"index":181}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../utils/resolveSources","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":182},"end":{"line":6,"column":78,"index":260}}],"key":"0tSWeLBIaokpFkEzxEQuuUkLmpc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useSourceSelection;\n  var _react = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var _utils = require(_dependencyMap[1], \"../utils\");\n  var _resolveSources = require(_dependencyMap[2], \"../utils/resolveSources\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  function findBestSourceForSize(sources, size) {\n    if (sources?.length === 1) {\n      return sources[0];\n    }\n    return [...(sources || [])]\n    // look for the smallest image that's still larger then a container\n    ?.map(source => {\n      if (!size) {\n        return {\n          source,\n          penalty: 0,\n          covers: false\n        };\n      }\n      const {\n        width,\n        height\n      } = typeof source === 'object' ? source : {\n        width: null,\n        height: null\n      };\n      if (width == null || height == null) {\n        return {\n          source,\n          penalty: 0,\n          covers: false\n        };\n      }\n      if (width < size.width || height < size.height) {\n        return {\n          source,\n          penalty: Math.max(size.width - width, size.height - height),\n          covers: false\n        };\n      }\n      return {\n        source,\n        penalty: (width - size.width) * (height - size.height),\n        covers: true\n      };\n    }).sort((a, b) => a.penalty - b.penalty).sort((a, b) => Number(b.covers) - Number(a.covers))[0]?.source ?? null;\n  }\n  function getCSSMediaQueryForSource(source) {\n    return `(max-width: ${source.webMaxViewportWidth ?? source.width}px) ${source.width}px`;\n  }\n  function selectSource(sources, size, responsivePolicy) {\n    if (sources == null || sources.length === 0) {\n      return null;\n    }\n    if (sources.length === 1) {\n      return sources[0];\n    }\n    if (responsivePolicy !== 'static') {\n      return findBestSourceForSize(sources, size);\n    }\n    const staticSupportedSources = sources.filter(s => s.uri && s.width != null && !(0, _resolveSources.isBlurhashString)(s.uri) && !(0, _resolveSources.isThumbhashString)(s.uri)).sort((a, b) => (a.webMaxViewportWidth ?? a.width ?? 0) - (b.webMaxViewportWidth ?? b.width ?? 0));\n    if (staticSupportedSources.length === 0) {\n      console.warn(\"You've set the `static` responsivePolicy but none of the sources have the `width` properties set. Make sure you set both `width` and `webMaxViewportWidth` for best results when using static responsiveness. Falling back to the `initial` policy.\");\n      return findBestSourceForSize(sources, size);\n    }\n    const srcset = staticSupportedSources?.map(source => `${source.uri} ${source.width}w`).join(', ');\n    const sizes = `${staticSupportedSources?.map(getCSSMediaQueryForSource).join(', ')}, ${staticSupportedSources[staticSupportedSources.length - 1]?.width}px`;\n    return {\n      srcset,\n      sizes,\n      uri: staticSupportedSources[staticSupportedSources.length - 1]?.uri ?? '',\n      type: 'srcset'\n    };\n  }\n  function useSourceSelection(sources, responsivePolicy = 'static', containerRef, measurementCallback = null) {\n    const hasMoreThanOneSource = (Array.isArray(sources) ? sources.length : 0) > 1;\n    const [size, setSize] = (0, _react.useState)(containerRef.current?.getBoundingClientRect() ?? null);\n    if (size && containerRef.current) {\n      measurementCallback?.(containerRef.current, size);\n    }\n    _react.default.useEffect(() => {\n      if (!hasMoreThanOneSource && !measurementCallback || !containerRef.current) {\n        return () => {};\n      }\n      if (responsivePolicy === 'live') {\n        const resizeObserver = new ResizeObserver(entries => {\n          setSize(entries[0].contentRect);\n          measurementCallback?.(entries[0].target, entries[0].contentRect);\n        });\n        resizeObserver.observe(containerRef.current);\n        return () => {\n          resizeObserver.disconnect();\n        };\n      }\n      return () => {};\n    }, [responsivePolicy, hasMoreThanOneSource, containerRef.current, measurementCallback]);\n    if ((0, _utils.isImageRef)(sources)) {\n      // There is always only one image ref, so there is nothing else to select from.\n      return sources;\n    }\n    return selectSource(sources, size, responsivePolicy);\n  }\n});","lineCount":107,"map":[[6,2,2,0],[6,6,2,0,"_react"],[6,12,2,0],[6,15,2,0,"_interopRequireWildcard"],[6,38,2,0],[6,39,2,0,"require"],[6,46,2,0],[6,47,2,0,"_dependencyMap"],[6,61,2,0],[7,2,5,0],[7,6,5,0,"_utils"],[7,12,5,0],[7,15,5,0,"require"],[7,22,5,0],[7,23,5,0,"_dependencyMap"],[7,37,5,0],[8,2,6,0],[8,6,6,0,"_resolveSources"],[8,21,6,0],[8,24,6,0,"require"],[8,31,6,0],[8,32,6,0,"_dependencyMap"],[8,46,6,0],[9,2,6,78],[9,11,6,78,"_interopRequireWildcard"],[9,35,6,78,"e"],[9,36,6,78],[9,38,6,78,"t"],[9,39,6,78],[9,68,6,78,"WeakMap"],[9,75,6,78],[9,81,6,78,"r"],[9,82,6,78],[9,89,6,78,"WeakMap"],[9,96,6,78],[9,100,6,78,"n"],[9,101,6,78],[9,108,6,78,"WeakMap"],[9,115,6,78],[9,127,6,78,"_interopRequireWildcard"],[9,150,6,78],[9,162,6,78,"_interopRequireWildcard"],[9,163,6,78,"e"],[9,164,6,78],[9,166,6,78,"t"],[9,167,6,78],[9,176,6,78,"t"],[9,177,6,78],[9,181,6,78,"e"],[9,182,6,78],[9,186,6,78,"e"],[9,187,6,78],[9,188,6,78,"__esModule"],[9,198,6,78],[9,207,6,78,"e"],[9,208,6,78],[9,214,6,78,"o"],[9,215,6,78],[9,217,6,78,"i"],[9,218,6,78],[9,220,6,78,"f"],[9,221,6,78],[9,226,6,78,"__proto__"],[9,235,6,78],[9,243,6,78,"default"],[9,250,6,78],[9,252,6,78,"e"],[9,253,6,78],[9,270,6,78,"e"],[9,271,6,78],[9,294,6,78,"e"],[9,295,6,78],[9,320,6,78,"e"],[9,321,6,78],[9,330,6,78,"f"],[9,331,6,78],[9,337,6,78,"o"],[9,338,6,78],[9,341,6,78,"t"],[9,342,6,78],[9,345,6,78,"n"],[9,346,6,78],[9,349,6,78,"r"],[9,350,6,78],[9,358,6,78,"o"],[9,359,6,78],[9,360,6,78,"has"],[9,363,6,78],[9,364,6,78,"e"],[9,365,6,78],[9,375,6,78,"o"],[9,376,6,78],[9,377,6,78,"get"],[9,380,6,78],[9,381,6,78,"e"],[9,382,6,78],[9,385,6,78,"o"],[9,386,6,78],[9,387,6,78,"set"],[9,390,6,78],[9,391,6,78,"e"],[9,392,6,78],[9,394,6,78,"f"],[9,395,6,78],[9,411,6,78,"t"],[9,412,6,78],[9,416,6,78,"e"],[9,417,6,78],[9,433,6,78,"t"],[9,434,6,78],[9,441,6,78,"hasOwnProperty"],[9,455,6,78],[9,456,6,78,"call"],[9,460,6,78],[9,461,6,78,"e"],[9,462,6,78],[9,464,6,78,"t"],[9,465,6,78],[9,472,6,78,"i"],[9,473,6,78],[9,477,6,78,"o"],[9,478,6,78],[9,481,6,78,"Object"],[9,487,6,78],[9,488,6,78,"defineProperty"],[9,502,6,78],[9,507,6,78,"Object"],[9,513,6,78],[9,514,6,78,"getOwnPropertyDescriptor"],[9,538,6,78],[9,539,6,78,"e"],[9,540,6,78],[9,542,6,78,"t"],[9,543,6,78],[9,550,6,78,"i"],[9,551,6,78],[9,552,6,78,"get"],[9,555,6,78],[9,559,6,78,"i"],[9,560,6,78],[9,561,6,78,"set"],[9,564,6,78],[9,568,6,78,"o"],[9,569,6,78],[9,570,6,78,"f"],[9,571,6,78],[9,573,6,78,"t"],[9,574,6,78],[9,576,6,78,"i"],[9,577,6,78],[9,581,6,78,"f"],[9,582,6,78],[9,583,6,78,"t"],[9,584,6,78],[9,588,6,78,"e"],[9,589,6,78],[9,590,6,78,"t"],[9,591,6,78],[9,602,6,78,"f"],[9,603,6,78],[9,608,6,78,"e"],[9,609,6,78],[9,611,6,78,"t"],[9,612,6,78],[10,2,8,0],[10,11,8,9,"findBestSourceForSize"],[10,32,8,30,"findBestSourceForSize"],[10,33,9,2,"sources"],[10,40,9,36],[10,42,10,2,"size"],[10,46,10,22],[10,48,11,22],[11,4,12,2],[11,8,12,6,"sources"],[11,15,12,13],[11,17,12,15,"length"],[11,23,12,21],[11,28,12,26],[11,29,12,27],[11,31,12,29],[12,6,13,4],[12,13,13,11,"sources"],[12,20,13,18],[12,21,13,19],[12,22,13,20],[12,23,13,21],[13,4,14,2],[14,4,15,2],[14,11,16,4],[14,12,16,5],[14,16,16,9,"sources"],[14,23,16,16],[14,27,16,20],[14,29,16,22],[14,30,16,23],[15,4,17,6],[16,4,17,6],[16,6,18,8,"map"],[16,9,18,11],[16,10,18,13,"source"],[16,16,18,19],[16,20,18,24],[17,6,19,8],[17,10,19,12],[17,11,19,13,"size"],[17,15,19,17],[17,17,19,19],[18,8,20,10],[18,15,20,17],[19,10,20,19,"source"],[19,16,20,25],[20,10,20,27,"penalty"],[20,17,20,34],[20,19,20,36],[20,20,20,37],[21,10,20,39,"covers"],[21,16,20,45],[21,18,20,47],[22,8,20,53],[22,9,20,54],[23,6,21,8],[24,6,22,8],[24,12,22,14],[25,8,22,16,"width"],[25,13,22,21],[26,8,22,23,"height"],[27,6,22,30],[27,7,22,31],[27,10,23,10],[27,17,23,17,"source"],[27,23,23,23],[27,28,23,28],[27,36,23,36],[27,39,23,39,"source"],[27,45,23,45],[27,48,23,48],[28,8,23,50,"width"],[28,13,23,55],[28,15,23,57],[28,19,23,61],[29,8,23,63,"height"],[29,14,23,69],[29,16,23,71],[30,6,23,76],[30,7,23,77],[31,6,24,8],[31,10,24,12,"width"],[31,15,24,17],[31,19,24,21],[31,23,24,25],[31,27,24,29,"height"],[31,33,24,35],[31,37,24,39],[31,41,24,43],[31,43,24,45],[32,8,25,10],[32,15,25,17],[33,10,25,19,"source"],[33,16,25,25],[34,10,25,27,"penalty"],[34,17,25,34],[34,19,25,36],[34,20,25,37],[35,10,25,39,"covers"],[35,16,25,45],[35,18,25,47],[36,8,25,53],[36,9,25,54],[37,6,26,8],[38,6,27,8],[38,10,27,12,"width"],[38,15,27,17],[38,18,27,20,"size"],[38,22,27,24],[38,23,27,25,"width"],[38,28,27,30],[38,32,27,34,"height"],[38,38,27,40],[38,41,27,43,"size"],[38,45,27,47],[38,46,27,48,"height"],[38,52,27,54],[38,54,27,56],[39,8,28,10],[39,15,28,17],[40,10,29,12,"source"],[40,16,29,18],[41,10,30,12,"penalty"],[41,17,30,19],[41,19,30,21,"Math"],[41,23,30,25],[41,24,30,26,"max"],[41,27,30,29],[41,28,30,30,"size"],[41,32,30,34],[41,33,30,35,"width"],[41,38,30,40],[41,41,30,43,"width"],[41,46,30,48],[41,48,30,50,"size"],[41,52,30,54],[41,53,30,55,"height"],[41,59,30,61],[41,62,30,64,"height"],[41,68,30,70],[41,69,30,71],[42,10,31,12,"covers"],[42,16,31,18],[42,18,31,20],[43,8,32,10],[43,9,32,11],[44,6,33,8],[45,6,34,8],[45,13,34,15],[46,8,34,17,"source"],[46,14,34,23],[47,8,34,25,"penalty"],[47,15,34,32],[47,17,34,34],[47,18,34,35,"width"],[47,23,34,40],[47,26,34,43,"size"],[47,30,34,47],[47,31,34,48,"width"],[47,36,34,53],[47,41,34,58,"height"],[47,47,34,64],[47,50,34,67,"size"],[47,54,34,71],[47,55,34,72,"height"],[47,61,34,78],[47,62,34,79],[48,8,34,81,"covers"],[48,14,34,87],[48,16,34,89],[49,6,34,94],[49,7,34,95],[50,4,35,6],[50,5,35,7],[50,6,35,8],[50,7,36,7,"sort"],[50,11,36,11],[50,12,36,12],[50,13,36,13,"a"],[50,14,36,14],[50,16,36,16,"b"],[50,17,36,17],[50,22,36,22,"a"],[50,23,36,23],[50,24,36,24,"penalty"],[50,31,36,31],[50,34,36,34,"b"],[50,35,36,35],[50,36,36,36,"penalty"],[50,43,36,43],[50,44,36,44],[50,45,37,7,"sort"],[50,49,37,11],[50,50,37,12],[50,51,37,13,"a"],[50,52,37,14],[50,54,37,16,"b"],[50,55,37,17],[50,60,37,22,"Number"],[50,66,37,28],[50,67,37,29,"b"],[50,68,37,30],[50,69,37,31,"covers"],[50,75,37,37],[50,76,37,38],[50,79,37,41,"Number"],[50,85,37,47],[50,86,37,48,"a"],[50,87,37,49],[50,88,37,50,"covers"],[50,94,37,56],[50,95,37,57],[50,96,37,58],[50,97,37,59],[50,98,37,60],[50,99,37,61],[50,101,37,63,"source"],[50,107,37,69],[50,111,37,73],[50,115,37,77],[51,2,39,0],[52,2,49,0],[52,11,49,9,"getCSSMediaQueryForSource"],[52,36,49,34,"getCSSMediaQueryForSource"],[52,37,49,35,"source"],[52,43,49,54],[52,45,49,56],[53,4,50,2],[53,11,50,9],[53,26,50,24,"source"],[53,32,50,30],[53,33,50,31,"webMaxViewportWidth"],[53,52,50,50],[53,56,50,54,"source"],[53,62,50,60],[53,63,50,61,"width"],[53,68,50,66],[53,75,50,73,"source"],[53,81,50,79],[53,82,50,80,"width"],[53,87,50,85],[53,91,50,89],[54,2,51,0],[55,2,53,0],[55,11,53,9,"selectSource"],[55,23,53,21,"selectSource"],[55,24,54,2,"sources"],[55,31,54,36],[55,33,55,2,"size"],[55,37,55,22],[55,39,56,2,"responsivePolicy"],[55,55,56,50],[55,57,57,37],[56,4,58,2],[56,8,58,6,"sources"],[56,15,58,13],[56,19,58,17],[56,23,58,21],[56,27,58,25,"sources"],[56,34,58,32],[56,35,58,33,"length"],[56,41,58,39],[56,46,58,44],[56,47,58,45],[56,49,58,47],[57,6,59,4],[57,13,59,11],[57,17,59,15],[58,4,60,2],[59,4,62,2],[59,8,62,6,"sources"],[59,15,62,13],[59,16,62,14,"length"],[59,22,62,20],[59,27,62,25],[59,28,62,26],[59,30,62,28],[60,6,63,4],[60,13,63,11,"sources"],[60,20,63,18],[60,21,63,19],[60,22,63,20],[60,23,63,21],[61,4,64,2],[62,4,66,2],[62,8,66,6,"responsivePolicy"],[62,24,66,22],[62,29,66,27],[62,37,66,35],[62,39,66,37],[63,6,67,4],[63,13,67,11,"findBestSourceForSize"],[63,34,67,32],[63,35,67,33,"sources"],[63,42,67,40],[63,44,67,42,"size"],[63,48,67,46],[63,49,67,47],[64,4,68,2],[65,4,69,2],[65,10,69,8,"staticSupportedSources"],[65,32,69,30],[65,35,69,33,"sources"],[65,42,69,40],[65,43,70,5,"filter"],[65,49,70,11],[65,50,71,7,"s"],[65,51,71,8],[65,55,71,13,"s"],[65,56,71,14],[65,57,71,15,"uri"],[65,60,71,18],[65,64,71,22,"s"],[65,65,71,23],[65,66,71,24,"width"],[65,71,71,29],[65,75,71,33],[65,79,71,37],[65,83,71,41],[65,84,71,42],[65,88,71,42,"isBlurhashString"],[65,120,71,58],[65,122,71,59,"s"],[65,123,71,60],[65,124,71,61,"uri"],[65,127,71,64],[65,128,71,65],[65,132,71,69],[65,133,71,70],[65,137,71,70,"isThumbhashString"],[65,170,71,87],[65,172,71,88,"s"],[65,173,71,89],[65,174,71,90,"uri"],[65,177,71,93],[65,178,72,4],[65,179,72,5],[65,180,73,5,"sort"],[65,184,73,9],[65,185,74,6],[65,186,74,7,"a"],[65,187,74,8],[65,189,74,10,"b"],[65,190,74,11],[65,195,74,16],[65,196,74,17,"a"],[65,197,74,18],[65,198,74,19,"webMaxViewportWidth"],[65,217,74,38],[65,221,74,42,"a"],[65,222,74,43],[65,223,74,44,"width"],[65,228,74,49],[65,232,74,53],[65,233,74,54],[65,238,74,59,"b"],[65,239,74,60],[65,240,74,61,"webMaxViewportWidth"],[65,259,74,80],[65,263,74,84,"b"],[65,264,74,85],[65,265,74,86,"width"],[65,270,74,91],[65,274,74,95],[65,275,74,96],[65,276,75,4],[65,277,75,5],[66,4,77,2],[66,8,77,6,"staticSupportedSources"],[66,30,77,28],[66,31,77,29,"length"],[66,37,77,35],[66,42,77,40],[66,43,77,41],[66,45,77,43],[67,6,78,4,"console"],[67,13,78,11],[67,14,78,12,"warn"],[67,18,78,16],[67,19,79,6],[67,264,80,4],[67,265,80,5],[68,6,81,4],[68,13,81,11,"findBestSourceForSize"],[68,34,81,32],[68,35,81,33,"sources"],[68,42,81,40],[68,44,81,42,"size"],[68,48,81,46],[68,49,81,47],[69,4,82,2],[70,4,84,2],[70,10,84,8,"srcset"],[70,16,84,14],[70,19,84,17,"staticSupportedSources"],[70,41,84,39],[70,43,85,6,"map"],[70,46,85,9],[70,47,85,11,"source"],[70,53,85,17],[70,57,85,22],[70,60,85,25,"source"],[70,66,85,31],[70,67,85,32,"uri"],[70,70,85,35],[70,74,85,39,"source"],[70,80,85,45],[70,81,85,46,"width"],[70,86,85,51],[70,89,85,54],[70,90,85,55],[70,91,86,5,"join"],[70,95,86,9],[70,96,86,10],[70,100,86,14],[70,101,86,15],[71,4,87,2],[71,10,87,8,"sizes"],[71,15,87,13],[71,18,87,16],[71,21,87,19,"staticSupportedSources"],[71,43,87,41],[71,45,88,6,"map"],[71,48,88,9],[71,49,88,10,"getCSSMediaQueryForSource"],[71,74,88,35],[71,75,88,36],[71,76,89,5,"join"],[71,80,89,9],[71,81,89,10],[71,85,89,14],[71,86,89,15],[71,91,89,20,"staticSupportedSources"],[71,113,89,42],[71,114,89,43,"staticSupportedSources"],[71,136,89,65],[71,137,89,66,"length"],[71,143,89,72],[71,146,89,75],[71,147,89,76],[71,148,89,77],[71,150,89,79,"width"],[71,155,89,84],[71,159,89,88],[72,4,90,2],[72,11,90,9],[73,6,91,4,"srcset"],[73,12,91,10],[74,6,92,4,"sizes"],[74,11,92,9],[75,6,93,4,"uri"],[75,9,93,7],[75,11,93,9,"staticSupportedSources"],[75,33,93,31],[75,34,93,32,"staticSupportedSources"],[75,56,93,54],[75,57,93,55,"length"],[75,63,93,61],[75,66,93,64],[75,67,93,65],[75,68,93,66],[75,70,93,68,"uri"],[75,73,93,71],[75,77,93,75],[75,79,93,77],[76,6,94,4,"type"],[76,10,94,8],[76,12,94,10],[77,4,95,2],[77,5,95,3],[78,2,96,0],[79,2,98,15],[79,11,98,24,"useSourceSelection"],[79,29,98,42,"useSourceSelection"],[79,30,99,2,"sources"],[79,37,99,61],[79,39,100,2,"responsivePolicy"],[79,55,100,50],[79,58,100,53],[79,66,100,61],[79,68,101,2,"containerRef"],[79,80,101,54],[79,82,102,2,"measurementCallback"],[79,101,102,76],[79,104,102,79],[79,108,102,83],[79,110,103,62],[80,4,104,2],[80,10,104,8,"hasMoreThanOneSource"],[80,30,104,28],[80,33,104,31],[80,34,104,32,"Array"],[80,39,104,37],[80,40,104,38,"isArray"],[80,47,104,45],[80,48,104,46,"sources"],[80,55,104,53],[80,56,104,54],[80,59,104,57,"sources"],[80,66,104,64],[80,67,104,65,"length"],[80,73,104,71],[80,76,104,74],[80,77,104,75],[80,81,104,79],[80,82,104,80],[81,4,105,2],[81,10,105,8],[81,11,105,9,"size"],[81,15,105,13],[81,17,105,15,"setSize"],[81,24,105,22],[81,25,105,23],[81,28,105,26],[81,32,105,26,"useState"],[81,47,105,34],[81,49,106,4,"containerRef"],[81,61,106,16],[81,62,106,17,"current"],[81,69,106,24],[81,71,106,26,"getBoundingClientRect"],[81,92,106,47],[81,93,106,48],[81,94,106,49],[81,98,106,53],[81,102,107,2],[81,103,107,3],[82,4,108,2],[82,8,108,6,"size"],[82,12,108,10],[82,16,108,14,"containerRef"],[82,28,108,26],[82,29,108,27,"current"],[82,36,108,34],[82,38,108,36],[83,6,109,4,"measurementCallback"],[83,25,109,23],[83,28,109,26,"containerRef"],[83,40,109,38],[83,41,109,39,"current"],[83,48,109,46],[83,50,109,48,"size"],[83,54,109,52],[83,55,109,53],[84,4,110,2],[85,4,112,2,"React"],[85,18,112,7],[85,19,112,8,"useEffect"],[85,28,112,17],[85,29,112,18],[85,35,112,24],[86,6,113,4],[86,10,113,9],[86,11,113,10,"hasMoreThanOneSource"],[86,31,113,30],[86,35,113,34],[86,36,113,35,"measurementCallback"],[86,55,113,54],[86,59,113,59],[86,60,113,60,"containerRef"],[86,72,113,72],[86,73,113,73,"current"],[86,80,113,80],[86,82,113,82],[87,8,114,6],[87,15,114,13],[87,21,114,19],[87,22,114,20],[87,23,114,21],[88,6,115,4],[89,6,116,4],[89,10,116,8,"responsivePolicy"],[89,26,116,24],[89,31,116,29],[89,37,116,35],[89,39,116,37],[90,8,117,6],[90,14,117,12,"resizeObserver"],[90,28,117,26],[90,31,117,29],[90,35,117,33,"ResizeObserver"],[90,49,117,47],[90,50,117,49,"entries"],[90,57,117,56],[90,61,117,61],[91,10,118,8,"setSize"],[91,17,118,15],[91,18,118,16,"entries"],[91,25,118,23],[91,26,118,24],[91,27,118,25],[91,28,118,26],[91,29,118,27,"contentRect"],[91,40,118,38],[91,41,118,39],[92,10,119,8,"measurementCallback"],[92,29,119,27],[92,32,119,30,"entries"],[92,39,119,37],[92,40,119,38],[92,41,119,39],[92,42,119,40],[92,43,119,41,"target"],[92,49,119,47],[92,51,119,56,"entries"],[92,58,119,63],[92,59,119,64],[92,60,119,65],[92,61,119,66],[92,62,119,67,"contentRect"],[92,73,119,78],[92,74,119,79],[93,8,120,6],[93,9,120,7],[93,10,120,8],[94,8,121,6,"resizeObserver"],[94,22,121,20],[94,23,121,21,"observe"],[94,30,121,28],[94,31,121,29,"containerRef"],[94,43,121,41],[94,44,121,42,"current"],[94,51,121,49],[94,52,121,50],[95,8,122,6],[95,15,122,13],[95,21,122,19],[96,10,123,8,"resizeObserver"],[96,24,123,22],[96,25,123,23,"disconnect"],[96,35,123,33],[96,36,123,34],[96,37,123,35],[97,8,124,6],[97,9,124,7],[98,6,125,4],[99,6,126,4],[99,13,126,11],[99,19,126,17],[99,20,126,18],[99,21,126,19],[100,4,127,2],[100,5,127,3],[100,7,127,5],[100,8,127,6,"responsivePolicy"],[100,24,127,22],[100,26,127,24,"hasMoreThanOneSource"],[100,46,127,44],[100,48,127,46,"containerRef"],[100,60,127,58],[100,61,127,59,"current"],[100,68,127,66],[100,70,127,68,"measurementCallback"],[100,89,127,87],[100,90,127,88],[100,91,127,89],[101,4,129,2],[101,8,129,6],[101,12,129,6,"isImageRef"],[101,29,129,16],[101,31,129,17,"sources"],[101,38,129,24],[101,39,129,25],[101,41,129,27],[102,6,130,4],[103,6,131,4],[103,13,131,11,"sources"],[103,20,131,18],[104,4,132,2],[105,4,133,2],[105,11,133,9,"selectSource"],[105,23,133,21],[105,24,133,22,"sources"],[105,31,133,29],[105,33,133,31,"size"],[105,37,133,35],[105,39,133,37,"responsivePolicy"],[105,55,133,53],[105,56,133,54],[106,2,134,0],[107,0,134,1],[107,3]],"functionMap":{"names":["<global>","findBestSourceForSize","map$argument_0","map.sort$argument_0","map.sort.sort$argument_0","getCSSMediaQueryForSource","selectSource","sources.filter$argument_0","sources.filter.sort$argument_0","staticSupportedSources.map$argument_0","useSourceSelection","React.useEffect$argument_0","<anonymous>","ResizeObserver$argument_0"],"mappings":"AAA;ACO;YCU;ODiB;YEC,+BF;YGC,6CH;CDE;AKU;CLE;AME;MCkB,wFD;MEG,2FF;UGW,4CH;CNW;eUE;kBCc;aCE,QD;gDEG;OFG;aCE;ODE;WCE,QD;GDC;CVO"}},"type":"js/module"}]}