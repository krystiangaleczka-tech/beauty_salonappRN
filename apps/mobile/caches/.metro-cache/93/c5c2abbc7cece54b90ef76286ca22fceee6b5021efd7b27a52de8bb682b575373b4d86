{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"createNotifyManager\", {\n    enumerable: true,\n    get: function () {\n      return createNotifyManager;\n    }\n  });\n  Object.defineProperty(exports, \"defaultScheduler\", {\n    enumerable: true,\n    get: function () {\n      return defaultScheduler;\n    }\n  });\n  Object.defineProperty(exports, \"notifyManager\", {\n    enumerable: true,\n    get: function () {\n      return notifyManager;\n    }\n  });\n  // src/notifyManager.ts\n  var defaultScheduler = cb => setTimeout(cb, 0);\n  function createNotifyManager() {\n    var queue = [];\n    var transactions = 0;\n    var notifyFn = callback => {\n      callback();\n    };\n    var batchNotifyFn = callback => {\n      callback();\n    };\n    var scheduleFn = defaultScheduler;\n    var schedule = callback => {\n      if (transactions) {\n        queue.push(callback);\n      } else {\n        scheduleFn(() => {\n          notifyFn(callback);\n        });\n      }\n    };\n    var flush = () => {\n      var originalQueue = queue;\n      queue = [];\n      if (originalQueue.length) {\n        scheduleFn(() => {\n          batchNotifyFn(() => {\n            originalQueue.forEach(callback => {\n              notifyFn(callback);\n            });\n          });\n        });\n      }\n    };\n    return {\n      batch: callback => {\n        var result;\n        transactions++;\n        try {\n          result = callback();\n        } finally {\n          transactions--;\n          if (!transactions) {\n            flush();\n          }\n        }\n        return result;\n      },\n      /**\n       * All calls to the wrapped function will be batched.\n       */\n      batchCalls: callback => {\n        return function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          schedule(() => {\n            callback(...args);\n          });\n        };\n      },\n      schedule,\n      /**\n       * Use this method to set a custom notify function.\n       * This can be used to for example wrap notifications with `React.act` while running tests.\n       */\n      setNotifyFunction: fn => {\n        notifyFn = fn;\n      },\n      /**\n       * Use this method to set a custom function to batch notifications together into a single tick.\n       * By default React Query will use the batch function provided by ReactDOM or React Native.\n       */\n      setBatchNotifyFunction: fn => {\n        batchNotifyFn = fn;\n      },\n      setScheduler: fn => {\n        scheduleFn = fn;\n      }\n    };\n  }\n  var notifyManager = createNotifyManager();\n});","lineCount":107,"map":[[7,2,80,0,"Object"],[7,8,80,0],[7,9,80,0,"defineProperty"],[7,23,80,0],[7,24,80,0,"exports"],[7,31,80,0],[8,4,80,0,"enumerable"],[8,14,80,0],[9,4,80,0,"get"],[9,7,80,0],[9,18,80,0,"get"],[9,19,80,0],[10,6,80,0],[10,13,81,2,"createNotifyManager"],[10,32,81,21],[11,4,81,21],[12,2,81,21],[13,2,80,0,"Object"],[13,8,80,0],[13,9,80,0,"defineProperty"],[13,23,80,0],[13,24,80,0,"exports"],[13,31,80,0],[14,4,80,0,"enumerable"],[14,14,80,0],[15,4,80,0,"get"],[15,7,80,0],[15,18,80,0,"get"],[15,19,80,0],[16,6,80,0],[16,13,82,2,"defaultScheduler"],[16,29,82,18],[17,4,82,18],[18,2,82,18],[19,2,80,0,"Object"],[19,8,80,0],[19,9,80,0,"defineProperty"],[19,23,80,0],[19,24,80,0,"exports"],[19,31,80,0],[20,4,80,0,"enumerable"],[20,14,80,0],[21,4,80,0,"get"],[21,7,80,0],[21,18,80,0,"get"],[21,19,80,0],[22,6,80,0],[22,13,83,2,"notifyManager"],[22,26,83,15],[23,4,83,15],[24,2,83,15],[25,2,1,0],[26,2,2,0],[26,6,2,4,"defaultScheduler"],[26,22,2,20],[26,25,2,24,"cb"],[26,27,2,26],[26,31,2,31,"setTimeout"],[26,41,2,41],[26,42,2,42,"cb"],[26,44,2,44],[26,46,2,46],[26,47,2,47],[26,48,2,48],[27,2,3,0],[27,11,3,9,"createNotifyManager"],[27,30,3,28,"createNotifyManager"],[27,31,3,28],[27,33,3,31],[28,4,4,2],[28,8,4,6,"queue"],[28,13,4,11],[28,16,4,14],[28,18,4,16],[29,4,5,2],[29,8,5,6,"transactions"],[29,20,5,18],[29,23,5,21],[29,24,5,22],[30,4,6,2],[30,8,6,6,"notifyFn"],[30,16,6,14],[30,19,6,18,"callback"],[30,27,6,26],[30,31,6,31],[31,6,7,4,"callback"],[31,14,7,12],[31,15,7,13],[31,16,7,14],[32,4,8,2],[32,5,8,3],[33,4,9,2],[33,8,9,6,"batchNotifyFn"],[33,21,9,19],[33,24,9,23,"callback"],[33,32,9,31],[33,36,9,36],[34,6,10,4,"callback"],[34,14,10,12],[34,15,10,13],[34,16,10,14],[35,4,11,2],[35,5,11,3],[36,4,12,2],[36,8,12,6,"scheduleFn"],[36,18,12,16],[36,21,12,19,"defaultScheduler"],[36,37,12,35],[37,4,13,2],[37,8,13,8,"schedule"],[37,16,13,16],[37,19,13,20,"callback"],[37,27,13,28],[37,31,13,33],[38,6,14,4],[38,10,14,8,"transactions"],[38,22,14,20],[38,24,14,22],[39,8,15,6,"queue"],[39,13,15,11],[39,14,15,12,"push"],[39,18,15,16],[39,19,15,17,"callback"],[39,27,15,25],[39,28,15,26],[40,6,16,4],[40,7,16,5],[40,13,16,11],[41,8,17,6,"scheduleFn"],[41,18,17,16],[41,19,17,17],[41,25,17,23],[42,10,18,8,"notifyFn"],[42,18,18,16],[42,19,18,17,"callback"],[42,27,18,25],[42,28,18,26],[43,8,19,6],[43,9,19,7],[43,10,19,8],[44,6,20,4],[45,4,21,2],[45,5,21,3],[46,4,22,2],[46,8,22,8,"flush"],[46,13,22,13],[46,16,22,16,"flush"],[46,17,22,16],[46,22,22,22],[47,6,23,4],[47,10,23,10,"originalQueue"],[47,23,23,23],[47,26,23,26,"queue"],[47,31,23,31],[48,6,24,4,"queue"],[48,11,24,9],[48,14,24,12],[48,16,24,14],[49,6,25,4],[49,10,25,8,"originalQueue"],[49,23,25,21],[49,24,25,22,"length"],[49,30,25,28],[49,32,25,30],[50,8,26,6,"scheduleFn"],[50,18,26,16],[50,19,26,17],[50,25,26,23],[51,10,27,8,"batchNotifyFn"],[51,23,27,21],[51,24,27,22],[51,30,27,28],[52,12,28,10,"originalQueue"],[52,25,28,23],[52,26,28,24,"forEach"],[52,33,28,31],[52,34,28,33,"callback"],[52,42,28,41],[52,46,28,46],[53,14,29,12,"notifyFn"],[53,22,29,20],[53,23,29,21,"callback"],[53,31,29,29],[53,32,29,30],[54,12,30,10],[54,13,30,11],[54,14,30,12],[55,10,31,8],[55,11,31,9],[55,12,31,10],[56,8,32,6],[56,9,32,7],[56,10,32,8],[57,6,33,4],[58,4,34,2],[58,5,34,3],[59,4,35,2],[59,11,35,9],[60,6,36,4,"batch"],[60,11,36,9],[60,13,36,12,"callback"],[60,21,36,20],[60,25,36,25],[61,8,37,6],[61,12,37,10,"result"],[61,18,37,16],[62,8,38,6,"transactions"],[62,20,38,18],[62,22,38,20],[63,8,39,6],[63,12,39,10],[64,10,40,8,"result"],[64,16,40,14],[64,19,40,17,"callback"],[64,27,40,25],[64,28,40,26],[64,29,40,27],[65,8,41,6],[65,9,41,7],[65,18,41,16],[66,10,42,8,"transactions"],[66,22,42,20],[66,24,42,22],[67,10,43,8],[67,14,43,12],[67,15,43,13,"transactions"],[67,27,43,25],[67,29,43,27],[68,12,44,10,"flush"],[68,17,44,15],[68,18,44,16],[68,19,44,17],[69,10,45,8],[70,8,46,6],[71,8,47,6],[71,15,47,13,"result"],[71,21,47,19],[72,6,48,4],[72,7,48,5],[73,6,49,4],[74,0,50,0],[75,0,51,0],[76,6,52,4,"batchCalls"],[76,16,52,14],[76,18,52,17,"callback"],[76,26,52,25],[76,30,52,30],[77,8,53,6],[77,15,53,13],[77,27,53,26],[78,10,53,26],[78,19,53,26,"_len"],[78,23,53,26],[78,26,53,26,"arguments"],[78,35,53,26],[78,36,53,26,"length"],[78,42,53,26],[78,44,53,17,"args"],[78,48,53,21],[78,55,53,21,"Array"],[78,60,53,21],[78,61,53,21,"_len"],[78,65,53,21],[78,68,53,21,"_key"],[78,72,53,21],[78,78,53,21,"_key"],[78,82,53,21],[78,85,53,21,"_len"],[78,89,53,21],[78,91,53,21,"_key"],[78,95,53,21],[79,12,53,17,"args"],[79,16,53,21],[79,17,53,21,"_key"],[79,21,53,21],[79,25,53,21,"arguments"],[79,34,53,21],[79,35,53,21,"_key"],[79,39,53,21],[80,10,53,21],[81,10,54,8,"schedule"],[81,18,54,16],[81,19,54,17],[81,25,54,23],[82,12,55,10,"callback"],[82,20,55,18],[82,21,55,19],[82,24,55,22,"args"],[82,28,55,26],[82,29,55,27],[83,10,56,8],[83,11,56,9],[83,12,56,10],[84,8,57,6],[84,9,57,7],[85,6,58,4],[85,7,58,5],[86,6,59,4,"schedule"],[86,14,59,12],[87,6,60,4],[88,0,61,0],[89,0,62,0],[90,0,63,0],[91,6,64,4,"setNotifyFunction"],[91,23,64,21],[91,25,64,24,"fn"],[91,27,64,26],[91,31,64,31],[92,8,65,6,"notifyFn"],[92,16,65,14],[92,19,65,17,"fn"],[92,21,65,19],[93,6,66,4],[93,7,66,5],[94,6,67,4],[95,0,68,0],[96,0,69,0],[97,0,70,0],[98,6,71,4,"setBatchNotifyFunction"],[98,28,71,26],[98,30,71,29,"fn"],[98,32,71,31],[98,36,71,36],[99,8,72,6,"batchNotifyFn"],[99,21,72,19],[99,24,72,22,"fn"],[99,26,72,24],[100,6,73,4],[100,7,73,5],[101,6,74,4,"setScheduler"],[101,18,74,16],[101,20,74,19,"fn"],[101,22,74,21],[101,26,74,26],[102,8,75,6,"scheduleFn"],[102,18,75,16],[102,21,75,19,"fn"],[102,23,75,21],[103,6,76,4],[104,4,77,2],[104,5,77,3],[105,2,78,0],[106,2,79,0],[106,6,79,4,"notifyManager"],[106,19,79,17],[106,22,79,20,"createNotifyManager"],[106,41,79,39],[106,42,79,40],[106,43,79,41],[107,0,79,42],[107,3]],"functionMap":{"names":["<global>","defaultScheduler","createNotifyManager","notifyFn","batchNotifyFn","schedule","scheduleFn$argument_0","flush","batchNotifyFn$argument_0","originalQueue.forEach$argument_0","batch","batchCalls","<anonymous>","schedule$argument_0","setNotifyFunction","setBatchNotifyFunction","setScheduler"],"mappings":"AAA;uBCC,yBD;AEC;iBCG;GDE;sBEC;GFE;mBGE;iBCI;ODE;GHE;gBKC;iBDI;sBEC;gCCC;WDE;SFC;OCC;GLE;WQE;KRY;gBSI;aCC;iBCC;SDE;ODC;KTC;uBYM;KZE;4BaK;KbE;kBcC;KdE;CFE"},"hasCjsExports":false},"type":"js/module"}]}