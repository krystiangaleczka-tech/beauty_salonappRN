{"dependencies":[{"name":"./_Stack","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":31,"index":31}}],"key":"liq/TvqrNGB6ftCyMygTFFyDxSc=","exportNames":["*"],"imports":1}},{"name":"./_baseIsEqual","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":18,"index":51},"end":{"line":2,"column":43,"index":76}}],"key":"aObeIdo9XaBBS9OvFjgNCqpOwao=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Stack = require(_dependencyMap[0], \"./_Stack\"),\n    baseIsEqual = require(_dependencyMap[1], \"./_baseIsEqual\");\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n  /**\n   * The base implementation of `_.isMatch` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Object} source The object of property values to match.\n   * @param {Array} matchData The property names, values, and compare flags to match.\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n   */\n  function baseIsMatch(object, source, matchData, customizer) {\n    var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n    if (object == null) {\n      return !length;\n    }\n    object = Object(object);\n    while (index--) {\n      var data = matchData[index];\n      if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n        return false;\n      }\n    }\n    while (++index < length) {\n      data = matchData[index];\n      var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n      if (noCustomizer && data[2]) {\n        if (objValue === undefined && !(key in object)) {\n          return false;\n        }\n      } else {\n        var stack = new Stack();\n        if (customizer) {\n          var result = customizer(objValue, srcValue, key, object, source, stack);\n        }\n        if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  module.exports = baseIsMatch;\n});","lineCount":55,"map":[[2,2,1,0],[2,6,1,4,"Stack"],[2,11,1,9],[2,14,1,12,"require"],[2,21,1,19],[2,22,1,19,"_dependencyMap"],[2,36,1,19],[2,51,1,30],[2,52,1,31],[3,4,2,4,"baseIsEqual"],[3,15,2,15],[3,18,2,18,"require"],[3,25,2,25],[3,26,2,25,"_dependencyMap"],[3,40,2,25],[3,61,2,42],[3,62,2,43],[5,2,4,0],[6,2,5,0],[6,6,5,4,"COMPARE_PARTIAL_FLAG"],[6,26,5,24],[6,29,5,27],[6,30,5,28],[7,4,6,4,"COMPARE_UNORDERED_FLAG"],[7,26,6,26],[7,29,6,29],[7,30,6,30],[9,2,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,2,18,0],[19,11,18,9,"baseIsMatch"],[19,22,18,20,"baseIsMatch"],[19,23,18,21,"object"],[19,29,18,27],[19,31,18,29,"source"],[19,37,18,35],[19,39,18,37,"matchData"],[19,48,18,46],[19,50,18,48,"customizer"],[19,60,18,58],[19,62,18,60],[20,4,19,2],[20,8,19,6,"index"],[20,13,19,11],[20,16,19,14,"matchData"],[20,25,19,23],[20,26,19,24,"length"],[20,32,19,30],[21,6,20,6,"length"],[21,12,20,12],[21,15,20,15,"index"],[21,20,20,20],[22,6,21,6,"noCustomizer"],[22,18,21,18],[22,21,21,21],[22,22,21,22,"customizer"],[22,32,21,32],[23,4,23,2],[23,8,23,6,"object"],[23,14,23,12],[23,18,23,16],[23,22,23,20],[23,24,23,22],[24,6,24,4],[24,13,24,11],[24,14,24,12,"length"],[24,20,24,18],[25,4,25,2],[26,4,26,2,"object"],[26,10,26,8],[26,13,26,11,"Object"],[26,19,26,17],[26,20,26,18,"object"],[26,26,26,24],[26,27,26,25],[27,4,27,2],[27,11,27,9,"index"],[27,16,27,14],[27,18,27,16],[27,20,27,18],[28,6,28,4],[28,10,28,8,"data"],[28,14,28,12],[28,17,28,15,"matchData"],[28,26,28,24],[28,27,28,25,"index"],[28,32,28,30],[28,33,28,31],[29,6,29,4],[29,10,29,9,"noCustomizer"],[29,22,29,21],[29,26,29,25,"data"],[29,30,29,29],[29,31,29,30],[29,32,29,31],[29,33,29,32],[29,36,30,12,"data"],[29,40,30,16],[29,41,30,17],[29,42,30,18],[29,43,30,19],[29,48,30,24,"object"],[29,54,30,30],[29,55,30,31,"data"],[29,59,30,35],[29,60,30,36],[29,61,30,37],[29,62,30,38],[29,63,30,39],[29,66,31,12],[29,68,31,14,"data"],[29,72,31,18],[29,73,31,19],[29,74,31,20],[29,75,31,21],[29,79,31,25,"object"],[29,85,31,31],[29,86,31,32],[29,88,32,10],[30,8,33,6],[30,15,33,13],[30,20,33,18],[31,6,34,4],[32,4,35,2],[33,4,36,2],[33,11,36,9],[33,13,36,11,"index"],[33,18,36,16],[33,21,36,19,"length"],[33,27,36,25],[33,29,36,27],[34,6,37,4,"data"],[34,10,37,8],[34,13,37,11,"matchData"],[34,22,37,20],[34,23,37,21,"index"],[34,28,37,26],[34,29,37,27],[35,6,38,4],[35,10,38,8,"key"],[35,13,38,11],[35,16,38,14,"data"],[35,20,38,18],[35,21,38,19],[35,22,38,20],[35,23,38,21],[36,8,39,8,"objValue"],[36,16,39,16],[36,19,39,19,"object"],[36,25,39,25],[36,26,39,26,"key"],[36,29,39,29],[36,30,39,30],[37,8,40,8,"srcValue"],[37,16,40,16],[37,19,40,19,"data"],[37,23,40,23],[37,24,40,24],[37,25,40,25],[37,26,40,26],[38,6,42,4],[38,10,42,8,"noCustomizer"],[38,22,42,20],[38,26,42,24,"data"],[38,30,42,28],[38,31,42,29],[38,32,42,30],[38,33,42,31],[38,35,42,33],[39,8,43,6],[39,12,43,10,"objValue"],[39,20,43,18],[39,25,43,23,"undefined"],[39,34,43,32],[39,38,43,36],[39,40,43,38,"key"],[39,43,43,41],[39,47,43,45,"object"],[39,53,43,51],[39,54,43,52],[39,56,43,54],[40,10,44,8],[40,17,44,15],[40,22,44,20],[41,8,45,6],[42,6,46,4],[42,7,46,5],[42,13,46,11],[43,8,47,6],[43,12,47,10,"stack"],[43,17,47,15],[43,20,47,18],[43,24,47,22,"Stack"],[43,29,47,27],[43,30,47,26],[43,31,47,27],[44,8,48,6],[44,12,48,10,"customizer"],[44,22,48,20],[44,24,48,22],[45,10,49,8],[45,14,49,12,"result"],[45,20,49,18],[45,23,49,21,"customizer"],[45,33,49,31],[45,34,49,32,"objValue"],[45,42,49,40],[45,44,49,42,"srcValue"],[45,52,49,50],[45,54,49,52,"key"],[45,57,49,55],[45,59,49,57,"object"],[45,65,49,63],[45,67,49,65,"source"],[45,73,49,71],[45,75,49,73,"stack"],[45,80,49,78],[45,81,49,79],[46,8,50,6],[47,8,51,6],[47,12,51,10],[47,14,51,12,"result"],[47,20,51,18],[47,25,51,23,"undefined"],[47,34,51,32],[47,37,52,14,"baseIsEqual"],[47,48,52,25],[47,49,52,26,"srcValue"],[47,57,52,34],[47,59,52,36,"objValue"],[47,67,52,44],[47,69,52,46,"COMPARE_PARTIAL_FLAG"],[47,89,52,66],[47,92,52,69,"COMPARE_UNORDERED_FLAG"],[47,114,52,91],[47,116,52,93,"customizer"],[47,126,52,103],[47,128,52,105,"stack"],[47,133,52,110],[47,134,52,111],[47,137,53,14,"result"],[47,143,53,20],[47,144,54,11],[47,146,54,13],[48,10,55,8],[48,17,55,15],[48,22,55,20],[49,8,56,6],[50,6,57,4],[51,4,58,2],[52,4,59,2],[52,11,59,9],[52,15,59,13],[53,2,60,0],[54,2,62,0,"module"],[54,8,62,6],[54,9,62,7,"exports"],[54,16,62,14],[54,19,62,17,"baseIsMatch"],[54,30,62,28],[55,0,62,29],[55,3]],"functionMap":{"names":["<global>","baseIsMatch"],"mappings":"AAA;ACiB;CD0C"},"hasCjsExports":true},"type":"js/module"}]}