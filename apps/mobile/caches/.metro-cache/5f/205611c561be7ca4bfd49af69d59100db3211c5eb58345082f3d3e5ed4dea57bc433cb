{"dependencies":[{"name":"../utils/auth/secureStorage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"tGTkwDmV6znjLKO6m4T8RtvPbtg=","exportNames":["*"],"imports":1}},{"name":"expo/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":48,"index":109}}],"key":"ug2WTu871fxhwUkT+lg+x8TWZJo=","exportNames":["*"],"imports":1}},{"name":"../config","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":8,"column":19,"index":282}}],"key":"pHqFJJBAh3HI9ZCkK8fFRwPv3x0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _utilsAuthSecureStorage = require(_dependencyMap[0], \"../utils/auth/secureStorage\");\n  var _expoFetch = require(_dependencyMap[1], \"expo/fetch\");\n  var _config = require(_dependencyMap[2], \"../config\");\n  const originalFetch = fetch;\n  const authKey = `${_config.PROJECT_GROUP_ID}-jwt`;\n  const getURLFromArgs = (...args) => {\n    const [urlArg] = args;\n    let url;\n    if (typeof urlArg === 'string') {\n      url = urlArg;\n    } else if (typeof urlArg === 'object' && urlArg !== null) {\n      // @ts-ignore\n      url = urlArg.url;\n    } else {\n      url = null;\n    }\n    return url;\n  };\n  const isFirstPartyURL = url => {\n    return url.startsWith('/') || _config.BASE_URL && url.startsWith(_config.BASE_URL) || _config.PROXY_BASE_URL && url.startsWith(_config.PROXY_BASE_URL);\n  };\n  const isSecondPartyURL = url => {\n    return url.startsWith('/_create/');\n  };\n  const fetchToWeb = async function fetchWithHeaders(...args) {\n    const [input, init] = args;\n    const url = getURLFromArgs(input, init);\n    if (!url) {\n      return (0, _expoFetch.fetch)(input, init);\n    }\n    const isExternalFetch = !isFirstPartyURL(url);\n    // we should not add headers to requests that don't go to our own server\n    if (isExternalFetch) {\n      return (0, _expoFetch.fetch)(input, init);\n    }\n    let finalInput = input;\n    const baseURL = isSecondPartyURL(url) && _config.PROXY_BASE_URL ? _config.PROXY_BASE_URL : _config.BASE_URL;\n    if (typeof input === 'string') {\n      if (input.startsWith('/') && baseURL) {\n        finalInput = `${baseURL}${input}`;\n      }\n    } else {\n      // non-string Request objects: fallback to original fetch, avoid mutating\n      // @ts-ignore\n      return originalFetch(input, init);\n    }\n    const initHeaders = init?.headers ?? {};\n    const finalHeaders = new Headers(initHeaders);\n    const headers = {\n      'x-createxyz-project-group-id': _config.PROJECT_GROUP_ID,\n      host: _config.HOST,\n      'x-forwarded-host': _config.HOST,\n      'x-createxyz-host': _config.HOST\n    };\n    for (const [key, value] of Object.entries(headers)) {\n      if (value) {\n        finalHeaders.set(key, value);\n      }\n    }\n    const auth = await (0, _utilsAuthSecureStorage.secureGetItem)(authKey).then(auth => {\n      return auth ? JSON.parse(auth) : null;\n    }).catch(() => {\n      return null;\n    });\n    if (auth) {\n      finalHeaders.set('authorization', `Bearer ${auth.jwt}`);\n    }\n    return (0, _expoFetch.fetch)(finalInput, {\n      ...init,\n      headers: finalHeaders\n    });\n  };\n  var _default = fetchToWeb;\n});","lineCount":86,"map":[[7,2,101,0,"Object"],[7,8,101,0],[7,9,101,0,"defineProperty"],[7,23,101,0],[7,24,101,0,"exports"],[7,31,101,0],[8,4,101,0,"enumerable"],[8,14,101,0],[9,4,101,0,"get"],[9,7,101,0],[9,18,101,0,"get"],[9,19,101,0],[10,6,101,0],[10,13,101,0,"_default"],[10,21,101,0],[11,4,101,0],[12,2,101,0],[13,2,1,0],[13,6,1,0,"_utilsAuthSecureStorage"],[13,29,1,0],[13,32,1,0,"require"],[13,39,1,0],[13,40,1,0,"_dependencyMap"],[13,54,1,0],[14,2,2,0],[14,6,2,0,"_expoFetch"],[14,16,2,0],[14,19,2,0,"require"],[14,26,2,0],[14,27,2,0,"_dependencyMap"],[14,41,2,0],[15,2,3,0],[15,6,3,0,"_config"],[15,13,3,0],[15,16,3,0,"require"],[15,23,3,0],[15,24,3,0,"_dependencyMap"],[15,38,3,0],[16,2,10,0],[16,8,10,6,"originalFetch"],[16,21,10,19],[16,24,10,22,"fetch"],[16,29,10,27],[17,2,11,0],[17,8,11,6,"authKey"],[17,15,11,13],[17,18,11,16],[17,21,11,19,"CONFIG_PROJECT_GROUP_ID"],[17,28,11,42],[17,29,11,42,"PROJECT_GROUP_ID"],[17,45,11,42],[17,51,11,48],[18,2,13,0],[18,8,13,6,"getURLFromArgs"],[18,22,13,20],[18,25,13,23,"getURLFromArgs"],[18,26,13,24],[18,29,13,27,"args"],[18,33,13,57],[18,38,13,62],[19,4,14,2],[19,10,14,8],[19,11,14,9,"urlArg"],[19,17,14,15],[19,18,14,16],[19,21,14,19,"args"],[19,25,14,23],[20,4,15,2],[20,8,15,6,"url"],[20,11,15,24],[21,4,16,2],[21,8,16,6],[21,15,16,13,"urlArg"],[21,21,16,19],[21,26,16,24],[21,34,16,32],[21,36,16,34],[22,6,17,4,"url"],[22,9,17,7],[22,12,17,10,"urlArg"],[22,18,17,16],[23,4,18,2],[23,5,18,3],[23,11,18,9],[23,15,18,13],[23,22,18,20,"urlArg"],[23,28,18,26],[23,33,18,31],[23,41,18,39],[23,45,18,43,"urlArg"],[23,51,18,49],[23,56,18,54],[23,60,18,58],[23,62,18,60],[24,6,19,4],[25,6,20,4,"url"],[25,9,20,7],[25,12,20,10,"urlArg"],[25,18,20,16],[25,19,20,17,"url"],[25,22,20,20],[26,4,21,2],[26,5,21,3],[26,11,21,9],[27,6,22,4,"url"],[27,9,22,7],[27,12,22,10],[27,16,22,14],[28,4,23,2],[29,4,24,2],[29,11,24,9,"url"],[29,14,24,12],[30,2,25,0],[30,3,25,1],[31,2,27,0],[31,8,27,6,"isFirstPartyURL"],[31,23,27,21],[31,26,27,25,"url"],[31,29,27,36],[31,33,27,41],[32,4,28,2],[32,11,29,4,"url"],[32,14,29,7],[32,15,29,8,"startsWith"],[32,25,29,18],[32,26,29,19],[32,29,29,22],[32,30,29,23],[32,34,30,5,"CONFIG_BASE_URL"],[32,41,30,20],[32,42,30,20,"BASE_URL"],[32,50,30,20],[32,54,30,24,"url"],[32,57,30,27],[32,58,30,28,"startsWith"],[32,68,30,38],[32,69,30,39,"CONFIG_BASE_URL"],[32,76,30,54],[32,77,30,54,"BASE_URL"],[32,85,30,54],[32,86,30,56],[32,90,31,5,"CONFIG_PROXY_BASE_URL"],[32,97,31,26],[32,98,31,26,"PROXY_BASE_URL"],[32,112,31,26],[32,116,31,30,"url"],[32,119,31,33],[32,120,31,34,"startsWith"],[32,130,31,44],[32,131,31,45,"CONFIG_PROXY_BASE_URL"],[32,138,31,66],[32,139,31,66,"PROXY_BASE_URL"],[32,153,31,66],[32,154,31,68],[33,2,33,0],[33,3,33,1],[34,2,35,0],[34,8,35,6,"isSecondPartyURL"],[34,24,35,22],[34,27,35,26,"url"],[34,30,35,37],[34,34,35,42],[35,4,36,2],[35,11,36,9,"url"],[35,14,36,12],[35,15,36,13,"startsWith"],[35,25,36,23],[35,26,36,24],[35,37,36,35],[35,38,36,36],[36,2,37,0],[36,3,37,1],[37,2,40,0],[37,8,40,6,"fetchToWeb"],[37,18,40,16],[37,21,40,19],[37,36,40,34,"fetchWithHeaders"],[37,52,40,50,"fetchWithHeaders"],[37,53,40,51],[37,56,40,54,"args"],[37,60,40,66],[37,62,40,68],[38,4,41,2],[38,10,41,8],[38,11,41,9,"input"],[38,16,41,14],[38,18,41,16,"init"],[38,22,41,20],[38,23,41,21],[38,26,41,24,"args"],[38,30,41,28],[39,4,42,2],[39,10,42,8,"url"],[39,13,42,11],[39,16,42,14,"getURLFromArgs"],[39,30,42,28],[39,31,42,29,"input"],[39,36,42,34],[39,38,42,43,"init"],[39,42,42,54],[39,43,42,55],[40,4,43,2],[40,8,43,6],[40,9,43,7,"url"],[40,12,43,10],[40,14,43,12],[41,6,44,4],[41,13,44,11],[41,17,44,11,"expoFetch"],[41,27,44,20],[41,28,44,20,"fetch"],[41,33,44,20],[41,35,44,21,"input"],[41,40,44,26],[41,42,44,28,"init"],[41,46,44,32],[41,47,44,33],[42,4,45,2],[43,4,47,2],[43,10,47,8,"isExternalFetch"],[43,25,47,23],[43,28,47,26],[43,29,47,27,"isFirstPartyURL"],[43,44,47,42],[43,45,47,43,"url"],[43,48,47,46],[43,49,47,47],[44,4,48,2],[45,4,49,2],[45,8,49,6,"isExternalFetch"],[45,23,49,21],[45,25,49,23],[46,6,50,4],[46,13,50,11],[46,17,50,11,"expoFetch"],[46,27,50,20],[46,28,50,20,"fetch"],[46,33,50,20],[46,35,50,21,"input"],[46,40,50,26],[46,42,50,28,"init"],[46,46,50,32],[46,47,50,33],[47,4,51,2],[48,4,53,2],[48,8,53,6,"finalInput"],[48,18,53,16],[48,21,53,19,"input"],[48,26,53,24],[49,4,54,2],[49,10,54,8,"baseURL"],[49,17,54,15],[49,20,55,4,"isSecondPartyURL"],[49,36,55,20],[49,37,55,21,"url"],[49,40,55,24],[49,41,55,25],[49,45,55,29,"CONFIG_PROXY_BASE_URL"],[49,52,55,50],[49,53,55,50,"PROXY_BASE_URL"],[49,67,55,50],[49,70,55,53,"CONFIG_PROXY_BASE_URL"],[49,77,55,74],[49,78,55,74,"PROXY_BASE_URL"],[49,92,55,74],[49,95,55,77,"CONFIG_BASE_URL"],[49,102,55,92],[49,103,55,92,"BASE_URL"],[49,111,55,92],[50,4,57,2],[50,8,57,6],[50,15,57,13,"input"],[50,20,57,18],[50,25,57,23],[50,33,57,31],[50,35,57,33],[51,6,58,4],[51,10,58,8,"input"],[51,15,58,13],[51,16,58,14,"startsWith"],[51,26,58,24],[51,27,58,25],[51,30,58,28],[51,31,58,29],[51,35,58,33,"baseURL"],[51,42,58,40],[51,44,58,42],[52,8,59,6,"finalInput"],[52,18,59,16],[52,21,59,19],[52,24,59,22,"baseURL"],[52,31,59,29],[52,34,59,32,"input"],[52,39,59,37],[52,41,59,39],[53,6,60,4],[54,4,61,2],[54,5,61,3],[54,11,61,9],[55,6,62,4],[56,6,63,4],[57,6,64,4],[57,13,64,11,"originalFetch"],[57,26,64,24],[57,27,64,25,"input"],[57,32,64,30],[57,34,64,32,"init"],[57,38,64,36],[57,39,64,37],[58,4,65,2],[59,4,67,2],[59,10,67,8,"initHeaders"],[59,21,67,19],[59,24,67,22,"init"],[59,28,67,26],[59,30,67,28,"headers"],[59,37,67,35],[59,41,67,39],[59,42,67,40],[59,43,67,41],[60,4,68,2],[60,10,68,8,"finalHeaders"],[60,22,68,20],[60,25,68,23],[60,29,68,27,"Headers"],[60,36,68,34],[60,37,68,35,"initHeaders"],[60,48,68,53],[60,49,68,54],[61,4,70,2],[61,10,70,8,"headers"],[61,17,70,51],[61,20,70,54],[62,6,71,4],[62,36,71,34],[62,38,71,36,"CONFIG_PROJECT_GROUP_ID"],[62,45,71,59],[62,46,71,59,"PROJECT_GROUP_ID"],[62,62,71,59],[63,6,72,4,"host"],[63,10,72,8],[63,12,72,10,"CONFIG_HOST"],[63,19,72,21],[63,20,72,21,"HOST"],[63,24,72,21],[64,6,73,4],[64,24,73,22],[64,26,73,24,"CONFIG_HOST"],[64,33,73,35],[64,34,73,35,"HOST"],[64,38,73,35],[65,6,74,4],[65,24,74,22],[65,26,74,24,"CONFIG_HOST"],[65,33,74,35],[65,34,74,35,"HOST"],[66,4,75,2],[66,5,75,3],[67,4,77,2],[67,9,77,7],[67,15,77,13],[67,16,77,14,"key"],[67,19,77,17],[67,21,77,19,"value"],[67,26,77,24],[67,27,77,25],[67,31,77,29,"Object"],[67,37,77,35],[67,38,77,36,"entries"],[67,45,77,43],[67,46,77,44,"headers"],[67,53,77,51],[67,54,77,52],[67,56,77,54],[68,6,78,4],[68,10,78,8,"value"],[68,15,78,13],[68,17,78,15],[69,8,79,6,"finalHeaders"],[69,20,79,18],[69,21,79,19,"set"],[69,24,79,22],[69,25,79,23,"key"],[69,28,79,26],[69,30,79,28,"value"],[69,35,79,33],[69,36,79,34],[70,6,80,4],[71,4,81,2],[72,4,83,2],[72,10,83,8,"auth"],[72,14,83,12],[72,17,83,15],[72,23,83,21],[72,27,83,21,"secureGetItem"],[72,50,83,34],[72,51,83,34,"secureGetItem"],[72,64,83,34],[72,66,83,35,"authKey"],[72,73,83,42],[72,74,83,43],[72,75,84,5,"then"],[72,79,84,9],[72,80,84,11,"auth"],[72,84,84,15],[72,88,84,20],[73,6,85,6],[73,13,85,13,"auth"],[73,17,85,17],[73,20,85,20,"JSON"],[73,24,85,24],[73,25,85,25,"parse"],[73,30,85,30],[73,31,85,31,"auth"],[73,35,85,35],[73,36,85,36],[73,39,85,39],[73,43,85,43],[74,4,86,4],[74,5,86,5],[74,6,86,6],[74,7,87,5,"catch"],[74,12,87,10],[74,13,87,11],[74,19,87,17],[75,6,88,6],[75,13,88,13],[75,17,88,17],[76,4,89,4],[76,5,89,5],[76,6,89,6],[77,4,91,2],[77,8,91,6,"auth"],[77,12,91,10],[77,14,91,12],[78,6,92,4,"finalHeaders"],[78,18,92,16],[78,19,92,17,"set"],[78,22,92,20],[78,23,92,21],[78,38,92,36],[78,40,92,38],[78,50,92,48,"auth"],[78,54,92,52],[78,55,92,53,"jwt"],[78,58,92,56],[78,60,92,58],[78,61,92,59],[79,4,93,2],[80,4,95,2],[80,11,95,9],[80,15,95,9,"expoFetch"],[80,25,95,18],[80,26,95,18,"fetch"],[80,31,95,18],[80,33,95,19,"finalInput"],[80,43,95,29],[80,45,95,38],[81,6,96,4],[81,9,96,7,"init"],[81,13,96,11],[82,6,97,4,"headers"],[82,13,97,11],[82,15,97,13,"finalHeaders"],[83,4,98,2],[83,5,98,3],[83,6,98,4],[84,2,99,0],[84,3,99,1],[85,2,101,0],[85,6,101,0,"_default"],[85,14,101,0],[85,17,101,15,"fetchToWeb"],[85,27,101,25],[86,0,101,26],[86,3]],"functionMap":{"names":["<global>","getURLFromArgs","isFirstPartyURL","isSecondPartyURL","fetchWithHeaders","secureGetItem.then$argument_0","secureGetItem.then._catch$argument_0"],"mappings":"AAA;uBCY;CDY;wBEE;CFM;yBGE;CHE;mBIG;UC4C;KDE;WEC;KFE;CJU"},"hasCjsExports":false},"type":"js/module"}]}