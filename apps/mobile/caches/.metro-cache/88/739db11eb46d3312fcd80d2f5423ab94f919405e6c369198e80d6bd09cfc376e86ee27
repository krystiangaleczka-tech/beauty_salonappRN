{"dependencies":[{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"]}},{"name":"expo/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":48,"index":98}}],"key":"ug2WTu871fxhwUkT+lg+x8TWZJo=","exportNames":["*"]}},{"name":"../config","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":99},"end":{"line":8,"column":19,"index":271}}],"key":"pHqFJJBAh3HI9ZCkK8fFRwPv3x0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var SecureStore = _interopRequireWildcard(require(_dependencyMap[0], \"expo-secure-store\"));\n  var _fetch = require(_dependencyMap[1], \"expo/fetch\");\n  var _config = require(_dependencyMap[2], \"../config\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const originalFetch = fetch;\n  const authKey = `${_config.PROJECT_GROUP_ID}-jwt`;\n  const getURLFromArgs = (...args) => {\n    const [urlArg] = args;\n    let url;\n    if (typeof urlArg === 'string') {\n      url = urlArg;\n    } else if (typeof urlArg === 'object' && urlArg !== null) {\n      // @ts-ignore\n      url = urlArg.url;\n    } else {\n      url = null;\n    }\n    return url;\n  };\n  const isFirstPartyURL = url => {\n    return url.startsWith('/') || _config.BASE_URL && url.startsWith(_config.BASE_URL) || _config.PROXY_BASE_URL && url.startsWith(_config.PROXY_BASE_URL);\n  };\n  const isSecondPartyURL = url => {\n    return url.startsWith('/_create/');\n  };\n  const fetchToWeb = async function fetchWithHeaders(...args) {\n    const [input, init] = args;\n    const url = getURLFromArgs(input, init);\n    if (!url) {\n      return (0, _fetch.fetch)(input, init);\n    }\n    const isExternalFetch = !isFirstPartyURL(url);\n    // we should not add headers to requests that don't go to our own server\n    if (isExternalFetch) {\n      return (0, _fetch.fetch)(input, init);\n    }\n    let finalInput = input;\n    const baseURL = isSecondPartyURL(url) && _config.PROXY_BASE_URL ? _config.PROXY_BASE_URL : _config.BASE_URL;\n    if (typeof input === 'string') {\n      if (input.startsWith('/') && baseURL) {\n        finalInput = `${baseURL}${input}`;\n      }\n    } else {\n      // non-string Request objects: fallback to original fetch, avoid mutating\n      // @ts-ignore\n      return originalFetch(input, init);\n    }\n    const initHeaders = init?.headers ?? {};\n    const finalHeaders = new Headers(initHeaders);\n    const headers = {\n      'x-createxyz-project-group-id': _config.PROJECT_GROUP_ID,\n      host: _config.HOST,\n      'x-forwarded-host': _config.HOST,\n      'x-createxyz-host': _config.HOST\n    };\n    for (const [key, value] of Object.entries(headers)) {\n      if (value) {\n        finalHeaders.set(key, value);\n      }\n    }\n    const auth = await SecureStore.getItemAsync(authKey).then(auth => {\n      return auth ? JSON.parse(auth) : null;\n    }).catch(() => {\n      return null;\n    });\n    if (auth) {\n      finalHeaders.set('authorization', `Bearer ${auth.jwt}`);\n    }\n    return (0, _fetch.fetch)(finalInput, {\n      ...init,\n      headers: finalHeaders\n    });\n  };\n  var _default = exports.default = fetchToWeb;\n});","lineCount":80,"map":[[6,2,1,0],[6,6,1,0,"SecureStore"],[6,17,1,0],[6,20,1,0,"_interopRequireWildcard"],[6,43,1,0],[6,44,1,0,"require"],[6,51,1,0],[6,52,1,0,"_dependencyMap"],[6,66,1,0],[7,2,2,0],[7,6,2,0,"_fetch"],[7,12,2,0],[7,15,2,0,"require"],[7,22,2,0],[7,23,2,0,"_dependencyMap"],[7,37,2,0],[8,2,3,0],[8,6,3,0,"_config"],[8,13,3,0],[8,16,3,0,"require"],[8,23,3,0],[8,24,3,0,"_dependencyMap"],[8,38,3,0],[9,2,8,19],[9,11,8,19,"_interopRequireWildcard"],[9,35,8,19,"e"],[9,36,8,19],[9,38,8,19,"t"],[9,39,8,19],[9,68,8,19,"WeakMap"],[9,75,8,19],[9,81,8,19,"r"],[9,82,8,19],[9,89,8,19,"WeakMap"],[9,96,8,19],[9,100,8,19,"n"],[9,101,8,19],[9,108,8,19,"WeakMap"],[9,115,8,19],[9,127,8,19,"_interopRequireWildcard"],[9,150,8,19],[9,162,8,19,"_interopRequireWildcard"],[9,163,8,19,"e"],[9,164,8,19],[9,166,8,19,"t"],[9,167,8,19],[9,176,8,19,"t"],[9,177,8,19],[9,181,8,19,"e"],[9,182,8,19],[9,186,8,19,"e"],[9,187,8,19],[9,188,8,19,"__esModule"],[9,198,8,19],[9,207,8,19,"e"],[9,208,8,19],[9,214,8,19,"o"],[9,215,8,19],[9,217,8,19,"i"],[9,218,8,19],[9,220,8,19,"f"],[9,221,8,19],[9,226,8,19,"__proto__"],[9,235,8,19],[9,243,8,19,"default"],[9,250,8,19],[9,252,8,19,"e"],[9,253,8,19],[9,270,8,19,"e"],[9,271,8,19],[9,294,8,19,"e"],[9,295,8,19],[9,320,8,19,"e"],[9,321,8,19],[9,330,8,19,"f"],[9,331,8,19],[9,337,8,19,"o"],[9,338,8,19],[9,341,8,19,"t"],[9,342,8,19],[9,345,8,19,"n"],[9,346,8,19],[9,349,8,19,"r"],[9,350,8,19],[9,358,8,19,"o"],[9,359,8,19],[9,360,8,19,"has"],[9,363,8,19],[9,364,8,19,"e"],[9,365,8,19],[9,375,8,19,"o"],[9,376,8,19],[9,377,8,19,"get"],[9,380,8,19],[9,381,8,19,"e"],[9,382,8,19],[9,385,8,19,"o"],[9,386,8,19],[9,387,8,19,"set"],[9,390,8,19],[9,391,8,19,"e"],[9,392,8,19],[9,394,8,19,"f"],[9,395,8,19],[9,411,8,19,"t"],[9,412,8,19],[9,416,8,19,"e"],[9,417,8,19],[9,433,8,19,"t"],[9,434,8,19],[9,441,8,19,"hasOwnProperty"],[9,455,8,19],[9,456,8,19,"call"],[9,460,8,19],[9,461,8,19,"e"],[9,462,8,19],[9,464,8,19,"t"],[9,465,8,19],[9,472,8,19,"i"],[9,473,8,19],[9,477,8,19,"o"],[9,478,8,19],[9,481,8,19,"Object"],[9,487,8,19],[9,488,8,19,"defineProperty"],[9,502,8,19],[9,507,8,19,"Object"],[9,513,8,19],[9,514,8,19,"getOwnPropertyDescriptor"],[9,538,8,19],[9,539,8,19,"e"],[9,540,8,19],[9,542,8,19,"t"],[9,543,8,19],[9,550,8,19,"i"],[9,551,8,19],[9,552,8,19,"get"],[9,555,8,19],[9,559,8,19,"i"],[9,560,8,19],[9,561,8,19,"set"],[9,564,8,19],[9,568,8,19,"o"],[9,569,8,19],[9,570,8,19,"f"],[9,571,8,19],[9,573,8,19,"t"],[9,574,8,19],[9,576,8,19,"i"],[9,577,8,19],[9,581,8,19,"f"],[9,582,8,19],[9,583,8,19,"t"],[9,584,8,19],[9,588,8,19,"e"],[9,589,8,19],[9,590,8,19,"t"],[9,591,8,19],[9,602,8,19,"f"],[9,603,8,19],[9,608,8,19,"e"],[9,609,8,19],[9,611,8,19,"t"],[9,612,8,19],[10,2,10,0],[10,8,10,6,"originalFetch"],[10,21,10,19],[10,24,10,22,"fetch"],[10,29,10,27],[11,2,11,0],[11,8,11,6,"authKey"],[11,15,11,13],[11,18,11,16],[11,21,11,19,"CONFIG_PROJECT_GROUP_ID"],[11,45,11,42],[11,51,11,48],[12,2,13,0],[12,8,13,6,"getURLFromArgs"],[12,22,13,20],[12,25,13,23,"getURLFromArgs"],[12,26,13,24],[12,29,13,27,"args"],[12,33,13,57],[12,38,13,62],[13,4,14,2],[13,10,14,8],[13,11,14,9,"urlArg"],[13,17,14,15],[13,18,14,16],[13,21,14,19,"args"],[13,25,14,23],[14,4,15,2],[14,8,15,6,"url"],[14,11,15,24],[15,4,16,2],[15,8,16,6],[15,15,16,13,"urlArg"],[15,21,16,19],[15,26,16,24],[15,34,16,32],[15,36,16,34],[16,6,17,4,"url"],[16,9,17,7],[16,12,17,10,"urlArg"],[16,18,17,16],[17,4,18,2],[17,5,18,3],[17,11,18,9],[17,15,18,13],[17,22,18,20,"urlArg"],[17,28,18,26],[17,33,18,31],[17,41,18,39],[17,45,18,43,"urlArg"],[17,51,18,49],[17,56,18,54],[17,60,18,58],[17,62,18,60],[18,6,19,4],[19,6,20,4,"url"],[19,9,20,7],[19,12,20,10,"urlArg"],[19,18,20,16],[19,19,20,17,"url"],[19,22,20,20],[20,4,21,2],[20,5,21,3],[20,11,21,9],[21,6,22,4,"url"],[21,9,22,7],[21,12,22,10],[21,16,22,14],[22,4,23,2],[23,4,24,2],[23,11,24,9,"url"],[23,14,24,12],[24,2,25,0],[24,3,25,1],[25,2,27,0],[25,8,27,6,"isFirstPartyURL"],[25,23,27,21],[25,26,27,25,"url"],[25,29,27,36],[25,33,27,41],[26,4,28,2],[26,11,29,4,"url"],[26,14,29,7],[26,15,29,8,"startsWith"],[26,25,29,18],[26,26,29,19],[26,29,29,22],[26,30,29,23],[26,34,30,5,"CONFIG_BASE_URL"],[26,50,30,20],[26,54,30,24,"url"],[26,57,30,27],[26,58,30,28,"startsWith"],[26,68,30,38],[26,69,30,39,"CONFIG_BASE_URL"],[26,85,30,54],[26,86,30,56],[26,90,31,5,"CONFIG_PROXY_BASE_URL"],[26,112,31,26],[26,116,31,30,"url"],[26,119,31,33],[26,120,31,34,"startsWith"],[26,130,31,44],[26,131,31,45,"CONFIG_PROXY_BASE_URL"],[26,153,31,66],[26,154,31,68],[27,2,33,0],[27,3,33,1],[28,2,35,0],[28,8,35,6,"isSecondPartyURL"],[28,24,35,22],[28,27,35,26,"url"],[28,30,35,37],[28,34,35,42],[29,4,36,2],[29,11,36,9,"url"],[29,14,36,12],[29,15,36,13,"startsWith"],[29,25,36,23],[29,26,36,24],[29,37,36,35],[29,38,36,36],[30,2,37,0],[30,3,37,1],[31,2,40,0],[31,8,40,6,"fetchToWeb"],[31,18,40,16],[31,21,40,19],[31,36,40,34,"fetchWithHeaders"],[31,52,40,50,"fetchWithHeaders"],[31,53,40,51],[31,56,40,54,"args"],[31,60,40,66],[31,62,40,68],[32,4,41,2],[32,10,41,8],[32,11,41,9,"input"],[32,16,41,14],[32,18,41,16,"init"],[32,22,41,20],[32,23,41,21],[32,26,41,24,"args"],[32,30,41,28],[33,4,42,2],[33,10,42,8,"url"],[33,13,42,11],[33,16,42,14,"getURLFromArgs"],[33,30,42,28],[33,31,42,29,"input"],[33,36,42,34],[33,38,42,43,"init"],[33,42,42,54],[33,43,42,55],[34,4,43,2],[34,8,43,6],[34,9,43,7,"url"],[34,12,43,10],[34,14,43,12],[35,6,44,4],[35,13,44,11],[35,17,44,11,"expoFetch"],[35,29,44,20],[35,31,44,21,"input"],[35,36,44,26],[35,38,44,28,"init"],[35,42,44,32],[35,43,44,33],[36,4,45,2],[37,4,47,2],[37,10,47,8,"isExternalFetch"],[37,25,47,23],[37,28,47,26],[37,29,47,27,"isFirstPartyURL"],[37,44,47,42],[37,45,47,43,"url"],[37,48,47,46],[37,49,47,47],[38,4,48,2],[39,4,49,2],[39,8,49,6,"isExternalFetch"],[39,23,49,21],[39,25,49,23],[40,6,50,4],[40,13,50,11],[40,17,50,11,"expoFetch"],[40,29,50,20],[40,31,50,21,"input"],[40,36,50,26],[40,38,50,28,"init"],[40,42,50,32],[40,43,50,33],[41,4,51,2],[42,4,53,2],[42,8,53,6,"finalInput"],[42,18,53,16],[42,21,53,19,"input"],[42,26,53,24],[43,4,54,2],[43,10,54,8,"baseURL"],[43,17,54,15],[43,20,55,4,"isSecondPartyURL"],[43,36,55,20],[43,37,55,21,"url"],[43,40,55,24],[43,41,55,25],[43,45,55,29,"CONFIG_PROXY_BASE_URL"],[43,67,55,50],[43,70,55,53,"CONFIG_PROXY_BASE_URL"],[43,92,55,74],[43,95,55,77,"CONFIG_BASE_URL"],[43,111,55,92],[44,4,57,2],[44,8,57,6],[44,15,57,13,"input"],[44,20,57,18],[44,25,57,23],[44,33,57,31],[44,35,57,33],[45,6,58,4],[45,10,58,8,"input"],[45,15,58,13],[45,16,58,14,"startsWith"],[45,26,58,24],[45,27,58,25],[45,30,58,28],[45,31,58,29],[45,35,58,33,"baseURL"],[45,42,58,40],[45,44,58,42],[46,8,59,6,"finalInput"],[46,18,59,16],[46,21,59,19],[46,24,59,22,"baseURL"],[46,31,59,29],[46,34,59,32,"input"],[46,39,59,37],[46,41,59,39],[47,6,60,4],[48,4,61,2],[48,5,61,3],[48,11,61,9],[49,6,62,4],[50,6,63,4],[51,6,64,4],[51,13,64,11,"originalFetch"],[51,26,64,24],[51,27,64,25,"input"],[51,32,64,30],[51,34,64,32,"init"],[51,38,64,36],[51,39,64,37],[52,4,65,2],[53,4,67,2],[53,10,67,8,"initHeaders"],[53,21,67,19],[53,24,67,22,"init"],[53,28,67,26],[53,30,67,28,"headers"],[53,37,67,35],[53,41,67,39],[53,42,67,40],[53,43,67,41],[54,4,68,2],[54,10,68,8,"finalHeaders"],[54,22,68,20],[54,25,68,23],[54,29,68,27,"Headers"],[54,36,68,34],[54,37,68,35,"initHeaders"],[54,48,68,53],[54,49,68,54],[55,4,70,2],[55,10,70,8,"headers"],[55,17,70,51],[55,20,70,54],[56,6,71,4],[56,36,71,34],[56,38,71,36,"CONFIG_PROJECT_GROUP_ID"],[56,62,71,59],[57,6,72,4,"host"],[57,10,72,8],[57,12,72,10,"CONFIG_HOST"],[57,24,72,21],[58,6,73,4],[58,24,73,22],[58,26,73,24,"CONFIG_HOST"],[58,38,73,35],[59,6,74,4],[59,24,74,22],[59,26,74,24,"CONFIG_HOST"],[60,4,75,2],[60,5,75,3],[61,4,77,2],[61,9,77,7],[61,15,77,13],[61,16,77,14,"key"],[61,19,77,17],[61,21,77,19,"value"],[61,26,77,24],[61,27,77,25],[61,31,77,29,"Object"],[61,37,77,35],[61,38,77,36,"entries"],[61,45,77,43],[61,46,77,44,"headers"],[61,53,77,51],[61,54,77,52],[61,56,77,54],[62,6,78,4],[62,10,78,8,"value"],[62,15,78,13],[62,17,78,15],[63,8,79,6,"finalHeaders"],[63,20,79,18],[63,21,79,19,"set"],[63,24,79,22],[63,25,79,23,"key"],[63,28,79,26],[63,30,79,28,"value"],[63,35,79,33],[63,36,79,34],[64,6,80,4],[65,4,81,2],[66,4,83,2],[66,10,83,8,"auth"],[66,14,83,12],[66,17,83,15],[66,23,83,21,"SecureStore"],[66,34,83,32],[66,35,83,33,"getItemAsync"],[66,47,83,45],[66,48,83,46,"authKey"],[66,55,83,53],[66,56,83,54],[66,57,84,5,"then"],[66,61,84,9],[66,62,84,11,"auth"],[66,66,84,15],[66,70,84,20],[67,6,85,6],[67,13,85,13,"auth"],[67,17,85,17],[67,20,85,20,"JSON"],[67,24,85,24],[67,25,85,25,"parse"],[67,30,85,30],[67,31,85,31,"auth"],[67,35,85,35],[67,36,85,36],[67,39,85,39],[67,43,85,43],[68,4,86,4],[68,5,86,5],[68,6,86,6],[68,7,87,5,"catch"],[68,12,87,10],[68,13,87,11],[68,19,87,17],[69,6,88,6],[69,13,88,13],[69,17,88,17],[70,4,89,4],[70,5,89,5],[70,6,89,6],[71,4,91,2],[71,8,91,6,"auth"],[71,12,91,10],[71,14,91,12],[72,6,92,4,"finalHeaders"],[72,18,92,16],[72,19,92,17,"set"],[72,22,92,20],[72,23,92,21],[72,38,92,36],[72,40,92,38],[72,50,92,48,"auth"],[72,54,92,52],[72,55,92,53,"jwt"],[72,58,92,56],[72,60,92,58],[72,61,92,59],[73,4,93,2],[74,4,95,2],[74,11,95,9],[74,15,95,9,"expoFetch"],[74,27,95,18],[74,29,95,19,"finalInput"],[74,39,95,29],[74,41,95,38],[75,6,96,4],[75,9,96,7,"init"],[75,13,96,11],[76,6,97,4,"headers"],[76,13,97,11],[76,15,97,13,"finalHeaders"],[77,4,98,2],[77,5,98,3],[77,6,98,4],[78,2,99,0],[78,3,99,1],[79,2,99,2],[79,6,99,2,"_default"],[79,14,99,2],[79,17,99,2,"exports"],[79,24,99,2],[79,25,99,2,"default"],[79,32,99,2],[79,35,101,15,"fetchToWeb"],[79,45,101,25],[80,0,101,25],[80,3]],"functionMap":{"names":["<global>","getURLFromArgs","isFirstPartyURL","isSecondPartyURL","fetchWithHeaders","SecureStore.getItemAsync.then$argument_0","SecureStore.getItemAsync.then._catch$argument_0"],"mappings":"AAA;uBCY;CDY;wBEE;CFM;yBGE;CHE;mBIG;UC4C;KDE;WEC;KFE;CJU"}},"type":"js/module"}]}