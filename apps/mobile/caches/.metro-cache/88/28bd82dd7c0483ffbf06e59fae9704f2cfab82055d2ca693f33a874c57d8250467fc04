{"dependencies":[{"name":"./_Symbol","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":33,"index":33}}],"key":"ocRW01TbslPnXdxokF4QeftJpN8=","exportNames":["*"],"imports":1}},{"name":"./isArguments","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":18,"index":53},"end":{"line":2,"column":42,"index":77}}],"key":"HD8q1j8YwiXe5LPVP2ZkI1qLoNI=","exportNames":["*"],"imports":1}},{"name":"./isArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":14,"index":93},"end":{"line":3,"column":34,"index":113}}],"key":"cpLl3Nq+ZgzwmgESYQ2NCH3CqEk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Symbol = require(_dependencyMap[0], \"./_Symbol\"),\n    isArguments = require(_dependencyMap[1], \"./isArguments\"),\n    isArray = require(_dependencyMap[2], \"./isArray\");\n\n  /** Built-in value references. */\n  var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);\n  }\n  module.exports = isFlattenable;\n});","lineCount":20,"map":[[2,2,1,0],[2,6,1,4,"Symbol"],[2,12,1,10],[2,15,1,13,"require"],[2,22,1,20],[2,23,1,20,"_dependencyMap"],[2,37,1,20],[2,53,1,32],[2,54,1,33],[3,4,2,4,"isArguments"],[3,15,2,15],[3,18,2,18,"require"],[3,25,2,25],[3,26,2,25,"_dependencyMap"],[3,40,2,25],[3,60,2,41],[3,61,2,42],[4,4,3,4,"isArray"],[4,11,3,11],[4,14,3,14,"require"],[4,21,3,21],[4,22,3,21,"_dependencyMap"],[4,36,3,21],[4,52,3,33],[4,53,3,34],[6,2,5,0],[7,2,6,0],[7,6,6,4,"spreadableSymbol"],[7,22,6,20],[7,25,6,23,"Symbol"],[7,31,6,29],[7,34,6,32,"Symbol"],[7,40,6,38],[7,41,6,39,"isConcatSpreadable"],[7,59,6,57],[7,62,6,60,"undefined"],[7,71,6,69],[9,2,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,2,15,0],[16,11,15,9,"isFlattenable"],[16,24,15,22,"isFlattenable"],[16,25,15,23,"value"],[16,30,15,28],[16,32,15,30],[17,4,16,2],[17,11,16,9,"isArray"],[17,18,16,16],[17,19,16,17,"value"],[17,24,16,22],[17,25,16,23],[17,29,16,27,"isArguments"],[17,40,16,38],[17,41,16,39,"value"],[17,46,16,44],[17,47,16,45],[17,51,17,4],[17,52,17,5],[17,54,17,7,"spreadableSymbol"],[17,70,17,23],[17,74,17,27,"value"],[17,79,17,32],[17,83,17,36,"value"],[17,88,17,41],[17,89,17,42,"spreadableSymbol"],[17,105,17,58],[17,106,17,59],[17,107,17,60],[18,2,18,0],[19,2,20,0,"module"],[19,8,20,6],[19,9,20,7,"exports"],[19,16,20,14],[19,19,20,17,"isFlattenable"],[19,32,20,30],[20,0,20,31],[20,3]],"functionMap":{"names":["<global>","isFlattenable"],"mappings":"AAA;ACc;CDG"},"hasCjsExports":true},"type":"js/module"}]}