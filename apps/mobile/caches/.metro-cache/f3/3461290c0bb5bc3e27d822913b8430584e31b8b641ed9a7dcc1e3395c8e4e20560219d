{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":40,"index":83}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":143},"end":{"line":5,"column":38,"index":181}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../utils/resolveSources","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":182},"end":{"line":6,"column":78,"index":260}}],"key":"0tSWeLBIaokpFkEzxEQuuUkLmpc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useSourceSelection;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _utils = require(_dependencyMap[1], \"../utils\");\n  var _utilsResolveSources = require(_dependencyMap[2], \"../utils/resolveSources\");\n  function findBestSourceForSize(sources, size) {\n    if (sources?.length === 1) {\n      return sources[0];\n    }\n    return [...(sources || [])]\n    // look for the smallest image that's still larger then a container\n    ?.map(source => {\n      if (!size) {\n        return {\n          source,\n          penalty: 0,\n          covers: false\n        };\n      }\n      const {\n        width,\n        height\n      } = typeof source === 'object' ? source : {\n        width: null,\n        height: null\n      };\n      if (width == null || height == null) {\n        return {\n          source,\n          penalty: 0,\n          covers: false\n        };\n      }\n      if (width < size.width || height < size.height) {\n        return {\n          source,\n          penalty: Math.max(size.width - width, size.height - height),\n          covers: false\n        };\n      }\n      return {\n        source,\n        penalty: (width - size.width) * (height - size.height),\n        covers: true\n      };\n    }).sort((a, b) => a.penalty - b.penalty).sort((a, b) => Number(b.covers) - Number(a.covers))[0]?.source ?? null;\n  }\n  function getCSSMediaQueryForSource(source) {\n    return `(max-width: ${source.webMaxViewportWidth ?? source.width}px) ${source.width}px`;\n  }\n  function selectSource(sources, size, responsivePolicy) {\n    if (sources == null || sources.length === 0) {\n      return null;\n    }\n    if (sources.length === 1) {\n      return sources[0];\n    }\n    if (responsivePolicy !== 'static') {\n      return findBestSourceForSize(sources, size);\n    }\n    const staticSupportedSources = sources.filter(s => s.uri && s.width != null && !(0, _utilsResolveSources.isBlurhashString)(s.uri) && !(0, _utilsResolveSources.isThumbhashString)(s.uri)).sort((a, b) => (a.webMaxViewportWidth ?? a.width ?? 0) - (b.webMaxViewportWidth ?? b.width ?? 0));\n    if (staticSupportedSources.length === 0) {\n      console.warn(\"You've set the `static` responsivePolicy but none of the sources have the `width` properties set. Make sure you set both `width` and `webMaxViewportWidth` for best results when using static responsiveness. Falling back to the `initial` policy.\");\n      return findBestSourceForSize(sources, size);\n    }\n    const srcset = staticSupportedSources?.map(source => `${source.uri} ${source.width}w`).join(', ');\n    const sizes = `${staticSupportedSources?.map(getCSSMediaQueryForSource).join(', ')}, ${staticSupportedSources[staticSupportedSources.length - 1]?.width}px`;\n    return {\n      srcset,\n      sizes,\n      uri: staticSupportedSources[staticSupportedSources.length - 1]?.uri ?? '',\n      type: 'srcset'\n    };\n  }\n  function useSourceSelection(sources, responsivePolicy = 'static', containerRef, measurementCallback = null) {\n    const hasMoreThanOneSource = (Array.isArray(sources) ? sources.length : 0) > 1;\n    const [size, setSize] = (0, _react.useState)(containerRef.current?.getBoundingClientRect() ?? null);\n    if (size && containerRef.current) {\n      measurementCallback?.(containerRef.current, size);\n    }\n    React.default.useEffect(() => {\n      if (!hasMoreThanOneSource && !measurementCallback || !containerRef.current) {\n        return () => {};\n      }\n      if (responsivePolicy === 'live') {\n        const resizeObserver = new ResizeObserver(entries => {\n          setSize(entries[0].contentRect);\n          measurementCallback?.(entries[0].target, entries[0].contentRect);\n        });\n        resizeObserver.observe(containerRef.current);\n        return () => {\n          resizeObserver.disconnect();\n        };\n      }\n      return () => {};\n    }, [responsivePolicy, hasMoreThanOneSource, containerRef.current, measurementCallback]);\n    if ((0, _utils.isImageRef)(sources)) {\n      // There is always only one image ref, so there is nothing else to select from.\n      return sources;\n    }\n    return selectSource(sources, size, responsivePolicy);\n  }\n});","lineCount":119,"map":[[12,2,98,15,"Object"],[12,8,98,15],[12,9,98,15,"defineProperty"],[12,23,98,15],[12,24,98,15,"exports"],[12,31,98,15],[13,4,98,15,"enumerable"],[13,14,98,15],[14,4,98,15,"get"],[14,7,98,15],[14,18,98,15,"get"],[14,19,98,15],[15,6,98,15],[15,13,98,15,"useSourceSelection"],[15,31,98,15],[16,4,98,15],[17,2,98,15],[18,2,2,0],[18,6,2,0,"_react"],[18,12,2,0],[18,15,2,0,"require"],[18,22,2,0],[18,23,2,0,"_dependencyMap"],[18,37,2,0],[19,2,2,0],[19,6,2,0,"React"],[19,11,2,0],[19,14,2,0,"_interopDefault"],[19,29,2,0],[19,30,2,0,"_react"],[19,36,2,0],[20,2,5,0],[20,6,5,0,"_utils"],[20,12,5,0],[20,15,5,0,"require"],[20,22,5,0],[20,23,5,0,"_dependencyMap"],[20,37,5,0],[21,2,6,0],[21,6,6,0,"_utilsResolveSources"],[21,26,6,0],[21,29,6,0,"require"],[21,36,6,0],[21,37,6,0,"_dependencyMap"],[21,51,6,0],[22,2,8,0],[22,11,8,9,"findBestSourceForSize"],[22,32,8,30,"findBestSourceForSize"],[22,33,9,2,"sources"],[22,40,9,36],[22,42,10,2,"size"],[22,46,10,22],[22,48,11,22],[23,4,12,2],[23,8,12,6,"sources"],[23,15,12,13],[23,17,12,15,"length"],[23,23,12,21],[23,28,12,26],[23,29,12,27],[23,31,12,29],[24,6,13,4],[24,13,13,11,"sources"],[24,20,13,18],[24,21,13,19],[24,22,13,20],[24,23,13,21],[25,4,14,2],[26,4,15,2],[26,11,16,4],[26,12,16,5],[26,16,16,9,"sources"],[26,23,16,16],[26,27,16,20],[26,29,16,22],[26,30,16,23],[27,4,17,6],[28,4,17,6],[28,6,18,8,"map"],[28,9,18,11],[28,10,18,13,"source"],[28,16,18,19],[28,20,18,24],[29,6,19,8],[29,10,19,12],[29,11,19,13,"size"],[29,15,19,17],[29,17,19,19],[30,8,20,10],[30,15,20,17],[31,10,20,19,"source"],[31,16,20,25],[32,10,20,27,"penalty"],[32,17,20,34],[32,19,20,36],[32,20,20,37],[33,10,20,39,"covers"],[33,16,20,45],[33,18,20,47],[34,8,20,53],[34,9,20,54],[35,6,21,8],[36,6,22,8],[36,12,22,14],[37,8,22,16,"width"],[37,13,22,21],[38,8,22,23,"height"],[39,6,22,30],[39,7,22,31],[39,10,23,10],[39,17,23,17,"source"],[39,23,23,23],[39,28,23,28],[39,36,23,36],[39,39,23,39,"source"],[39,45,23,45],[39,48,23,48],[40,8,23,50,"width"],[40,13,23,55],[40,15,23,57],[40,19,23,61],[41,8,23,63,"height"],[41,14,23,69],[41,16,23,71],[42,6,23,76],[42,7,23,77],[43,6,24,8],[43,10,24,12,"width"],[43,15,24,17],[43,19,24,21],[43,23,24,25],[43,27,24,29,"height"],[43,33,24,35],[43,37,24,39],[43,41,24,43],[43,43,24,45],[44,8,25,10],[44,15,25,17],[45,10,25,19,"source"],[45,16,25,25],[46,10,25,27,"penalty"],[46,17,25,34],[46,19,25,36],[46,20,25,37],[47,10,25,39,"covers"],[47,16,25,45],[47,18,25,47],[48,8,25,53],[48,9,25,54],[49,6,26,8],[50,6,27,8],[50,10,27,12,"width"],[50,15,27,17],[50,18,27,20,"size"],[50,22,27,24],[50,23,27,25,"width"],[50,28,27,30],[50,32,27,34,"height"],[50,38,27,40],[50,41,27,43,"size"],[50,45,27,47],[50,46,27,48,"height"],[50,52,27,54],[50,54,27,56],[51,8,28,10],[51,15,28,17],[52,10,29,12,"source"],[52,16,29,18],[53,10,30,12,"penalty"],[53,17,30,19],[53,19,30,21,"Math"],[53,23,30,25],[53,24,30,26,"max"],[53,27,30,29],[53,28,30,30,"size"],[53,32,30,34],[53,33,30,35,"width"],[53,38,30,40],[53,41,30,43,"width"],[53,46,30,48],[53,48,30,50,"size"],[53,52,30,54],[53,53,30,55,"height"],[53,59,30,61],[53,62,30,64,"height"],[53,68,30,70],[53,69,30,71],[54,10,31,12,"covers"],[54,16,31,18],[54,18,31,20],[55,8,32,10],[55,9,32,11],[56,6,33,8],[57,6,34,8],[57,13,34,15],[58,8,34,17,"source"],[58,14,34,23],[59,8,34,25,"penalty"],[59,15,34,32],[59,17,34,34],[59,18,34,35,"width"],[59,23,34,40],[59,26,34,43,"size"],[59,30,34,47],[59,31,34,48,"width"],[59,36,34,53],[59,41,34,58,"height"],[59,47,34,64],[59,50,34,67,"size"],[59,54,34,71],[59,55,34,72,"height"],[59,61,34,78],[59,62,34,79],[60,8,34,81,"covers"],[60,14,34,87],[60,16,34,89],[61,6,34,94],[61,7,34,95],[62,4,35,6],[62,5,35,7],[62,6,35,8],[62,7,36,7,"sort"],[62,11,36,11],[62,12,36,12],[62,13,36,13,"a"],[62,14,36,14],[62,16,36,16,"b"],[62,17,36,17],[62,22,36,22,"a"],[62,23,36,23],[62,24,36,24,"penalty"],[62,31,36,31],[62,34,36,34,"b"],[62,35,36,35],[62,36,36,36,"penalty"],[62,43,36,43],[62,44,36,44],[62,45,37,7,"sort"],[62,49,37,11],[62,50,37,12],[62,51,37,13,"a"],[62,52,37,14],[62,54,37,16,"b"],[62,55,37,17],[62,60,37,22,"Number"],[62,66,37,28],[62,67,37,29,"b"],[62,68,37,30],[62,69,37,31,"covers"],[62,75,37,37],[62,76,37,38],[62,79,37,41,"Number"],[62,85,37,47],[62,86,37,48,"a"],[62,87,37,49],[62,88,37,50,"covers"],[62,94,37,56],[62,95,37,57],[62,96,37,58],[62,97,37,59],[62,98,37,60],[62,99,37,61],[62,101,37,63,"source"],[62,107,37,69],[62,111,37,73],[62,115,37,77],[63,2,39,0],[64,2,49,0],[64,11,49,9,"getCSSMediaQueryForSource"],[64,36,49,34,"getCSSMediaQueryForSource"],[64,37,49,35,"source"],[64,43,49,54],[64,45,49,56],[65,4,50,2],[65,11,50,9],[65,26,50,24,"source"],[65,32,50,30],[65,33,50,31,"webMaxViewportWidth"],[65,52,50,50],[65,56,50,54,"source"],[65,62,50,60],[65,63,50,61,"width"],[65,68,50,66],[65,75,50,73,"source"],[65,81,50,79],[65,82,50,80,"width"],[65,87,50,85],[65,91,50,89],[66,2,51,0],[67,2,53,0],[67,11,53,9,"selectSource"],[67,23,53,21,"selectSource"],[67,24,54,2,"sources"],[67,31,54,36],[67,33,55,2,"size"],[67,37,55,22],[67,39,56,2,"responsivePolicy"],[67,55,56,50],[67,57,57,37],[68,4,58,2],[68,8,58,6,"sources"],[68,15,58,13],[68,19,58,17],[68,23,58,21],[68,27,58,25,"sources"],[68,34,58,32],[68,35,58,33,"length"],[68,41,58,39],[68,46,58,44],[68,47,58,45],[68,49,58,47],[69,6,59,4],[69,13,59,11],[69,17,59,15],[70,4,60,2],[71,4,62,2],[71,8,62,6,"sources"],[71,15,62,13],[71,16,62,14,"length"],[71,22,62,20],[71,27,62,25],[71,28,62,26],[71,30,62,28],[72,6,63,4],[72,13,63,11,"sources"],[72,20,63,18],[72,21,63,19],[72,22,63,20],[72,23,63,21],[73,4,64,2],[74,4,66,2],[74,8,66,6,"responsivePolicy"],[74,24,66,22],[74,29,66,27],[74,37,66,35],[74,39,66,37],[75,6,67,4],[75,13,67,11,"findBestSourceForSize"],[75,34,67,32],[75,35,67,33,"sources"],[75,42,67,40],[75,44,67,42,"size"],[75,48,67,46],[75,49,67,47],[76,4,68,2],[77,4,69,2],[77,10,69,8,"staticSupportedSources"],[77,32,69,30],[77,35,69,33,"sources"],[77,42,69,40],[77,43,70,5,"filter"],[77,49,70,11],[77,50,71,7,"s"],[77,51,71,8],[77,55,71,13,"s"],[77,56,71,14],[77,57,71,15,"uri"],[77,60,71,18],[77,64,71,22,"s"],[77,65,71,23],[77,66,71,24,"width"],[77,71,71,29],[77,75,71,33],[77,79,71,37],[77,83,71,41],[77,84,71,42],[77,88,71,42,"isBlurhashString"],[77,108,71,58],[77,109,71,58,"isBlurhashString"],[77,125,71,58],[77,127,71,59,"s"],[77,128,71,60],[77,129,71,61,"uri"],[77,132,71,64],[77,133,71,65],[77,137,71,69],[77,138,71,70],[77,142,71,70,"isThumbhashString"],[77,162,71,87],[77,163,71,87,"isThumbhashString"],[77,180,71,87],[77,182,71,88,"s"],[77,183,71,89],[77,184,71,90,"uri"],[77,187,71,93],[77,188,72,4],[77,189,72,5],[77,190,73,5,"sort"],[77,194,73,9],[77,195,74,6],[77,196,74,7,"a"],[77,197,74,8],[77,199,74,10,"b"],[77,200,74,11],[77,205,74,16],[77,206,74,17,"a"],[77,207,74,18],[77,208,74,19,"webMaxViewportWidth"],[77,227,74,38],[77,231,74,42,"a"],[77,232,74,43],[77,233,74,44,"width"],[77,238,74,49],[77,242,74,53],[77,243,74,54],[77,248,74,59,"b"],[77,249,74,60],[77,250,74,61,"webMaxViewportWidth"],[77,269,74,80],[77,273,74,84,"b"],[77,274,74,85],[77,275,74,86,"width"],[77,280,74,91],[77,284,74,95],[77,285,74,96],[77,286,75,4],[77,287,75,5],[78,4,77,2],[78,8,77,6,"staticSupportedSources"],[78,30,77,28],[78,31,77,29,"length"],[78,37,77,35],[78,42,77,40],[78,43,77,41],[78,45,77,43],[79,6,78,4,"console"],[79,13,78,11],[79,14,78,12,"warn"],[79,18,78,16],[79,19,79,6],[79,264,80,4],[79,265,80,5],[80,6,81,4],[80,13,81,11,"findBestSourceForSize"],[80,34,81,32],[80,35,81,33,"sources"],[80,42,81,40],[80,44,81,42,"size"],[80,48,81,46],[80,49,81,47],[81,4,82,2],[82,4,84,2],[82,10,84,8,"srcset"],[82,16,84,14],[82,19,84,17,"staticSupportedSources"],[82,41,84,39],[82,43,85,6,"map"],[82,46,85,9],[82,47,85,11,"source"],[82,53,85,17],[82,57,85,22],[82,60,85,25,"source"],[82,66,85,31],[82,67,85,32,"uri"],[82,70,85,35],[82,74,85,39,"source"],[82,80,85,45],[82,81,85,46,"width"],[82,86,85,51],[82,89,85,54],[82,90,85,55],[82,91,86,5,"join"],[82,95,86,9],[82,96,86,10],[82,100,86,14],[82,101,86,15],[83,4,87,2],[83,10,87,8,"sizes"],[83,15,87,13],[83,18,87,16],[83,21,87,19,"staticSupportedSources"],[83,43,87,41],[83,45,88,6,"map"],[83,48,88,9],[83,49,88,10,"getCSSMediaQueryForSource"],[83,74,88,35],[83,75,88,36],[83,76,89,5,"join"],[83,80,89,9],[83,81,89,10],[83,85,89,14],[83,86,89,15],[83,91,89,20,"staticSupportedSources"],[83,113,89,42],[83,114,89,43,"staticSupportedSources"],[83,136,89,65],[83,137,89,66,"length"],[83,143,89,72],[83,146,89,75],[83,147,89,76],[83,148,89,77],[83,150,89,79,"width"],[83,155,89,84],[83,159,89,88],[84,4,90,2],[84,11,90,9],[85,6,91,4,"srcset"],[85,12,91,10],[86,6,92,4,"sizes"],[86,11,92,9],[87,6,93,4,"uri"],[87,9,93,7],[87,11,93,9,"staticSupportedSources"],[87,33,93,31],[87,34,93,32,"staticSupportedSources"],[87,56,93,54],[87,57,93,55,"length"],[87,63,93,61],[87,66,93,64],[87,67,93,65],[87,68,93,66],[87,70,93,68,"uri"],[87,73,93,71],[87,77,93,75],[87,79,93,77],[88,6,94,4,"type"],[88,10,94,8],[88,12,94,10],[89,4,95,2],[89,5,95,3],[90,2,96,0],[91,2,98,15],[91,11,98,24,"useSourceSelection"],[91,29,98,42,"useSourceSelection"],[91,30,99,2,"sources"],[91,37,99,61],[91,39,100,2,"responsivePolicy"],[91,55,100,50],[91,58,100,53],[91,66,100,61],[91,68,101,2,"containerRef"],[91,80,101,54],[91,82,102,2,"measurementCallback"],[91,101,102,76],[91,104,102,79],[91,108,102,83],[91,110,103,62],[92,4,104,2],[92,10,104,8,"hasMoreThanOneSource"],[92,30,104,28],[92,33,104,31],[92,34,104,32,"Array"],[92,39,104,37],[92,40,104,38,"isArray"],[92,47,104,45],[92,48,104,46,"sources"],[92,55,104,53],[92,56,104,54],[92,59,104,57,"sources"],[92,66,104,64],[92,67,104,65,"length"],[92,73,104,71],[92,76,104,74],[92,77,104,75],[92,81,104,79],[92,82,104,80],[93,4,105,2],[93,10,105,8],[93,11,105,9,"size"],[93,15,105,13],[93,17,105,15,"setSize"],[93,24,105,22],[93,25,105,23],[93,28,105,26],[93,32,105,26,"useState"],[93,38,105,34],[93,39,105,34,"useState"],[93,47,105,34],[93,49,106,4,"containerRef"],[93,61,106,16],[93,62,106,17,"current"],[93,69,106,24],[93,71,106,26,"getBoundingClientRect"],[93,92,106,47],[93,93,106,48],[93,94,106,49],[93,98,106,53],[93,102,107,2],[93,103,107,3],[94,4,108,2],[94,8,108,6,"size"],[94,12,108,10],[94,16,108,14,"containerRef"],[94,28,108,26],[94,29,108,27,"current"],[94,36,108,34],[94,38,108,36],[95,6,109,4,"measurementCallback"],[95,25,109,23],[95,28,109,26,"containerRef"],[95,40,109,38],[95,41,109,39,"current"],[95,48,109,46],[95,50,109,48,"size"],[95,54,109,52],[95,55,109,53],[96,4,110,2],[97,4,112,2,"React"],[97,9,112,7],[97,10,112,7,"default"],[97,17,112,7],[97,18,112,8,"useEffect"],[97,27,112,17],[97,28,112,18],[97,34,112,24],[98,6,113,4],[98,10,113,9],[98,11,113,10,"hasMoreThanOneSource"],[98,31,113,30],[98,35,113,34],[98,36,113,35,"measurementCallback"],[98,55,113,54],[98,59,113,59],[98,60,113,60,"containerRef"],[98,72,113,72],[98,73,113,73,"current"],[98,80,113,80],[98,82,113,82],[99,8,114,6],[99,15,114,13],[99,21,114,19],[99,22,114,20],[99,23,114,21],[100,6,115,4],[101,6,116,4],[101,10,116,8,"responsivePolicy"],[101,26,116,24],[101,31,116,29],[101,37,116,35],[101,39,116,37],[102,8,117,6],[102,14,117,12,"resizeObserver"],[102,28,117,26],[102,31,117,29],[102,35,117,33,"ResizeObserver"],[102,49,117,47],[102,50,117,49,"entries"],[102,57,117,56],[102,61,117,61],[103,10,118,8,"setSize"],[103,17,118,15],[103,18,118,16,"entries"],[103,25,118,23],[103,26,118,24],[103,27,118,25],[103,28,118,26],[103,29,118,27,"contentRect"],[103,40,118,38],[103,41,118,39],[104,10,119,8,"measurementCallback"],[104,29,119,27],[104,32,119,30,"entries"],[104,39,119,37],[104,40,119,38],[104,41,119,39],[104,42,119,40],[104,43,119,41,"target"],[104,49,119,47],[104,51,119,56,"entries"],[104,58,119,63],[104,59,119,64],[104,60,119,65],[104,61,119,66],[104,62,119,67,"contentRect"],[104,73,119,78],[104,74,119,79],[105,8,120,6],[105,9,120,7],[105,10,120,8],[106,8,121,6,"resizeObserver"],[106,22,121,20],[106,23,121,21,"observe"],[106,30,121,28],[106,31,121,29,"containerRef"],[106,43,121,41],[106,44,121,42,"current"],[106,51,121,49],[106,52,121,50],[107,8,122,6],[107,15,122,13],[107,21,122,19],[108,10,123,8,"resizeObserver"],[108,24,123,22],[108,25,123,23,"disconnect"],[108,35,123,33],[108,36,123,34],[108,37,123,35],[109,8,124,6],[109,9,124,7],[110,6,125,4],[111,6,126,4],[111,13,126,11],[111,19,126,17],[111,20,126,18],[111,21,126,19],[112,4,127,2],[112,5,127,3],[112,7,127,5],[112,8,127,6,"responsivePolicy"],[112,24,127,22],[112,26,127,24,"hasMoreThanOneSource"],[112,46,127,44],[112,48,127,46,"containerRef"],[112,60,127,58],[112,61,127,59,"current"],[112,68,127,66],[112,70,127,68,"measurementCallback"],[112,89,127,87],[112,90,127,88],[112,91,127,89],[113,4,129,2],[113,8,129,6],[113,12,129,6,"isImageRef"],[113,18,129,16],[113,19,129,16,"isImageRef"],[113,29,129,16],[113,31,129,17,"sources"],[113,38,129,24],[113,39,129,25],[113,41,129,27],[114,6,130,4],[115,6,131,4],[115,13,131,11,"sources"],[115,20,131,18],[116,4,132,2],[117,4,133,2],[117,11,133,9,"selectSource"],[117,23,133,21],[117,24,133,22,"sources"],[117,31,133,29],[117,33,133,31,"size"],[117,37,133,35],[117,39,133,37,"responsivePolicy"],[117,55,133,53],[117,56,133,54],[118,2,134,0],[119,0,134,1],[119,3]],"functionMap":{"names":["<global>","findBestSourceForSize","map$argument_0","map.sort$argument_0","map.sort.sort$argument_0","getCSSMediaQueryForSource","selectSource","sources.filter$argument_0","sources.filter.sort$argument_0","staticSupportedSources.map$argument_0","useSourceSelection","React.useEffect$argument_0","<anonymous>","ResizeObserver$argument_0"],"mappings":"AAA;ACO;YCU;ODiB;YEC,+BF;YGC,6CH;CDE;AKU;CLE;AME;MCkB,wFD;MEG,2FF;UGW,4CH;CNW;eUE;kBCc;aCE,QD;gDEG;OFG;aCE;ODE;WCE,QD;GDC;CVO"},"hasCjsExports":false},"type":"js/module"}]}