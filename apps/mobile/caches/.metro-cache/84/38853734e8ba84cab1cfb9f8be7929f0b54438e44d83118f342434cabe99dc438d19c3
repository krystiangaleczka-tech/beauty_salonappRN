{"dependencies":[{"name":"./_root","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":29,"index":29}}],"key":"aMMrFUUpmMT9OsMCSAp6sYhPpGA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var root = require(_dependencyMap[0], \"./_root\");\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Built-in value references. */\n  var Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n  /**\n   * Creates a clone of  `buffer`.\n   *\n   * @private\n   * @param {Buffer} buffer The buffer to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Buffer} Returns the cloned buffer.\n   */\n  function cloneBuffer(buffer, isDeep) {\n    if (isDeep) {\n      return buffer.slice();\n    }\n    var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n    buffer.copy(result);\n    return result;\n  }\n  module.exports = cloneBuffer;\n});","lineCount":35,"map":[[2,2,1,0],[2,6,1,4,"root"],[2,10,1,8],[2,13,1,11,"require"],[2,20,1,18],[2,21,1,18,"_dependencyMap"],[2,35,1,18],[2,49,1,28],[2,50,1,29],[4,2,3,0],[5,2,4,0],[5,6,4,4,"freeExports"],[5,17,4,15],[5,20,4,18],[5,27,4,25,"exports"],[5,34,4,32],[5,38,4,36],[5,46,4,44],[5,50,4,48,"exports"],[5,57,4,55],[5,61,4,59],[5,62,4,60,"exports"],[5,69,4,67],[5,70,4,68,"nodeType"],[5,78,4,76],[5,82,4,80,"exports"],[5,89,4,87],[7,2,6,0],[8,2,7,0],[8,6,7,4,"freeModule"],[8,16,7,14],[8,19,7,17,"freeExports"],[8,30,7,28],[8,34,7,32],[8,41,7,39,"module"],[8,47,7,45],[8,51,7,49],[8,59,7,57],[8,63,7,61,"module"],[8,69,7,67],[8,73,7,71],[8,74,7,72,"module"],[8,80,7,78],[8,81,7,79,"nodeType"],[8,89,7,87],[8,93,7,91,"module"],[8,99,7,97],[10,2,9,0],[11,2,10,0],[11,6,10,4,"moduleExports"],[11,19,10,17],[11,22,10,20,"freeModule"],[11,32,10,30],[11,36,10,34,"freeModule"],[11,46,10,44],[11,47,10,45,"exports"],[11,54,10,52],[11,59,10,57,"freeExports"],[11,70,10,68],[13,2,12,0],[14,2,13,0],[14,6,13,4,"Buffer"],[14,12,13,10],[14,15,13,13,"moduleExports"],[14,28,13,26],[14,31,13,29,"root"],[14,35,13,33],[14,36,13,34,"Buffer"],[14,42,13,40],[14,45,13,43,"undefined"],[14,54,13,52],[15,4,14,4,"allocUnsafe"],[15,15,14,15],[15,18,14,18,"Buffer"],[15,24,14,24],[15,27,14,27,"Buffer"],[15,33,14,33],[15,34,14,34,"allocUnsafe"],[15,45,14,45],[15,48,14,48,"undefined"],[15,57,14,57],[17,2,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,2,24,0],[25,11,24,9,"cloneBuffer"],[25,22,24,20,"cloneBuffer"],[25,23,24,21,"buffer"],[25,29,24,27],[25,31,24,29,"isDeep"],[25,37,24,35],[25,39,24,37],[26,4,25,2],[26,8,25,6,"isDeep"],[26,14,25,12],[26,16,25,14],[27,6,26,4],[27,13,26,11,"buffer"],[27,19,26,17],[27,20,26,18,"slice"],[27,25,26,23],[27,26,26,24],[27,27,26,25],[28,4,27,2],[29,4,28,2],[29,8,28,6,"length"],[29,14,28,12],[29,17,28,15,"buffer"],[29,23,28,21],[29,24,28,22,"length"],[29,30,28,28],[30,6,29,6,"result"],[30,12,29,12],[30,15,29,15,"allocUnsafe"],[30,26,29,26],[30,29,29,29,"allocUnsafe"],[30,40,29,40],[30,41,29,41,"length"],[30,47,29,47],[30,48,29,48],[30,51,29,51],[30,55,29,55,"buffer"],[30,61,29,61],[30,62,29,62,"constructor"],[30,73,29,73],[30,74,29,74,"length"],[30,80,29,80],[30,81,29,81],[31,4,31,2,"buffer"],[31,10,31,8],[31,11,31,9,"copy"],[31,15,31,13],[31,16,31,14,"result"],[31,22,31,20],[31,23,31,21],[32,4,32,2],[32,11,32,9,"result"],[32,17,32,15],[33,2,33,0],[34,2,35,0,"module"],[34,8,35,6],[34,9,35,7,"exports"],[34,16,35,14],[34,19,35,17,"cloneBuffer"],[34,30,35,28],[35,0,35,29],[35,3]],"functionMap":{"names":["<global>","cloneBuffer"],"mappings":"AAA;ACuB;CDS"}},"type":"js/module"}]}