{"dependencies":[{"name":"ts-object-utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":24,"index":899},"end":{"line":19,"column":50,"index":925}}],"key":"22BxZAuMHpFTqrH56qaT6MDOpmA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = function (d, b) {\n      extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BaseDataProvider = void 0;\n  var ts_object_utils_1 = require(_dependencyMap[0], \"ts-object-utils\");\n  /***\n   * You can create a new instance or inherit and override default methods\n   * Allows access to data and size. Clone with rows creates a new data provider and let listview know where to calculate row layout from.\n   */\n  var BaseDataProvider = /** @class */function () {\n    function BaseDataProvider(rowHasChanged, getStableId) {\n      this._firstIndexToProcess = 0;\n      this._size = 0;\n      this._data = [];\n      this._hasStableIds = false;\n      this._requiresDataChangeHandling = false;\n      this.rowHasChanged = rowHasChanged;\n      if (getStableId) {\n        this.getStableId = getStableId;\n        this._hasStableIds = true;\n      } else {\n        this.getStableId = function (index) {\n          return index.toString();\n        };\n      }\n    }\n    BaseDataProvider.prototype.getDataForIndex = function (index) {\n      return this._data[index];\n    };\n    BaseDataProvider.prototype.getAllData = function () {\n      return this._data;\n    };\n    BaseDataProvider.prototype.getSize = function () {\n      return this._size;\n    };\n    BaseDataProvider.prototype.hasStableIds = function () {\n      return this._hasStableIds;\n    };\n    BaseDataProvider.prototype.requiresDataChangeHandling = function () {\n      return this._requiresDataChangeHandling;\n    };\n    BaseDataProvider.prototype.getFirstIndexToProcessInternal = function () {\n      return this._firstIndexToProcess;\n    };\n    //No need to override this one\n    //If you already know the first row where rowHasChanged will be false pass it upfront to avoid loop\n    BaseDataProvider.prototype.cloneWithRows = function (newData, firstModifiedIndex) {\n      var dp = this.newInstance(this.rowHasChanged, this._hasStableIds ? this.getStableId : undefined);\n      var newSize = newData.length;\n      var iterCount = Math.min(this._size, newSize);\n      if (ts_object_utils_1.ObjectUtil.isNullOrUndefined(firstModifiedIndex)) {\n        var i = 0;\n        for (i = 0; i < iterCount; i++) {\n          if (this.rowHasChanged(this._data[i], newData[i])) {\n            break;\n          }\n        }\n        dp._firstIndexToProcess = i;\n      } else {\n        dp._firstIndexToProcess = Math.max(Math.min(firstModifiedIndex, this._data.length), 0);\n      }\n      if (dp._firstIndexToProcess !== this._data.length) {\n        dp._requiresDataChangeHandling = true;\n      }\n      dp._data = newData;\n      dp._size = newSize;\n      return dp;\n    };\n    return BaseDataProvider;\n  }();\n  exports.BaseDataProvider = BaseDataProvider;\n  var DataProvider = /** @class */function (_super) {\n    __extends(DataProvider, _super);\n    function DataProvider() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataProvider.prototype.newInstance = function (rowHasChanged, getStableId) {\n      return new DataProvider(rowHasChanged, getStableId);\n    };\n    return DataProvider;\n  }(BaseDataProvider);\n  exports.default = DataProvider;\n});","lineCount":106,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__extends"],[4,15,2,13],[4,18,2,17],[4,22,2,21],[4,26,2,25],[4,30,2,29],[4,31,2,30,"__extends"],[4,40,2,39],[4,44,2,45],[4,56,2,57],[5,4,3,4],[5,8,3,8,"extendStatics"],[5,21,3,21],[5,24,3,24],[5,33,3,24,"extendStatics"],[5,34,3,34,"d"],[5,35,3,35],[5,37,3,37,"b"],[5,38,3,38],[5,40,3,40],[6,6,4,8,"extendStatics"],[6,19,4,21],[6,22,4,24,"Object"],[6,28,4,30],[6,29,4,31,"setPrototypeOf"],[6,43,4,45],[6,47,5,13],[7,8,5,15,"__proto__"],[7,17,5,24],[7,19,5,26],[8,6,5,29],[8,7,5,30],[8,19,5,42,"Array"],[8,24,5,47],[8,28,5,51],[8,38,5,61,"d"],[8,39,5,62],[8,41,5,64,"b"],[8,42,5,65],[8,44,5,67],[9,8,5,69,"d"],[9,9,5,70],[9,10,5,71,"__proto__"],[9,19,5,80],[9,22,5,83,"b"],[9,23,5,84],[10,6,5,86],[10,7,5,88],[10,11,6,12],[10,21,6,22,"d"],[10,22,6,23],[10,24,6,25,"b"],[10,25,6,26],[10,27,6,28],[11,8,6,30],[11,13,6,35],[11,17,6,39,"p"],[11,18,6,40],[11,22,6,44,"b"],[11,23,6,45],[11,25,6,47],[11,29,6,51,"Object"],[11,35,6,57],[11,36,6,58,"prototype"],[11,45,6,67],[11,46,6,68,"hasOwnProperty"],[11,60,6,82],[11,61,6,83,"call"],[11,65,6,87],[11,66,6,88,"b"],[11,67,6,89],[11,69,6,91,"p"],[11,70,6,92],[11,71,6,93],[11,73,6,95,"d"],[11,74,6,96],[11,75,6,97,"p"],[11,76,6,98],[11,77,6,99],[11,80,6,102,"b"],[11,81,6,103],[11,82,6,104,"p"],[11,83,6,105],[11,84,6,106],[12,6,6,108],[12,7,6,109],[13,6,7,8],[13,13,7,15,"extendStatics"],[13,26,7,28],[13,27,7,29,"d"],[13,28,7,30],[13,30,7,32,"b"],[13,31,7,33],[13,32,7,34],[14,4,8,4],[14,5,8,5],[15,4,9,4],[15,11,9,11],[15,21,9,21,"d"],[15,22,9,22],[15,24,9,24,"b"],[15,25,9,25],[15,27,9,27],[16,6,10,8],[16,10,10,12],[16,17,10,19,"b"],[16,18,10,20],[16,23,10,25],[16,33,10,35],[16,37,10,39,"b"],[16,38,10,40],[16,43,10,45],[16,47,10,49],[16,49,11,12],[16,55,11,18],[16,59,11,22,"TypeError"],[16,68,11,31],[16,69,11,32],[16,91,11,54],[16,94,11,57,"String"],[16,100,11,63],[16,101,11,64,"b"],[16,102,11,65],[16,103,11,66],[16,106,11,69],[16,137,11,100],[16,138,11,101],[17,6,12,8,"extendStatics"],[17,19,12,21],[17,20,12,22,"d"],[17,21,12,23],[17,23,12,25,"b"],[17,24,12,26],[17,25,12,27],[18,6,13,8],[18,15,13,17,"__"],[18,17,13,19,"__"],[18,18,13,19],[18,20,13,22],[19,8,13,24],[19,12,13,28],[19,13,13,29,"constructor"],[19,24,13,40],[19,27,13,43,"d"],[19,28,13,44],[20,6,13,46],[21,6,14,8,"d"],[21,7,14,9],[21,8,14,10,"prototype"],[21,17,14,19],[21,20,14,22,"b"],[21,21,14,23],[21,26,14,28],[21,30,14,32],[21,33,14,35,"Object"],[21,39,14,41],[21,40,14,42,"create"],[21,46,14,48],[21,47,14,49,"b"],[21,48,14,50],[21,49,14,51],[21,53,14,55,"__"],[21,55,14,57],[21,56,14,58,"prototype"],[21,65,14,67],[21,68,14,70,"b"],[21,69,14,71],[21,70,14,72,"prototype"],[21,79,14,81],[21,81,14,83],[21,85,14,87,"__"],[21,87,14,89],[21,88,14,90],[21,89,14,91],[21,90,14,92],[22,4,15,4],[22,5,15,5],[23,2,16,0],[23,3,16,1],[23,4,16,3],[23,5,16,4],[24,2,17,0,"Object"],[24,8,17,6],[24,9,17,7,"defineProperty"],[24,23,17,21],[24,24,17,22,"exports"],[24,31,17,29],[24,33,17,31],[24,45,17,43],[24,47,17,45],[25,4,17,47,"value"],[25,9,17,52],[25,11,17,54],[26,2,17,59],[26,3,17,60],[26,4,17,61],[27,2,18,0,"exports"],[27,9,18,7],[27,10,18,8,"BaseDataProvider"],[27,26,18,24],[27,29,18,27],[27,34,18,32],[27,35,18,33],[28,2,19,0],[28,6,19,4,"ts_object_utils_1"],[28,23,19,21],[28,26,19,24,"require"],[28,33,19,31],[28,34,19,31,"_dependencyMap"],[28,48,19,31],[28,70,19,49],[28,71,19,50],[29,2,20,0],[30,0,21,0],[31,0,22,0],[32,0,23,0],[33,2,24,0],[33,6,24,4,"BaseDataProvider"],[33,22,24,20],[33,25,24,23],[33,38,24,38],[33,50,24,50],[34,4,25,4],[34,13,25,13,"BaseDataProvider"],[34,29,25,29,"BaseDataProvider"],[34,30,25,30,"rowHasChanged"],[34,43,25,43],[34,45,25,45,"getStableId"],[34,56,25,56],[34,58,25,58],[35,6,26,8],[35,10,26,12],[35,11,26,13,"_firstIndexToProcess"],[35,31,26,33],[35,34,26,36],[35,35,26,37],[36,6,27,8],[36,10,27,12],[36,11,27,13,"_size"],[36,16,27,18],[36,19,27,21],[36,20,27,22],[37,6,28,8],[37,10,28,12],[37,11,28,13,"_data"],[37,16,28,18],[37,19,28,21],[37,21,28,23],[38,6,29,8],[38,10,29,12],[38,11,29,13,"_hasStableIds"],[38,24,29,26],[38,27,29,29],[38,32,29,34],[39,6,30,8],[39,10,30,12],[39,11,30,13,"_requiresDataChangeHandling"],[39,38,30,40],[39,41,30,43],[39,46,30,48],[40,6,31,8],[40,10,31,12],[40,11,31,13,"rowHasChanged"],[40,24,31,26],[40,27,31,29,"rowHasChanged"],[40,40,31,42],[41,6,32,8],[41,10,32,12,"getStableId"],[41,21,32,23],[41,23,32,25],[42,8,33,12],[42,12,33,16],[42,13,33,17,"getStableId"],[42,24,33,28],[42,27,33,31,"getStableId"],[42,38,33,42],[43,8,34,12],[43,12,34,16],[43,13,34,17,"_hasStableIds"],[43,26,34,30],[43,29,34,33],[43,33,34,37],[44,6,35,8],[44,7,35,9],[44,13,36,13],[45,8,37,12],[45,12,37,16],[45,13,37,17,"getStableId"],[45,24,37,28],[45,27,37,31],[45,37,37,41,"index"],[45,42,37,46],[45,44,37,48],[46,10,37,50],[46,17,37,57,"index"],[46,22,37,62],[46,23,37,63,"toString"],[46,31,37,71],[46,32,37,72],[46,33,37,73],[47,8,37,75],[47,9,37,76],[48,6,38,8],[49,4,39,4],[50,4,40,4,"BaseDataProvider"],[50,20,40,20],[50,21,40,21,"prototype"],[50,30,40,30],[50,31,40,31,"getDataForIndex"],[50,46,40,46],[50,49,40,49],[50,59,40,59,"index"],[50,64,40,64],[50,66,40,66],[51,6,41,8],[51,13,41,15],[51,17,41,19],[51,18,41,20,"_data"],[51,23,41,25],[51,24,41,26,"index"],[51,29,41,31],[51,30,41,32],[52,4,42,4],[52,5,42,5],[53,4,43,4,"BaseDataProvider"],[53,20,43,20],[53,21,43,21,"prototype"],[53,30,43,30],[53,31,43,31,"getAllData"],[53,41,43,41],[53,44,43,44],[53,56,43,56],[54,6,44,8],[54,13,44,15],[54,17,44,19],[54,18,44,20,"_data"],[54,23,44,25],[55,4,45,4],[55,5,45,5],[56,4,46,4,"BaseDataProvider"],[56,20,46,20],[56,21,46,21,"prototype"],[56,30,46,30],[56,31,46,31,"getSize"],[56,38,46,38],[56,41,46,41],[56,53,46,53],[57,6,47,8],[57,13,47,15],[57,17,47,19],[57,18,47,20,"_size"],[57,23,47,25],[58,4,48,4],[58,5,48,5],[59,4,49,4,"BaseDataProvider"],[59,20,49,20],[59,21,49,21,"prototype"],[59,30,49,30],[59,31,49,31,"hasStableIds"],[59,43,49,43],[59,46,49,46],[59,58,49,58],[60,6,50,8],[60,13,50,15],[60,17,50,19],[60,18,50,20,"_hasStableIds"],[60,31,50,33],[61,4,51,4],[61,5,51,5],[62,4,52,4,"BaseDataProvider"],[62,20,52,20],[62,21,52,21,"prototype"],[62,30,52,30],[62,31,52,31,"requiresDataChangeHandling"],[62,57,52,57],[62,60,52,60],[62,72,52,72],[63,6,53,8],[63,13,53,15],[63,17,53,19],[63,18,53,20,"_requiresDataChangeHandling"],[63,45,53,47],[64,4,54,4],[64,5,54,5],[65,4,55,4,"BaseDataProvider"],[65,20,55,20],[65,21,55,21,"prototype"],[65,30,55,30],[65,31,55,31,"getFirstIndexToProcessInternal"],[65,61,55,61],[65,64,55,64],[65,76,55,76],[66,6,56,8],[66,13,56,15],[66,17,56,19],[66,18,56,20,"_firstIndexToProcess"],[66,38,56,40],[67,4,57,4],[67,5,57,5],[68,4,58,4],[69,4,59,4],[70,4,60,4,"BaseDataProvider"],[70,20,60,20],[70,21,60,21,"prototype"],[70,30,60,30],[70,31,60,31,"cloneWithRows"],[70,44,60,44],[70,47,60,47],[70,57,60,57,"newData"],[70,64,60,64],[70,66,60,66,"firstModifiedIndex"],[70,84,60,84],[70,86,60,86],[71,6,61,8],[71,10,61,12,"dp"],[71,12,61,14],[71,15,61,17],[71,19,61,21],[71,20,61,22,"newInstance"],[71,31,61,33],[71,32,61,34],[71,36,61,38],[71,37,61,39,"rowHasChanged"],[71,50,61,52],[71,52,61,54],[71,56,61,58],[71,57,61,59,"_hasStableIds"],[71,70,61,72],[71,73,61,75],[71,77,61,79],[71,78,61,80,"getStableId"],[71,89,61,91],[71,92,61,94,"undefined"],[71,101,61,103],[71,102,61,104],[72,6,62,8],[72,10,62,12,"newSize"],[72,17,62,19],[72,20,62,22,"newData"],[72,27,62,29],[72,28,62,30,"length"],[72,34,62,36],[73,6,63,8],[73,10,63,12,"iterCount"],[73,19,63,21],[73,22,63,24,"Math"],[73,26,63,28],[73,27,63,29,"min"],[73,30,63,32],[73,31,63,33],[73,35,63,37],[73,36,63,38,"_size"],[73,41,63,43],[73,43,63,45,"newSize"],[73,50,63,52],[73,51,63,53],[74,6,64,8],[74,10,64,12,"ts_object_utils_1"],[74,27,64,29],[74,28,64,30,"ObjectUtil"],[74,38,64,40],[74,39,64,41,"isNullOrUndefined"],[74,56,64,58],[74,57,64,59,"firstModifiedIndex"],[74,75,64,77],[74,76,64,78],[74,78,64,80],[75,8,65,12],[75,12,65,16,"i"],[75,13,65,17],[75,16,65,20],[75,17,65,21],[76,8,66,12],[76,13,66,17,"i"],[76,14,66,18],[76,17,66,21],[76,18,66,22],[76,20,66,24,"i"],[76,21,66,25],[76,24,66,28,"iterCount"],[76,33,66,37],[76,35,66,39,"i"],[76,36,66,40],[76,38,66,42],[76,40,66,44],[77,10,67,16],[77,14,67,20],[77,18,67,24],[77,19,67,25,"rowHasChanged"],[77,32,67,38],[77,33,67,39],[77,37,67,43],[77,38,67,44,"_data"],[77,43,67,49],[77,44,67,50,"i"],[77,45,67,51],[77,46,67,52],[77,48,67,54,"newData"],[77,55,67,61],[77,56,67,62,"i"],[77,57,67,63],[77,58,67,64],[77,59,67,65],[77,61,67,67],[78,12,68,20],[79,10,69,16],[80,8,70,12],[81,8,71,12,"dp"],[81,10,71,14],[81,11,71,15,"_firstIndexToProcess"],[81,31,71,35],[81,34,71,38,"i"],[81,35,71,39],[82,6,72,8],[82,7,72,9],[82,13,73,13],[83,8,74,12,"dp"],[83,10,74,14],[83,11,74,15,"_firstIndexToProcess"],[83,31,74,35],[83,34,74,38,"Math"],[83,38,74,42],[83,39,74,43,"max"],[83,42,74,46],[83,43,74,47,"Math"],[83,47,74,51],[83,48,74,52,"min"],[83,51,74,55],[83,52,74,56,"firstModifiedIndex"],[83,70,74,74],[83,72,74,76],[83,76,74,80],[83,77,74,81,"_data"],[83,82,74,86],[83,83,74,87,"length"],[83,89,74,93],[83,90,74,94],[83,92,74,96],[83,93,74,97],[83,94,74,98],[84,6,75,8],[85,6,76,8],[85,10,76,12,"dp"],[85,12,76,14],[85,13,76,15,"_firstIndexToProcess"],[85,33,76,35],[85,38,76,40],[85,42,76,44],[85,43,76,45,"_data"],[85,48,76,50],[85,49,76,51,"length"],[85,55,76,57],[85,57,76,59],[86,8,77,12,"dp"],[86,10,77,14],[86,11,77,15,"_requiresDataChangeHandling"],[86,38,77,42],[86,41,77,45],[86,45,77,49],[87,6,78,8],[88,6,79,8,"dp"],[88,8,79,10],[88,9,79,11,"_data"],[88,14,79,16],[88,17,79,19,"newData"],[88,24,79,26],[89,6,80,8,"dp"],[89,8,80,10],[89,9,80,11,"_size"],[89,14,80,16],[89,17,80,19,"newSize"],[89,24,80,26],[90,6,81,8],[90,13,81,15,"dp"],[90,15,81,17],[91,4,82,4],[91,5,82,5],[92,4,83,4],[92,11,83,11,"BaseDataProvider"],[92,27,83,27],[93,2,84,0],[93,3,84,1],[93,4,84,2],[93,5,84,4],[94,2,85,0,"exports"],[94,9,85,7],[94,10,85,8,"BaseDataProvider"],[94,26,85,24],[94,29,85,27,"BaseDataProvider"],[94,45,85,43],[95,2,86,0],[95,6,86,4,"DataProvider"],[95,18,86,16],[95,21,86,19],[95,34,86,34],[95,44,86,44,"_super"],[95,50,86,50],[95,52,86,52],[96,4,87,4,"__extends"],[96,13,87,13],[96,14,87,14,"DataProvider"],[96,26,87,26],[96,28,87,28,"_super"],[96,34,87,34],[96,35,87,35],[97,4,88,4],[97,13,88,13,"DataProvider"],[97,25,88,25,"DataProvider"],[97,26,88,25],[97,28,88,28],[98,6,89,8],[98,13,89,15,"_super"],[98,19,89,21],[98,24,89,26],[98,28,89,30],[98,32,89,34,"_super"],[98,38,89,40],[98,39,89,41,"apply"],[98,44,89,46],[98,45,89,47],[98,49,89,51],[98,51,89,53,"arguments"],[98,60,89,62],[98,61,89,63],[98,65,89,67],[98,69,89,71],[99,4,90,4],[100,4,91,4,"DataProvider"],[100,16,91,16],[100,17,91,17,"prototype"],[100,26,91,26],[100,27,91,27,"newInstance"],[100,38,91,38],[100,41,91,41],[100,51,91,51,"rowHasChanged"],[100,64,91,64],[100,66,91,66,"getStableId"],[100,77,91,77],[100,79,91,79],[101,6,92,8],[101,13,92,15],[101,17,92,19,"DataProvider"],[101,29,92,31],[101,30,92,32,"rowHasChanged"],[101,43,92,45],[101,45,92,47,"getStableId"],[101,56,92,58],[101,57,92,59],[102,4,93,4],[102,5,93,5],[103,4,94,4],[103,11,94,11,"DataProvider"],[103,23,94,23],[104,2,95,0],[104,3,95,1],[104,4,95,2,"BaseDataProvider"],[104,20,95,18],[104,21,95,20],[105,2,96,0,"exports"],[105,9,96,7],[105,10,96,8,"default"],[105,17,96,15],[105,20,96,18,"DataProvider"],[105,32,96,30],[106,0,96,31],[106,3]],"functionMap":{"names":["<global>","<anonymous>","extendStatics","__","BaseDataProvider","getStableId","BaseDataProvider.prototype.getDataForIndex","BaseDataProvider.prototype.getAllData","BaseDataProvider.prototype.getSize","BaseDataProvider.prototype.hasStableIds","BaseDataProvider.prototype.requiresDataChangeHandling","BaseDataProvider.prototype.getFirstIndexToProcessInternal","BaseDataProvider.prototype.cloneWithRows","DataProvider","prototype.newInstance"],"mappings":"AAA;6CCC;wBCC;mDDE,oCC;YDC,iGC;KDE;QEK,uCF;CDG;sCCQ;IGC;+BCY,6CD;KHE;iDKC;KLE;4CMC;KNE;yCOC;KPE;8CQC;KRE;4DSC;KTE;gEUC;KVE;+CWG;KXsB;CDE;kCCE;IYE;KZE;yCaC;KbE;CDE"}},"type":"js/module"}]}