{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":12,"index":91},"end":{"line":5,"column":28,"index":107}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"],"imports":1}},{"name":"hey-listen","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":16,"index":125},"end":{"line":6,"column":37,"index":146}}],"key":"WLn9/n9lSF8QWTa86JOg/RTa1Rg=","exportNames":["*"],"imports":1}},{"name":"@motionone/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":12,"index":160},"end":{"line":7,"column":39,"index":187}}],"key":"FS/MZgsOo2zLy6PbOiduH8x3eaQ=","exportNames":["*"],"imports":1}},{"name":"../utils/stagger.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":14,"index":203},"end":{"line":8,"column":48,"index":237}}],"key":"ftEDADWtq5eRBJ3YMZcfG6TmcNY=","exportNames":["*"],"imports":1}},{"name":"../animate/animate-style.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":19,"index":258},"end":{"line":9,"column":61,"index":300}}],"key":"czffZjKXpeax9JtMQ/GuAFpqRMo=","exportNames":["*"],"imports":1}},{"name":"../animate/utils/controls.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":15,"index":317},"end":{"line":10,"column":58,"index":360}}],"key":"f5lSa9fhn+80dwk89wTLPlqy7u4=","exportNames":["*"],"imports":1}},{"name":"../animate/utils/keyframes.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":378},"end":{"line":11,"column":60,"index":422}}],"key":"ua45SM4JTqgdV/UkqAgE23VQZLU=","exportNames":["*"],"imports":1}},{"name":"../animate/utils/options.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":14,"index":438},"end":{"line":12,"column":56,"index":480}}],"key":"wtzOwbOdxTRErpFNXI2ZCO6MC5o=","exportNames":["*"],"imports":1}},{"name":"../utils/resolve-elements.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":22,"index":504},"end":{"line":13,"column":65,"index":547}}],"key":"6netvYTS6zFechX85c7z00OEjyc=","exportNames":["*"],"imports":1}},{"name":"../animate/utils/transforms.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":17,"index":566},"end":{"line":14,"column":62,"index":611}}],"key":"58FLwnhtAQzgqEsaTWp4+hLzmBU=","exportNames":["*"],"imports":1}},{"name":"./utils/calc-time.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":15,"index":628},"end":{"line":15,"column":50,"index":663}}],"key":"krlDnnNwfgAmphx0NSnnOIE+6NU=","exportNames":["*"],"imports":1}},{"name":"./utils/edit.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":11,"index":676},"end":{"line":16,"column":41,"index":706}}],"key":"P6/ggnRxRUiISMvrRPlH5G1nuAU=","exportNames":["*"],"imports":1}},{"name":"./utils/sort.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":11,"index":719},"end":{"line":17,"column":41,"index":749}}],"key":"V+LnEi7HmsUyWInGT4va6mg+pfo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\").default;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var tslib = require(_dependencyMap[1], \"tslib\");\n  var heyListen = require(_dependencyMap[2], \"hey-listen\");\n  var utils = require(_dependencyMap[3], \"@motionone/utils\");\n  var stagger = require(_dependencyMap[4], \"../utils/stagger.cjs.js\");\n  var animateStyle = require(_dependencyMap[5], \"../animate/animate-style.cjs.js\");\n  var controls = require(_dependencyMap[6], \"../animate/utils/controls.cjs.js\");\n  var keyframes = require(_dependencyMap[7], \"../animate/utils/keyframes.cjs.js\");\n  var options = require(_dependencyMap[8], \"../animate/utils/options.cjs.js\");\n  var resolveElements = require(_dependencyMap[9], \"../utils/resolve-elements.cjs.js\");\n  var transforms = require(_dependencyMap[10], \"../animate/utils/transforms.cjs.js\");\n  var calcTime = require(_dependencyMap[11], \"./utils/calc-time.cjs.js\");\n  var edit = require(_dependencyMap[12], \"./utils/edit.cjs.js\");\n  var sort = require(_dependencyMap[13], \"./utils/sort.cjs.js\");\n  function timeline(definition) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _a;\n    var animationDefinitions = createAnimationsFromTimeline(definition, options);\n    /**\n     * Create and start animations\n     */\n    var animationFactories = animationDefinitions.map(definition => animateStyle.animateStyle(...definition)).filter(Boolean);\n    return controls.withControls(animationFactories, options,\n    // Get the duration from the first animation definition\n    (_a = animationDefinitions[0]) === null || _a === void 0 ? void 0 : _a[3].duration);\n  }\n  function createAnimationsFromTimeline(definition) {\n    var _a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _a$defaultOptions = _a.defaultOptions,\n      defaultOptions = _a$defaultOptions === void 0 ? {} : _a$defaultOptions,\n      timelineOptions = tslib.__rest(_a, [\"defaultOptions\"]);\n    var animationDefinitions = [];\n    var elementSequences = new Map();\n    var elementCache = {};\n    var timeLabels = new Map();\n    var prevTime = 0;\n    var currentTime = 0;\n    var totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the definition array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (var i = 0; i < definition.length; i++) {\n      var segment = definition[i];\n      /**\n       * If this is a timeline label, mark it and skip the rest of this iteration.\n       */\n      if (utils.isString(segment)) {\n        timeLabels.set(segment, currentTime);\n        continue;\n      } else if (!Array.isArray(segment)) {\n        timeLabels.set(segment.name, calcTime.calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n        continue;\n      }\n      var _segment = _slicedToArray(segment, 3),\n        elementDefinition = _segment[0],\n        keyframes$1 = _segment[1],\n        _segment$ = _segment[2],\n        options$1 = _segment$ === void 0 ? {} : _segment$;\n      /**\n       * If a relative or absolute time value has been specified we need to resolve\n       * it in relation to the currentTime.\n       */\n      if (options$1.at !== undefined) {\n        currentTime = calcTime.calcNextTime(currentTime, options$1.at, prevTime, timeLabels);\n      }\n      /**\n       * Keep track of the maximum duration in this definition. This will be\n       * applied to currentTime once the definition has been parsed.\n       */\n      var maxDuration = 0;\n      /**\n       * Find all the elements specified in the definition and parse value\n       * keyframes from their timeline definitions.\n       */\n      var elements = resolveElements.resolveElements(elementDefinition, elementCache);\n      var numElements = elements.length;\n      for (var elementIndex = 0; elementIndex < numElements; elementIndex++) {\n        var element = elements[elementIndex];\n        var elementSequence = getElementSequence(element, elementSequences);\n        for (var key in keyframes$1) {\n          var valueSequence = getValueSequence(key, elementSequence);\n          var valueKeyframes = keyframes.keyframesList(keyframes$1[key]);\n          var valueOptions = options.getOptions(options$1, key);\n          var _valueOptions$duratio = valueOptions.duration,\n            duration = _valueOptions$duratio === void 0 ? defaultOptions.duration || utils.defaults.duration : _valueOptions$duratio,\n            _valueOptions$easing = valueOptions.easing,\n            easing = _valueOptions$easing === void 0 ? defaultOptions.easing || utils.defaults.easing : _valueOptions$easing;\n          if (utils.isEasingGenerator(easing)) {\n            var valueIsTransform = transforms.isTransform(key);\n            heyListen.invariant(valueKeyframes.length === 2 || !valueIsTransform, \"spring must be provided 2 keyframes within timeline\");\n            var custom = easing.createAnimation(valueKeyframes,\n            // TODO We currently only support explicit keyframes\n            // so this doesn't currently read from the DOM\n            () => \"0\", valueIsTransform);\n            easing = custom.easing;\n            if (custom.keyframes !== undefined) valueKeyframes = custom.keyframes;\n            if (custom.duration !== undefined) duration = custom.duration;\n          }\n          var delay = stagger.resolveOption(options$1.delay, elementIndex, numElements) || 0;\n          var startTime = currentTime + delay;\n          var targetTime = startTime + duration;\n          /**\n           *\n           */\n          var _valueOptions$offset = valueOptions.offset,\n            offset = _valueOptions$offset === void 0 ? utils.defaultOffset(valueKeyframes.length) : _valueOptions$offset;\n          /**\n           * If there's only one offset of 0, fill in a second with length 1\n           *\n           * TODO: Ensure there's a test that covers this removal\n           */\n          if (offset.length === 1 && offset[0] === 0) {\n            offset[1] = 1;\n          }\n          /**\n           * Fill out if offset if fewer offsets than keyframes\n           */\n          var remainder = length - valueKeyframes.length;\n          remainder > 0 && utils.fillOffset(offset, remainder);\n          /**\n           * If only one value has been set, ie [1], push a null to the start of\n           * the keyframe array. This will let us mark a keyframe at this point\n           * that will later be hydrated with the previous value.\n           */\n          valueKeyframes.length === 1 && valueKeyframes.unshift(null);\n          /**\n           * Add keyframes, mapping offsets to absolute time.\n           */\n          edit.addKeyframes(valueSequence, valueKeyframes, easing, offset, startTime, targetTime);\n          maxDuration = Math.max(delay + duration, maxDuration);\n          totalDuration = Math.max(targetTime, totalDuration);\n        }\n      }\n      prevTime = currentTime;\n      currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    elementSequences.forEach((valueSequences, element) => {\n      for (var _key in valueSequences) {\n        var _valueSequence = valueSequences[_key];\n        /**\n         * Arrange all the keyframes in ascending time order.\n         */\n        _valueSequence.sort(sort.compareByTime);\n        var _keyframes = [];\n        var valueOffset = [];\n        var valueEasing = [];\n        /**\n         * For each keyframe, translate absolute times into\n         * relative offsets based on the total duration of the timeline.\n         */\n        for (var _i = 0; _i < _valueSequence.length; _i++) {\n          var _valueSequence$_i = _valueSequence[_i],\n            at = _valueSequence$_i.at,\n            value = _valueSequence$_i.value,\n            _easing = _valueSequence$_i.easing;\n          _keyframes.push(value);\n          valueOffset.push(utils.progress(0, totalDuration, at));\n          valueEasing.push(_easing || utils.defaults.easing);\n        }\n        /**\n         * If the first keyframe doesn't land on offset: 0\n         * provide one by duplicating the initial keyframe. This ensures\n         * it snaps to the first keyframe when the animation starts.\n         */\n        if (valueOffset[0] !== 0) {\n          valueOffset.unshift(0);\n          _keyframes.unshift(_keyframes[0]);\n          valueEasing.unshift(\"linear\");\n        }\n        /**\n         * If the last keyframe doesn't land on offset: 1\n         * provide one with a null wildcard value. This will ensure it\n         * stays static until the end of the animation.\n         */\n        if (valueOffset[valueOffset.length - 1] !== 1) {\n          valueOffset.push(1);\n          _keyframes.push(null);\n        }\n        animationDefinitions.push([element, _key, _keyframes, Object.assign(Object.assign(Object.assign({}, defaultOptions), {\n          duration: totalDuration,\n          easing: valueEasing,\n          offset: valueOffset\n        }), timelineOptions)]);\n      }\n    });\n    return animationDefinitions;\n  }\n  function getElementSequence(element, sequences) {\n    !sequences.has(element) && sequences.set(element, {});\n    return sequences.get(element);\n  }\n  function getValueSequence(name, sequences) {\n    if (!sequences[name]) sequences[name] = [];\n    return sequences[name];\n  }\n  exports.createAnimationsFromTimeline = createAnimationsFromTimeline;\n  exports.timeline = timeline;\n});","lineCount":209,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,90,1,13,"default"],[4,97,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,5,0],[8,6,5,4,"tslib"],[8,11,5,9],[8,14,5,12,"require"],[8,21,5,19],[8,22,5,19,"_dependencyMap"],[8,36,5,19],[8,48,5,27],[8,49,5,28],[9,2,6,0],[9,6,6,4,"heyListen"],[9,15,6,13],[9,18,6,16,"require"],[9,25,6,23],[9,26,6,23,"_dependencyMap"],[9,40,6,23],[9,57,6,36],[9,58,6,37],[10,2,7,0],[10,6,7,4,"utils"],[10,11,7,9],[10,14,7,12,"require"],[10,21,7,19],[10,22,7,19,"_dependencyMap"],[10,36,7,19],[10,59,7,38],[10,60,7,39],[11,2,8,0],[11,6,8,4,"stagger"],[11,13,8,11],[11,16,8,14,"require"],[11,23,8,21],[11,24,8,21,"_dependencyMap"],[11,38,8,21],[11,68,8,47],[11,69,8,48],[12,2,9,0],[12,6,9,4,"animateStyle"],[12,18,9,16],[12,21,9,19,"require"],[12,28,9,26],[12,29,9,26,"_dependencyMap"],[12,43,9,26],[12,81,9,60],[12,82,9,61],[13,2,10,0],[13,6,10,4,"controls"],[13,14,10,12],[13,17,10,15,"require"],[13,24,10,22],[13,25,10,22,"_dependencyMap"],[13,39,10,22],[13,78,10,57],[13,79,10,58],[14,2,11,0],[14,6,11,4,"keyframes"],[14,15,11,13],[14,18,11,16,"require"],[14,25,11,23],[14,26,11,23,"_dependencyMap"],[14,40,11,23],[14,80,11,59],[14,81,11,60],[15,2,12,0],[15,6,12,4,"options"],[15,13,12,11],[15,16,12,14,"require"],[15,23,12,21],[15,24,12,21,"_dependencyMap"],[15,38,12,21],[15,76,12,55],[15,77,12,56],[16,2,13,0],[16,6,13,4,"resolveElements"],[16,21,13,19],[16,24,13,22,"require"],[16,31,13,29],[16,32,13,29,"_dependencyMap"],[16,46,13,29],[16,85,13,64],[16,86,13,65],[17,2,14,0],[17,6,14,4,"transforms"],[17,16,14,14],[17,19,14,17,"require"],[17,26,14,24],[17,27,14,24,"_dependencyMap"],[17,41,14,24],[17,83,14,61],[17,84,14,62],[18,2,15,0],[18,6,15,4,"calcTime"],[18,14,15,12],[18,17,15,15,"require"],[18,24,15,22],[18,25,15,22,"_dependencyMap"],[18,39,15,22],[18,71,15,49],[18,72,15,50],[19,2,16,0],[19,6,16,4,"edit"],[19,10,16,8],[19,13,16,11,"require"],[19,20,16,18],[19,21,16,18,"_dependencyMap"],[19,35,16,18],[19,62,16,40],[19,63,16,41],[20,2,17,0],[20,6,17,4,"sort"],[20,10,17,8],[20,13,17,11,"require"],[20,20,17,18],[20,21,17,18,"_dependencyMap"],[20,35,17,18],[20,62,17,40],[20,63,17,41],[21,2,19,0],[21,11,19,9,"timeline"],[21,19,19,17,"timeline"],[21,20,19,18,"definition"],[21,30,19,28],[21,32,19,44],[22,4,19,44],[22,8,19,30,"options"],[22,15,19,37],[22,18,19,37,"arguments"],[22,27,19,37],[22,28,19,37,"length"],[22,34,19,37],[22,42,19,37,"arguments"],[22,51,19,37],[22,59,19,37,"undefined"],[22,68,19,37],[22,71,19,37,"arguments"],[22,80,19,37],[22,86,19,40],[22,87,19,41],[22,88,19,42],[23,4,20,4],[23,8,20,8,"_a"],[23,10,20,10],[24,4,21,4],[24,8,21,10,"animationDefinitions"],[24,28,21,30],[24,31,21,33,"createAnimationsFromTimeline"],[24,59,21,61],[24,60,21,62,"definition"],[24,70,21,72],[24,72,21,74,"options"],[24,79,21,81],[24,80,21,82],[25,4,22,4],[26,0,23,0],[27,0,24,0],[28,4,25,4],[28,8,25,10,"animationFactories"],[28,26,25,28],[28,29,25,31,"animationDefinitions"],[28,49,25,51],[28,50,26,9,"map"],[28,53,26,12],[28,54,26,14,"definition"],[28,64,26,24],[28,68,26,29,"animateStyle"],[28,80,26,41],[28,81,26,42,"animateStyle"],[28,93,26,54],[28,94,26,55],[28,97,26,58,"definition"],[28,107,26,68],[28,108,26,69],[28,109,26,70],[28,110,27,9,"filter"],[28,116,27,15],[28,117,27,16,"Boolean"],[28,124,27,23],[28,125,27,24],[29,4,28,4],[29,11,28,11,"controls"],[29,19,28,19],[29,20,28,20,"withControls"],[29,32,28,32],[29,33,28,33,"animationFactories"],[29,51,28,51],[29,53,28,53,"options"],[29,60,28,60],[30,4,29,4],[31,4,30,4],[31,5,30,5,"_a"],[31,7,30,7],[31,10,30,10,"animationDefinitions"],[31,30,30,30],[31,31,30,31],[31,32,30,32],[31,33,30,33],[31,39,30,39],[31,43,30,43],[31,47,30,47,"_a"],[31,49,30,49],[31,54,30,54],[31,59,30,59],[31,60,30,60],[31,63,30,63],[31,68,30,68],[31,69,30,69],[31,72,30,72,"_a"],[31,74,30,74],[31,75,30,75],[31,76,30,76],[31,77,30,77],[31,78,30,78,"duration"],[31,86,30,86],[31,87,30,87],[32,2,31,0],[33,2,32,0],[33,11,32,9,"createAnimationsFromTimeline"],[33,39,32,37,"createAnimationsFromTimeline"],[33,40,32,38,"definition"],[33,50,32,48],[33,52,32,59],[34,4,32,59],[34,8,32,50,"_a"],[34,10,32,52],[34,13,32,52,"arguments"],[34,22,32,52],[34,23,32,52,"length"],[34,29,32,52],[34,37,32,52,"arguments"],[34,46,32,52],[34,54,32,52,"undefined"],[34,63,32,52],[34,66,32,52,"arguments"],[34,75,32,52],[34,81,32,55],[34,82,32,56],[34,83,32,57],[35,4,33,4],[35,8,33,4,"_a$defaultOptions"],[35,25,33,4],[35,28,33,34,"_a"],[35,30,33,36],[35,31,33,10,"defaultOptions"],[35,45,33,24],[36,6,33,10,"defaultOptions"],[36,20,33,24],[36,23,33,24,"_a$defaultOptions"],[36,40,33,24],[36,54,33,27],[36,55,33,28],[36,56,33,29],[36,59,33,29,"_a$defaultOptions"],[36,76,33,29],[37,6,33,38,"timelineOptions"],[37,21,33,53],[37,24,33,56,"tslib"],[37,29,33,61],[37,30,33,62,"__rest"],[37,36,33,68],[37,37,33,69,"_a"],[37,39,33,71],[37,41,33,73],[37,42,33,74],[37,58,33,90],[37,59,33,91],[37,60,33,92],[38,4,34,4],[38,8,34,10,"animationDefinitions"],[38,28,34,30],[38,31,34,33],[38,33,34,35],[39,4,35,4],[39,8,35,10,"elementSequences"],[39,24,35,26],[39,27,35,29],[39,31,35,33,"Map"],[39,34,35,36],[39,35,35,37],[39,36,35,38],[40,4,36,4],[40,8,36,10,"elementCache"],[40,20,36,22],[40,23,36,25],[40,24,36,26],[40,25,36,27],[41,4,37,4],[41,8,37,10,"timeLabels"],[41,18,37,20],[41,21,37,23],[41,25,37,27,"Map"],[41,28,37,30],[41,29,37,31],[41,30,37,32],[42,4,38,4],[42,8,38,8,"prevTime"],[42,16,38,16],[42,19,38,19],[42,20,38,20],[43,4,39,4],[43,8,39,8,"currentTime"],[43,19,39,19],[43,22,39,22],[43,23,39,23],[44,4,40,4],[44,8,40,8,"totalDuration"],[44,21,40,21],[44,24,40,24],[44,25,40,25],[45,4,41,4],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,4,46,4],[50,9,46,9],[50,13,46,13,"i"],[50,14,46,14],[50,17,46,17],[50,18,46,18],[50,20,46,20,"i"],[50,21,46,21],[50,24,46,24,"definition"],[50,34,46,34],[50,35,46,35,"length"],[50,41,46,41],[50,43,46,43,"i"],[50,44,46,44],[50,46,46,46],[50,48,46,48],[51,6,47,8],[51,10,47,14,"segment"],[51,17,47,21],[51,20,47,24,"definition"],[51,30,47,34],[51,31,47,35,"i"],[51,32,47,36],[51,33,47,37],[52,6,48,8],[53,0,49,0],[54,0,50,0],[55,6,51,8],[55,10,51,12,"utils"],[55,15,51,17],[55,16,51,18,"isString"],[55,24,51,26],[55,25,51,27,"segment"],[55,32,51,34],[55,33,51,35],[55,35,51,37],[56,8,52,12,"timeLabels"],[56,18,52,22],[56,19,52,23,"set"],[56,22,52,26],[56,23,52,27,"segment"],[56,30,52,34],[56,32,52,36,"currentTime"],[56,43,52,47],[56,44,52,48],[57,8,53,12],[58,6,54,8],[58,7,54,9],[58,13,55,13],[58,17,55,17],[58,18,55,18,"Array"],[58,23,55,23],[58,24,55,24,"isArray"],[58,31,55,31],[58,32,55,32,"segment"],[58,39,55,39],[58,40,55,40],[58,42,55,42],[59,8,56,12,"timeLabels"],[59,18,56,22],[59,19,56,23,"set"],[59,22,56,26],[59,23,56,27,"segment"],[59,30,56,34],[59,31,56,35,"name"],[59,35,56,39],[59,37,56,41,"calcTime"],[59,45,56,49],[59,46,56,50,"calcNextTime"],[59,58,56,62],[59,59,56,63,"currentTime"],[59,70,56,74],[59,72,56,76,"segment"],[59,79,56,83],[59,80,56,84,"at"],[59,82,56,86],[59,84,56,88,"prevTime"],[59,92,56,96],[59,94,56,98,"timeLabels"],[59,104,56,108],[59,105,56,109],[59,106,56,110],[60,8,57,12],[61,6,58,8],[62,6,59,8],[62,10,59,8,"_segment"],[62,18,59,8],[62,21,59,8,"_slicedToArray"],[62,35,59,8],[62,36,59,65,"segment"],[62,43,59,72],[63,8,59,15,"elementDefinition"],[63,25,59,32],[63,28,59,32,"_segment"],[63,36,59,32],[64,8,59,34,"keyframes$1"],[64,19,59,45],[64,22,59,45,"_segment"],[64,30,59,45],[65,8,59,45,"_segment$"],[65,17,59,45],[65,20,59,45,"_segment"],[65,28,59,45],[66,8,59,47,"options$1"],[66,17,59,56],[66,20,59,56,"_segment$"],[66,29,59,56],[66,43,59,59],[66,44,59,60],[66,45,59,61],[66,48,59,61,"_segment$"],[66,57,59,61],[67,6,60,8],[68,0,61,0],[69,0,62,0],[70,0,63,0],[71,6,64,8],[71,10,64,12,"options$1"],[71,19,64,21],[71,20,64,22,"at"],[71,22,64,24],[71,27,64,29,"undefined"],[71,36,64,38],[71,38,64,40],[72,8,65,12,"currentTime"],[72,19,65,23],[72,22,65,26,"calcTime"],[72,30,65,34],[72,31,65,35,"calcNextTime"],[72,43,65,47],[72,44,65,48,"currentTime"],[72,55,65,59],[72,57,65,61,"options$1"],[72,66,65,70],[72,67,65,71,"at"],[72,69,65,73],[72,71,65,75,"prevTime"],[72,79,65,83],[72,81,65,85,"timeLabels"],[72,91,65,95],[72,92,65,96],[73,6,66,8],[74,6,67,8],[75,0,68,0],[76,0,69,0],[77,0,70,0],[78,6,71,8],[78,10,71,12,"maxDuration"],[78,21,71,23],[78,24,71,26],[78,25,71,27],[79,6,72,8],[80,0,73,0],[81,0,74,0],[82,0,75,0],[83,6,76,8],[83,10,76,14,"elements"],[83,18,76,22],[83,21,76,25,"resolveElements"],[83,36,76,40],[83,37,76,41,"resolveElements"],[83,52,76,56],[83,53,76,57,"elementDefinition"],[83,70,76,74],[83,72,76,76,"elementCache"],[83,84,76,88],[83,85,76,89],[84,6,77,8],[84,10,77,14,"numElements"],[84,21,77,25],[84,24,77,28,"elements"],[84,32,77,36],[84,33,77,37,"length"],[84,39,77,43],[85,6,78,8],[85,11,78,13],[85,15,78,17,"elementIndex"],[85,27,78,29],[85,30,78,32],[85,31,78,33],[85,33,78,35,"elementIndex"],[85,45,78,47],[85,48,78,50,"numElements"],[85,59,78,61],[85,61,78,63,"elementIndex"],[85,73,78,75],[85,75,78,77],[85,77,78,79],[86,8,79,12],[86,12,79,18,"element"],[86,19,79,25],[86,22,79,28,"elements"],[86,30,79,36],[86,31,79,37,"elementIndex"],[86,43,79,49],[86,44,79,50],[87,8,80,12],[87,12,80,18,"elementSequence"],[87,27,80,33],[87,30,80,36,"getElementSequence"],[87,48,80,54],[87,49,80,55,"element"],[87,56,80,62],[87,58,80,64,"elementSequences"],[87,74,80,80],[87,75,80,81],[88,8,81,12],[88,13,81,17],[88,17,81,23,"key"],[88,20,81,26],[88,24,81,30,"keyframes$1"],[88,35,81,41],[88,37,81,43],[89,10,82,16],[89,14,82,22,"valueSequence"],[89,27,82,35],[89,30,82,38,"getValueSequence"],[89,46,82,54],[89,47,82,55,"key"],[89,50,82,58],[89,52,82,60,"elementSequence"],[89,67,82,75],[89,68,82,76],[90,10,83,16],[90,14,83,20,"valueKeyframes"],[90,28,83,34],[90,31,83,37,"keyframes"],[90,40,83,46],[90,41,83,47,"keyframesList"],[90,54,83,60],[90,55,83,61,"keyframes$1"],[90,66,83,72],[90,67,83,73,"key"],[90,70,83,76],[90,71,83,77],[90,72,83,78],[91,10,84,16],[91,14,84,22,"valueOptions"],[91,26,84,34],[91,29,84,37,"options"],[91,36,84,44],[91,37,84,45,"getOptions"],[91,47,84,55],[91,48,84,56,"options$1"],[91,57,84,65],[91,59,84,67,"key"],[91,62,84,70],[91,63,84,71],[92,10,85,16],[92,14,85,16,"_valueOptions$duratio"],[92,35,85,16],[92,38,85,146,"valueOptions"],[92,50,85,158],[92,51,85,22,"duration"],[92,59,85,30],[93,12,85,22,"duration"],[93,20,85,30],[93,23,85,30,"_valueOptions$duratio"],[93,44,85,30],[93,58,85,33,"defaultOptions"],[93,72,85,47],[93,73,85,48,"duration"],[93,81,85,56],[93,85,85,60,"utils"],[93,90,85,65],[93,91,85,66,"defaults"],[93,99,85,74],[93,100,85,75,"duration"],[93,108,85,83],[93,111,85,83,"_valueOptions$duratio"],[93,132,85,83],[94,12,85,83,"_valueOptions$easing"],[94,32,85,83],[94,35,85,146,"valueOptions"],[94,47,85,158],[94,48,85,85,"easing"],[94,54,85,91],[95,12,85,85,"easing"],[95,18,85,91],[95,21,85,91,"_valueOptions$easing"],[95,41,85,91],[95,55,85,94,"defaultOptions"],[95,69,85,108],[95,70,85,109,"easing"],[95,76,85,115],[95,80,85,119,"utils"],[95,85,85,124],[95,86,85,125,"defaults"],[95,94,85,133],[95,95,85,134,"easing"],[95,101,85,140],[95,104,85,140,"_valueOptions$easing"],[95,124,85,140],[96,10,86,16],[96,14,86,20,"utils"],[96,19,86,25],[96,20,86,26,"isEasingGenerator"],[96,37,86,43],[96,38,86,44,"easing"],[96,44,86,50],[96,45,86,51],[96,47,86,53],[97,12,87,20],[97,16,87,26,"valueIsTransform"],[97,32,87,42],[97,35,87,45,"transforms"],[97,45,87,55],[97,46,87,56,"isTransform"],[97,57,87,67],[97,58,87,68,"key"],[97,61,87,71],[97,62,87,72],[98,12,88,20,"heyListen"],[98,21,88,29],[98,22,88,30,"invariant"],[98,31,88,39],[98,32,88,40,"valueKeyframes"],[98,46,88,54],[98,47,88,55,"length"],[98,53,88,61],[98,58,88,66],[98,59,88,67],[98,63,88,71],[98,64,88,72,"valueIsTransform"],[98,80,88,88],[98,82,88,90],[98,135,88,143],[98,136,88,144],[99,12,89,20],[99,16,89,26,"custom"],[99,22,89,32],[99,25,89,35,"easing"],[99,31,89,41],[99,32,89,42,"createAnimation"],[99,47,89,57],[99,48,89,58,"valueKeyframes"],[99,62,89,72],[100,12,90,20],[101,12,91,20],[102,12,92,20],[102,18,92,26],[102,21,92,29],[102,23,92,31,"valueIsTransform"],[102,39,92,47],[102,40,92,48],[103,12,93,20,"easing"],[103,18,93,26],[103,21,93,29,"custom"],[103,27,93,35],[103,28,93,36,"easing"],[103,34,93,42],[104,12,94,20],[104,16,94,24,"custom"],[104,22,94,30],[104,23,94,31,"keyframes"],[104,32,94,40],[104,37,94,45,"undefined"],[104,46,94,54],[104,48,95,24,"valueKeyframes"],[104,62,95,38],[104,65,95,41,"custom"],[104,71,95,47],[104,72,95,48,"keyframes"],[104,81,95,57],[105,12,96,20],[105,16,96,24,"custom"],[105,22,96,30],[105,23,96,31,"duration"],[105,31,96,39],[105,36,96,44,"undefined"],[105,45,96,53],[105,47,97,24,"duration"],[105,55,97,32],[105,58,97,35,"custom"],[105,64,97,41],[105,65,97,42,"duration"],[105,73,97,50],[106,10,98,16],[107,10,99,16],[107,14,99,22,"delay"],[107,19,99,27],[107,22,99,30,"stagger"],[107,29,99,37],[107,30,99,38,"resolveOption"],[107,43,99,51],[107,44,99,52,"options$1"],[107,53,99,61],[107,54,99,62,"delay"],[107,59,99,67],[107,61,99,69,"elementIndex"],[107,73,99,81],[107,75,99,83,"numElements"],[107,86,99,94],[107,87,99,95],[107,91,99,99],[107,92,99,100],[108,10,100,16],[108,14,100,22,"startTime"],[108,23,100,31],[108,26,100,34,"currentTime"],[108,37,100,45],[108,40,100,48,"delay"],[108,45,100,53],[109,10,101,16],[109,14,101,22,"targetTime"],[109,24,101,32],[109,27,101,35,"startTime"],[109,36,101,44],[109,39,101,47,"duration"],[109,47,101,55],[110,10,102,16],[111,0,103,0],[112,0,104,0],[113,10,105,16],[113,14,105,16,"_valueOptions$offset"],[113,34,105,16],[113,37,105,78,"valueOptions"],[113,49,105,90],[113,50,105,22,"offset"],[113,56,105,28],[114,12,105,22,"offset"],[114,18,105,28],[114,21,105,28,"_valueOptions$offset"],[114,41,105,28],[114,55,105,31,"utils"],[114,60,105,36],[114,61,105,37,"defaultOffset"],[114,74,105,50],[114,75,105,51,"valueKeyframes"],[114,89,105,65],[114,90,105,66,"length"],[114,96,105,72],[114,97,105,73],[114,100,105,73,"_valueOptions$offset"],[114,120,105,73],[115,10,106,16],[116,0,107,0],[117,0,108,0],[118,0,109,0],[119,0,110,0],[120,10,111,16],[120,14,111,20,"offset"],[120,20,111,26],[120,21,111,27,"length"],[120,27,111,33],[120,32,111,38],[120,33,111,39],[120,37,111,43,"offset"],[120,43,111,49],[120,44,111,50],[120,45,111,51],[120,46,111,52],[120,51,111,57],[120,52,111,58],[120,54,111,60],[121,12,112,20,"offset"],[121,18,112,26],[121,19,112,27],[121,20,112,28],[121,21,112,29],[121,24,112,32],[121,25,112,33],[122,10,113,16],[123,10,114,16],[124,0,115,0],[125,0,116,0],[126,10,117,16],[126,14,117,22,"remainder"],[126,23,117,31],[126,26,117,34,"length"],[126,32,117,40],[126,35,117,43,"valueKeyframes"],[126,49,117,57],[126,50,117,58,"length"],[126,56,117,64],[127,10,118,16,"remainder"],[127,19,118,25],[127,22,118,28],[127,23,118,29],[127,27,118,33,"utils"],[127,32,118,38],[127,33,118,39,"fillOffset"],[127,43,118,49],[127,44,118,50,"offset"],[127,50,118,56],[127,52,118,58,"remainder"],[127,61,118,67],[127,62,118,68],[128,10,119,16],[129,0,120,0],[130,0,121,0],[131,0,122,0],[132,0,123,0],[133,10,124,16,"valueKeyframes"],[133,24,124,30],[133,25,124,31,"length"],[133,31,124,37],[133,36,124,42],[133,37,124,43],[133,41,124,47,"valueKeyframes"],[133,55,124,61],[133,56,124,62,"unshift"],[133,63,124,69],[133,64,124,70],[133,68,124,74],[133,69,124,75],[134,10,125,16],[135,0,126,0],[136,0,127,0],[137,10,128,16,"edit"],[137,14,128,20],[137,15,128,21,"addKeyframes"],[137,27,128,33],[137,28,128,34,"valueSequence"],[137,41,128,47],[137,43,128,49,"valueKeyframes"],[137,57,128,63],[137,59,128,65,"easing"],[137,65,128,71],[137,67,128,73,"offset"],[137,73,128,79],[137,75,128,81,"startTime"],[137,84,128,90],[137,86,128,92,"targetTime"],[137,96,128,102],[137,97,128,103],[138,10,129,16,"maxDuration"],[138,21,129,27],[138,24,129,30,"Math"],[138,28,129,34],[138,29,129,35,"max"],[138,32,129,38],[138,33,129,39,"delay"],[138,38,129,44],[138,41,129,47,"duration"],[138,49,129,55],[138,51,129,57,"maxDuration"],[138,62,129,68],[138,63,129,69],[139,10,130,16,"totalDuration"],[139,23,130,29],[139,26,130,32,"Math"],[139,30,130,36],[139,31,130,37,"max"],[139,34,130,40],[139,35,130,41,"targetTime"],[139,45,130,51],[139,47,130,53,"totalDuration"],[139,60,130,66],[139,61,130,67],[140,8,131,12],[141,6,132,8],[142,6,133,8,"prevTime"],[142,14,133,16],[142,17,133,19,"currentTime"],[142,28,133,30],[143,6,134,8,"currentTime"],[143,17,134,19],[143,21,134,23,"maxDuration"],[143,32,134,34],[144,4,135,4],[145,4,136,4],[146,0,137,0],[147,0,138,0],[148,4,139,4,"elementSequences"],[148,20,139,20],[148,21,139,21,"forEach"],[148,28,139,28],[148,29,139,29],[148,30,139,30,"valueSequences"],[148,44,139,44],[148,46,139,46,"element"],[148,53,139,53],[148,58,139,58],[149,6,140,8],[149,11,140,13],[149,15,140,19,"key"],[149,19,140,22],[149,23,140,26,"valueSequences"],[149,37,140,40],[149,39,140,42],[150,8,141,12],[150,12,141,18,"valueSequence"],[150,26,141,31],[150,29,141,34,"valueSequences"],[150,43,141,48],[150,44,141,49,"key"],[150,48,141,52],[150,49,141,53],[151,8,142,12],[152,0,143,0],[153,0,144,0],[154,8,145,12,"valueSequence"],[154,22,145,25],[154,23,145,26,"sort"],[154,27,145,30],[154,28,145,31,"sort"],[154,32,145,35],[154,33,145,36,"compareByTime"],[154,46,145,49],[154,47,145,50],[155,8,146,12],[155,12,146,18,"keyframes"],[155,22,146,27],[155,25,146,30],[155,27,146,32],[156,8,147,12],[156,12,147,18,"valueOffset"],[156,23,147,29],[156,26,147,32],[156,28,147,34],[157,8,148,12],[157,12,148,18,"valueEasing"],[157,23,148,29],[157,26,148,32],[157,28,148,34],[158,8,149,12],[159,0,150,0],[160,0,151,0],[161,0,152,0],[162,8,153,12],[162,13,153,17],[162,17,153,21,"i"],[162,19,153,22],[162,22,153,25],[162,23,153,26],[162,25,153,28,"i"],[162,27,153,29],[162,30,153,32,"valueSequence"],[162,44,153,45],[162,45,153,46,"length"],[162,51,153,52],[162,53,153,54,"i"],[162,55,153,55],[162,57,153,57],[162,59,153,59],[163,10,154,16],[163,14,154,16,"_valueSequence$_i"],[163,31,154,16],[163,34,154,46,"valueSequence"],[163,48,154,59],[163,49,154,60,"i"],[163,51,154,61],[163,52,154,62],[164,12,154,24,"at"],[164,14,154,26],[164,17,154,26,"_valueSequence$_i"],[164,34,154,26],[164,35,154,24,"at"],[164,37,154,26],[165,12,154,28,"value"],[165,17,154,33],[165,20,154,33,"_valueSequence$_i"],[165,37,154,33],[165,38,154,28,"value"],[165,43,154,33],[166,12,154,35,"easing"],[166,19,154,41],[166,22,154,41,"_valueSequence$_i"],[166,39,154,41],[166,40,154,35,"easing"],[166,46,154,41],[167,10,155,16,"keyframes"],[167,20,155,25],[167,21,155,26,"push"],[167,25,155,30],[167,26,155,31,"value"],[167,31,155,36],[167,32,155,37],[168,10,156,16,"valueOffset"],[168,21,156,27],[168,22,156,28,"push"],[168,26,156,32],[168,27,156,33,"utils"],[168,32,156,38],[168,33,156,39,"progress"],[168,41,156,47],[168,42,156,48],[168,43,156,49],[168,45,156,51,"totalDuration"],[168,58,156,64],[168,60,156,66,"at"],[168,62,156,68],[168,63,156,69],[168,64,156,70],[169,10,157,16,"valueEasing"],[169,21,157,27],[169,22,157,28,"push"],[169,26,157,32],[169,27,157,33,"easing"],[169,34,157,39],[169,38,157,43,"utils"],[169,43,157,48],[169,44,157,49,"defaults"],[169,52,157,57],[169,53,157,58,"easing"],[169,59,157,64],[169,60,157,65],[170,8,158,12],[171,8,159,12],[172,0,160,0],[173,0,161,0],[174,0,162,0],[175,0,163,0],[176,8,164,12],[176,12,164,16,"valueOffset"],[176,23,164,27],[176,24,164,28],[176,25,164,29],[176,26,164,30],[176,31,164,35],[176,32,164,36],[176,34,164,38],[177,10,165,16,"valueOffset"],[177,21,165,27],[177,22,165,28,"unshift"],[177,29,165,35],[177,30,165,36],[177,31,165,37],[177,32,165,38],[178,10,166,16,"keyframes"],[178,20,166,25],[178,21,166,26,"unshift"],[178,28,166,33],[178,29,166,34,"keyframes"],[178,39,166,43],[178,40,166,44],[178,41,166,45],[178,42,166,46],[178,43,166,47],[179,10,167,16,"valueEasing"],[179,21,167,27],[179,22,167,28,"unshift"],[179,29,167,35],[179,30,167,36],[179,38,167,44],[179,39,167,45],[180,8,168,12],[181,8,169,12],[182,0,170,0],[183,0,171,0],[184,0,172,0],[185,0,173,0],[186,8,174,12],[186,12,174,16,"valueOffset"],[186,23,174,27],[186,24,174,28,"valueOffset"],[186,35,174,39],[186,36,174,40,"length"],[186,42,174,46],[186,45,174,49],[186,46,174,50],[186,47,174,51],[186,52,174,56],[186,53,174,57],[186,55,174,59],[187,10,175,16,"valueOffset"],[187,21,175,27],[187,22,175,28,"push"],[187,26,175,32],[187,27,175,33],[187,28,175,34],[187,29,175,35],[188,10,176,16,"keyframes"],[188,20,176,25],[188,21,176,26,"push"],[188,25,176,30],[188,26,176,31],[188,30,176,35],[188,31,176,36],[189,8,177,12],[190,8,178,12,"animationDefinitions"],[190,28,178,32],[190,29,178,33,"push"],[190,33,178,37],[190,34,178,38],[190,35,179,16,"element"],[190,42,179,23],[190,44,180,16,"key"],[190,48,180,19],[190,50,181,16,"keyframes"],[190,60,181,25],[190,62,182,16,"Object"],[190,68,182,22],[190,69,182,23,"assign"],[190,75,182,29],[190,76,182,30,"Object"],[190,82,182,36],[190,83,182,37,"assign"],[190,89,182,43],[190,90,182,44,"Object"],[190,96,182,50],[190,97,182,51,"assign"],[190,103,182,57],[190,104,182,58],[190,105,182,59],[190,106,182,60],[190,108,182,62,"defaultOptions"],[190,122,182,76],[190,123,182,77],[190,125,182,79],[191,10,182,81,"duration"],[191,18,182,89],[191,20,182,91,"totalDuration"],[191,33,182,104],[192,10,182,106,"easing"],[192,16,182,112],[192,18,182,114,"valueEasing"],[192,29,182,125],[193,10,182,127,"offset"],[193,16,182,133],[193,18,182,135,"valueOffset"],[194,8,182,147],[194,9,182,148],[194,10,182,149],[194,12,182,151,"timelineOptions"],[194,27,182,166],[194,28,182,167],[194,29,183,13],[194,30,183,14],[195,6,184,8],[196,4,185,4],[196,5,185,5],[196,6,185,6],[197,4,186,4],[197,11,186,11,"animationDefinitions"],[197,31,186,31],[198,2,187,0],[199,2,188,0],[199,11,188,9,"getElementSequence"],[199,29,188,27,"getElementSequence"],[199,30,188,28,"element"],[199,37,188,35],[199,39,188,37,"sequences"],[199,48,188,46],[199,50,188,48],[200,4,189,4],[200,5,189,5,"sequences"],[200,14,189,14],[200,15,189,15,"has"],[200,18,189,18],[200,19,189,19,"element"],[200,26,189,26],[200,27,189,27],[200,31,189,31,"sequences"],[200,40,189,40],[200,41,189,41,"set"],[200,44,189,44],[200,45,189,45,"element"],[200,52,189,52],[200,54,189,54],[200,55,189,55],[200,56,189,56],[200,57,189,57],[201,4,190,4],[201,11,190,11,"sequences"],[201,20,190,20],[201,21,190,21,"get"],[201,24,190,24],[201,25,190,25,"element"],[201,32,190,32],[201,33,190,33],[202,2,191,0],[203,2,192,0],[203,11,192,9,"getValueSequence"],[203,27,192,25,"getValueSequence"],[203,28,192,26,"name"],[203,32,192,30],[203,34,192,32,"sequences"],[203,43,192,41],[203,45,192,43],[204,4,193,4],[204,8,193,8],[204,9,193,9,"sequences"],[204,18,193,18],[204,19,193,19,"name"],[204,23,193,23],[204,24,193,24],[204,26,194,8,"sequences"],[204,35,194,17],[204,36,194,18,"name"],[204,40,194,22],[204,41,194,23],[204,44,194,26],[204,46,194,28],[205,4,195,4],[205,11,195,11,"sequences"],[205,20,195,20],[205,21,195,21,"name"],[205,25,195,25],[205,26,195,26],[206,2,196,0],[207,2,198,0,"exports"],[207,9,198,7],[207,10,198,8,"createAnimationsFromTimeline"],[207,38,198,36],[207,41,198,39,"createAnimationsFromTimeline"],[207,69,198,67],[208,2,199,0,"exports"],[208,9,199,7],[208,10,199,8,"timeline"],[208,18,199,16],[208,21,199,19,"timeline"],[208,29,199,27],[209,0,199,28],[209,3]],"functionMap":{"names":["<global>","timeline","animationDefinitions.map$argument_0","createAnimationsFromTimeline","easing.createAnimation$argument_1","elementSequences.forEach$argument_0","getElementSequence","getValueSequence"],"mappings":"AAA;ACkB;aCO,wDD;CDK;AGC;oBC4D,SD;6BE+C;KF8C;CHE;AMC;CNG;AOC;CPI"},"hasCjsExports":true},"type":"js/module"}]}