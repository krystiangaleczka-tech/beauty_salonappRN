{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"globalProjectionState\", {\n    enumerable: true,\n    get: function () {\n      return globalProjectionState;\n    }\n  });\n  /**\n   * This should only ever be modified on the client otherwise it'll\n   * persist through server requests. If we need instanced states we\n   * could lazy-init via root.\n   */\n  var globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false\n  };\n});","lineCount":30,"map":[[7,2,19,0,"Object"],[7,8,19,0],[7,9,19,0,"defineProperty"],[7,23,19,0],[7,24,19,0,"exports"],[7,31,19,0],[8,4,19,0,"enumerable"],[8,14,19,0],[9,4,19,0,"get"],[9,7,19,0],[9,18,19,0,"get"],[9,19,19,0],[10,6,19,0],[10,13,19,9,"globalProjectionState"],[10,34,19,30],[11,4,19,30],[12,2,19,30],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,2,6,0],[18,6,6,4,"globalProjectionState"],[18,27,6,25],[18,30,6,28],[19,4,7,4],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,4,11,4,"hasAnimatedSinceResize"],[23,26,11,26],[23,28,11,28],[23,32,11,32],[24,4,12,4],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,4,16,4,"hasEverUpdated"],[28,18,16,18],[28,20,16,20],[29,2,17,0],[29,3,17,1],[30,0,17,2],[30,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"},"hasCjsExports":false},"type":"js/module"}]}