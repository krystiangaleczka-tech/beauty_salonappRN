{"dependencies":[{"name":"./toNumber","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":36,"index":36}}],"key":"EvQZTqwF0jKyRf5lFIffPO3zFIY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var toNumber = require(_dependencyMap[0], \"./toNumber\");\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n  /**\n   * Converts `value` to a finite number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.12.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted number.\n   * @example\n   *\n   * _.toFinite(3.2);\n   * // => 3.2\n   *\n   * _.toFinite(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toFinite(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toFinite('3.2');\n   * // => 3.2\n   */\n  function toFinite(value) {\n    if (!value) {\n      return value === 0 ? value : 0;\n    }\n    value = toNumber(value);\n    if (value === INFINITY || value === -INFINITY) {\n      var sign = value < 0 ? -1 : 1;\n      return sign * MAX_INTEGER;\n    }\n    return value === value ? value : 0;\n  }\n  module.exports = toFinite;\n});","lineCount":43,"map":[[2,2,1,0],[2,6,1,4,"toNumber"],[2,14,1,12],[2,17,1,15,"require"],[2,24,1,22],[2,25,1,22,"_dependencyMap"],[2,39,1,22],[2,56,1,35],[2,57,1,36],[4,2,3,0],[5,2,4,0],[5,6,4,4,"INFINITY"],[5,14,4,12],[5,17,4,15],[5,18,4,16],[5,21,4,19],[5,22,4,20],[6,4,5,4,"MAX_INTEGER"],[6,15,5,15],[6,18,5,18],[6,41,5,41],[8,2,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,2,30,0],[31,11,30,9,"toFinite"],[31,19,30,17,"toFinite"],[31,20,30,18,"value"],[31,25,30,23],[31,27,30,25],[32,4,31,2],[32,8,31,6],[32,9,31,7,"value"],[32,14,31,12],[32,16,31,14],[33,6,32,4],[33,13,32,11,"value"],[33,18,32,16],[33,23,32,21],[33,24,32,22],[33,27,32,25,"value"],[33,32,32,30],[33,35,32,33],[33,36,32,34],[34,4,33,2],[35,4,34,2,"value"],[35,9,34,7],[35,12,34,10,"toNumber"],[35,20,34,18],[35,21,34,19,"value"],[35,26,34,24],[35,27,34,25],[36,4,35,2],[36,8,35,6,"value"],[36,13,35,11],[36,18,35,16,"INFINITY"],[36,26,35,24],[36,30,35,28,"value"],[36,35,35,33],[36,40,35,38],[36,41,35,39,"INFINITY"],[36,49,35,47],[36,51,35,49],[37,6,36,4],[37,10,36,8,"sign"],[37,14,36,12],[37,17,36,16,"value"],[37,22,36,21],[37,25,36,24],[37,26,36,25],[37,29,36,28],[37,30,36,29],[37,31,36,30],[37,34,36,33],[37,35,36,35],[38,6,37,4],[38,13,37,11,"sign"],[38,17,37,15],[38,20,37,18,"MAX_INTEGER"],[38,31,37,29],[39,4,38,2],[40,4,39,2],[40,11,39,9,"value"],[40,16,39,14],[40,21,39,19,"value"],[40,26,39,24],[40,29,39,27,"value"],[40,34,39,32],[40,37,39,35],[40,38,39,36],[41,2,40,0],[42,2,42,0,"module"],[42,8,42,6],[42,9,42,7,"exports"],[42,16,42,14],[42,19,42,17,"toFinite"],[42,27,42,25],[43,0,42,26],[43,3]],"functionMap":{"names":["<global>","toFinite"],"mappings":"AAA;AC6B;CDU"},"hasCjsExports":true},"type":"js/module"}]}