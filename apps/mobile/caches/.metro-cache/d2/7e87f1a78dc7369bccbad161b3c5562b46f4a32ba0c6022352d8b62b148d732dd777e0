{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":38},"end":{"line":4,"column":31,"index":69}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@tanstack/query-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":70},"end":{"line":5,"column":63,"index":133}}],"key":"GAsr4MDTe9ve1mRxgvML4iY2BZg=","exportNames":["*"],"imports":1}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":134},"end":{"line":6,"column":58,"index":192}}],"key":"R2Cn87b3k6V9pZdY+hWd8Ft8C58=","exportNames":["*"],"imports":1}},{"name":"./QueryErrorResetBoundary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":193},"end":{"line":7,"column":74,"index":267}}],"key":"v0npNLmYOKsdEK0iJ4RVpe647XQ=","exportNames":["*"],"imports":1}},{"name":"./errorBoundaryUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":268},"end":{"line":12,"column":33,"index":389}}],"key":"vPVIYzX/U31yYyVDl4UaADFDRRQ=","exportNames":["*"],"imports":1}},{"name":"./isRestoring.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":390},"end":{"line":13,"column":50,"index":440}}],"key":"nzIXkOUyN0bSF6sF4cxweLDBVwc=","exportNames":["*"],"imports":1}},{"name":"./suspense.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":441},"end":{"line":19,"column":23,"index":545}}],"key":"0Q+BFfol1+EurGmLVTwxCgLGwZ8=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":546},"end":{"line":20,"column":34,"index":580}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/useBaseQuery.ts\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"useBaseQuery\", {\n    enumerable: true,\n    get: function () {\n      return useBaseQuery;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _tanstackQueryCore = require(_dependencyMap[1], \"@tanstack/query-core\");\n  var _QueryClientProviderJs = require(_dependencyMap[2], \"./QueryClientProvider.js\");\n  var _QueryErrorResetBoundaryJs = require(_dependencyMap[3], \"./QueryErrorResetBoundary.js\");\n  var _errorBoundaryUtilsJs = require(_dependencyMap[4], \"./errorBoundaryUtils.js\");\n  var _isRestoringJs = require(_dependencyMap[5], \"./isRestoring.js\");\n  var _suspenseJs = require(_dependencyMap[6], \"./suspense.js\");\n  var _utilsJs = require(_dependencyMap[7], \"./utils.js\");\n  function useBaseQuery(options, Observer, queryClient) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof options !== \"object\" || Array.isArray(options)) {\n        throw new Error('Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object');\n      }\n    }\n    const client = (0, _QueryClientProviderJs.useQueryClient)(queryClient);\n    const isRestoring = (0, _isRestoringJs.useIsRestoring)();\n    const errorResetBoundary = (0, _QueryErrorResetBoundaryJs.useQueryErrorResetBoundary)();\n    const defaultedOptions = client.defaultQueryOptions(options);\n    client.getDefaultOptions().queries?._experimental_beforeQuery?.(defaultedOptions);\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!defaultedOptions.queryFn) {\n        console.error(`[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`);\n      }\n    }\n    defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n    (0, _suspenseJs.ensureSuspenseTimers)(defaultedOptions);\n    (0, _errorBoundaryUtilsJs.ensurePreventErrorBoundaryRetry)(defaultedOptions, errorResetBoundary);\n    (0, _errorBoundaryUtilsJs.useClearResetErrorBoundary)(errorResetBoundary);\n    const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n    const [observer] = React.useState(() => new Observer(client, defaultedOptions));\n    const result = observer.getOptimisticResult(defaultedOptions);\n    const shouldSubscribe = !isRestoring && options.subscribed !== false;\n    React.useSyncExternalStore(React.useCallback(onStoreChange => {\n      const unsubscribe = shouldSubscribe ? observer.subscribe(_tanstackQueryCore.notifyManager.batchCalls(onStoreChange)) : _utilsJs.noop;\n      observer.updateResult();\n      return unsubscribe;\n    }, [observer, shouldSubscribe]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n    React.useEffect(() => {\n      observer.setOptions(defaultedOptions);\n    }, [defaultedOptions, observer]);\n    if ((0, _suspenseJs.shouldSuspend)(defaultedOptions, result)) {\n      throw (0, _suspenseJs.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary);\n    }\n    if ((0, _errorBoundaryUtilsJs.getHasError)({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client.getQueryCache().get(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense\n    })) {\n      throw result.error;\n    }\n    ;\n    client.getDefaultOptions().queries?._experimental_afterQuery?.(defaultedOptions, result);\n    if (defaultedOptions.experimental_prefetchInRender && !_tanstackQueryCore.isServer && (0, _suspenseJs.willFetch)(result, isRestoring)) {\n      const promise = isNewCacheEntry ?\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      (0, _suspenseJs.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary) :\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise;\n      promise?.catch(_utilsJs.noop).finally(() => {\n        observer.updateResult();\n      });\n    }\n    return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n  }\n});","lineCount":98,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"value"],[8,9,3,0],[9,2,3,0],[10,2,3,0],[10,11,3,0,"_interopNamespace"],[10,29,3,0,"e"],[10,30,3,0],[11,4,3,0],[11,8,3,0,"e"],[11,9,3,0],[11,13,3,0,"e"],[11,14,3,0],[11,15,3,0,"__esModule"],[11,25,3,0],[11,34,3,0,"e"],[11,35,3,0],[12,4,3,0],[12,8,3,0,"n"],[12,9,3,0],[13,4,3,0],[13,8,3,0,"e"],[13,9,3,0],[13,11,3,0,"Object"],[13,17,3,0],[13,18,3,0,"keys"],[13,22,3,0],[13,23,3,0,"e"],[13,24,3,0],[13,26,3,0,"forEach"],[13,33,3,0],[13,44,3,0,"k"],[13,45,3,0],[14,6,3,0],[14,10,3,0,"d"],[14,11,3,0],[14,14,3,0,"Object"],[14,20,3,0],[14,21,3,0,"getOwnPropertyDescriptor"],[14,45,3,0],[14,46,3,0,"e"],[14,47,3,0],[14,49,3,0,"k"],[14,50,3,0],[15,6,3,0,"Object"],[15,12,3,0],[15,13,3,0,"defineProperty"],[15,27,3,0],[15,28,3,0,"n"],[15,29,3,0],[15,31,3,0,"k"],[15,32,3,0],[15,34,3,0,"d"],[15,35,3,0],[15,36,3,0,"get"],[15,39,3,0],[15,42,3,0,"d"],[15,43,3,0],[16,8,3,0,"enumerable"],[16,18,3,0],[17,8,3,0,"get"],[17,11,3,0],[17,22,3,0,"get"],[17,23,3,0],[18,10,3,0],[18,17,3,0,"e"],[18,18,3,0],[18,19,3,0,"k"],[18,20,3,0],[19,8,3,0],[20,6,3,0],[21,4,3,0],[22,4,3,0,"n"],[22,5,3,0],[22,6,3,0,"default"],[22,13,3,0],[22,16,3,0,"e"],[22,17,3,0],[23,4,3,0],[23,11,3,0,"n"],[23,12,3,0],[24,2,3,0],[25,2,102,0,"Object"],[25,8,102,0],[25,9,102,0,"defineProperty"],[25,23,102,0],[25,24,102,0,"exports"],[25,31,102,0],[26,4,102,0,"enumerable"],[26,14,102,0],[27,4,102,0,"get"],[27,7,102,0],[27,18,102,0,"get"],[27,19,102,0],[28,6,102,0],[28,13,103,2,"useBaseQuery"],[28,25,103,14],[29,4,103,14],[30,2,103,14],[31,2,4,0],[31,6,4,0,"_react"],[31,12,4,0],[31,15,4,0,"require"],[31,22,4,0],[31,23,4,0,"_dependencyMap"],[31,37,4,0],[32,2,4,0],[32,6,4,0,"React"],[32,11,4,0],[32,14,4,0,"_interopNamespace"],[32,31,4,0],[32,32,4,0,"_react"],[32,38,4,0],[33,2,5,0],[33,6,5,0,"_tanstackQueryCore"],[33,24,5,0],[33,27,5,0,"require"],[33,34,5,0],[33,35,5,0,"_dependencyMap"],[33,49,5,0],[34,2,6,0],[34,6,6,0,"_QueryClientProviderJs"],[34,28,6,0],[34,31,6,0,"require"],[34,38,6,0],[34,39,6,0,"_dependencyMap"],[34,53,6,0],[35,2,7,0],[35,6,7,0,"_QueryErrorResetBoundaryJs"],[35,32,7,0],[35,35,7,0,"require"],[35,42,7,0],[35,43,7,0,"_dependencyMap"],[35,57,7,0],[36,2,8,0],[36,6,8,0,"_errorBoundaryUtilsJs"],[36,27,8,0],[36,30,8,0,"require"],[36,37,8,0],[36,38,8,0,"_dependencyMap"],[36,52,8,0],[37,2,13,0],[37,6,13,0,"_isRestoringJs"],[37,20,13,0],[37,23,13,0,"require"],[37,30,13,0],[37,31,13,0,"_dependencyMap"],[37,45,13,0],[38,2,14,0],[38,6,14,0,"_suspenseJs"],[38,17,14,0],[38,20,14,0,"require"],[38,27,14,0],[38,28,14,0,"_dependencyMap"],[38,42,14,0],[39,2,20,0],[39,6,20,0,"_utilsJs"],[39,14,20,0],[39,17,20,0,"require"],[39,24,20,0],[39,25,20,0,"_dependencyMap"],[39,39,20,0],[40,2,21,0],[40,11,21,9,"useBaseQuery"],[40,23,21,21,"useBaseQuery"],[40,24,21,22,"options"],[40,31,21,29],[40,33,21,31,"Observer"],[40,41,21,39],[40,43,21,41,"queryClient"],[40,54,21,52],[40,56,21,54],[41,4,22,2],[41,8,22,6,"process"],[41,15,22,13],[41,16,22,14,"env"],[41,19,22,17],[41,20,22,18,"NODE_ENV"],[41,28,22,26],[41,33,22,31],[41,45,22,43],[41,47,22,45],[42,6,23,4],[42,10,23,8],[42,17,23,15,"options"],[42,24,23,22],[42,29,23,27],[42,37,23,35],[42,41,23,39,"Array"],[42,46,23,44],[42,47,23,45,"isArray"],[42,54,23,52],[42,55,23,53,"options"],[42,62,23,60],[42,63,23,61],[42,65,23,63],[43,8,24,6],[43,14,24,12],[43,18,24,16,"Error"],[43,23,24,21],[43,24,25,8],[43,310,26,6],[43,311,26,7],[44,6,27,4],[45,4,28,2],[46,4,29,2],[46,10,29,8,"client"],[46,16,29,14],[46,19,29,17],[46,23,29,17,"useQueryClient"],[46,45,29,31],[46,46,29,31,"useQueryClient"],[46,60,29,31],[46,62,29,32,"queryClient"],[46,73,29,43],[46,74,29,44],[47,4,30,2],[47,10,30,8,"isRestoring"],[47,21,30,19],[47,24,30,22],[47,28,30,22,"useIsRestoring"],[47,42,30,36],[47,43,30,36,"useIsRestoring"],[47,57,30,36],[47,59,30,37],[47,60,30,38],[48,4,31,2],[48,10,31,8,"errorResetBoundary"],[48,28,31,26],[48,31,31,29],[48,35,31,29,"useQueryErrorResetBoundary"],[48,61,31,55],[48,62,31,55,"useQueryErrorResetBoundary"],[48,88,31,55],[48,90,31,56],[48,91,31,57],[49,4,32,2],[49,10,32,8,"defaultedOptions"],[49,26,32,24],[49,29,32,27,"client"],[49,35,32,33],[49,36,32,34,"defaultQueryOptions"],[49,55,32,53],[49,56,32,54,"options"],[49,63,32,61],[49,64,32,62],[50,4,33,2,"client"],[50,10,33,8],[50,11,33,9,"getDefaultOptions"],[50,28,33,26],[50,29,33,27],[50,30,33,28],[50,31,33,29,"queries"],[50,38,33,36],[50,40,33,38,"_experimental_beforeQuery"],[50,65,33,63],[50,68,34,4,"defaultedOptions"],[50,84,35,2],[50,85,35,3],[51,4,36,2],[51,8,36,6,"process"],[51,15,36,13],[51,16,36,14,"env"],[51,19,36,17],[51,20,36,18,"NODE_ENV"],[51,28,36,26],[51,33,36,31],[51,45,36,43],[51,47,36,45],[52,6,37,4],[52,10,37,8],[52,11,37,9,"defaultedOptions"],[52,27,37,25],[52,28,37,26,"queryFn"],[52,35,37,33],[52,37,37,35],[53,8,38,6,"console"],[53,15,38,13],[53,16,38,14,"error"],[53,21,38,19],[53,22,39,8],[53,26,39,12,"defaultedOptions"],[53,42,39,28],[53,43,39,29,"queryHash"],[53,52,39,38],[53,296,40,6],[53,297,40,7],[54,6,41,4],[55,4,42,2],[56,4,43,2,"defaultedOptions"],[56,20,43,18],[56,21,43,19,"_optimisticResults"],[56,39,43,37],[56,42,43,40,"isRestoring"],[56,53,43,51],[56,56,43,54],[56,69,43,67],[56,72,43,70],[56,84,43,82],[57,4,44,2],[57,8,44,2,"ensureSuspenseTimers"],[57,19,44,22],[57,20,44,22,"ensureSuspenseTimers"],[57,40,44,22],[57,42,44,23,"defaultedOptions"],[57,58,44,39],[57,59,44,40],[58,4,45,2],[58,8,45,2,"ensurePreventErrorBoundaryRetry"],[58,29,45,33],[58,30,45,33,"ensurePreventErrorBoundaryRetry"],[58,61,45,33],[58,63,45,34,"defaultedOptions"],[58,79,45,50],[58,81,45,52,"errorResetBoundary"],[58,99,45,70],[58,100,45,71],[59,4,46,2],[59,8,46,2,"useClearResetErrorBoundary"],[59,29,46,28],[59,30,46,28,"useClearResetErrorBoundary"],[59,56,46,28],[59,58,46,29,"errorResetBoundary"],[59,76,46,47],[59,77,46,48],[60,4,47,2],[60,10,47,8,"isNewCacheEntry"],[60,25,47,23],[60,28,47,26],[60,29,47,27,"client"],[60,35,47,33],[60,36,47,34,"getQueryCache"],[60,49,47,47],[60,50,47,48],[60,51,47,49],[60,52,47,50,"get"],[60,55,47,53],[60,56,47,54,"defaultedOptions"],[60,72,47,70],[60,73,47,71,"queryHash"],[60,82,47,80],[60,83,47,81],[61,4,48,2],[61,10,48,8],[61,11,48,9,"observer"],[61,19,48,17],[61,20,48,18],[61,23,48,21,"React"],[61,28,48,26],[61,29,48,27,"useState"],[61,37,48,35],[61,38,49,4],[61,44,49,10],[61,48,49,14,"Observer"],[61,56,49,22],[61,57,50,6,"client"],[61,63,50,12],[61,65,51,6,"defaultedOptions"],[61,81,52,4],[61,82,53,2],[61,83,53,3],[62,4,54,2],[62,10,54,8,"result"],[62,16,54,14],[62,19,54,17,"observer"],[62,27,54,25],[62,28,54,26,"getOptimisticResult"],[62,47,54,45],[62,48,54,46,"defaultedOptions"],[62,64,54,62],[62,65,54,63],[63,4,55,2],[63,10,55,8,"shouldSubscribe"],[63,25,55,23],[63,28,55,26],[63,29,55,27,"isRestoring"],[63,40,55,38],[63,44,55,42,"options"],[63,51,55,49],[63,52,55,50,"subscribed"],[63,62,55,60],[63,67,55,65],[63,72,55,70],[64,4,56,2,"React"],[64,9,56,7],[64,10,56,8,"useSyncExternalStore"],[64,30,56,28],[64,31,57,4,"React"],[64,36,57,9],[64,37,57,10,"useCallback"],[64,48,57,21],[64,49,58,7,"onStoreChange"],[64,62,58,20],[64,66,58,25],[65,6,59,8],[65,12,59,14,"unsubscribe"],[65,23,59,25],[65,26,59,28,"shouldSubscribe"],[65,41,59,43],[65,44,59,46,"observer"],[65,52,59,54],[65,53,59,55,"subscribe"],[65,62,59,64],[65,63,59,65,"notifyManager"],[65,81,59,78],[65,82,59,78,"notifyManager"],[65,95,59,78],[65,96,59,79,"batchCalls"],[65,106,59,89],[65,107,59,90,"onStoreChange"],[65,120,59,103],[65,121,59,104],[65,122,59,105],[65,125,59,108,"noop"],[65,133,59,112],[65,134,59,112,"noop"],[65,138,59,112],[66,6,60,8,"observer"],[66,14,60,16],[66,15,60,17,"updateResult"],[66,27,60,29],[66,28,60,30],[66,29,60,31],[67,6,61,8],[67,13,61,15,"unsubscribe"],[67,24,61,26],[68,4,62,6],[68,5,62,7],[68,7,63,6],[68,8,63,7,"observer"],[68,16,63,15],[68,18,63,17,"shouldSubscribe"],[68,33,63,32],[68,34,64,4],[68,35,64,5],[68,37,65,4],[68,43,65,10,"observer"],[68,51,65,18],[68,52,65,19,"getCurrentResult"],[68,68,65,35],[68,69,65,36],[68,70,65,37],[68,72,66,4],[68,78,66,10,"observer"],[68,86,66,18],[68,87,66,19,"getCurrentResult"],[68,103,66,35],[68,104,66,36],[68,105,67,2],[68,106,67,3],[69,4,68,2,"React"],[69,9,68,7],[69,10,68,8,"useEffect"],[69,19,68,17],[69,20,68,18],[69,26,68,24],[70,6,69,4,"observer"],[70,14,69,12],[70,15,69,13,"setOptions"],[70,25,69,23],[70,26,69,24,"defaultedOptions"],[70,42,69,40],[70,43,69,41],[71,4,70,2],[71,5,70,3],[71,7,70,5],[71,8,70,6,"defaultedOptions"],[71,24,70,22],[71,26,70,24,"observer"],[71,34,70,32],[71,35,70,33],[71,36,70,34],[72,4,71,2],[72,8,71,6],[72,12,71,6,"shouldSuspend"],[72,23,71,19],[72,24,71,19,"shouldSuspend"],[72,37,71,19],[72,39,71,20,"defaultedOptions"],[72,55,71,36],[72,57,71,38,"result"],[72,63,71,44],[72,64,71,45],[72,66,71,47],[73,6,72,4],[73,12,72,10],[73,16,72,10,"fetchOptimistic"],[73,27,72,25],[73,28,72,25,"fetchOptimistic"],[73,43,72,25],[73,45,72,26,"defaultedOptions"],[73,61,72,42],[73,63,72,44,"observer"],[73,71,72,52],[73,73,72,54,"errorResetBoundary"],[73,91,72,72],[73,92,72,73],[74,4,73,2],[75,4,74,2],[75,8,74,6],[75,12,74,6,"getHasError"],[75,33,74,17],[75,34,74,17,"getHasError"],[75,45,74,17],[75,47,74,18],[76,6,75,4,"result"],[76,12,75,10],[77,6,76,4,"errorResetBoundary"],[77,24,76,22],[78,6,77,4,"throwOnError"],[78,18,77,16],[78,20,77,18,"defaultedOptions"],[78,36,77,34],[78,37,77,35,"throwOnError"],[78,49,77,47],[79,6,78,4,"query"],[79,11,78,9],[79,13,78,11,"client"],[79,19,78,17],[79,20,78,18,"getQueryCache"],[79,33,78,31],[79,34,78,32],[79,35,78,33],[79,36,78,34,"get"],[79,39,78,37],[79,40,78,38,"defaultedOptions"],[79,56,78,54],[79,57,78,55,"queryHash"],[79,66,78,64],[79,67,78,65],[80,6,79,4,"suspense"],[80,14,79,12],[80,16,79,14,"defaultedOptions"],[80,32,79,30],[80,33,79,31,"suspense"],[81,4,80,2],[81,5,80,3],[81,6,80,4],[81,8,80,6],[82,6,81,4],[82,12,81,10,"result"],[82,18,81,16],[82,19,81,17,"error"],[82,24,81,22],[83,4,82,2],[84,4,83,2],[85,4,84,2,"client"],[85,10,84,8],[85,11,84,9,"getDefaultOptions"],[85,28,84,26],[85,29,84,27],[85,30,84,28],[85,31,84,29,"queries"],[85,38,84,36],[85,40,84,38,"_experimental_afterQuery"],[85,64,84,62],[85,67,85,4,"defaultedOptions"],[85,83,85,20],[85,85,86,4,"result"],[85,91,87,2],[85,92,87,3],[86,4,88,2],[86,8,88,6,"defaultedOptions"],[86,24,88,22],[86,25,88,23,"experimental_prefetchInRender"],[86,54,88,52],[86,58,88,56],[86,59,88,57,"isServer"],[86,77,88,65],[86,78,88,65,"isServer"],[86,86,88,65],[86,90,88,69],[86,94,88,69,"willFetch"],[86,105,88,78],[86,106,88,78,"willFetch"],[86,115,88,78],[86,117,88,79,"result"],[86,123,88,85],[86,125,88,87,"isRestoring"],[86,136,88,98],[86,137,88,99],[86,139,88,101],[87,6,89,4],[87,12,89,10,"promise"],[87,19,89,17],[87,22,89,20,"isNewCacheEntry"],[87,37,89,35],[88,6,90,6],[89,6,91,6],[89,10,91,6,"fetchOptimistic"],[89,21,91,21],[89,22,91,21,"fetchOptimistic"],[89,37,91,21],[89,39,91,22,"defaultedOptions"],[89,55,91,38],[89,57,91,40,"observer"],[89,65,91,48],[89,67,91,50,"errorResetBoundary"],[89,85,91,68],[89,86,91,69],[90,6,93,6],[91,6,94,6,"client"],[91,12,94,12],[91,13,94,13,"getQueryCache"],[91,26,94,26],[91,27,94,27],[91,28,94,28],[91,29,94,29,"get"],[91,32,94,32],[91,33,94,33,"defaultedOptions"],[91,49,94,49],[91,50,94,50,"queryHash"],[91,59,94,59],[91,60,94,60],[91,62,94,62,"promise"],[91,69,95,5],[92,6,96,4,"promise"],[92,13,96,11],[92,15,96,13,"catch"],[92,20,96,18],[92,21,96,19,"noop"],[92,29,96,23],[92,30,96,23,"noop"],[92,34,96,23],[92,35,96,24],[92,36,96,25,"finally"],[92,43,96,32],[92,44,96,33],[92,50,96,39],[93,8,97,6,"observer"],[93,16,97,14],[93,17,97,15,"updateResult"],[93,29,97,27],[93,30,97,28],[93,31,97,29],[94,6,98,4],[94,7,98,5],[94,8,98,6],[95,4,99,2],[96,4,100,2],[96,11,100,9],[96,12,100,10,"defaultedOptions"],[96,28,100,26],[96,29,100,27,"notifyOnChangeProps"],[96,48,100,46],[96,51,100,49,"observer"],[96,59,100,57],[96,60,100,58,"trackResult"],[96,71,100,69],[96,72,100,70,"result"],[96,78,100,76],[96,79,100,77],[96,82,100,80,"result"],[96,88,100,86],[97,2,101,0],[98,0,101,1],[98,3]],"functionMap":{"names":["<global>","useBaseQuery","React.useState$argument_0","React.useSyncExternalStore$argument_0","React.useSyncExternalStore$argument_1","React.useSyncExternalStore$argument_2","React.useEffect$argument_0","promise._catch._finally$argument_0"],"mappings":"AAA;ACoB;IC4B;KDG;MEM;OFI;IGG,iCH;IIC,iCJ;kBKE;GLE;iCM0B;KNE;CDG"},"hasCjsExports":false},"type":"js/module"}]}