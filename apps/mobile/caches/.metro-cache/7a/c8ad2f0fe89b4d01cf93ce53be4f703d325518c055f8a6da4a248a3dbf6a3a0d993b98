{"dependencies":[{"name":"@motionone/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"+655Tbr0Dg/RFFwL7HMoKgGI11s=","exportNames":["*"],"imports":1}},{"name":"./edge.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":55},"end":{"line":2,"column":55,"index":110}}],"key":"XFWxdAejQf5Na6wJAAStYrZD0j0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"resolveOffset\", {\n    enumerable: true,\n    get: function () {\n      return resolveOffset;\n    }\n  });\n  var _motiononeUtils = require(_dependencyMap[0], \"@motionone/utils\");\n  var _edgeEsJs = require(_dependencyMap[1], \"./edge.es.js\");\n  const defaultOffset = [0, 0];\n  function resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if ((0, _motiononeUtils.isNumber)(offset)) {\n      /**\n       * If we're provided offset: [0, 0.5, 1] then each number x should become\n       * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n       * and container etc.\n       */\n      offsetDefinition = [offset, offset];\n    } else if ((0, _motiononeUtils.isString)(offset)) {\n      offset = offset.trim();\n      if (offset.includes(\" \")) {\n        offsetDefinition = offset.split(\" \");\n      } else {\n        /**\n         * If we're provided a definition like \"100px\" then we want to apply\n         * that only to the top of the target point, leaving the container at 0.\n         * Whereas a named offset like \"end\" should be applied to both.\n         */\n        offsetDefinition = [offset, _edgeEsJs.namedEdges[offset] ? offset : `0`];\n      }\n    }\n    targetPoint = (0, _edgeEsJs.resolveEdge)(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = (0, _edgeEsJs.resolveEdge)(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n  }\n});","lineCount":44,"map":[[7,2,36,0,"Object"],[7,8,36,0],[7,9,36,0,"defineProperty"],[7,23,36,0],[7,24,36,0,"exports"],[7,31,36,0],[8,4,36,0,"enumerable"],[8,14,36,0],[9,4,36,0,"get"],[9,7,36,0],[9,18,36,0,"get"],[9,19,36,0],[10,6,36,0],[10,13,36,9,"resolveOffset"],[10,26,36,22],[11,4,36,22],[12,2,36,22],[13,2,1,0],[13,6,1,0,"_motiononeUtils"],[13,21,1,0],[13,24,1,0,"require"],[13,31,1,0],[13,32,1,0,"_dependencyMap"],[13,46,1,0],[14,2,2,0],[14,6,2,0,"_edgeEsJs"],[14,15,2,0],[14,18,2,0,"require"],[14,25,2,0],[14,26,2,0,"_dependencyMap"],[14,40,2,0],[15,2,4,0],[15,8,4,6,"defaultOffset"],[15,21,4,19],[15,24,4,22],[15,25,4,23],[15,26,4,24],[15,28,4,26],[15,29,4,27],[15,30,4,28],[16,2,5,0],[16,11,5,9,"resolveOffset"],[16,24,5,22,"resolveOffset"],[16,25,5,23,"offset"],[16,31,5,29],[16,33,5,31,"containerLength"],[16,48,5,46],[16,50,5,48,"targetLength"],[16,62,5,60],[16,64,5,62,"targetInset"],[16,75,5,73],[16,77,5,75],[17,4,6,4],[17,8,6,8,"offsetDefinition"],[17,24,6,24],[17,27,6,27,"Array"],[17,32,6,32],[17,33,6,33,"isArray"],[17,40,6,40],[17,41,6,41,"offset"],[17,47,6,47],[17,48,6,48],[17,51,6,51,"offset"],[17,57,6,57],[17,60,6,60,"defaultOffset"],[17,73,6,73],[18,4,7,4],[18,8,7,8,"targetPoint"],[18,19,7,19],[18,22,7,22],[18,23,7,23],[19,4,8,4],[19,8,8,8,"containerPoint"],[19,22,8,22],[19,25,8,25],[19,26,8,26],[20,4,9,4],[20,8,9,8],[20,12,9,8,"isNumber"],[20,27,9,16],[20,28,9,16,"isNumber"],[20,36,9,16],[20,38,9,17,"offset"],[20,44,9,23],[20,45,9,24],[20,47,9,26],[21,6,10,8],[22,0,11,0],[23,0,12,0],[24,0,13,0],[25,0,14,0],[26,6,15,8,"offsetDefinition"],[26,22,15,24],[26,25,15,27],[26,26,15,28,"offset"],[26,32,15,34],[26,34,15,36,"offset"],[26,40,15,42],[26,41,15,43],[27,4,16,4],[27,5,16,5],[27,11,17,9],[27,15,17,13],[27,19,17,13,"isString"],[27,34,17,21],[27,35,17,21,"isString"],[27,43,17,21],[27,45,17,22,"offset"],[27,51,17,28],[27,52,17,29],[27,54,17,31],[28,6,18,8,"offset"],[28,12,18,14],[28,15,18,17,"offset"],[28,21,18,23],[28,22,18,24,"trim"],[28,26,18,28],[28,27,18,29],[28,28,18,30],[29,6,19,8],[29,10,19,12,"offset"],[29,16,19,18],[29,17,19,19,"includes"],[29,25,19,27],[29,26,19,28],[29,29,19,31],[29,30,19,32],[29,32,19,34],[30,8,20,12,"offsetDefinition"],[30,24,20,28],[30,27,20,31,"offset"],[30,33,20,37],[30,34,20,38,"split"],[30,39,20,43],[30,40,20,44],[30,43,20,47],[30,44,20,48],[31,6,21,8],[31,7,21,9],[31,13,22,13],[32,8,23,12],[33,0,24,0],[34,0,25,0],[35,0,26,0],[36,0,27,0],[37,8,28,12,"offsetDefinition"],[37,24,28,28],[37,27,28,31],[37,28,28,32,"offset"],[37,34,28,38],[37,36,28,40,"namedEdges"],[37,45,28,50],[37,46,28,50,"namedEdges"],[37,56,28,50],[37,57,28,51,"offset"],[37,63,28,57],[37,64,28,58],[37,67,28,61,"offset"],[37,73,28,67],[37,76,28,70],[37,79,28,73],[37,80,28,74],[38,6,29,8],[39,4,30,4],[40,4,31,4,"targetPoint"],[40,15,31,15],[40,18,31,18],[40,22,31,18,"resolveEdge"],[40,31,31,29],[40,32,31,29,"resolveEdge"],[40,43,31,29],[40,45,31,30,"offsetDefinition"],[40,61,31,46],[40,62,31,47],[40,63,31,48],[40,64,31,49],[40,66,31,51,"targetLength"],[40,78,31,63],[40,80,31,65,"targetInset"],[40,91,31,76],[40,92,31,77],[41,4,32,4,"containerPoint"],[41,18,32,18],[41,21,32,21],[41,25,32,21,"resolveEdge"],[41,34,32,32],[41,35,32,32,"resolveEdge"],[41,46,32,32],[41,48,32,33,"offsetDefinition"],[41,64,32,49],[41,65,32,50],[41,66,32,51],[41,67,32,52],[41,69,32,54,"containerLength"],[41,84,32,69],[41,85,32,70],[42,4,33,4],[42,11,33,11,"targetPoint"],[42,22,33,22],[42,25,33,25,"containerPoint"],[42,39,33,39],[43,2,34,0],[44,0,34,1],[44,3]],"functionMap":{"names":["<global>","resolveOffset"],"mappings":"AAA;ACI;CD6B"},"hasCjsExports":false},"type":"js/module"}]}