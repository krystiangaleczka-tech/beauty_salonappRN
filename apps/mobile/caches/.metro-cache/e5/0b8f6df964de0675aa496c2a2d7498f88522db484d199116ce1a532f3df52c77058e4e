{"dependencies":[{"name":"../utils/resolve-elements.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":22,"index":101},"end":{"line":5,"column":65,"index":144}}],"key":"6netvYTS6zFechX85c7z00OEjyc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var resolveElements = require(_dependencyMap[0], \"../utils/resolve-elements.cjs.js\");\n  var thresholds = {\n    any: 0,\n    all: 1\n  };\n  function inView(elementOrSelector, onStart) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      root = _ref.root,\n      rootMargin = _ref.margin,\n      _ref$amount = _ref.amount,\n      amount = _ref$amount === void 0 ? \"any\" : _ref$amount;\n    /**\n     * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n     * Default triggering of onStart is tricky - it could be used for starting/stopping\n     * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n     * provide a fallback callback option.\n     */\n    if (typeof IntersectionObserver === \"undefined\") {\n      return () => {};\n    }\n    var elements = resolveElements.resolveElements(elementOrSelector);\n    var activeIntersections = new WeakMap();\n    var onIntersectionChange = entries => {\n      entries.forEach(entry => {\n        var onEnd = activeIntersections.get(entry.target);\n        /**\n         * If there's no change to the intersection, we don't need to\n         * do anything here.\n         */\n        if (entry.isIntersecting === Boolean(onEnd)) return;\n        if (entry.isIntersecting) {\n          var newOnEnd = onStart(entry);\n          if (typeof newOnEnd === \"function\") {\n            activeIntersections.set(entry.target, newOnEnd);\n          } else {\n            observer.unobserve(entry.target);\n          }\n        } else if (onEnd) {\n          onEnd(entry);\n          activeIntersections.delete(entry.target);\n        }\n      });\n    };\n    var observer = new IntersectionObserver(onIntersectionChange, {\n      root,\n      rootMargin,\n      threshold: typeof amount === \"number\" ? amount : thresholds[amount]\n    });\n    elements.forEach(element => observer.observe(element));\n    return () => observer.disconnect();\n  }\n  exports.inView = inView;\n});","lineCount":59,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,3,47,"value"],[5,9,3,52],[5,11,3,54],[6,2,3,59],[6,3,3,60],[6,4,3,61],[7,2,5,0],[7,6,5,4,"resolveElements"],[7,21,5,19],[7,24,5,22,"require"],[7,31,5,29],[7,32,5,29,"_dependencyMap"],[7,46,5,29],[7,85,5,64],[7,86,5,65],[8,2,7,0],[8,6,7,6,"thresholds"],[8,16,7,16],[8,19,7,19],[9,4,8,4,"any"],[9,7,8,7],[9,9,8,9],[9,10,8,10],[10,4,9,4,"all"],[10,7,9,7],[10,9,9,9],[11,2,10,0],[11,3,10,1],[12,2,11,0],[12,11,11,9,"inView"],[12,17,11,15,"inView"],[12,18,11,16,"elementOrSelector"],[12,35,11,33],[12,37,11,35,"onStart"],[12,44,11,42],[12,46,11,95],[13,4,11,95],[13,8,11,95,"_ref"],[13,12,11,95],[13,15,11,95,"arguments"],[13,24,11,95],[13,25,11,95,"length"],[13,31,11,95],[13,39,11,95,"arguments"],[13,48,11,95],[13,56,11,95,"undefined"],[13,65,11,95],[13,68,11,95,"arguments"],[13,77,11,95],[13,83,11,91],[13,84,11,92],[13,85,11,93],[14,6,11,46,"root"],[14,10,11,50],[14,13,11,50,"_ref"],[14,17,11,50],[14,18,11,46,"root"],[14,22,11,50],[15,6,11,60,"rootMargin"],[15,16,11,70],[15,19,11,70,"_ref"],[15,23,11,70],[15,24,11,52,"margin"],[15,30,11,58],[16,6,11,58,"_ref$amount"],[16,17,11,58],[16,20,11,58,"_ref"],[16,24,11,58],[16,25,11,72,"amount"],[16,31,11,78],[17,6,11,72,"amount"],[17,12,11,78],[17,15,11,78,"_ref$amount"],[17,26,11,78],[17,40,11,81],[17,45,11,86],[17,48,11,86,"_ref$amount"],[17,59,11,86],[18,4,12,4],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,4,18,4],[24,8,18,8],[24,15,18,15,"IntersectionObserver"],[24,35,18,35],[24,40,18,40],[24,51,18,51],[24,53,18,53],[25,6,19,8],[25,13,19,15],[25,19,19,21],[25,20,19,23],[25,21,19,24],[26,4,20,4],[27,4,21,4],[27,8,21,10,"elements"],[27,16,21,18],[27,19,21,21,"resolveElements"],[27,34,21,36],[27,35,21,37,"resolveElements"],[27,50,21,52],[27,51,21,53,"elementOrSelector"],[27,68,21,70],[27,69,21,71],[28,4,22,4],[28,8,22,10,"activeIntersections"],[28,27,22,29],[28,30,22,32],[28,34,22,36,"WeakMap"],[28,41,22,43],[28,42,22,44],[28,43,22,45],[29,4,23,4],[29,8,23,10,"onIntersectionChange"],[29,28,23,30],[29,31,23,34,"entries"],[29,38,23,41],[29,42,23,46],[30,6,24,8,"entries"],[30,13,24,15],[30,14,24,16,"forEach"],[30,21,24,23],[30,22,24,25,"entry"],[30,27,24,30],[30,31,24,35],[31,8,25,12],[31,12,25,18,"onEnd"],[31,17,25,23],[31,20,25,26,"activeIntersections"],[31,39,25,45],[31,40,25,46,"get"],[31,43,25,49],[31,44,25,50,"entry"],[31,49,25,55],[31,50,25,56,"target"],[31,56,25,62],[31,57,25,63],[32,8,26,12],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,8,30,12],[36,12,30,16,"entry"],[36,17,30,21],[36,18,30,22,"isIntersecting"],[36,32,30,36],[36,37,30,41,"Boolean"],[36,44,30,48],[36,45,30,49,"onEnd"],[36,50,30,54],[36,51,30,55],[36,53,31,16],[37,8,32,12],[37,12,32,16,"entry"],[37,17,32,21],[37,18,32,22,"isIntersecting"],[37,32,32,36],[37,34,32,38],[38,10,33,16],[38,14,33,22,"newOnEnd"],[38,22,33,30],[38,25,33,33,"onStart"],[38,32,33,40],[38,33,33,41,"entry"],[38,38,33,46],[38,39,33,47],[39,10,34,16],[39,14,34,20],[39,21,34,27,"newOnEnd"],[39,29,34,35],[39,34,34,40],[39,44,34,50],[39,46,34,52],[40,12,35,20,"activeIntersections"],[40,31,35,39],[40,32,35,40,"set"],[40,35,35,43],[40,36,35,44,"entry"],[40,41,35,49],[40,42,35,50,"target"],[40,48,35,56],[40,50,35,58,"newOnEnd"],[40,58,35,66],[40,59,35,67],[41,10,36,16],[41,11,36,17],[41,17,37,21],[42,12,38,20,"observer"],[42,20,38,28],[42,21,38,29,"unobserve"],[42,30,38,38],[42,31,38,39,"entry"],[42,36,38,44],[42,37,38,45,"target"],[42,43,38,51],[42,44,38,52],[43,10,39,16],[44,8,40,12],[44,9,40,13],[44,15,41,17],[44,19,41,21,"onEnd"],[44,24,41,26],[44,26,41,28],[45,10,42,16,"onEnd"],[45,15,42,21],[45,16,42,22,"entry"],[45,21,42,27],[45,22,42,28],[46,10,43,16,"activeIntersections"],[46,29,43,35],[46,30,43,36,"delete"],[46,36,43,42],[46,37,43,43,"entry"],[46,42,43,48],[46,43,43,49,"target"],[46,49,43,55],[46,50,43,56],[47,8,44,12],[48,6,45,8],[48,7,45,9],[48,8,45,10],[49,4,46,4],[49,5,46,5],[50,4,47,4],[50,8,47,10,"observer"],[50,16,47,18],[50,19,47,21],[50,23,47,25,"IntersectionObserver"],[50,43,47,45],[50,44,47,46,"onIntersectionChange"],[50,64,47,66],[50,66,47,68],[51,6,48,8,"root"],[51,10,48,12],[52,6,49,8,"rootMargin"],[52,16,49,18],[53,6,50,8,"threshold"],[53,15,50,17],[53,17,50,19],[53,24,50,26,"amount"],[53,30,50,32],[53,35,50,37],[53,43,50,45],[53,46,50,48,"amount"],[53,52,50,54],[53,55,50,57,"thresholds"],[53,65,50,67],[53,66,50,68,"amount"],[53,72,50,74],[54,4,51,4],[54,5,51,5],[54,6,51,6],[55,4,52,4,"elements"],[55,12,52,12],[55,13,52,13,"forEach"],[55,20,52,20],[55,21,52,22,"element"],[55,28,52,29],[55,32,52,34,"observer"],[55,40,52,42],[55,41,52,43,"observe"],[55,48,52,50],[55,49,52,51,"element"],[55,56,52,58],[55,57,52,59],[55,58,52,60],[56,4,53,4],[56,11,53,11],[56,17,53,17,"observer"],[56,25,53,25],[56,26,53,26,"disconnect"],[56,36,53,36],[56,37,53,37],[56,38,53,38],[57,2,54,0],[58,2,56,0,"exports"],[58,9,56,7],[58,10,56,8,"inView"],[58,16,56,14],[58,19,56,17,"inView"],[58,25,56,23],[59,0,56,24],[59,3]],"functionMap":{"names":["<global>","inView","<anonymous>","onIntersectionChange","entries.forEach$argument_0","elements.forEach$argument_0"],"mappings":"AAA;ACU;eCQ,SD;iCEI;wBCC;SDqB;KFC;qBIM,sCJ;WCC,2BD;CDC"},"hasCjsExports":true},"type":"js/module"}]}