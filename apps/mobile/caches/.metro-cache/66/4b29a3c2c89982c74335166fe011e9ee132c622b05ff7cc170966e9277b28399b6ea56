{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.resolveBlurhashString = resolveBlurhashString;\n  exports.resolveThumbhashString = resolveThumbhashString;\n  /**\n   * Converts a string in blurhash format (`blurhash:/<hash>/<width>/<height>`\n   * or <hash>/<width>/<height>) into an `ImageSource`.\n   *\n   * @return An ImageSource representing the provided blurhash.\n   * */\n  function resolveBlurhashString(str) {\n    const [hash, width, height] = str.replace(/^blurhash:\\//, '').split('/');\n    return {\n      uri: 'blurhash:/' + hash,\n      width: parseInt(width, 10) || 16,\n      height: parseInt(height, 10) || 16\n    };\n  }\n\n  /**\n   * Converts a string in thumbhash format (`thumbhash:/<hash>` or `<hash>`)\n   * into an `ImageSource`.\n   * Note: Unlike the `resolveBlurhashString` the `thumbhash:/` scheme has to be present,\n   * as the scheme has to be explicitly stated to be interpreted a `thumbhash` source.\n   *\n   * @return An ImageSource representing the provided thumbhash.\n   * */\n  function resolveThumbhashString(str) {\n    const hash = str.replace(/^thumbhash:\\//, '');\n    return {\n      uri: 'thumbhash:/' + hash\n    };\n  }\n});","lineCount":38,"map":[[7,2,9,0,"exports"],[7,9,9,0],[7,10,9,0,"resolveBlurhashString"],[7,31,9,0],[7,34,9,0,"resolveBlurhashString"],[7,55,9,0],[8,2,26,0,"exports"],[8,9,26,0],[8,10,26,0,"resolveThumbhashString"],[8,32,26,0],[8,35,26,0,"resolveThumbhashString"],[8,57,26,0],[9,2,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,2,9,7],[15,11,9,16,"resolveBlurhashString"],[15,32,9,37,"resolveBlurhashString"],[15,33,9,38,"str"],[15,36,9,49],[15,38,9,64],[16,4,10,2],[16,10,10,8],[16,11,10,9,"hash"],[16,15,10,13],[16,17,10,15,"width"],[16,22,10,20],[16,24,10,22,"height"],[16,30,10,28],[16,31,10,29],[16,34,10,32,"str"],[16,37,10,35],[16,38,10,36,"replace"],[16,45,10,43],[16,46,10,44],[16,60,10,58],[16,62,10,60],[16,64,10,62],[16,65,10,63],[16,66,10,64,"split"],[16,71,10,69],[16,72,10,70],[16,75,10,73],[16,76,10,74],[17,4,11,2],[17,11,11,9],[18,6,12,4,"uri"],[18,9,12,7],[18,11,12,9],[18,23,12,21],[18,26,12,24,"hash"],[18,30,12,28],[19,6,13,4,"width"],[19,11,13,9],[19,13,13,11,"parseInt"],[19,21,13,19],[19,22,13,20,"width"],[19,27,13,25],[19,29,13,27],[19,31,13,29],[19,32,13,30],[19,36,13,34],[19,38,13,36],[20,6,14,4,"height"],[20,12,14,10],[20,14,14,12,"parseInt"],[20,22,14,20],[20,23,14,21,"height"],[20,29,14,27],[20,31,14,29],[20,33,14,31],[20,34,14,32],[20,38,14,36],[21,4,15,2],[21,5,15,3],[22,2,16,0],[24,2,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,2,26,7],[32,11,26,16,"resolveThumbhashString"],[32,33,26,38,"resolveThumbhashString"],[32,34,26,39,"str"],[32,37,26,50],[32,39,26,65],[33,4,27,2],[33,10,27,8,"hash"],[33,14,27,12],[33,17,27,15,"str"],[33,20,27,18],[33,21,27,19,"replace"],[33,28,27,26],[33,29,27,27],[33,44,27,42],[33,46,27,44],[33,48,27,46],[33,49,27,47],[34,4,28,2],[34,11,28,9],[35,6,29,4,"uri"],[35,9,29,7],[35,11,29,9],[35,24,29,22],[35,27,29,25,"hash"],[36,4,30,2],[36,5,30,3],[37,2,31,0],[38,0,31,1],[38,3]],"functionMap":{"names":["<global>","resolveBlurhashString","resolveThumbhashString"],"mappings":"AAA;OCQ;CDO;OEU;CFK"},"hasCjsExports":false},"type":"js/module"}]}