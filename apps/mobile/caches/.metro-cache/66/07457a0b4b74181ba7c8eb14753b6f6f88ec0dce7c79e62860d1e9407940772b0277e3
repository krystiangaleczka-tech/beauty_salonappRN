{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"addDomEvent\", {\n    enumerable: true,\n    get: function () {\n      return addDomEvent;\n    }\n  });\n  Object.defineProperty(exports, \"useDomEvent\", {\n    enumerable: true,\n    get: function () {\n      return useDomEvent;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  function addDomEvent(target, eventName, handler, options) {\n    if (options === void 0) {\n      options = {\n        passive: true\n      };\n    }\n    target.addEventListener(eventName, handler, options);\n    return function () {\n      return target.removeEventListener(eventName, handler);\n    };\n  }\n  /**\n   * Attaches an event listener directly to the provided DOM element.\n   *\n   * Bypassing React's event system can be desirable, for instance when attaching non-passive\n   * event handlers.\n   *\n   * ```jsx\n   * const ref = useRef(null)\n   *\n   * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n   *\n   * return <div ref={ref} />\n   * ```\n   *\n   * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n   * @param eventName - Name of the event you want listen for.\n   * @param handler - Function to fire when receiving the event.\n   * @param options - Options to pass to `Event.addEventListener`.\n   *\n   * @public\n   */\n  function useDomEvent(ref, eventName, handler, options) {\n    (0, _react.useEffect)(function () {\n      var element = ref.current;\n      if (handler && element) {\n        return addDomEvent(element, eventName, handler, options);\n      }\n    }, [ref, eventName, handler, options]);\n  }\n});","lineCount":60,"map":[[7,2,38,0,"Object"],[7,8,38,0],[7,9,38,0,"defineProperty"],[7,23,38,0],[7,24,38,0,"exports"],[7,31,38,0],[8,4,38,0,"enumerable"],[8,14,38,0],[9,4,38,0,"get"],[9,7,38,0],[9,18,38,0,"get"],[9,19,38,0],[10,6,38,0],[10,13,38,9,"addDomEvent"],[10,24,38,20],[11,4,38,20],[12,2,38,20],[13,2,38,0,"Object"],[13,8,38,0],[13,9,38,0,"defineProperty"],[13,23,38,0],[13,24,38,0,"exports"],[13,31,38,0],[14,4,38,0,"enumerable"],[14,14,38,0],[15,4,38,0,"get"],[15,7,38,0],[15,18,38,0,"get"],[15,19,38,0],[16,6,38,0],[16,13,38,22,"useDomEvent"],[16,24,38,33],[17,4,38,33],[18,2,38,33],[19,2,1,0],[19,6,1,0,"_react"],[19,12,1,0],[19,15,1,0,"require"],[19,22,1,0],[19,23,1,0,"_dependencyMap"],[19,37,1,0],[20,2,3,0],[20,11,3,9,"addDomEvent"],[20,22,3,20,"addDomEvent"],[20,23,3,21,"target"],[20,29,3,27],[20,31,3,29,"eventName"],[20,40,3,38],[20,42,3,40,"handler"],[20,49,3,47],[20,51,3,49,"options"],[20,58,3,56],[20,60,3,58],[21,4,4,4],[21,8,4,8,"options"],[21,15,4,15],[21,20,4,20],[21,25,4,25],[21,26,4,26],[21,28,4,28],[22,6,4,30,"options"],[22,13,4,37],[22,16,4,40],[23,8,4,42,"passive"],[23,15,4,49],[23,17,4,51],[24,6,4,56],[24,7,4,57],[25,4,4,59],[26,4,5,4,"target"],[26,10,5,10],[26,11,5,11,"addEventListener"],[26,27,5,27],[26,28,5,28,"eventName"],[26,37,5,37],[26,39,5,39,"handler"],[26,46,5,46],[26,48,5,48,"options"],[26,55,5,55],[26,56,5,56],[27,4,6,4],[27,11,6,11],[27,23,6,23],[28,6,6,25],[28,13,6,32,"target"],[28,19,6,38],[28,20,6,39,"removeEventListener"],[28,39,6,58],[28,40,6,59,"eventName"],[28,49,6,68],[28,51,6,70,"handler"],[28,58,6,77],[28,59,6,78],[29,4,6,80],[29,5,6,81],[30,2,7,0],[31,2,8,0],[32,0,9,0],[33,0,10,0],[34,0,11,0],[35,0,12,0],[36,0,13,0],[37,0,14,0],[38,0,15,0],[39,0,16,0],[40,0,17,0],[41,0,18,0],[42,0,19,0],[43,0,20,0],[44,0,21,0],[45,0,22,0],[46,0,23,0],[47,0,24,0],[48,0,25,0],[49,0,26,0],[50,0,27,0],[51,0,28,0],[52,2,29,0],[52,11,29,9,"useDomEvent"],[52,22,29,20,"useDomEvent"],[52,23,29,21,"ref"],[52,26,29,24],[52,28,29,26,"eventName"],[52,37,29,35],[52,39,29,37,"handler"],[52,46,29,44],[52,48,29,46,"options"],[52,55,29,53],[52,57,29,55],[53,4,30,4],[53,8,30,4,"useEffect"],[53,14,30,13],[53,15,30,13,"useEffect"],[53,24,30,13],[53,26,30,14],[53,38,30,26],[54,6,31,8],[54,10,31,12,"element"],[54,17,31,19],[54,20,31,22,"ref"],[54,23,31,25],[54,24,31,26,"current"],[54,31,31,33],[55,6,32,8],[55,10,32,12,"handler"],[55,17,32,19],[55,21,32,23,"element"],[55,28,32,30],[55,30,32,32],[56,8,33,12],[56,15,33,19,"addDomEvent"],[56,26,33,30],[56,27,33,31,"element"],[56,34,33,38],[56,36,33,40,"eventName"],[56,45,33,49],[56,47,33,51,"handler"],[56,54,33,58],[56,56,33,60,"options"],[56,63,33,67],[56,64,33,68],[57,6,34,8],[58,4,35,4],[58,5,35,5],[58,7,35,7],[58,8,35,8,"ref"],[58,11,35,11],[58,13,35,13,"eventName"],[58,22,35,22],[58,24,35,24,"handler"],[58,31,35,31],[58,33,35,33,"options"],[58,40,35,40],[58,41,35,41],[58,42,35,42],[59,2,36,0],[60,0,36,1],[60,3]],"functionMap":{"names":["<global>","addDomEvent","<anonymous>","useDomEvent","useEffect$argument_0"],"mappings":"AAA;ACE;WCG,sED;CDC;AGsB;cCC;KDK;CHC"},"hasCjsExports":false},"type":"js/module"}]}