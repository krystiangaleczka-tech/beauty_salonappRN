{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"snap\", {\n    enumerable: true,\n    get: function () {\n      return snap;\n    }\n  });\n  var snap = points => {\n    if (typeof points === 'number') {\n      return v => Math.round(v / points) * points;\n    } else {\n      var i = 0;\n      var numPoints = points.length;\n      return v => {\n        var lastDistance = Math.abs(points[0] - v);\n        for (i = 1; i < numPoints; i++) {\n          var point = points[i];\n          var distance = Math.abs(point - v);\n          if (distance === 0) return point;\n          if (distance > lastDistance) return points[i - 1];\n          if (i === numPoints - 1) return point;\n          lastDistance = distance;\n        }\n      };\n    }\n  };\n});","lineCount":32,"map":[[7,2,25,0,"Object"],[7,8,25,0],[7,9,25,0,"defineProperty"],[7,23,25,0],[7,24,25,0,"exports"],[7,31,25,0],[8,4,25,0,"enumerable"],[8,14,25,0],[9,4,25,0,"get"],[9,7,25,0],[9,18,25,0,"get"],[9,19,25,0],[10,6,25,0],[10,13,25,9,"snap"],[10,17,25,13],[11,4,25,13],[12,2,25,13],[13,2,1,0],[13,6,1,6,"snap"],[13,10,1,10],[13,13,1,14,"points"],[13,19,1,20],[13,23,1,25],[14,4,2,4],[14,8,2,8],[14,15,2,15,"points"],[14,21,2,21],[14,26,2,26],[14,34,2,34],[14,36,2,36],[15,6,3,8],[15,13,3,16,"v"],[15,14,3,17],[15,18,3,22,"Math"],[15,22,3,26],[15,23,3,27,"round"],[15,28,3,32],[15,29,3,33,"v"],[15,30,3,34],[15,33,3,37,"points"],[15,39,3,43],[15,40,3,44],[15,43,3,47,"points"],[15,49,3,53],[16,4,4,4],[16,5,4,5],[16,11,5,9],[17,6,6,8],[17,10,6,12,"i"],[17,11,6,13],[17,14,6,16],[17,15,6,17],[18,6,7,8],[18,10,7,14,"numPoints"],[18,19,7,23],[18,22,7,26,"points"],[18,28,7,32],[18,29,7,33,"length"],[18,35,7,39],[19,6,8,8],[19,13,8,16,"v"],[19,14,8,17],[19,18,8,22],[20,8,9,12],[20,12,9,16,"lastDistance"],[20,24,9,28],[20,27,9,31,"Math"],[20,31,9,35],[20,32,9,36,"abs"],[20,35,9,39],[20,36,9,40,"points"],[20,42,9,46],[20,43,9,47],[20,44,9,48],[20,45,9,49],[20,48,9,52,"v"],[20,49,9,53],[20,50,9,54],[21,8,10,12],[21,13,10,17,"i"],[21,14,10,18],[21,17,10,21],[21,18,10,22],[21,20,10,24,"i"],[21,21,10,25],[21,24,10,28,"numPoints"],[21,33,10,37],[21,35,10,39,"i"],[21,36,10,40],[21,38,10,42],[21,40,10,44],[22,10,11,16],[22,14,11,22,"point"],[22,19,11,27],[22,22,11,30,"points"],[22,28,11,36],[22,29,11,37,"i"],[22,30,11,38],[22,31,11,39],[23,10,12,16],[23,14,12,22,"distance"],[23,22,12,30],[23,25,12,33,"Math"],[23,29,12,37],[23,30,12,38,"abs"],[23,33,12,41],[23,34,12,42,"point"],[23,39,12,47],[23,42,12,50,"v"],[23,43,12,51],[23,44,12,52],[24,10,13,16],[24,14,13,20,"distance"],[24,22,13,28],[24,27,13,33],[24,28,13,34],[24,30,14,20],[24,37,14,27,"point"],[24,42,14,32],[25,10,15,16],[25,14,15,20,"distance"],[25,22,15,28],[25,25,15,31,"lastDistance"],[25,37,15,43],[25,39,16,20],[25,46,16,27,"points"],[25,52,16,33],[25,53,16,34,"i"],[25,54,16,35],[25,57,16,38],[25,58,16,39],[25,59,16,40],[26,10,17,16],[26,14,17,20,"i"],[26,15,17,21],[26,20,17,26,"numPoints"],[26,29,17,35],[26,32,17,38],[26,33,17,39],[26,35,18,20],[26,42,18,27,"point"],[26,47,18,32],[27,10,19,16,"lastDistance"],[27,22,19,28],[27,25,19,31,"distance"],[27,33,19,39],[28,8,20,12],[29,6,21,8],[29,7,21,9],[30,4,22,4],[31,2,23,0],[31,3,23,1],[32,0,23,2],[32,3]],"functionMap":{"names":["<global>","snap","<anonymous>"],"mappings":"AAA,aC;eCE,sCD;eCK;SDa;CDE"},"hasCjsExports":false},"type":"js/module"}]}