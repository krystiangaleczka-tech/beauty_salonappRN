{"dependencies":[{"name":"./transform.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"0t//7u3Db0CrpzVriNyYAAqTfWk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"buildTransform\", {\n    enumerable: true,\n    get: function () {\n      return buildTransform;\n    }\n  });\n  Object.defineProperty(exports, \"buildTransformOrigin\", {\n    enumerable: true,\n    get: function () {\n      return buildTransformOrigin;\n    }\n  });\n  var _transformMjs = require(_dependencyMap[0], \"./transform.mjs\");\n  var translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\"\n  };\n  /**\n   * Build a CSS transform style from individual x/y/scale etc properties.\n   *\n   * This outputs with a default order of transforms/scales/rotations, this can be customised by\n   * providing a transformTemplate function.\n   */\n  function buildTransform(_a, _b, transformIsDefault, transformTemplate) {\n    var transform = _a.transform,\n      transformKeys = _a.transformKeys;\n    var _c = _b.enableHardwareAcceleration,\n      enableHardwareAcceleration = _c === void 0 ? true : _c,\n      _d = _b.allowTransformNone,\n      allowTransformNone = _d === void 0 ? true : _d;\n    // The transform string we're going to build into.\n    var transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(_transformMjs.sortTransformProps);\n    // Track whether the defined transform has a defined z so we don't add a\n    // second to enable hardware acceleration\n    var transformHasZ = false;\n    // Loop over each transform and build them into transformString\n    var numTransformKeys = transformKeys.length;\n    for (var i = 0; i < numTransformKeys; i++) {\n      var key = transformKeys[i];\n      transformString += \"\".concat(translateAlias[key] || key, \"(\").concat(transform[key], \") \");\n      if (key === \"z\") transformHasZ = true;\n    }\n    if (!transformHasZ && enableHardwareAcceleration) {\n      transformString += \"translateZ(0)\";\n    } else {\n      transformString = transformString.trim();\n    }\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n      transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    } else if (allowTransformNone && transformIsDefault) {\n      transformString = \"none\";\n    }\n    return transformString;\n  }\n  /**\n   * Build a transformOrigin style. Uses the same defaults as the browser for\n   * undefined origins.\n   */\n  function buildTransformOrigin(_a) {\n    var _b = _a.originX,\n      originX = _b === void 0 ? \"50%\" : _b,\n      _c = _a.originY,\n      originY = _c === void 0 ? \"50%\" : _c,\n      _d = _a.originZ,\n      originZ = _d === void 0 ? 0 : _d;\n    return \"\".concat(originX, \" \").concat(originY, \" \").concat(originZ);\n  }\n});","lineCount":80,"map":[[7,2,58,0,"Object"],[7,8,58,0],[7,9,58,0,"defineProperty"],[7,23,58,0],[7,24,58,0,"exports"],[7,31,58,0],[8,4,58,0,"enumerable"],[8,14,58,0],[9,4,58,0,"get"],[9,7,58,0],[9,18,58,0,"get"],[9,19,58,0],[10,6,58,0],[10,13,58,9,"buildTransform"],[10,27,58,23],[11,4,58,23],[12,2,58,23],[13,2,58,0,"Object"],[13,8,58,0],[13,9,58,0,"defineProperty"],[13,23,58,0],[13,24,58,0,"exports"],[13,31,58,0],[14,4,58,0,"enumerable"],[14,14,58,0],[15,4,58,0,"get"],[15,7,58,0],[15,18,58,0,"get"],[15,19,58,0],[16,6,58,0],[16,13,58,25,"buildTransformOrigin"],[16,33,58,45],[17,4,58,45],[18,2,58,45],[19,2,1,0],[19,6,1,0,"_transformMjs"],[19,19,1,0],[19,22,1,0,"require"],[19,29,1,0],[19,30,1,0,"_dependencyMap"],[19,44,1,0],[20,2,3,0],[20,6,3,4,"translateAlias"],[20,20,3,18],[20,23,3,21],[21,4,4,4,"x"],[21,5,4,5],[21,7,4,7],[21,19,4,19],[22,4,5,4,"y"],[22,5,5,5],[22,7,5,7],[22,19,5,19],[23,4,6,4,"z"],[23,5,6,5],[23,7,6,7],[23,19,6,19],[24,4,7,4,"transformPerspective"],[24,24,7,24],[24,26,7,26],[25,2,8,0],[25,3,8,1],[26,2,9,0],[27,0,10,0],[28,0,11,0],[29,0,12,0],[30,0,13,0],[31,0,14,0],[32,2,15,0],[32,11,15,9,"buildTransform"],[32,25,15,23,"buildTransform"],[32,26,15,24,"_a"],[32,28,15,26],[32,30,15,28,"_b"],[32,32,15,30],[32,34,15,32,"transformIsDefault"],[32,52,15,50],[32,54,15,52,"transformTemplate"],[32,71,15,69],[32,73,15,71],[33,4,16,4],[33,8,16,8,"transform"],[33,17,16,17],[33,20,16,20,"_a"],[33,22,16,22],[33,23,16,23,"transform"],[33,32,16,32],[34,6,16,34,"transformKeys"],[34,19,16,47],[34,22,16,50,"_a"],[34,24,16,52],[34,25,16,53,"transformKeys"],[34,38,16,66],[35,4,17,4],[35,8,17,8,"_c"],[35,10,17,10],[35,13,17,13,"_b"],[35,15,17,15],[35,16,17,16,"enableHardwareAcceleration"],[35,42,17,42],[36,6,17,44,"enableHardwareAcceleration"],[36,32,17,70],[36,35,17,73,"_c"],[36,37,17,75],[36,42,17,80],[36,47,17,85],[36,48,17,86],[36,51,17,89],[36,55,17,93],[36,58,17,96,"_c"],[36,60,17,98],[37,6,17,100,"_d"],[37,8,17,102],[37,11,17,105,"_b"],[37,13,17,107],[37,14,17,108,"allowTransformNone"],[37,32,17,126],[38,6,17,128,"allowTransformNone"],[38,24,17,146],[38,27,17,149,"_d"],[38,29,17,151],[38,34,17,156],[38,39,17,161],[38,40,17,162],[38,43,17,165],[38,47,17,169],[38,50,17,172,"_d"],[38,52,17,174],[39,4,18,4],[40,4,19,4],[40,8,19,8,"transformString"],[40,23,19,23],[40,26,19,26],[40,28,19,28],[41,4,20,4],[42,4,21,4,"transformKeys"],[42,17,21,17],[42,18,21,18,"sort"],[42,22,21,22],[42,23,21,23,"sortTransformProps"],[42,36,21,41],[42,37,21,41,"sortTransformProps"],[42,55,21,41],[42,56,21,42],[43,4,22,4],[44,4,23,4],[45,4,24,4],[45,8,24,8,"transformHasZ"],[45,21,24,21],[45,24,24,24],[45,29,24,29],[46,4,25,4],[47,4,26,4],[47,8,26,8,"numTransformKeys"],[47,24,26,24],[47,27,26,27,"transformKeys"],[47,40,26,40],[47,41,26,41,"length"],[47,47,26,47],[48,4,27,4],[48,9,27,9],[48,13,27,13,"i"],[48,14,27,14],[48,17,27,17],[48,18,27,18],[48,20,27,20,"i"],[48,21,27,21],[48,24,27,24,"numTransformKeys"],[48,40,27,40],[48,42,27,42,"i"],[48,43,27,43],[48,45,27,45],[48,47,27,47],[49,6,28,8],[49,10,28,12,"key"],[49,13,28,15],[49,16,28,18,"transformKeys"],[49,29,28,31],[49,30,28,32,"i"],[49,31,28,33],[49,32,28,34],[50,6,29,8,"transformString"],[50,21,29,23],[50,25,29,27],[50,27,29,29],[50,28,29,30,"concat"],[50,34,29,36],[50,35,29,37,"translateAlias"],[50,49,29,51],[50,50,29,52,"key"],[50,53,29,55],[50,54,29,56],[50,58,29,60,"key"],[50,61,29,63],[50,63,29,65],[50,66,29,68],[50,67,29,69],[50,68,29,70,"concat"],[50,74,29,76],[50,75,29,77,"transform"],[50,84,29,86],[50,85,29,87,"key"],[50,88,29,90],[50,89,29,91],[50,91,29,93],[50,95,29,97],[50,96,29,98],[51,6,30,8],[51,10,30,12,"key"],[51,13,30,15],[51,18,30,20],[51,21,30,23],[51,23,31,12,"transformHasZ"],[51,36,31,25],[51,39,31,28],[51,43,31,32],[52,4,32,4],[53,4,33,4],[53,8,33,8],[53,9,33,9,"transformHasZ"],[53,22,33,22],[53,26,33,26,"enableHardwareAcceleration"],[53,52,33,52],[53,54,33,54],[54,6,34,8,"transformString"],[54,21,34,23],[54,25,34,27],[54,40,34,42],[55,4,35,4],[55,5,35,5],[55,11,36,9],[56,6,37,8,"transformString"],[56,21,37,23],[56,24,37,26,"transformString"],[56,39,37,41],[56,40,37,42,"trim"],[56,44,37,46],[56,45,37,47],[56,46,37,48],[57,4,38,4],[58,4,39,4],[59,4,40,4],[60,4,41,4],[60,8,41,8,"transformTemplate"],[60,25,41,25],[60,27,41,27],[61,6,42,8,"transformString"],[61,21,42,23],[61,24,42,26,"transformTemplate"],[61,41,42,43],[61,42,42,44,"transform"],[61,51,42,53],[61,53,42,55,"transformIsDefault"],[61,71,42,73],[61,74,42,76],[61,76,42,78],[61,79,42,81,"transformString"],[61,94,42,96],[61,95,42,97],[62,4,43,4],[62,5,43,5],[62,11,44,9],[62,15,44,13,"allowTransformNone"],[62,33,44,31],[62,37,44,35,"transformIsDefault"],[62,55,44,53],[62,57,44,55],[63,6,45,8,"transformString"],[63,21,45,23],[63,24,45,26],[63,30,45,32],[64,4,46,4],[65,4,47,4],[65,11,47,11,"transformString"],[65,26,47,26],[66,2,48,0],[67,2,49,0],[68,0,50,0],[69,0,51,0],[70,0,52,0],[71,2,53,0],[71,11,53,9,"buildTransformOrigin"],[71,31,53,29,"buildTransformOrigin"],[71,32,53,30,"_a"],[71,34,53,32],[71,36,53,34],[72,4,54,4],[72,8,54,8,"_b"],[72,10,54,10],[72,13,54,13,"_a"],[72,15,54,15],[72,16,54,16,"originX"],[72,23,54,23],[73,6,54,25,"originX"],[73,13,54,32],[73,16,54,35,"_b"],[73,18,54,37],[73,23,54,42],[73,28,54,47],[73,29,54,48],[73,32,54,51],[73,37,54,56],[73,40,54,59,"_b"],[73,42,54,61],[74,6,54,63,"_c"],[74,8,54,65],[74,11,54,68,"_a"],[74,13,54,70],[74,14,54,71,"originY"],[74,21,54,78],[75,6,54,80,"originY"],[75,13,54,87],[75,16,54,90,"_c"],[75,18,54,92],[75,23,54,97],[75,28,54,102],[75,29,54,103],[75,32,54,106],[75,37,54,111],[75,40,54,114,"_c"],[75,42,54,116],[76,6,54,118,"_d"],[76,8,54,120],[76,11,54,123,"_a"],[76,13,54,125],[76,14,54,126,"originZ"],[76,21,54,133],[77,6,54,135,"originZ"],[77,13,54,142],[77,16,54,145,"_d"],[77,18,54,147],[77,23,54,152],[77,28,54,157],[77,29,54,158],[77,32,54,161],[77,33,54,162],[77,36,54,165,"_d"],[77,38,54,167],[78,4,55,4],[78,11,55,11],[78,13,55,13],[78,14,55,14,"concat"],[78,20,55,20],[78,21,55,21,"originX"],[78,28,55,28],[78,30,55,30],[78,33,55,33],[78,34,55,34],[78,35,55,35,"concat"],[78,41,55,41],[78,42,55,42,"originY"],[78,49,55,49],[78,51,55,51],[78,54,55,54],[78,55,55,55],[78,56,55,56,"concat"],[78,62,55,62],[78,63,55,63,"originZ"],[78,70,55,70],[78,71,55,71],[79,2,56,0],[80,0,56,1],[80,3]],"functionMap":{"names":["<global>","buildTransform","buildTransformOrigin"],"mappings":"AAA;ACc;CDiC;AEK;CFG"},"hasCjsExports":false},"type":"js/module"}]}