{"dependencies":[{"name":"./notifyManager.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":51,"index":75}}],"key":"sE8Jk2BSATSKXEwal1fu77sfV3E=","exportNames":["*"],"imports":1}},{"name":"./mutation.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":41,"index":117}}],"key":"DEeb5DG8JiSOn+k43YR2tCf/fEk=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":118},"end":{"line":4,"column":49,"index":167}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}},{"name":"./subscribable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":168},"end":{"line":5,"column":49,"index":217}}],"key":"f0fxTGZggQRtb//cHMvH9AHIWOw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"MutationCache\", {\n    enumerable: true,\n    get: function () {\n      return MutationCache;\n    }\n  });\n  var _notifyManagerJs = require(_dependencyMap[0], \"./notifyManager.js\");\n  var _mutationJs = require(_dependencyMap[1], \"./mutation.js\");\n  var _utilsJs = require(_dependencyMap[2], \"./utils.js\");\n  var _subscribableJs = require(_dependencyMap[3], \"./subscribable.js\");\n  // src/mutationCache.ts\n\n  var MutationCache = class extends _subscribableJs.Subscribable {\n    constructor(config = {}) {\n      super();\n      this.config = config;\n      this.#mutations = /* @__PURE__ */new Set();\n      this.#scopes = /* @__PURE__ */new Map();\n      this.#mutationId = 0;\n    }\n    #mutations;\n    #scopes;\n    #mutationId;\n    build(client, options, state) {\n      const mutation = new _mutationJs.Mutation({\n        mutationCache: this,\n        mutationId: ++this.#mutationId,\n        options: client.defaultMutationOptions(options),\n        state\n      });\n      this.add(mutation);\n      return mutation;\n    }\n    add(mutation) {\n      this.#mutations.add(mutation);\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          scopedMutations.push(mutation);\n        } else {\n          this.#scopes.set(scope, [mutation]);\n        }\n      }\n      this.notify({\n        type: \"added\",\n        mutation\n      });\n    }\n    remove(mutation) {\n      if (this.#mutations.delete(mutation)) {\n        const scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n          const scopedMutations = this.#scopes.get(scope);\n          if (scopedMutations) {\n            if (scopedMutations.length > 1) {\n              const index = scopedMutations.indexOf(mutation);\n              if (index !== -1) {\n                scopedMutations.splice(index, 1);\n              }\n            } else if (scopedMutations[0] === mutation) {\n              this.#scopes.delete(scope);\n            }\n          }\n        }\n      }\n      this.notify({\n        type: \"removed\",\n        mutation\n      });\n    }\n    canRun(mutation) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const mutationsWithSameScope = this.#scopes.get(scope);\n        const firstPendingMutation = mutationsWithSameScope?.find(m => m.state.status === \"pending\");\n        return !firstPendingMutation || firstPendingMutation === mutation;\n      } else {\n        return true;\n      }\n    }\n    runNext(mutation) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const foundMutation = this.#scopes.get(scope)?.find(m => m !== mutation && m.state.isPaused);\n        return foundMutation?.continue() ?? Promise.resolve();\n      } else {\n        return Promise.resolve();\n      }\n    }\n    clear() {\n      _notifyManagerJs.notifyManager.batch(() => {\n        this.#mutations.forEach(mutation => {\n          this.notify({\n            type: \"removed\",\n            mutation\n          });\n        });\n        this.#mutations.clear();\n        this.#scopes.clear();\n      });\n    }\n    getAll() {\n      return Array.from(this.#mutations);\n    }\n    find(filters) {\n      const defaultedFilters = {\n        exact: true,\n        ...filters\n      };\n      return this.getAll().find(mutation => (0, _utilsJs.matchMutation)(defaultedFilters, mutation));\n    }\n    findAll(filters = {}) {\n      return this.getAll().filter(mutation => (0, _utilsJs.matchMutation)(filters, mutation));\n    }\n    notify(event) {\n      _notifyManagerJs.notifyManager.batch(() => {\n        this.listeners.forEach(listener => {\n          listener(event);\n        });\n      });\n    }\n    resumePausedMutations() {\n      const pausedMutations = this.getAll().filter(x => x.state.isPaused);\n      return _notifyManagerJs.notifyManager.batch(() => Promise.all(pausedMutations.map(mutation => mutation.continue().catch(_utilsJs.noop))));\n    }\n  };\n  function scopeFor(mutation) {\n    return mutation.options.scope?.id;\n  }\n});","lineCount":137,"map":[[7,2,120,0,"Object"],[7,8,120,0],[7,9,120,0,"defineProperty"],[7,23,120,0],[7,24,120,0,"exports"],[7,31,120,0],[8,4,120,0,"enumerable"],[8,14,120,0],[9,4,120,0,"get"],[9,7,120,0],[9,18,120,0,"get"],[9,19,120,0],[10,6,120,0],[10,13,121,2,"MutationCache"],[10,26,121,15],[11,4,121,15],[12,2,121,15],[13,2,2,0],[13,6,2,0,"_notifyManagerJs"],[13,22,2,0],[13,25,2,0,"require"],[13,32,2,0],[13,33,2,0,"_dependencyMap"],[13,47,2,0],[14,2,3,0],[14,6,3,0,"_mutationJs"],[14,17,3,0],[14,20,3,0,"require"],[14,27,3,0],[14,28,3,0,"_dependencyMap"],[14,42,3,0],[15,2,4,0],[15,6,4,0,"_utilsJs"],[15,14,4,0],[15,17,4,0,"require"],[15,24,4,0],[15,25,4,0,"_dependencyMap"],[15,39,4,0],[16,2,5,0],[16,6,5,0,"_subscribableJs"],[16,21,5,0],[16,24,5,0,"require"],[16,31,5,0],[16,32,5,0,"_dependencyMap"],[16,46,5,0],[17,2,1,0],[19,2,6,0],[19,6,6,4,"MutationCache"],[19,19,6,17],[19,22,6,20],[19,36,6,34,"Subscribable"],[19,51,6,46],[19,52,6,46,"Subscribable"],[19,64,6,46],[19,65,6,47],[20,4,7,2,"constructor"],[20,15,7,13,"constructor"],[20,16,7,14,"config"],[20,22,7,20],[20,25,7,23],[20,26,7,24],[20,27,7,25],[20,29,7,27],[21,6,8,4],[21,11,8,9],[21,12,8,10],[21,13,8,11],[22,6,9,4],[22,10,9,8],[22,11,9,9,"config"],[22,17,9,15],[22,20,9,18,"config"],[22,26,9,24],[23,6,10,4],[23,10,10,8],[23,11,10,9],[23,12,10,10,"mutations"],[23,21,10,19],[23,24,10,22],[23,39,10,38],[23,43,10,42,"Set"],[23,46,10,45],[23,47,10,46],[23,48,10,47],[24,6,11,4],[24,10,11,8],[24,11,11,9],[24,12,11,10,"scopes"],[24,18,11,16],[24,21,11,19],[24,36,11,35],[24,40,11,39,"Map"],[24,43,11,42],[24,44,11,43],[24,45,11,44],[25,6,12,4],[25,10,12,8],[25,11,12,9],[25,12,12,10,"mutationId"],[25,22,12,20],[25,25,12,23],[25,26,12,24],[26,4,13,2],[27,4,14,2],[27,5,14,3,"mutations"],[27,14,14,12],[28,4,15,2],[28,5,15,3,"scopes"],[28,11,15,9],[29,4,16,2],[29,5,16,3,"mutationId"],[29,15,16,13],[30,4,17,2,"build"],[30,9,17,7,"build"],[30,10,17,8,"client"],[30,16,17,14],[30,18,17,16,"options"],[30,25,17,23],[30,27,17,25,"state"],[30,32,17,30],[30,34,17,32],[31,6,18,4],[31,12,18,10,"mutation"],[31,20,18,18],[31,23,18,21],[31,27,18,25,"Mutation"],[31,38,18,33],[31,39,18,33,"Mutation"],[31,47,18,33],[31,48,18,34],[32,8,19,6,"mutationCache"],[32,21,19,19],[32,23,19,21],[32,27,19,25],[33,8,20,6,"mutationId"],[33,18,20,16],[33,20,20,18],[33,22,20,20],[33,26,20,24],[33,27,20,25],[33,28,20,26,"mutationId"],[33,38,20,36],[34,8,21,6,"options"],[34,15,21,13],[34,17,21,15,"client"],[34,23,21,21],[34,24,21,22,"defaultMutationOptions"],[34,46,21,44],[34,47,21,45,"options"],[34,54,21,52],[34,55,21,53],[35,8,22,6,"state"],[36,6,23,4],[36,7,23,5],[36,8,23,6],[37,6,24,4],[37,10,24,8],[37,11,24,9,"add"],[37,14,24,12],[37,15,24,13,"mutation"],[37,23,24,21],[37,24,24,22],[38,6,25,4],[38,13,25,11,"mutation"],[38,21,25,19],[39,4,26,2],[40,4,27,2,"add"],[40,7,27,5,"add"],[40,8,27,6,"mutation"],[40,16,27,14],[40,18,27,16],[41,6,28,4],[41,10,28,8],[41,11,28,9],[41,12,28,10,"mutations"],[41,21,28,19],[41,22,28,20,"add"],[41,25,28,23],[41,26,28,24,"mutation"],[41,34,28,32],[41,35,28,33],[42,6,29,4],[42,12,29,10,"scope"],[42,17,29,15],[42,20,29,18,"scopeFor"],[42,28,29,26],[42,29,29,27,"mutation"],[42,37,29,35],[42,38,29,36],[43,6,30,4],[43,10,30,8],[43,17,30,15,"scope"],[43,22,30,20],[43,27,30,25],[43,35,30,33],[43,37,30,35],[44,8,31,6],[44,14,31,12,"scopedMutations"],[44,29,31,27],[44,32,31,30],[44,36,31,34],[44,37,31,35],[44,38,31,36,"scopes"],[44,44,31,42],[44,45,31,43,"get"],[44,48,31,46],[44,49,31,47,"scope"],[44,54,31,52],[44,55,31,53],[45,8,32,6],[45,12,32,10,"scopedMutations"],[45,27,32,25],[45,29,32,27],[46,10,33,8,"scopedMutations"],[46,25,33,23],[46,26,33,24,"push"],[46,30,33,28],[46,31,33,29,"mutation"],[46,39,33,37],[46,40,33,38],[47,8,34,6],[47,9,34,7],[47,15,34,13],[48,10,35,8],[48,14,35,12],[48,15,35,13],[48,16,35,14,"scopes"],[48,22,35,20],[48,23,35,21,"set"],[48,26,35,24],[48,27,35,25,"scope"],[48,32,35,30],[48,34,35,32],[48,35,35,33,"mutation"],[48,43,35,41],[48,44,35,42],[48,45,35,43],[49,8,36,6],[50,6,37,4],[51,6,38,4],[51,10,38,8],[51,11,38,9,"notify"],[51,17,38,15],[51,18,38,16],[52,8,38,18,"type"],[52,12,38,22],[52,14,38,24],[52,21,38,31],[53,8,38,33,"mutation"],[54,6,38,42],[54,7,38,43],[54,8,38,44],[55,4,39,2],[56,4,40,2,"remove"],[56,10,40,8,"remove"],[56,11,40,9,"mutation"],[56,19,40,17],[56,21,40,19],[57,6,41,4],[57,10,41,8],[57,14,41,12],[57,15,41,13],[57,16,41,14,"mutations"],[57,25,41,23],[57,26,41,24,"delete"],[57,32,41,30],[57,33,41,31,"mutation"],[57,41,41,39],[57,42,41,40],[57,44,41,42],[58,8,42,6],[58,14,42,12,"scope"],[58,19,42,17],[58,22,42,20,"scopeFor"],[58,30,42,28],[58,31,42,29,"mutation"],[58,39,42,37],[58,40,42,38],[59,8,43,6],[59,12,43,10],[59,19,43,17,"scope"],[59,24,43,22],[59,29,43,27],[59,37,43,35],[59,39,43,37],[60,10,44,8],[60,16,44,14,"scopedMutations"],[60,31,44,29],[60,34,44,32],[60,38,44,36],[60,39,44,37],[60,40,44,38,"scopes"],[60,46,44,44],[60,47,44,45,"get"],[60,50,44,48],[60,51,44,49,"scope"],[60,56,44,54],[60,57,44,55],[61,10,45,8],[61,14,45,12,"scopedMutations"],[61,29,45,27],[61,31,45,29],[62,12,46,10],[62,16,46,14,"scopedMutations"],[62,31,46,29],[62,32,46,30,"length"],[62,38,46,36],[62,41,46,39],[62,42,46,40],[62,44,46,42],[63,14,47,12],[63,20,47,18,"index"],[63,25,47,23],[63,28,47,26,"scopedMutations"],[63,43,47,41],[63,44,47,42,"indexOf"],[63,51,47,49],[63,52,47,50,"mutation"],[63,60,47,58],[63,61,47,59],[64,14,48,12],[64,18,48,16,"index"],[64,23,48,21],[64,28,48,26],[64,29,48,27],[64,30,48,28],[64,32,48,30],[65,16,49,14,"scopedMutations"],[65,31,49,29],[65,32,49,30,"splice"],[65,38,49,36],[65,39,49,37,"index"],[65,44,49,42],[65,46,49,44],[65,47,49,45],[65,48,49,46],[66,14,50,12],[67,12,51,10],[67,13,51,11],[67,19,51,17],[67,23,51,21,"scopedMutations"],[67,38,51,36],[67,39,51,37],[67,40,51,38],[67,41,51,39],[67,46,51,44,"mutation"],[67,54,51,52],[67,56,51,54],[68,14,52,12],[68,18,52,16],[68,19,52,17],[68,20,52,18,"scopes"],[68,26,52,24],[68,27,52,25,"delete"],[68,33,52,31],[68,34,52,32,"scope"],[68,39,52,37],[68,40,52,38],[69,12,53,10],[70,10,54,8],[71,8,55,6],[72,6,56,4],[73,6,57,4],[73,10,57,8],[73,11,57,9,"notify"],[73,17,57,15],[73,18,57,16],[74,8,57,18,"type"],[74,12,57,22],[74,14,57,24],[74,23,57,33],[75,8,57,35,"mutation"],[76,6,57,44],[76,7,57,45],[76,8,57,46],[77,4,58,2],[78,4,59,2,"canRun"],[78,10,59,8,"canRun"],[78,11,59,9,"mutation"],[78,19,59,17],[78,21,59,19],[79,6,60,4],[79,12,60,10,"scope"],[79,17,60,15],[79,20,60,18,"scopeFor"],[79,28,60,26],[79,29,60,27,"mutation"],[79,37,60,35],[79,38,60,36],[80,6,61,4],[80,10,61,8],[80,17,61,15,"scope"],[80,22,61,20],[80,27,61,25],[80,35,61,33],[80,37,61,35],[81,8,62,6],[81,14,62,12,"mutationsWithSameScope"],[81,36,62,34],[81,39,62,37],[81,43,62,41],[81,44,62,42],[81,45,62,43,"scopes"],[81,51,62,49],[81,52,62,50,"get"],[81,55,62,53],[81,56,62,54,"scope"],[81,61,62,59],[81,62,62,60],[82,8,63,6],[82,14,63,12,"firstPendingMutation"],[82,34,63,32],[82,37,63,35,"mutationsWithSameScope"],[82,59,63,57],[82,61,63,59,"find"],[82,65,63,63],[82,66,64,9,"m"],[82,67,64,10],[82,71,64,15,"m"],[82,72,64,16],[82,73,64,17,"state"],[82,78,64,22],[82,79,64,23,"status"],[82,85,64,29],[82,90,64,34],[82,99,65,6],[82,100,65,7],[83,8,66,6],[83,15,66,13],[83,16,66,14,"firstPendingMutation"],[83,36,66,34],[83,40,66,38,"firstPendingMutation"],[83,60,66,58],[83,65,66,63,"mutation"],[83,73,66,71],[84,6,67,4],[84,7,67,5],[84,13,67,11],[85,8,68,6],[85,15,68,13],[85,19,68,17],[86,6,69,4],[87,4,70,2],[88,4,71,2,"runNext"],[88,11,71,9,"runNext"],[88,12,71,10,"mutation"],[88,20,71,18],[88,22,71,20],[89,6,72,4],[89,12,72,10,"scope"],[89,17,72,15],[89,20,72,18,"scopeFor"],[89,28,72,26],[89,29,72,27,"mutation"],[89,37,72,35],[89,38,72,36],[90,6,73,4],[90,10,73,8],[90,17,73,15,"scope"],[90,22,73,20],[90,27,73,25],[90,35,73,33],[90,37,73,35],[91,8,74,6],[91,14,74,12,"foundMutation"],[91,27,74,25],[91,30,74,28],[91,34,74,32],[91,35,74,33],[91,36,74,34,"scopes"],[91,42,74,40],[91,43,74,41,"get"],[91,46,74,44],[91,47,74,45,"scope"],[91,52,74,50],[91,53,74,51],[91,55,74,53,"find"],[91,59,74,57],[91,60,74,59,"m"],[91,61,74,60],[91,65,74,65,"m"],[91,66,74,66],[91,71,74,71,"mutation"],[91,79,74,79],[91,83,74,83,"m"],[91,84,74,84],[91,85,74,85,"state"],[91,90,74,90],[91,91,74,91,"isPaused"],[91,99,74,99],[91,100,74,100],[92,8,75,6],[92,15,75,13,"foundMutation"],[92,28,75,26],[92,30,75,28,"continue"],[92,38,75,36],[92,39,75,37],[92,40,75,38],[92,44,75,42,"Promise"],[92,51,75,49],[92,52,75,50,"resolve"],[92,59,75,57],[92,60,75,58],[92,61,75,59],[93,6,76,4],[93,7,76,5],[93,13,76,11],[94,8,77,6],[94,15,77,13,"Promise"],[94,22,77,20],[94,23,77,21,"resolve"],[94,30,77,28],[94,31,77,29],[94,32,77,30],[95,6,78,4],[96,4,79,2],[97,4,80,2,"clear"],[97,9,80,7,"clear"],[97,10,80,7],[97,12,80,10],[98,6,81,4,"notifyManager"],[98,22,81,17],[98,23,81,17,"notifyManager"],[98,36,81,17],[98,37,81,18,"batch"],[98,42,81,23],[98,43,81,24],[98,49,81,30],[99,8,82,6],[99,12,82,10],[99,13,82,11],[99,14,82,12,"mutations"],[99,23,82,21],[99,24,82,22,"forEach"],[99,31,82,29],[99,32,82,31,"mutation"],[99,40,82,39],[99,44,82,44],[100,10,83,8],[100,14,83,12],[100,15,83,13,"notify"],[100,21,83,19],[100,22,83,20],[101,12,83,22,"type"],[101,16,83,26],[101,18,83,28],[101,27,83,37],[102,12,83,39,"mutation"],[103,10,83,48],[103,11,83,49],[103,12,83,50],[104,8,84,6],[104,9,84,7],[104,10,84,8],[105,8,85,6],[105,12,85,10],[105,13,85,11],[105,14,85,12,"mutations"],[105,23,85,21],[105,24,85,22,"clear"],[105,29,85,27],[105,30,85,28],[105,31,85,29],[106,8,86,6],[106,12,86,10],[106,13,86,11],[106,14,86,12,"scopes"],[106,20,86,18],[106,21,86,19,"clear"],[106,26,86,24],[106,27,86,25],[106,28,86,26],[107,6,87,4],[107,7,87,5],[107,8,87,6],[108,4,88,2],[109,4,89,2,"getAll"],[109,10,89,8,"getAll"],[109,11,89,8],[109,13,89,11],[110,6,90,4],[110,13,90,11,"Array"],[110,18,90,16],[110,19,90,17,"from"],[110,23,90,21],[110,24,90,22],[110,28,90,26],[110,29,90,27],[110,30,90,28,"mutations"],[110,39,90,37],[110,40,90,38],[111,4,91,2],[112,4,92,2,"find"],[112,8,92,6,"find"],[112,9,92,7,"filters"],[112,16,92,14],[112,18,92,16],[113,6,93,4],[113,12,93,10,"defaultedFilters"],[113,28,93,26],[113,31,93,29],[114,8,93,31,"exact"],[114,13,93,36],[114,15,93,38],[114,19,93,42],[115,8,93,44],[115,11,93,47,"filters"],[116,6,93,55],[116,7,93,56],[117,6,94,4],[117,13,94,11],[117,17,94,15],[117,18,94,16,"getAll"],[117,24,94,22],[117,25,94,23],[117,26,94,24],[117,27,94,25,"find"],[117,31,94,29],[117,32,95,7,"mutation"],[117,40,95,15],[117,44,95,20],[117,48,95,20,"matchMutation"],[117,56,95,33],[117,57,95,33,"matchMutation"],[117,70,95,33],[117,72,95,34,"defaultedFilters"],[117,88,95,50],[117,90,95,52,"mutation"],[117,98,95,60],[117,99,96,4],[117,100,96,5],[118,4,97,2],[119,4,98,2,"findAll"],[119,11,98,9,"findAll"],[119,12,98,10,"filters"],[119,19,98,17],[119,22,98,20],[119,23,98,21],[119,24,98,22],[119,26,98,24],[120,6,99,4],[120,13,99,11],[120,17,99,15],[120,18,99,16,"getAll"],[120,24,99,22],[120,25,99,23],[120,26,99,24],[120,27,99,25,"filter"],[120,33,99,31],[120,34,99,33,"mutation"],[120,42,99,41],[120,46,99,46],[120,50,99,46,"matchMutation"],[120,58,99,59],[120,59,99,59,"matchMutation"],[120,72,99,59],[120,74,99,60,"filters"],[120,81,99,67],[120,83,99,69,"mutation"],[120,91,99,77],[120,92,99,78],[120,93,99,79],[121,4,100,2],[122,4,101,2,"notify"],[122,10,101,8,"notify"],[122,11,101,9,"event"],[122,16,101,14],[122,18,101,16],[123,6,102,4,"notifyManager"],[123,22,102,17],[123,23,102,17,"notifyManager"],[123,36,102,17],[123,37,102,18,"batch"],[123,42,102,23],[123,43,102,24],[123,49,102,30],[124,8,103,6],[124,12,103,10],[124,13,103,11,"listeners"],[124,22,103,20],[124,23,103,21,"forEach"],[124,30,103,28],[124,31,103,30,"listener"],[124,39,103,38],[124,43,103,43],[125,10,104,8,"listener"],[125,18,104,16],[125,19,104,17,"event"],[125,24,104,22],[125,25,104,23],[126,8,105,6],[126,9,105,7],[126,10,105,8],[127,6,106,4],[127,7,106,5],[127,8,106,6],[128,4,107,2],[129,4,108,2,"resumePausedMutations"],[129,25,108,23,"resumePausedMutations"],[129,26,108,23],[129,28,108,26],[130,6,109,4],[130,12,109,10,"pausedMutations"],[130,27,109,25],[130,30,109,28],[130,34,109,32],[130,35,109,33,"getAll"],[130,41,109,39],[130,42,109,40],[130,43,109,41],[130,44,109,42,"filter"],[130,50,109,48],[130,51,109,50,"x"],[130,52,109,51],[130,56,109,56,"x"],[130,57,109,57],[130,58,109,58,"state"],[130,63,109,63],[130,64,109,64,"isPaused"],[130,72,109,72],[130,73,109,73],[131,6,110,4],[131,13,110,11,"notifyManager"],[131,29,110,24],[131,30,110,24,"notifyManager"],[131,43,110,24],[131,44,110,25,"batch"],[131,49,110,30],[131,50,111,6],[131,56,111,12,"Promise"],[131,63,111,19],[131,64,111,20,"all"],[131,67,111,23],[131,68,112,8,"pausedMutations"],[131,83,112,23],[131,84,112,24,"map"],[131,87,112,27],[131,88,112,29,"mutation"],[131,96,112,37],[131,100,112,42,"mutation"],[131,108,112,50],[131,109,112,51,"continue"],[131,117,112,59],[131,118,112,60],[131,119,112,61],[131,120,112,62,"catch"],[131,125,112,67],[131,126,112,68,"noop"],[131,134,112,72],[131,135,112,72,"noop"],[131,139,112,72],[131,140,112,73],[131,141,113,6],[131,142,114,4],[131,143,114,5],[132,4,115,2],[133,2,116,0],[133,3,116,1],[134,2,117,0],[134,11,117,9,"scopeFor"],[134,19,117,17,"scopeFor"],[134,20,117,18,"mutation"],[134,28,117,26],[134,30,117,28],[135,4,118,2],[135,11,118,9,"mutation"],[135,19,118,17],[135,20,118,18,"options"],[135,27,118,25],[135,28,118,26,"scope"],[135,33,118,31],[135,35,118,33,"id"],[135,37,118,35],[136,2,119,0],[137,0,119,1],[137,3]],"functionMap":{"names":["<global>","MutationCache","MutationCache#constructor","MutationCache#build","MutationCache#add","MutationCache#remove","MutationCache#canRun","mutationsWithSameScope.find$argument_0","MutationCache#runNext","get.find$argument_0","MutationCache#clear","notifyManager.batch$argument_0","forEach$argument_0","MutationCache#getAll","MutationCache#find","getAll.find$argument_0","MutationCache#findAll","getAll.filter$argument_0","MutationCache#notify","listeners.forEach$argument_0","MutationCache#resumePausedMutations","pausedMutations.map$argument_0","scopeFor"],"mappings":"AAA;oBCK;ECC;GDM;EEI;GFS;EGC;GHY;EIC;GJkB;EKC;QCK,mCD;GLM;EOC;0DCG,yCD;GPK;ESC;wBCC;8BCC;ODE;KDG;GTC;EYC;GZE;EaC;MCG,uDD;GbE;EeC;gCCC,8CD;GfC;EiBC;wBPC;6BQC;ORE;KOC;GjBC;EmBC;iDHC,uBG;MTE;4BUC,6CV;OSC;GnBE;CDC;AsBC;CtBE"},"hasCjsExports":false},"type":"js/module"}]}