{"dependencies":[{"name":"./memoize.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"qKR+pMzeD84nB7RjZ3kpdanxObk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _memoizeJs = require(_dependencyMap[0], \"./memoize.js\");\n  var memoize = _interopDefault(_memoizeJs);\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /**\n   * A specialized version of `_.memoize` which clears the memoized function's\n   * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n   *\n   * @private\n   * @param {Function} func The function to have its output memoized.\n   * @returns {Function} Returns the new memoized function.\n   */\n  function memoizeCapped(func) {\n    var result = (0, memoize.default)(func, function (key) {\n      if (cache.size === MAX_MEMOIZE_SIZE) {\n        cache.clear();\n      }\n      return key;\n    });\n    var cache = result.cache;\n    return result;\n  }\n  var _default = memoizeCapped;\n});","lineCount":42,"map":[[12,2,26,0,"Object"],[12,8,26,0],[12,9,26,0,"defineProperty"],[12,23,26,0],[12,24,26,0,"exports"],[12,31,26,0],[13,4,26,0,"enumerable"],[13,14,26,0],[14,4,26,0,"get"],[14,7,26,0],[14,18,26,0,"get"],[14,19,26,0],[15,6,26,0],[15,13,26,0,"_default"],[15,21,26,0],[16,4,26,0],[17,2,26,0],[18,2,1,0],[18,6,1,0,"_memoizeJs"],[18,16,1,0],[18,19,1,0,"require"],[18,26,1,0],[18,27,1,0,"_dependencyMap"],[18,41,1,0],[19,2,1,0],[19,6,1,0,"memoize"],[19,13,1,0],[19,16,1,0,"_interopDefault"],[19,31,1,0],[19,32,1,0,"_memoizeJs"],[19,42,1,0],[20,2,3,0],[21,2,4,0],[21,6,4,4,"MAX_MEMOIZE_SIZE"],[21,22,4,20],[21,25,4,23],[21,28,4,26],[23,2,6,0],[24,0,7,0],[25,0,8,0],[26,0,9,0],[27,0,10,0],[28,0,11,0],[29,0,12,0],[30,0,13,0],[31,2,14,0],[31,11,14,9,"memoizeCapped"],[31,24,14,22,"memoizeCapped"],[31,25,14,23,"func"],[31,29,14,27],[31,31,14,29],[32,4,15,2],[32,8,15,6,"result"],[32,14,15,12],[32,17,15,15],[32,21,15,15,"memoize"],[32,28,15,22],[32,29,15,22,"default"],[32,36,15,22],[32,38,15,23,"func"],[32,42,15,27],[32,44,15,29],[32,54,15,38,"key"],[32,57,15,41],[32,59,15,43],[33,6,16,4],[33,10,16,8,"cache"],[33,15,16,13],[33,16,16,14,"size"],[33,20,16,18],[33,25,16,23,"MAX_MEMOIZE_SIZE"],[33,41,16,39],[33,43,16,41],[34,8,17,6,"cache"],[34,13,17,11],[34,14,17,12,"clear"],[34,19,17,17],[34,20,17,18],[34,21,17,19],[35,6,18,4],[36,6,19,4],[36,13,19,11,"key"],[36,16,19,14],[37,4,20,2],[37,5,20,3],[37,6,20,4],[38,4,22,2],[38,8,22,6,"cache"],[38,13,22,11],[38,16,22,14,"result"],[38,22,22,20],[38,23,22,21,"cache"],[38,28,22,26],[39,4,23,2],[39,11,23,9,"result"],[39,17,23,15],[40,2,24,0],[41,2,26,0],[41,6,26,0,"_default"],[41,14,26,0],[41,17,26,15,"memoizeCapped"],[41,30,26,28],[42,0,26,29],[42,3]],"functionMap":{"names":["<global>","memoizeCapped","memoize$argument_1"],"mappings":"AAA;ACa;6BCC;GDK;CDI"},"hasCjsExports":false},"type":"js/module"}]}