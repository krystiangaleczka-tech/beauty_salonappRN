{"dependencies":[{"name":"../utils/resolveSources","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":161},"end":{"line":5,"column":59,"index":220}}],"key":"0tSWeLBIaokpFkEzxEQuuUkLmpc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.getImageWrapperEventHandler = getImageWrapperEventHandler;\n  var _utilsResolveSources = require(_dependencyMap[0], \"../utils/resolveSources\");\n  function getImageWrapperEventHandler(events, source) {\n    return {\n      onLoad: event => {\n        events?.onLoad?.forEach(e => e?.(event));\n        if (typeof window !== 'undefined') {\n          // On Web there is no way to detect when the image gets displayed, but we can assume it happens on the repaint right after the image is successfully loaded.\n          window.requestAnimationFrame(() => {\n            events?.onDisplay?.forEach(e => e?.());\n          });\n        }\n      },\n      onTransitionEnd: () => events?.onTransitionEnd?.forEach(e => e?.()),\n      onError: () => {\n        // A temporary workaround for blurhash blobs throwing opaque errors when used in an img tag.\n        if (source?.uri && (0, _utilsResolveSources.isBlurhashString)(source?.uri)) {\n          return;\n        }\n        events?.onError?.forEach(e => e?.({\n          source: source || null\n        }));\n      }\n    };\n  }\n});","lineCount":32,"map":[[7,2,7,0,"exports"],[7,9,7,0],[7,10,7,0,"getImageWrapperEventHandler"],[7,37,7,0],[7,40,7,0,"getImageWrapperEventHandler"],[7,67,7,0],[8,2,5,0],[8,6,5,0,"_utilsResolveSources"],[8,26,5,0],[8,29,5,0,"require"],[8,36,5,0],[8,37,5,0,"_dependencyMap"],[8,51,5,0],[9,2,7,7],[9,11,7,16,"getImageWrapperEventHandler"],[9,38,7,43,"getImageWrapperEventHandler"],[9,39,8,2,"events"],[9,45,8,40],[9,47,9,2,"source"],[9,53,9,21],[9,55,10,2],[10,4,11,2],[10,11,11,9],[11,6,12,4,"onLoad"],[11,12,12,10],[11,14,12,13,"event"],[11,19,12,59],[11,23,12,64],[12,8,13,6,"events"],[12,14,13,12],[12,16,13,14,"onLoad"],[12,22,13,20],[12,24,13,22,"forEach"],[12,31,13,29],[12,32,13,31,"e"],[12,33,13,32],[12,37,13,37,"e"],[12,38,13,38],[12,41,13,41,"event"],[12,46,13,46],[12,47,13,47],[12,48,13,48],[13,8,15,6],[13,12,15,10],[13,19,15,17,"window"],[13,25,15,23],[13,30,15,28],[13,41,15,39],[13,43,15,41],[14,10,16,8],[15,10,17,8,"window"],[15,16,17,14],[15,17,17,15,"requestAnimationFrame"],[15,38,17,36],[15,39,17,37],[15,45,17,43],[16,12,18,10,"events"],[16,18,18,16],[16,20,18,18,"onDisplay"],[16,29,18,27],[16,31,18,29,"forEach"],[16,38,18,36],[16,39,18,38,"e"],[16,40,18,39],[16,44,18,44,"e"],[16,45,18,45],[16,48,18,48],[16,49,18,49],[16,50,18,50],[17,10,19,8],[17,11,19,9],[17,12,19,10],[18,8,20,6],[19,6,21,4],[19,7,21,5],[20,6,22,4,"onTransitionEnd"],[20,21,22,19],[20,23,22,21,"onTransitionEnd"],[20,24,22,21],[20,29,22,27,"events"],[20,35,22,33],[20,37,22,35,"onTransitionEnd"],[20,52,22,50],[20,54,22,52,"forEach"],[20,61,22,59],[20,62,22,61,"e"],[20,63,22,62],[20,67,22,67,"e"],[20,68,22,68],[20,71,22,71],[20,72,22,72],[20,73,22,73],[21,6,23,4,"onError"],[21,13,23,11],[21,15,23,13,"onError"],[21,16,23,13],[21,21,23,19],[22,8,24,6],[23,8,25,6],[23,12,25,10,"source"],[23,18,25,16],[23,20,25,18,"uri"],[23,23,25,21],[23,27,25,25],[23,31,25,25,"isBlurhashString"],[23,51,25,41],[23,52,25,41,"isBlurhashString"],[23,68,25,41],[23,70,25,42,"source"],[23,76,25,48],[23,78,25,50,"uri"],[23,81,25,53],[23,82,25,54],[23,84,25,56],[24,10,26,8],[25,8,27,6],[26,8,28,6,"events"],[26,14,28,12],[26,16,28,14,"onError"],[26,23,28,21],[26,25,28,23,"forEach"],[26,32,28,30],[26,33,28,32,"e"],[26,34,28,33],[26,38,28,38,"e"],[26,39,28,39],[26,42,28,42],[27,10,28,44,"source"],[27,16,28,50],[27,18,28,52,"source"],[27,24,28,58],[27,28,28,62],[28,8,28,67],[28,9,28,68],[28,10,28,69],[28,11,28,70],[29,6,29,4],[30,4,30,2],[30,5,30,3],[31,2,31,0],[32,0,31,1],[32,3]],"functionMap":{"names":["<global>","getImageWrapperEventHandler","onLoad","events.onLoad.forEach$argument_0","window.requestAnimationFrame$argument_0","events.onDisplay.forEach$argument_0","onTransitionEnd","events.onTransitionEnd.forEach$argument_0","onError","events.onError.forEach$argument_0"],"mappings":"AAA;OCM;YCK;8BCC,iBD;qCEI;qCCC,YD;SFC;KDE;qBKC,uCC,YD,CL;aOC;+BCK,sCD;KPC;CDE"},"hasCjsExports":false},"type":"js/module"}]}