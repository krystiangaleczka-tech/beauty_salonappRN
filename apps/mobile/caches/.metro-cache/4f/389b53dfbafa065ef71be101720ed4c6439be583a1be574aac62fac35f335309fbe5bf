{"dependencies":[{"name":"popmotion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":32,"index":32}}],"key":"9R4e9vFYMhq+Tk7xvkZO6aYjkW8=","exportNames":["*"],"imports":1}},{"name":"style-value-types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":33},"end":{"line":2,"column":44,"index":77}}],"key":"amhWSRCUxLBa3Njmww3P7iM/NQE=","exportNames":["*"],"imports":1}},{"name":"../../render/dom/utils/css-variables-conversion.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":78},"end":{"line":3,"column":87,"index":165}}],"key":"QVGqL/ts367ySDFU04SgX71RN2Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"correctBoxShadow\", {\n    enumerable: true,\n    get: function () {\n      return correctBoxShadow;\n    }\n  });\n  var _popmotion = require(_dependencyMap[0], \"popmotion\");\n  var _styleValueTypes = require(_dependencyMap[1], \"style-value-types\");\n  var _renderDomUtilsCssVariablesConversionMjs = require(_dependencyMap[2], \"../../render/dom/utils/css-variables-conversion.mjs\");\n  var varToken = \"_$css\";\n  var correctBoxShadow = {\n    correct: function (latest, _a) {\n      var treeScale = _a.treeScale,\n        projectionDelta = _a.projectionDelta;\n      var original = latest;\n      /**\n       * We need to first strip and store CSS variables from the string.\n       */\n      var containsCSSVariables = latest.includes(\"var(\");\n      var cssVariables = [];\n      if (containsCSSVariables) {\n        latest = latest.replace(_renderDomUtilsCssVariablesConversionMjs.cssVariableRegex, function (match) {\n          cssVariables.push(match);\n          return varToken;\n        });\n      }\n      var shadow = _styleValueTypes.complex.parse(latest);\n      // TODO: Doesn't support multiple shadows\n      if (shadow.length > 5) return original;\n      var template = _styleValueTypes.complex.createTransformer(latest);\n      var offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n      // Calculate the overall context scale\n      var xScale = projectionDelta.x.scale * treeScale.x;\n      var yScale = projectionDelta.y.scale * treeScale.y;\n      shadow[0 + offset] /= xScale;\n      shadow[1 + offset] /= yScale;\n      /**\n       * Ideally we'd correct x and y scales individually, but because blur and\n       * spread apply to both we have to take a scale average and apply that instead.\n       * We could potentially improve the outcome of this by incorporating the ratio between\n       * the two scales.\n       */\n      var averageScale = (0, _popmotion.mix)(xScale, yScale, 0.5);\n      // Blur\n      if (typeof shadow[2 + offset] === \"number\") shadow[2 + offset] /= averageScale;\n      // Spread\n      if (typeof shadow[3 + offset] === \"number\") shadow[3 + offset] /= averageScale;\n      var output = template(shadow);\n      if (containsCSSVariables) {\n        var i_1 = 0;\n        output = output.replace(varToken, function () {\n          var cssVariable = cssVariables[i_1];\n          i_1++;\n          return cssVariable;\n        });\n      }\n      return output;\n    }\n  };\n});","lineCount":66,"map":[[7,2,58,0,"Object"],[7,8,58,0],[7,9,58,0,"defineProperty"],[7,23,58,0],[7,24,58,0,"exports"],[7,31,58,0],[8,4,58,0,"enumerable"],[8,14,58,0],[9,4,58,0,"get"],[9,7,58,0],[9,18,58,0,"get"],[9,19,58,0],[10,6,58,0],[10,13,58,9,"correctBoxShadow"],[10,29,58,25],[11,4,58,25],[12,2,58,25],[13,2,1,0],[13,6,1,0,"_popmotion"],[13,16,1,0],[13,19,1,0,"require"],[13,26,1,0],[13,27,1,0,"_dependencyMap"],[13,41,1,0],[14,2,2,0],[14,6,2,0,"_styleValueTypes"],[14,22,2,0],[14,25,2,0,"require"],[14,32,2,0],[14,33,2,0,"_dependencyMap"],[14,47,2,0],[15,2,3,0],[15,6,3,0,"_renderDomUtilsCssVariablesConversionMjs"],[15,46,3,0],[15,49,3,0,"require"],[15,56,3,0],[15,57,3,0,"_dependencyMap"],[15,71,3,0],[16,2,5,0],[16,6,5,4,"varToken"],[16,14,5,12],[16,17,5,15],[16,24,5,22],[17,2,6,0],[17,6,6,4,"correctBoxShadow"],[17,22,6,20],[17,25,6,23],[18,4,7,4,"correct"],[18,11,7,11],[18,13,7,13],[18,22,7,13,"correct"],[18,23,7,23,"latest"],[18,29,7,29],[18,31,7,31,"_a"],[18,33,7,33],[18,35,7,35],[19,6,8,8],[19,10,8,12,"treeScale"],[19,19,8,21],[19,22,8,24,"_a"],[19,24,8,26],[19,25,8,27,"treeScale"],[19,34,8,36],[20,8,8,38,"projectionDelta"],[20,23,8,53],[20,26,8,56,"_a"],[20,28,8,58],[20,29,8,59,"projectionDelta"],[20,44,8,74],[21,6,9,8],[21,10,9,12,"original"],[21,18,9,20],[21,21,9,23,"latest"],[21,27,9,29],[22,6,10,8],[23,0,11,0],[24,0,12,0],[25,6,13,8],[25,10,13,12,"containsCSSVariables"],[25,30,13,32],[25,33,13,35,"latest"],[25,39,13,41],[25,40,13,42,"includes"],[25,48,13,50],[25,49,13,51],[25,55,13,57],[25,56,13,58],[26,6,14,8],[26,10,14,12,"cssVariables"],[26,22,14,24],[26,25,14,27],[26,27,14,29],[27,6,15,8],[27,10,15,12,"containsCSSVariables"],[27,30,15,32],[27,32,15,34],[28,8,16,12,"latest"],[28,14,16,18],[28,17,16,21,"latest"],[28,23,16,27],[28,24,16,28,"replace"],[28,31,16,35],[28,32,16,36,"cssVariableRegex"],[28,72,16,52],[28,73,16,52,"cssVariableRegex"],[28,89,16,52],[28,91,16,54],[28,101,16,64,"match"],[28,106,16,69],[28,108,16,71],[29,10,17,16,"cssVariables"],[29,22,17,28],[29,23,17,29,"push"],[29,27,17,33],[29,28,17,34,"match"],[29,33,17,39],[29,34,17,40],[30,10,18,16],[30,17,18,23,"varToken"],[30,25,18,31],[31,8,19,12],[31,9,19,13],[31,10,19,14],[32,6,20,8],[33,6,21,8],[33,10,21,12,"shadow"],[33,16,21,18],[33,19,21,21,"complex"],[33,35,21,28],[33,36,21,28,"complex"],[33,43,21,28],[33,44,21,29,"parse"],[33,49,21,34],[33,50,21,35,"latest"],[33,56,21,41],[33,57,21,42],[34,6,22,8],[35,6,23,8],[35,10,23,12,"shadow"],[35,16,23,18],[35,17,23,19,"length"],[35,23,23,25],[35,26,23,28],[35,27,23,29],[35,29,24,12],[35,36,24,19,"original"],[35,44,24,27],[36,6,25,8],[36,10,25,12,"template"],[36,18,25,20],[36,21,25,23,"complex"],[36,37,25,30],[36,38,25,30,"complex"],[36,45,25,30],[36,46,25,31,"createTransformer"],[36,63,25,48],[36,64,25,49,"latest"],[36,70,25,55],[36,71,25,56],[37,6,26,8],[37,10,26,12,"offset"],[37,16,26,18],[37,19,26,21],[37,26,26,28,"shadow"],[37,32,26,34],[37,33,26,35],[37,34,26,36],[37,35,26,37],[37,40,26,42],[37,48,26,50],[37,51,26,53],[37,52,26,54],[37,55,26,57],[37,56,26,58],[38,6,27,8],[39,6,28,8],[39,10,28,12,"xScale"],[39,16,28,18],[39,19,28,21,"projectionDelta"],[39,34,28,36],[39,35,28,37,"x"],[39,36,28,38],[39,37,28,39,"scale"],[39,42,28,44],[39,45,28,47,"treeScale"],[39,54,28,56],[39,55,28,57,"x"],[39,56,28,58],[40,6,29,8],[40,10,29,12,"yScale"],[40,16,29,18],[40,19,29,21,"projectionDelta"],[40,34,29,36],[40,35,29,37,"y"],[40,36,29,38],[40,37,29,39,"scale"],[40,42,29,44],[40,45,29,47,"treeScale"],[40,54,29,56],[40,55,29,57,"y"],[40,56,29,58],[41,6,30,8,"shadow"],[41,12,30,14],[41,13,30,15],[41,14,30,16],[41,17,30,19,"offset"],[41,23,30,25],[41,24,30,26],[41,28,30,30,"xScale"],[41,34,30,36],[42,6,31,8,"shadow"],[42,12,31,14],[42,13,31,15],[42,14,31,16],[42,17,31,19,"offset"],[42,23,31,25],[42,24,31,26],[42,28,31,30,"yScale"],[42,34,31,36],[43,6,32,8],[44,0,33,0],[45,0,34,0],[46,0,35,0],[47,0,36,0],[48,0,37,0],[49,6,38,8],[49,10,38,12,"averageScale"],[49,22,38,24],[49,25,38,27],[49,29,38,27,"mix"],[49,39,38,30],[49,40,38,30,"mix"],[49,43,38,30],[49,45,38,31,"xScale"],[49,51,38,37],[49,53,38,39,"yScale"],[49,59,38,45],[49,61,38,47],[49,64,38,50],[49,65,38,51],[50,6,39,8],[51,6,40,8],[51,10,40,12],[51,17,40,19,"shadow"],[51,23,40,25],[51,24,40,26],[51,25,40,27],[51,28,40,30,"offset"],[51,34,40,36],[51,35,40,37],[51,40,40,42],[51,48,40,50],[51,50,41,12,"shadow"],[51,56,41,18],[51,57,41,19],[51,58,41,20],[51,61,41,23,"offset"],[51,67,41,29],[51,68,41,30],[51,72,41,34,"averageScale"],[51,84,41,46],[52,6,42,8],[53,6,43,8],[53,10,43,12],[53,17,43,19,"shadow"],[53,23,43,25],[53,24,43,26],[53,25,43,27],[53,28,43,30,"offset"],[53,34,43,36],[53,35,43,37],[53,40,43,42],[53,48,43,50],[53,50,44,12,"shadow"],[53,56,44,18],[53,57,44,19],[53,58,44,20],[53,61,44,23,"offset"],[53,67,44,29],[53,68,44,30],[53,72,44,34,"averageScale"],[53,84,44,46],[54,6,45,8],[54,10,45,12,"output"],[54,16,45,18],[54,19,45,21,"template"],[54,27,45,29],[54,28,45,30,"shadow"],[54,34,45,36],[54,35,45,37],[55,6,46,8],[55,10,46,12,"containsCSSVariables"],[55,30,46,32],[55,32,46,34],[56,8,47,12],[56,12,47,16,"i_1"],[56,15,47,19],[56,18,47,22],[56,19,47,23],[57,8,48,12,"output"],[57,14,48,18],[57,17,48,21,"output"],[57,23,48,27],[57,24,48,28,"replace"],[57,31,48,35],[57,32,48,36,"varToken"],[57,40,48,44],[57,42,48,46],[57,54,48,58],[58,10,49,16],[58,14,49,20,"cssVariable"],[58,25,49,31],[58,28,49,34,"cssVariables"],[58,40,49,46],[58,41,49,47,"i_1"],[58,44,49,50],[58,45,49,51],[59,10,50,16,"i_1"],[59,13,50,19],[59,15,50,21],[60,10,51,16],[60,17,51,23,"cssVariable"],[60,28,51,34],[61,8,52,12],[61,9,52,13],[61,10,52,14],[62,6,53,8],[63,6,54,8],[63,13,54,15,"output"],[63,19,54,21],[64,4,55,4],[65,2,56,0],[65,3,56,1],[66,0,56,2],[66,3]],"functionMap":{"names":["<global>","correctBoxShadow.correct","latest.replace$argument_1","output.replace$argument_1"],"mappings":"AAA;aCM;sDCS;aDG;8CE6B;aFI;KDG"},"hasCjsExports":false},"type":"js/module"}]}