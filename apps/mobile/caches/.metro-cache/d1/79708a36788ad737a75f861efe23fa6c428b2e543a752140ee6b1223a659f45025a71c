{"dependencies":[{"name":"./_baseGetTag","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":17,"index":17},"end":{"line":1,"column":41,"index":41}}],"key":"D9u35vDFvlkUXMz+IBNjUAZepGE=","exportNames":["*"]}},{"name":"./isObjectLike","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":19,"index":62},"end":{"line":2,"column":44,"index":87}}],"key":"1NdtdOrWPuTg4tR1dSlu9rp7Iig=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseGetTag = require(_dependencyMap[0], \"./_baseGetTag\"),\n    isObjectLike = require(_dependencyMap[1], \"./isObjectLike\");\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]';\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  function baseIsArguments(value) {\n    return isObjectLike(value) && baseGetTag(value) == argsTag;\n  }\n  module.exports = baseIsArguments;\n});","lineCount":19,"map":[[2,2,1,0],[2,6,1,4,"baseGetTag"],[2,16,1,14],[2,19,1,17,"require"],[2,26,1,24],[2,27,1,24,"_dependencyMap"],[2,41,1,24],[2,61,1,40],[2,62,1,41],[3,4,2,4,"isObjectLike"],[3,16,2,16],[3,19,2,19,"require"],[3,26,2,26],[3,27,2,26,"_dependencyMap"],[3,41,2,26],[3,62,2,43],[3,63,2,44],[5,2,4,0],[6,2,5,0],[6,6,5,4,"argsTag"],[6,13,5,11],[6,16,5,14],[6,36,5,34],[8,2,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,2,14,0],[15,11,14,9,"baseIsArguments"],[15,26,14,24,"baseIsArguments"],[15,27,14,25,"value"],[15,32,14,30],[15,34,14,32],[16,4,15,2],[16,11,15,9,"isObjectLike"],[16,23,15,21],[16,24,15,22,"value"],[16,29,15,27],[16,30,15,28],[16,34,15,32,"baseGetTag"],[16,44,15,42],[16,45,15,43,"value"],[16,50,15,48],[16,51,15,49],[16,55,15,53,"argsTag"],[16,62,15,60],[17,2,16,0],[18,2,18,0,"module"],[18,8,18,6],[18,9,18,7,"exports"],[18,16,18,14],[18,19,18,17,"baseIsArguments"],[18,34,18,32],[19,0,18,33],[19,3]],"functionMap":{"names":["<global>","baseIsArguments"],"mappings":"AAA;ACa;CDE"}},"type":"js/module"}]}