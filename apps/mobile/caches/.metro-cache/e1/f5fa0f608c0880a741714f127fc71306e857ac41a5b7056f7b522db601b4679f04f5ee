{"dependencies":[{"name":"./toFinite","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":36,"index":36}}],"key":"JlM04S5mZI/armp0DIV+Z9UNRAY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var toFinite = require(_dependencyMap[0], \"./toFinite\");\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  function toInteger(value) {\n    var result = toFinite(value),\n      remainder = result % 1;\n    return result === result ? remainder ? result - remainder : result : 0;\n  }\n  module.exports = toInteger;\n});","lineCount":36,"map":[[2,2,1,0],[2,6,1,4,"toFinite"],[2,14,1,12],[2,17,1,15,"require"],[2,24,1,22],[2,25,1,22,"_dependencyMap"],[2,39,1,22],[2,56,1,35],[2,57,1,36],[4,2,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,2,29,0],[30,11,29,9,"toInteger"],[30,20,29,18,"toInteger"],[30,21,29,19,"value"],[30,26,29,24],[30,28,29,26],[31,4,30,2],[31,8,30,6,"result"],[31,14,30,12],[31,17,30,15,"toFinite"],[31,25,30,23],[31,26,30,24,"value"],[31,31,30,29],[31,32,30,30],[32,6,31,6,"remainder"],[32,15,31,15],[32,18,31,18,"result"],[32,24,31,24],[32,27,31,27],[32,28,31,28],[33,4,33,2],[33,11,33,9,"result"],[33,17,33,15],[33,22,33,20,"result"],[33,28,33,26],[33,31,33,30,"remainder"],[33,40,33,39],[33,43,33,42,"result"],[33,49,33,48],[33,52,33,51,"remainder"],[33,61,33,60],[33,64,33,63,"result"],[33,70,33,69],[33,73,33,73],[33,74,33,74],[34,2,34,0],[35,2,36,0,"module"],[35,8,36,6],[35,9,36,7,"exports"],[35,16,36,14],[35,19,36,17,"toInteger"],[35,28,36,26],[36,0,36,27],[36,3]],"functionMap":{"names":["<global>","toInteger"],"mappings":"AAA;AC4B;CDK"},"hasCjsExports":true},"type":"js/module"}]}