{"dependencies":[{"name":"framesync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"24PTcPTPyjPm5C9bri3IX7JZMU4=","exportNames":["*"],"imports":1}},{"name":"popmotion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":46,"index":94}}],"key":"9R4e9vFYMhq+Tk7xvkZO6aYjkW8=","exportNames":["*"],"imports":1}},{"name":"../utils/subscription-manager.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":95},"end":{"line":3,"column":72,"index":167}}],"key":"KPAYdzLaTMe+w05XNrJYZWkeVO8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"MotionValue\", {\n    enumerable: true,\n    get: function () {\n      return MotionValue;\n    }\n  });\n  Object.defineProperty(exports, \"motionValue\", {\n    enumerable: true,\n    get: function () {\n      return motionValue;\n    }\n  });\n  var _framesync = require(_dependencyMap[0], \"framesync\");\n  var sync = _interopDefault(_framesync);\n  var _popmotion = require(_dependencyMap[1], \"popmotion\");\n  var _utilsSubscriptionManagerMjs = require(_dependencyMap[2], \"../utils/subscription-manager.mjs\");\n  var isFloat = function (value) {\n    return !isNaN(parseFloat(value));\n  };\n  /**\n   * `MotionValue` is used to track the state and velocity of motion values.\n   *\n   * @public\n   */\n  var MotionValue = /** @class */function () {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    function MotionValue(init) {\n      var _this = this;\n      /**\n       * This will be replaced by the build step with the latest version number.\n       * When MotionValues are provided to motion components, warn if versions are mixed.\n       */\n      this.version = \"6.5.1\";\n      /**\n       * Duration, in milliseconds, since last updating frame.\n       *\n       * @internal\n       */\n      this.timeDelta = 0;\n      /**\n       * Timestamp of the last time this `MotionValue` was updated.\n       *\n       * @internal\n       */\n      this.lastUpdated = 0;\n      /**\n       * Functions to notify when the `MotionValue` updates.\n       *\n       * @internal\n       */\n      this.updateSubscribers = new _utilsSubscriptionManagerMjs.SubscriptionManager();\n      /**\n       * Functions to notify when the velocity updates.\n       *\n       * @internal\n       */\n      this.velocityUpdateSubscribers = new _utilsSubscriptionManagerMjs.SubscriptionManager();\n      /**\n       * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n       *\n       * @internal\n       */\n      this.renderSubscribers = new _utilsSubscriptionManagerMjs.SubscriptionManager();\n      /**\n       * Tracks whether this value can output a velocity. Currently this is only true\n       * if the value is numerical, but we might be able to widen the scope here and support\n       * other value types.\n       *\n       * @internal\n       */\n      this.canTrackVelocity = false;\n      this.updateAndNotify = function (v, render) {\n        if (render === void 0) {\n          render = true;\n        }\n        _this.prev = _this.current;\n        _this.current = v;\n        // Update timestamp\n        var _a = (0, _framesync.getFrameData)(),\n          delta = _a.delta,\n          timestamp = _a.timestamp;\n        if (_this.lastUpdated !== timestamp) {\n          _this.timeDelta = delta;\n          _this.lastUpdated = timestamp;\n          sync.default.postRender(_this.scheduleVelocityCheck);\n        }\n        // Update update subscribers\n        if (_this.prev !== _this.current) {\n          _this.updateSubscribers.notify(_this.current);\n        }\n        // Update velocity subscribers\n        if (_this.velocityUpdateSubscribers.getSize()) {\n          _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n        }\n        // Update render subscribers\n        if (render) {\n          _this.renderSubscribers.notify(_this.current);\n        }\n      };\n      /**\n       * Schedule a velocity check for the next frame.\n       *\n       * This is an instanced and bound function to prevent generating a new\n       * function once per frame.\n       *\n       * @internal\n       */\n      this.scheduleVelocityCheck = function () {\n        return sync.default.postRender(_this.velocityCheck);\n      };\n      /**\n       * Updates `prev` with `current` if the value hasn't been updated this frame.\n       * This ensures velocity calculations return `0`.\n       *\n       * This is an instanced and bound function to prevent generating a new\n       * function once per frame.\n       *\n       * @internal\n       */\n      this.velocityCheck = function (_a) {\n        var timestamp = _a.timestamp;\n        if (timestamp !== _this.lastUpdated) {\n          _this.prev = _this.current;\n          _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n        }\n      };\n      this.hasAnimated = false;\n      this.prev = this.current = init;\n      this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    MotionValue.prototype.onChange = function (subscription) {\n      return this.updateSubscribers.add(subscription);\n    };\n    MotionValue.prototype.clearListeners = function () {\n      this.updateSubscribers.clear();\n    };\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    MotionValue.prototype.onRenderRequest = function (subscription) {\n      // Render immediately\n      subscription(this.get());\n      return this.renderSubscribers.add(subscription);\n    };\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    MotionValue.prototype.attach = function (passiveEffect) {\n      this.passiveEffect = passiveEffect;\n    };\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    MotionValue.prototype.set = function (v, render) {\n      if (render === void 0) {\n        render = true;\n      }\n      if (!render || !this.passiveEffect) {\n        this.updateAndNotify(v, render);\n      } else {\n        this.passiveEffect(v, this.updateAndNotify);\n      }\n    };\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    MotionValue.prototype.get = function () {\n      return this.current;\n    };\n    /**\n     * @public\n     */\n    MotionValue.prototype.getPrevious = function () {\n      return this.prev;\n    };\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    MotionValue.prototype.getVelocity = function () {\n      // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n      return this.canTrackVelocity ?\n      // These casts could be avoided if parseFloat would be typed better\n      (0, _popmotion.velocityPerSecond)(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\n    };\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    MotionValue.prototype.start = function (animation) {\n      var _this = this;\n      this.stop();\n      return new Promise(function (resolve) {\n        _this.hasAnimated = true;\n        _this.stopAnimation = animation(resolve);\n      }).then(function () {\n        return _this.clearAnimation();\n      });\n    };\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    MotionValue.prototype.stop = function () {\n      if (this.stopAnimation) this.stopAnimation();\n      this.clearAnimation();\n    };\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    MotionValue.prototype.isAnimating = function () {\n      return !!this.stopAnimation;\n    };\n    MotionValue.prototype.clearAnimation = function () {\n      this.stopAnimation = null;\n    };\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    MotionValue.prototype.destroy = function () {\n      this.updateSubscribers.clear();\n      this.renderSubscribers.clear();\n      this.stop();\n    };\n    return MotionValue;\n  }();\n  function motionValue(init) {\n    return new MotionValue(init);\n  }\n});","lineCount":339,"map":[[12,2,311,0,"Object"],[12,8,311,0],[12,9,311,0,"defineProperty"],[12,23,311,0],[12,24,311,0,"exports"],[12,31,311,0],[13,4,311,0,"enumerable"],[13,14,311,0],[14,4,311,0,"get"],[14,7,311,0],[14,18,311,0,"get"],[14,19,311,0],[15,6,311,0],[15,13,311,9,"MotionValue"],[15,24,311,20],[16,4,311,20],[17,2,311,20],[18,2,311,0,"Object"],[18,8,311,0],[18,9,311,0,"defineProperty"],[18,23,311,0],[18,24,311,0,"exports"],[18,31,311,0],[19,4,311,0,"enumerable"],[19,14,311,0],[20,4,311,0,"get"],[20,7,311,0],[20,18,311,0,"get"],[20,19,311,0],[21,6,311,0],[21,13,311,22,"motionValue"],[21,24,311,33],[22,4,311,33],[23,2,311,33],[24,2,1,0],[24,6,1,0,"_framesync"],[24,16,1,0],[24,19,1,0,"require"],[24,26,1,0],[24,27,1,0,"_dependencyMap"],[24,41,1,0],[25,2,1,0],[25,6,1,0,"sync"],[25,10,1,0],[25,13,1,0,"_interopDefault"],[25,28,1,0],[25,29,1,0,"_framesync"],[25,39,1,0],[26,2,2,0],[26,6,2,0,"_popmotion"],[26,16,2,0],[26,19,2,0,"require"],[26,26,2,0],[26,27,2,0,"_dependencyMap"],[26,41,2,0],[27,2,3,0],[27,6,3,0,"_utilsSubscriptionManagerMjs"],[27,34,3,0],[27,37,3,0,"require"],[27,44,3,0],[27,45,3,0,"_dependencyMap"],[27,59,3,0],[28,2,5,0],[28,6,5,4,"isFloat"],[28,13,5,11],[28,16,5,14],[28,25,5,14,"isFloat"],[28,26,5,24,"value"],[28,31,5,29],[28,33,5,31],[29,4,6,4],[29,11,6,11],[29,12,6,12,"isNaN"],[29,17,6,17],[29,18,6,18,"parseFloat"],[29,28,6,28],[29,29,6,29,"value"],[29,34,6,34],[29,35,6,35],[29,36,6,36],[30,2,7,0],[30,3,7,1],[31,2,8,0],[32,0,9,0],[33,0,10,0],[34,0,11,0],[35,0,12,0],[36,2,13,0],[36,6,13,4,"MotionValue"],[36,17,13,15],[36,20,13,18],[36,33,13,33],[36,45,13,45],[37,4,14,4],[38,0,15,0],[39,0,16,0],[40,0,17,0],[41,0,18,0],[42,0,19,0],[43,0,20,0],[44,0,21,0],[45,4,22,4],[45,13,22,13,"MotionValue"],[45,24,22,24,"MotionValue"],[45,25,22,25,"init"],[45,29,22,29],[45,31,22,31],[46,6,23,8],[46,10,23,12,"_this"],[46,15,23,17],[46,18,23,20],[46,22,23,24],[47,6,24,8],[48,0,25,0],[49,0,26,0],[50,0,27,0],[51,6,28,8],[51,10,28,12],[51,11,28,13,"version"],[51,18,28,20],[51,21,28,23],[51,28,28,30],[52,6,29,8],[53,0,30,0],[54,0,31,0],[55,0,32,0],[56,0,33,0],[57,6,34,8],[57,10,34,12],[57,11,34,13,"timeDelta"],[57,20,34,22],[57,23,34,25],[57,24,34,26],[58,6,35,8],[59,0,36,0],[60,0,37,0],[61,0,38,0],[62,0,39,0],[63,6,40,8],[63,10,40,12],[63,11,40,13,"lastUpdated"],[63,22,40,24],[63,25,40,27],[63,26,40,28],[64,6,41,8],[65,0,42,0],[66,0,43,0],[67,0,44,0],[68,0,45,0],[69,6,46,8],[69,10,46,12],[69,11,46,13,"updateSubscribers"],[69,28,46,30],[69,31,46,33],[69,35,46,37,"SubscriptionManager"],[69,63,46,56],[69,64,46,56,"SubscriptionManager"],[69,83,46,56],[69,84,46,57],[69,85,46,58],[70,6,47,8],[71,0,48,0],[72,0,49,0],[73,0,50,0],[74,0,51,0],[75,6,52,8],[75,10,52,12],[75,11,52,13,"velocityUpdateSubscribers"],[75,36,52,38],[75,39,52,41],[75,43,52,45,"SubscriptionManager"],[75,71,52,64],[75,72,52,64,"SubscriptionManager"],[75,91,52,64],[75,92,52,65],[75,93,52,66],[76,6,53,8],[77,0,54,0],[78,0,55,0],[79,0,56,0],[80,0,57,0],[81,6,58,8],[81,10,58,12],[81,11,58,13,"renderSubscribers"],[81,28,58,30],[81,31,58,33],[81,35,58,37,"SubscriptionManager"],[81,63,58,56],[81,64,58,56,"SubscriptionManager"],[81,83,58,56],[81,84,58,57],[81,85,58,58],[82,6,59,8],[83,0,60,0],[84,0,61,0],[85,0,62,0],[86,0,63,0],[87,0,64,0],[88,0,65,0],[89,6,66,8],[89,10,66,12],[89,11,66,13,"canTrackVelocity"],[89,27,66,29],[89,30,66,32],[89,35,66,37],[90,6,67,8],[90,10,67,12],[90,11,67,13,"updateAndNotify"],[90,26,67,28],[90,29,67,31],[90,39,67,41,"v"],[90,40,67,42],[90,42,67,44,"render"],[90,48,67,50],[90,50,67,52],[91,8,68,12],[91,12,68,16,"render"],[91,18,68,22],[91,23,68,27],[91,28,68,32],[91,29,68,33],[91,31,68,35],[92,10,68,37,"render"],[92,16,68,43],[92,19,68,46],[92,23,68,50],[93,8,68,52],[94,8,69,12,"_this"],[94,13,69,17],[94,14,69,18,"prev"],[94,18,69,22],[94,21,69,25,"_this"],[94,26,69,30],[94,27,69,31,"current"],[94,34,69,38],[95,8,70,12,"_this"],[95,13,70,17],[95,14,70,18,"current"],[95,21,70,25],[95,24,70,28,"v"],[95,25,70,29],[96,8,71,12],[97,8,72,12],[97,12,72,16,"_a"],[97,14,72,18],[97,17,72,21],[97,21,72,21,"getFrameData"],[97,31,72,33],[97,32,72,33,"getFrameData"],[97,44,72,33],[97,46,72,34],[97,47,72,35],[98,10,72,37,"delta"],[98,15,72,42],[98,18,72,45,"_a"],[98,20,72,47],[98,21,72,48,"delta"],[98,26,72,53],[99,10,72,55,"timestamp"],[99,19,72,64],[99,22,72,67,"_a"],[99,24,72,69],[99,25,72,70,"timestamp"],[99,34,72,79],[100,8,73,12],[100,12,73,16,"_this"],[100,17,73,21],[100,18,73,22,"lastUpdated"],[100,29,73,33],[100,34,73,38,"timestamp"],[100,43,73,47],[100,45,73,49],[101,10,74,16,"_this"],[101,15,74,21],[101,16,74,22,"timeDelta"],[101,25,74,31],[101,28,74,34,"delta"],[101,33,74,39],[102,10,75,16,"_this"],[102,15,75,21],[102,16,75,22,"lastUpdated"],[102,27,75,33],[102,30,75,36,"timestamp"],[102,39,75,45],[103,10,76,16,"sync"],[103,14,76,20],[103,15,76,20,"default"],[103,22,76,20],[103,23,76,21,"postRender"],[103,33,76,31],[103,34,76,32,"_this"],[103,39,76,37],[103,40,76,38,"scheduleVelocityCheck"],[103,61,76,59],[103,62,76,60],[104,8,77,12],[105,8,78,12],[106,8,79,12],[106,12,79,16,"_this"],[106,17,79,21],[106,18,79,22,"prev"],[106,22,79,26],[106,27,79,31,"_this"],[106,32,79,36],[106,33,79,37,"current"],[106,40,79,44],[106,42,79,46],[107,10,80,16,"_this"],[107,15,80,21],[107,16,80,22,"updateSubscribers"],[107,33,80,39],[107,34,80,40,"notify"],[107,40,80,46],[107,41,80,47,"_this"],[107,46,80,52],[107,47,80,53,"current"],[107,54,80,60],[107,55,80,61],[108,8,81,12],[109,8,82,12],[110,8,83,12],[110,12,83,16,"_this"],[110,17,83,21],[110,18,83,22,"velocityUpdateSubscribers"],[110,43,83,47],[110,44,83,48,"getSize"],[110,51,83,55],[110,52,83,56],[110,53,83,57],[110,55,83,59],[111,10,84,16,"_this"],[111,15,84,21],[111,16,84,22,"velocityUpdateSubscribers"],[111,41,84,47],[111,42,84,48,"notify"],[111,48,84,54],[111,49,84,55,"_this"],[111,54,84,60],[111,55,84,61,"getVelocity"],[111,66,84,72],[111,67,84,73],[111,68,84,74],[111,69,84,75],[112,8,85,12],[113,8,86,12],[114,8,87,12],[114,12,87,16,"render"],[114,18,87,22],[114,20,87,24],[115,10,88,16,"_this"],[115,15,88,21],[115,16,88,22,"renderSubscribers"],[115,33,88,39],[115,34,88,40,"notify"],[115,40,88,46],[115,41,88,47,"_this"],[115,46,88,52],[115,47,88,53,"current"],[115,54,88,60],[115,55,88,61],[116,8,89,12],[117,6,90,8],[117,7,90,9],[118,6,91,8],[119,0,92,0],[120,0,93,0],[121,0,94,0],[122,0,95,0],[123,0,96,0],[124,0,97,0],[125,0,98,0],[126,6,99,8],[126,10,99,12],[126,11,99,13,"scheduleVelocityCheck"],[126,32,99,34],[126,35,99,37],[126,47,99,49],[127,8,99,51],[127,15,99,58,"sync"],[127,19,99,62],[127,20,99,62,"default"],[127,27,99,62],[127,28,99,63,"postRender"],[127,38,99,73],[127,39,99,74,"_this"],[127,44,99,79],[127,45,99,80,"velocityCheck"],[127,58,99,93],[127,59,99,94],[128,6,99,96],[128,7,99,97],[129,6,100,8],[130,0,101,0],[131,0,102,0],[132,0,103,0],[133,0,104,0],[134,0,105,0],[135,0,106,0],[136,0,107,0],[137,0,108,0],[138,6,109,8],[138,10,109,12],[138,11,109,13,"velocityCheck"],[138,24,109,26],[138,27,109,29],[138,37,109,39,"_a"],[138,39,109,41],[138,41,109,43],[139,8,110,12],[139,12,110,16,"timestamp"],[139,21,110,25],[139,24,110,28,"_a"],[139,26,110,30],[139,27,110,31,"timestamp"],[139,36,110,40],[140,8,111,12],[140,12,111,16,"timestamp"],[140,21,111,25],[140,26,111,30,"_this"],[140,31,111,35],[140,32,111,36,"lastUpdated"],[140,43,111,47],[140,45,111,49],[141,10,112,16,"_this"],[141,15,112,21],[141,16,112,22,"prev"],[141,20,112,26],[141,23,112,29,"_this"],[141,28,112,34],[141,29,112,35,"current"],[141,36,112,42],[142,10,113,16,"_this"],[142,15,113,21],[142,16,113,22,"velocityUpdateSubscribers"],[142,41,113,47],[142,42,113,48,"notify"],[142,48,113,54],[142,49,113,55,"_this"],[142,54,113,60],[142,55,113,61,"getVelocity"],[142,66,113,72],[142,67,113,73],[142,68,113,74],[142,69,113,75],[143,8,114,12],[144,6,115,8],[144,7,115,9],[145,6,116,8],[145,10,116,12],[145,11,116,13,"hasAnimated"],[145,22,116,24],[145,25,116,27],[145,30,116,32],[146,6,117,8],[146,10,117,12],[146,11,117,13,"prev"],[146,15,117,17],[146,18,117,20],[146,22,117,24],[146,23,117,25,"current"],[146,30,117,32],[146,33,117,35,"init"],[146,37,117,39],[147,6,118,8],[147,10,118,12],[147,11,118,13,"canTrackVelocity"],[147,27,118,29],[147,30,118,32,"isFloat"],[147,37,118,39],[147,38,118,40],[147,42,118,44],[147,43,118,45,"current"],[147,50,118,52],[147,51,118,53],[148,4,119,4],[149,4,120,4],[150,0,121,0],[151,0,122,0],[152,0,123,0],[153,0,124,0],[154,0,125,0],[155,0,126,0],[156,0,127,0],[157,0,128,0],[158,0,129,0],[159,0,130,0],[160,0,131,0],[161,0,132,0],[162,0,133,0],[163,0,134,0],[164,0,135,0],[165,0,136,0],[166,0,137,0],[167,0,138,0],[168,0,139,0],[169,0,140,0],[170,0,141,0],[171,0,142,0],[172,0,143,0],[173,0,144,0],[174,0,145,0],[175,0,146,0],[176,0,147,0],[177,0,148,0],[178,0,149,0],[179,0,150,0],[180,0,151,0],[181,0,152,0],[182,0,153,0],[183,0,154,0],[184,0,155,0],[185,0,156,0],[186,0,157,0],[187,0,158,0],[188,0,159,0],[189,0,160,0],[190,0,161,0],[191,0,162,0],[192,0,163,0],[193,0,164,0],[194,0,165,0],[195,0,166,0],[196,0,167,0],[197,4,168,4,"MotionValue"],[197,15,168,15],[197,16,168,16,"prototype"],[197,25,168,25],[197,26,168,26,"onChange"],[197,34,168,34],[197,37,168,37],[197,47,168,47,"subscription"],[197,59,168,59],[197,61,168,61],[198,6,169,8],[198,13,169,15],[198,17,169,19],[198,18,169,20,"updateSubscribers"],[198,35,169,37],[198,36,169,38,"add"],[198,39,169,41],[198,40,169,42,"subscription"],[198,52,169,54],[198,53,169,55],[199,4,170,4],[199,5,170,5],[200,4,171,4,"MotionValue"],[200,15,171,15],[200,16,171,16,"prototype"],[200,25,171,25],[200,26,171,26,"clearListeners"],[200,40,171,40],[200,43,171,43],[200,55,171,55],[201,6,172,8],[201,10,172,12],[201,11,172,13,"updateSubscribers"],[201,28,172,30],[201,29,172,31,"clear"],[201,34,172,36],[201,35,172,37],[201,36,172,38],[202,4,173,4],[202,5,173,5],[203,4,174,4],[204,0,175,0],[205,0,176,0],[206,0,177,0],[207,0,178,0],[208,0,179,0],[209,0,180,0],[210,0,181,0],[211,4,182,4,"MotionValue"],[211,15,182,15],[211,16,182,16,"prototype"],[211,25,182,25],[211,26,182,26,"onRenderRequest"],[211,41,182,41],[211,44,182,44],[211,54,182,54,"subscription"],[211,66,182,66],[211,68,182,68],[212,6,183,8],[213,6,184,8,"subscription"],[213,18,184,20],[213,19,184,21],[213,23,184,25],[213,24,184,26,"get"],[213,27,184,29],[213,28,184,30],[213,29,184,31],[213,30,184,32],[214,6,185,8],[214,13,185,15],[214,17,185,19],[214,18,185,20,"renderSubscribers"],[214,35,185,37],[214,36,185,38,"add"],[214,39,185,41],[214,40,185,42,"subscription"],[214,52,185,54],[214,53,185,55],[215,4,186,4],[215,5,186,5],[216,4,187,4],[217,0,188,0],[218,0,189,0],[219,0,190,0],[220,0,191,0],[221,4,192,4,"MotionValue"],[221,15,192,15],[221,16,192,16,"prototype"],[221,25,192,25],[221,26,192,26,"attach"],[221,32,192,32],[221,35,192,35],[221,45,192,45,"passiveEffect"],[221,58,192,58],[221,60,192,60],[222,6,193,8],[222,10,193,12],[222,11,193,13,"passiveEffect"],[222,24,193,26],[222,27,193,29,"passiveEffect"],[222,40,193,42],[223,4,194,4],[223,5,194,5],[224,4,195,4],[225,0,196,0],[226,0,197,0],[227,0,198,0],[228,0,199,0],[229,0,200,0],[230,0,201,0],[231,0,202,0],[232,0,203,0],[233,0,204,0],[234,0,205,0],[235,0,206,0],[236,0,207,0],[237,0,208,0],[238,0,209,0],[239,4,210,4,"MotionValue"],[239,15,210,15],[239,16,210,16,"prototype"],[239,25,210,25],[239,26,210,26,"set"],[239,29,210,29],[239,32,210,32],[239,42,210,42,"v"],[239,43,210,43],[239,45,210,45,"render"],[239,51,210,51],[239,53,210,53],[240,6,211,8],[240,10,211,12,"render"],[240,16,211,18],[240,21,211,23],[240,26,211,28],[240,27,211,29],[240,29,211,31],[241,8,211,33,"render"],[241,14,211,39],[241,17,211,42],[241,21,211,46],[242,6,211,48],[243,6,212,8],[243,10,212,12],[243,11,212,13,"render"],[243,17,212,19],[243,21,212,23],[243,22,212,24],[243,26,212,28],[243,27,212,29,"passiveEffect"],[243,40,212,42],[243,42,212,44],[244,8,213,12],[244,12,213,16],[244,13,213,17,"updateAndNotify"],[244,28,213,32],[244,29,213,33,"v"],[244,30,213,34],[244,32,213,36,"render"],[244,38,213,42],[244,39,213,43],[245,6,214,8],[245,7,214,9],[245,13,215,13],[246,8,216,12],[246,12,216,16],[246,13,216,17,"passiveEffect"],[246,26,216,30],[246,27,216,31,"v"],[246,28,216,32],[246,30,216,34],[246,34,216,38],[246,35,216,39,"updateAndNotify"],[246,50,216,54],[246,51,216,55],[247,6,217,8],[248,4,218,4],[248,5,218,5],[249,4,219,4],[250,0,220,0],[251,0,221,0],[252,0,222,0],[253,0,223,0],[254,0,224,0],[255,0,225,0],[256,4,226,4,"MotionValue"],[256,15,226,15],[256,16,226,16,"prototype"],[256,25,226,25],[256,26,226,26,"get"],[256,29,226,29],[256,32,226,32],[256,44,226,44],[257,6,227,8],[257,13,227,15],[257,17,227,19],[257,18,227,20,"current"],[257,25,227,27],[258,4,228,4],[258,5,228,5],[259,4,229,4],[260,0,230,0],[261,0,231,0],[262,4,232,4,"MotionValue"],[262,15,232,15],[262,16,232,16,"prototype"],[262,25,232,25],[262,26,232,26,"getPrevious"],[262,37,232,37],[262,40,232,40],[262,52,232,52],[263,6,233,8],[263,13,233,15],[263,17,233,19],[263,18,233,20,"prev"],[263,22,233,24],[264,4,234,4],[264,5,234,5],[265,4,235,4],[266,0,236,0],[267,0,237,0],[268,0,238,0],[269,0,239,0],[270,0,240,0],[271,0,241,0],[272,4,242,4,"MotionValue"],[272,15,242,15],[272,16,242,16,"prototype"],[272,25,242,25],[272,26,242,26,"getVelocity"],[272,37,242,37],[272,40,242,40],[272,52,242,52],[273,6,243,8],[274,6,244,8],[274,13,244,15],[274,17,244,19],[274,18,244,20,"canTrackVelocity"],[274,34,244,36],[275,6,245,14],[276,6,246,16],[276,10,246,16,"velocityPerSecond"],[276,20,246,33],[276,21,246,33,"velocityPerSecond"],[276,38,246,33],[276,40,246,34,"parseFloat"],[276,50,246,44],[276,51,246,45],[276,55,246,49],[276,56,246,50,"current"],[276,63,246,57],[276,64,246,58],[276,67,247,20,"parseFloat"],[276,77,247,30],[276,78,247,31],[276,82,247,35],[276,83,247,36,"prev"],[276,87,247,40],[276,88,247,41],[276,90,247,43],[276,94,247,47],[276,95,247,48,"timeDelta"],[276,104,247,57],[276,105,247,58],[276,108,248,14],[276,109,248,15],[277,4,249,4],[277,5,249,5],[278,4,250,4],[279,0,251,0],[280,0,252,0],[281,0,253,0],[282,0,254,0],[283,0,255,0],[284,0,256,0],[285,0,257,0],[286,0,258,0],[287,0,259,0],[288,0,260,0],[289,0,261,0],[290,4,262,4,"MotionValue"],[290,15,262,15],[290,16,262,16,"prototype"],[290,25,262,25],[290,26,262,26,"start"],[290,31,262,31],[290,34,262,34],[290,44,262,44,"animation"],[290,53,262,53],[290,55,262,55],[291,6,263,8],[291,10,263,12,"_this"],[291,15,263,17],[291,18,263,20],[291,22,263,24],[292,6,264,8],[292,10,264,12],[292,11,264,13,"stop"],[292,15,264,17],[292,16,264,18],[292,17,264,19],[293,6,265,8],[293,13,265,15],[293,17,265,19,"Promise"],[293,24,265,26],[293,25,265,27],[293,35,265,37,"resolve"],[293,42,265,44],[293,44,265,46],[294,8,266,12,"_this"],[294,13,266,17],[294,14,266,18,"hasAnimated"],[294,25,266,29],[294,28,266,32],[294,32,266,36],[295,8,267,12,"_this"],[295,13,267,17],[295,14,267,18,"stopAnimation"],[295,27,267,31],[295,30,267,34,"animation"],[295,39,267,43],[295,40,267,44,"resolve"],[295,47,267,51],[295,48,267,52],[296,6,268,8],[296,7,268,9],[296,8,268,10],[296,9,268,11,"then"],[296,13,268,15],[296,14,268,16],[296,26,268,28],[297,8,268,30],[297,15,268,37,"_this"],[297,20,268,42],[297,21,268,43,"clearAnimation"],[297,35,268,57],[297,36,268,58],[297,37,268,59],[298,6,268,61],[298,7,268,62],[298,8,268,63],[299,4,269,4],[299,5,269,5],[300,4,270,4],[301,0,271,0],[302,0,272,0],[303,0,273,0],[304,0,274,0],[305,4,275,4,"MotionValue"],[305,15,275,15],[305,16,275,16,"prototype"],[305,25,275,25],[305,26,275,26,"stop"],[305,30,275,30],[305,33,275,33],[305,45,275,45],[306,6,276,8],[306,10,276,12],[306,14,276,16],[306,15,276,17,"stopAnimation"],[306,28,276,30],[306,30,277,12],[306,34,277,16],[306,35,277,17,"stopAnimation"],[306,48,277,30],[306,49,277,31],[306,50,277,32],[307,6,278,8],[307,10,278,12],[307,11,278,13,"clearAnimation"],[307,25,278,27],[307,26,278,28],[307,27,278,29],[308,4,279,4],[308,5,279,5],[309,4,280,4],[310,0,281,0],[311,0,282,0],[312,0,283,0],[313,0,284,0],[314,4,285,4,"MotionValue"],[314,15,285,15],[314,16,285,16,"prototype"],[314,25,285,25],[314,26,285,26,"isAnimating"],[314,37,285,37],[314,40,285,40],[314,52,285,52],[315,6,286,8],[315,13,286,15],[315,14,286,16],[315,15,286,17],[315,19,286,21],[315,20,286,22,"stopAnimation"],[315,33,286,35],[316,4,287,4],[316,5,287,5],[317,4,288,4,"MotionValue"],[317,15,288,15],[317,16,288,16,"prototype"],[317,25,288,25],[317,26,288,26,"clearAnimation"],[317,40,288,40],[317,43,288,43],[317,55,288,55],[318,6,289,8],[318,10,289,12],[318,11,289,13,"stopAnimation"],[318,24,289,26],[318,27,289,29],[318,31,289,33],[319,4,290,4],[319,5,290,5],[320,4,291,4],[321,0,292,0],[322,0,293,0],[323,0,294,0],[324,0,295,0],[325,0,296,0],[326,0,297,0],[327,0,298,0],[328,0,299,0],[329,4,300,4,"MotionValue"],[329,15,300,15],[329,16,300,16,"prototype"],[329,25,300,25],[329,26,300,26,"destroy"],[329,33,300,33],[329,36,300,36],[329,48,300,48],[330,6,301,8],[330,10,301,12],[330,11,301,13,"updateSubscribers"],[330,28,301,30],[330,29,301,31,"clear"],[330,34,301,36],[330,35,301,37],[330,36,301,38],[331,6,302,8],[331,10,302,12],[331,11,302,13,"renderSubscribers"],[331,28,302,30],[331,29,302,31,"clear"],[331,34,302,36],[331,35,302,37],[331,36,302,38],[332,6,303,8],[332,10,303,12],[332,11,303,13,"stop"],[332,15,303,17],[332,16,303,18],[332,17,303,19],[333,4,304,4],[333,5,304,5],[334,4,305,4],[334,11,305,11,"MotionValue"],[334,22,305,22],[335,2,306,0],[335,3,306,1],[335,4,306,2],[335,5,306,4],[336,2,307,0],[336,11,307,9,"motionValue"],[336,22,307,20,"motionValue"],[336,23,307,21,"init"],[336,27,307,25],[336,29,307,27],[337,4,308,4],[337,11,308,11],[337,15,308,15,"MotionValue"],[337,26,308,26],[337,27,308,27,"init"],[337,31,308,31],[337,32,308,32],[338,2,309,0],[339,0,309,1],[339,3]],"functionMap":{"names":["<global>","isFloat","<anonymous>","MotionValue","updateAndNotify","scheduleVelocityCheck","velocityCheck","MotionValue.prototype.onChange","MotionValue.prototype.clearListeners","MotionValue.prototype.onRenderRequest","MotionValue.prototype.attach","MotionValue.prototype.set","MotionValue.prototype.get","MotionValue.prototype.getPrevious","MotionValue.prototype.getVelocity","MotionValue.prototype.start","Promise$argument_0","Promise.then$argument_0","MotionValue.prototype.stop","MotionValue.prototype.isAnimating","MotionValue.prototype.clearAnimation","MotionValue.prototype.destroy","motionValue"],"mappings":"AAA;cCI;CDE;iCEM;ICS;+BC6C;SDuB;qCES,4DF;6BGU;SHM;KDI;qCKiD;KLE;2CMC;KNE;4COS;KPI;mCQM;KRE;gCSgB;KTQ;gCUQ;KVE;wCWI;KXE;wCYQ;KZO;kCaa;2BCG;SDG,OE,8CF;KbC;iCgBM;KhBI;wCiBM;KjBE;2CkBC;KlBE;oCmBU;KnBI;CFE;AsBC;CtBE"},"hasCjsExports":false},"type":"js/module"}]}