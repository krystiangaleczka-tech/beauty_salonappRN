{"dependencies":[{"name":"@motionone/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":12,"index":91},"end":{"line":5,"column":39,"index":118}}],"key":"FS/MZgsOo2zLy6PbOiduH8x3eaQ=","exportNames":["*"],"imports":1}},{"name":"./edge.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":11,"index":131},"end":{"line":6,"column":35,"index":155}}],"key":"xBamlBcEu5fCBTy0kHosIo8RGPc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var utils = require(_dependencyMap[0], \"@motionone/utils\");\n  var edge = require(_dependencyMap[1], \"./edge.cjs.js\");\n  var defaultOffset = [0, 0];\n  function resolveOffset(offset, containerLength, targetLength, targetInset) {\n    var offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    var targetPoint = 0;\n    var containerPoint = 0;\n    if (utils.isNumber(offset)) {\n      /**\n       * If we're provided offset: [0, 0.5, 1] then each number x should become\n       * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n       * and container etc.\n       */\n      offsetDefinition = [offset, offset];\n    } else if (utils.isString(offset)) {\n      offset = offset.trim();\n      if (offset.includes(\" \")) {\n        offsetDefinition = offset.split(\" \");\n      } else {\n        /**\n         * If we're provided a definition like \"100px\" then we want to apply\n         * that only to the top of the target point, leaving the container at 0.\n         * Whereas a named offset like \"end\" should be applied to both.\n         */\n        offsetDefinition = [offset, edge.namedEdges[offset] ? offset : `0`];\n      }\n    }\n    targetPoint = edge.resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = edge.resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n  }\n  exports.resolveOffset = resolveOffset;\n});","lineCount":39,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,3,47,"value"],[5,9,3,52],[5,11,3,54],[6,2,3,59],[6,3,3,60],[6,4,3,61],[7,2,5,0],[7,6,5,4,"utils"],[7,11,5,9],[7,14,5,12,"require"],[7,21,5,19],[7,22,5,19,"_dependencyMap"],[7,36,5,19],[7,59,5,38],[7,60,5,39],[8,2,6,0],[8,6,6,4,"edge"],[8,10,6,8],[8,13,6,11,"require"],[8,20,6,18],[8,21,6,18,"_dependencyMap"],[8,35,6,18],[8,55,6,34],[8,56,6,35],[9,2,8,0],[9,6,8,6,"defaultOffset"],[9,19,8,19],[9,22,8,22],[9,23,8,23],[9,24,8,24],[9,26,8,26],[9,27,8,27],[9,28,8,28],[10,2,9,0],[10,11,9,9,"resolveOffset"],[10,24,9,22,"resolveOffset"],[10,25,9,23,"offset"],[10,31,9,29],[10,33,9,31,"containerLength"],[10,48,9,46],[10,50,9,48,"targetLength"],[10,62,9,60],[10,64,9,62,"targetInset"],[10,75,9,73],[10,77,9,75],[11,4,10,4],[11,8,10,8,"offsetDefinition"],[11,24,10,24],[11,27,10,27,"Array"],[11,32,10,32],[11,33,10,33,"isArray"],[11,40,10,40],[11,41,10,41,"offset"],[11,47,10,47],[11,48,10,48],[11,51,10,51,"offset"],[11,57,10,57],[11,60,10,60,"defaultOffset"],[11,73,10,73],[12,4,11,4],[12,8,11,8,"targetPoint"],[12,19,11,19],[12,22,11,22],[12,23,11,23],[13,4,12,4],[13,8,12,8,"containerPoint"],[13,22,12,22],[13,25,12,25],[13,26,12,26],[14,4,13,4],[14,8,13,8,"utils"],[14,13,13,13],[14,14,13,14,"isNumber"],[14,22,13,22],[14,23,13,23,"offset"],[14,29,13,29],[14,30,13,30],[14,32,13,32],[15,6,14,8],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,6,19,8,"offsetDefinition"],[20,22,19,24],[20,25,19,27],[20,26,19,28,"offset"],[20,32,19,34],[20,34,19,36,"offset"],[20,40,19,42],[20,41,19,43],[21,4,20,4],[21,5,20,5],[21,11,21,9],[21,15,21,13,"utils"],[21,20,21,18],[21,21,21,19,"isString"],[21,29,21,27],[21,30,21,28,"offset"],[21,36,21,34],[21,37,21,35],[21,39,21,37],[22,6,22,8,"offset"],[22,12,22,14],[22,15,22,17,"offset"],[22,21,22,23],[22,22,22,24,"trim"],[22,26,22,28],[22,27,22,29],[22,28,22,30],[23,6,23,8],[23,10,23,12,"offset"],[23,16,23,18],[23,17,23,19,"includes"],[23,25,23,27],[23,26,23,28],[23,29,23,31],[23,30,23,32],[23,32,23,34],[24,8,24,12,"offsetDefinition"],[24,24,24,28],[24,27,24,31,"offset"],[24,33,24,37],[24,34,24,38,"split"],[24,39,24,43],[24,40,24,44],[24,43,24,47],[24,44,24,48],[25,6,25,8],[25,7,25,9],[25,13,26,13],[26,8,27,12],[27,0,28,0],[28,0,29,0],[29,0,30,0],[30,0,31,0],[31,8,32,12,"offsetDefinition"],[31,24,32,28],[31,27,32,31],[31,28,32,32,"offset"],[31,34,32,38],[31,36,32,40,"edge"],[31,40,32,44],[31,41,32,45,"namedEdges"],[31,51,32,55],[31,52,32,56,"offset"],[31,58,32,62],[31,59,32,63],[31,62,32,66,"offset"],[31,68,32,72],[31,71,32,75],[31,74,32,78],[31,75,32,79],[32,6,33,8],[33,4,34,4],[34,4,35,4,"targetPoint"],[34,15,35,15],[34,18,35,18,"edge"],[34,22,35,22],[34,23,35,23,"resolveEdge"],[34,34,35,34],[34,35,35,35,"offsetDefinition"],[34,51,35,51],[34,52,35,52],[34,53,35,53],[34,54,35,54],[34,56,35,56,"targetLength"],[34,68,35,68],[34,70,35,70,"targetInset"],[34,81,35,81],[34,82,35,82],[35,4,36,4,"containerPoint"],[35,18,36,18],[35,21,36,21,"edge"],[35,25,36,25],[35,26,36,26,"resolveEdge"],[35,37,36,37],[35,38,36,38,"offsetDefinition"],[35,54,36,54],[35,55,36,55],[35,56,36,56],[35,57,36,57],[35,59,36,59,"containerLength"],[35,74,36,74],[35,75,36,75],[36,4,37,4],[36,11,37,11,"targetPoint"],[36,22,37,22],[36,25,37,25,"containerPoint"],[36,39,37,39],[37,2,38,0],[38,2,40,0,"exports"],[38,9,40,7],[38,10,40,8,"resolveOffset"],[38,23,40,21],[38,26,40,24,"resolveOffset"],[38,39,40,37],[39,0,40,38],[39,3]],"functionMap":{"names":["<global>","resolveOffset"],"mappings":"AAA;ACQ;CD6B"},"hasCjsExports":true},"type":"js/module"}]}