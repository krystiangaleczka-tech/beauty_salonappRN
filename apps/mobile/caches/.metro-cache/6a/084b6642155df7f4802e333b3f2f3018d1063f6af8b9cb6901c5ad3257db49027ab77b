{"dependencies":[{"name":"./_baseAssignValue","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":22,"index":22},"end":{"line":1,"column":51,"index":51}}],"key":"i3zE/+F9NlIY9q5aJTbxLLITgEY=","exportNames":["*"],"imports":1}},{"name":"./_createAggregator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":23,"index":76},"end":{"line":2,"column":53,"index":106}}],"key":"vgnoyrGBmhoFBtJox8bV6fQjPSw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseAssignValue = require(_dependencyMap[0], \"./_baseAssignValue\"),\n    createAggregator = require(_dependencyMap[1], \"./_createAggregator\");\n\n  /** Used for built-in method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * Creates an object composed of keys generated from the results of running\n   * each element of `collection` thru `iteratee`. The order of grouped values\n   * is determined by the order they occur in `collection`. The corresponding\n   * value of each key is an array of elements responsible for generating the\n   * key. The iteratee is invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n   * // => { '4': [4.2], '6': [6.1, 6.3] }\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.groupBy(['one', 'two', 'three'], 'length');\n   * // => { '3': ['one', 'two'], '5': ['three'] }\n   */\n  var groupBy = createAggregator(function (result, value, key) {\n    if (hasOwnProperty.call(result, key)) {\n      result[key].push(value);\n    } else {\n      baseAssignValue(result, key, [value]);\n    }\n  });\n  module.exports = groupBy;\n});","lineCount":42,"map":[[2,2,1,0],[2,6,1,4,"baseAssignValue"],[2,21,1,19],[2,24,1,22,"require"],[2,31,1,29],[2,32,1,29,"_dependencyMap"],[2,46,1,29],[2,71,1,50],[2,72,1,51],[3,4,2,4,"createAggregator"],[3,20,2,20],[3,23,2,23,"require"],[3,30,2,30],[3,31,2,30,"_dependencyMap"],[3,45,2,30],[3,71,2,52],[3,72,2,53],[5,2,4,0],[6,2,5,0],[6,6,5,4,"objectProto"],[6,17,5,15],[6,20,5,18,"Object"],[6,26,5,24],[6,27,5,25,"prototype"],[6,36,5,34],[8,2,7,0],[9,2,8,0],[9,6,8,4,"hasOwnProperty"],[9,20,8,18],[9,23,8,21,"objectProto"],[9,34,8,32],[9,35,8,33,"hasOwnProperty"],[9,49,8,47],[11,2,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,2,33,0],[34,6,33,4,"groupBy"],[34,13,33,11],[34,16,33,14,"createAggregator"],[34,32,33,30],[34,33,33,31],[34,43,33,40,"result"],[34,49,33,46],[34,51,33,48,"value"],[34,56,33,53],[34,58,33,55,"key"],[34,61,33,58],[34,63,33,60],[35,4,34,2],[35,8,34,6,"hasOwnProperty"],[35,22,34,20],[35,23,34,21,"call"],[35,27,34,25],[35,28,34,26,"result"],[35,34,34,32],[35,36,34,34,"key"],[35,39,34,37],[35,40,34,38],[35,42,34,40],[36,6,35,4,"result"],[36,12,35,10],[36,13,35,11,"key"],[36,16,35,14],[36,17,35,15],[36,18,35,16,"push"],[36,22,35,20],[36,23,35,21,"value"],[36,28,35,26],[36,29,35,27],[37,4,36,2],[37,5,36,3],[37,11,36,9],[38,6,37,4,"baseAssignValue"],[38,21,37,19],[38,22,37,20,"result"],[38,28,37,26],[38,30,37,28,"key"],[38,33,37,31],[38,35,37,33],[38,36,37,34,"value"],[38,41,37,39],[38,42,37,40],[38,43,37,41],[39,4,38,2],[40,2,39,0],[40,3,39,1],[40,4,39,2],[41,2,41,0,"module"],[41,8,41,6],[41,9,41,7,"exports"],[41,16,41,14],[41,19,41,17,"groupBy"],[41,26,41,24],[42,0,41,25],[42,3]],"functionMap":{"names":["<global>","createAggregator$argument_0"],"mappings":"AAA;+BCgC;CDM"},"hasCjsExports":true},"type":"js/module"}]}