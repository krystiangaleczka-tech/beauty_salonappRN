{"dependencies":[{"name":"../../utils/array.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"sfirpJZ9vZSrxOTgNlYQnbiQ69U=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"NodeStack\", {\n    enumerable: true,\n    get: function () {\n      return NodeStack;\n    }\n  });\n  var _utilsArrayMjs = require(_dependencyMap[0], \"../../utils/array.mjs\");\n  var NodeStack = /** @class */function () {\n    function NodeStack() {\n      this.members = [];\n    }\n    NodeStack.prototype.add = function (node) {\n      (0, _utilsArrayMjs.addUniqueItem)(this.members, node);\n      node.scheduleRender();\n    };\n    NodeStack.prototype.remove = function (node) {\n      (0, _utilsArrayMjs.removeItem)(this.members, node);\n      if (node === this.prevLead) {\n        this.prevLead = undefined;\n      }\n      if (node === this.lead) {\n        var prevLead = this.members[this.members.length - 1];\n        if (prevLead) {\n          this.promote(prevLead);\n        }\n      }\n    };\n    NodeStack.prototype.relegate = function (node) {\n      var indexOfNode = this.members.findIndex(function (member) {\n        return node === member;\n      });\n      if (indexOfNode === 0) return false;\n      /**\n       * Find the next projection node that is present\n       */\n      var prevLead;\n      for (var i = indexOfNode; i >= 0; i--) {\n        var member = this.members[i];\n        if (member.isPresent !== false) {\n          prevLead = member;\n          break;\n        }\n      }\n      if (prevLead) {\n        this.promote(prevLead);\n        return true;\n      } else {\n        return false;\n      }\n    };\n    NodeStack.prototype.promote = function (node, preserveFollowOpacity) {\n      var _a;\n      var prevLead = this.lead;\n      if (node === prevLead) return;\n      this.prevLead = prevLead;\n      this.lead = node;\n      node.show();\n      if (prevLead) {\n        prevLead.instance && prevLead.scheduleRender();\n        node.scheduleRender();\n        node.resumeFrom = prevLead;\n        if (preserveFollowOpacity) {\n          node.resumeFrom.preserveOpacity = true;\n        }\n        if (prevLead.snapshot) {\n          node.snapshot = prevLead.snapshot;\n          node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;\n          node.snapshot.isShared = true;\n        }\n        if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n          node.isLayoutDirty = true;\n        }\n        var crossfade = node.options.crossfade;\n        if (crossfade === false) {\n          prevLead.hide();\n        }\n        /**\n         * TODO:\n         *   - Test border radius when previous node was deleted\n         *   - boxShadow mixing\n         *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n         *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n         *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n         * ---\n         *   - Crossfade opacity of root nodes\n         *   - layoutId changes after animation\n         *   - layoutId changes mid animation\n         */\n      }\n    };\n    NodeStack.prototype.exitAnimationComplete = function () {\n      this.members.forEach(function (node) {\n        var _a, _b, _c, _d, _e;\n        (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n      });\n    };\n    NodeStack.prototype.scheduleRender = function () {\n      this.members.forEach(function (node) {\n        node.instance && node.scheduleRender(false);\n      });\n    };\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    NodeStack.prototype.removeLeadSnapshot = function () {\n      if (this.lead && this.lead.snapshot) {\n        this.lead.snapshot = undefined;\n      }\n    };\n    return NodeStack;\n  }();\n});","lineCount":120,"map":[[7,2,112,0,"Object"],[7,8,112,0],[7,9,112,0,"defineProperty"],[7,23,112,0],[7,24,112,0,"exports"],[7,31,112,0],[8,4,112,0,"enumerable"],[8,14,112,0],[9,4,112,0,"get"],[9,7,112,0],[9,18,112,0,"get"],[9,19,112,0],[10,6,112,0],[10,13,112,9,"NodeStack"],[10,22,112,18],[11,4,112,18],[12,2,112,18],[13,2,1,0],[13,6,1,0,"_utilsArrayMjs"],[13,20,1,0],[13,23,1,0,"require"],[13,30,1,0],[13,31,1,0,"_dependencyMap"],[13,45,1,0],[14,2,3,0],[14,6,3,4,"NodeStack"],[14,15,3,13],[14,18,3,16],[14,31,3,31],[14,43,3,43],[15,4,4,4],[15,13,4,13,"NodeStack"],[15,22,4,22,"NodeStack"],[15,23,4,22],[15,25,4,25],[16,6,5,8],[16,10,5,12],[16,11,5,13,"members"],[16,18,5,20],[16,21,5,23],[16,23,5,25],[17,4,6,4],[18,4,7,4,"NodeStack"],[18,13,7,13],[18,14,7,14,"prototype"],[18,23,7,23],[18,24,7,24,"add"],[18,27,7,27],[18,30,7,30],[18,40,7,40,"node"],[18,44,7,44],[18,46,7,46],[19,6,8,8],[19,10,8,8,"addUniqueItem"],[19,24,8,21],[19,25,8,21,"addUniqueItem"],[19,38,8,21],[19,40,8,22],[19,44,8,26],[19,45,8,27,"members"],[19,52,8,34],[19,54,8,36,"node"],[19,58,8,40],[19,59,8,41],[20,6,9,8,"node"],[20,10,9,12],[20,11,9,13,"scheduleRender"],[20,25,9,27],[20,26,9,28],[20,27,9,29],[21,4,10,4],[21,5,10,5],[22,4,11,4,"NodeStack"],[22,13,11,13],[22,14,11,14,"prototype"],[22,23,11,23],[22,24,11,24,"remove"],[22,30,11,30],[22,33,11,33],[22,43,11,43,"node"],[22,47,11,47],[22,49,11,49],[23,6,12,8],[23,10,12,8,"removeItem"],[23,24,12,18],[23,25,12,18,"removeItem"],[23,35,12,18],[23,37,12,19],[23,41,12,23],[23,42,12,24,"members"],[23,49,12,31],[23,51,12,33,"node"],[23,55,12,37],[23,56,12,38],[24,6,13,8],[24,10,13,12,"node"],[24,14,13,16],[24,19,13,21],[24,23,13,25],[24,24,13,26,"prevLead"],[24,32,13,34],[24,34,13,36],[25,8,14,12],[25,12,14,16],[25,13,14,17,"prevLead"],[25,21,14,25],[25,24,14,28,"undefined"],[25,33,14,37],[26,6,15,8],[27,6,16,8],[27,10,16,12,"node"],[27,14,16,16],[27,19,16,21],[27,23,16,25],[27,24,16,26,"lead"],[27,28,16,30],[27,30,16,32],[28,8,17,12],[28,12,17,16,"prevLead"],[28,20,17,24],[28,23,17,27],[28,27,17,31],[28,28,17,32,"members"],[28,35,17,39],[28,36,17,40],[28,40,17,44],[28,41,17,45,"members"],[28,48,17,52],[28,49,17,53,"length"],[28,55,17,59],[28,58,17,62],[28,59,17,63],[28,60,17,64],[29,8,18,12],[29,12,18,16,"prevLead"],[29,20,18,24],[29,22,18,26],[30,10,19,16],[30,14,19,20],[30,15,19,21,"promote"],[30,22,19,28],[30,23,19,29,"prevLead"],[30,31,19,37],[30,32,19,38],[31,8,20,12],[32,6,21,8],[33,4,22,4],[33,5,22,5],[34,4,23,4,"NodeStack"],[34,13,23,13],[34,14,23,14,"prototype"],[34,23,23,23],[34,24,23,24,"relegate"],[34,32,23,32],[34,35,23,35],[34,45,23,45,"node"],[34,49,23,49],[34,51,23,51],[35,6,24,8],[35,10,24,12,"indexOfNode"],[35,21,24,23],[35,24,24,26],[35,28,24,30],[35,29,24,31,"members"],[35,36,24,38],[35,37,24,39,"findIndex"],[35,46,24,48],[35,47,24,49],[35,57,24,59,"member"],[35,63,24,65],[35,65,24,67],[36,8,24,69],[36,15,24,76,"node"],[36,19,24,80],[36,24,24,85,"member"],[36,30,24,91],[37,6,24,93],[37,7,24,94],[37,8,24,95],[38,6,25,8],[38,10,25,12,"indexOfNode"],[38,21,25,23],[38,26,25,28],[38,27,25,29],[38,29,26,12],[38,36,26,19],[38,41,26,24],[39,6,27,8],[40,0,28,0],[41,0,29,0],[42,6,30,8],[42,10,30,12,"prevLead"],[42,18,30,20],[43,6,31,8],[43,11,31,13],[43,15,31,17,"i"],[43,16,31,18],[43,19,31,21,"indexOfNode"],[43,30,31,32],[43,32,31,34,"i"],[43,33,31,35],[43,37,31,39],[43,38,31,40],[43,40,31,42,"i"],[43,41,31,43],[43,43,31,45],[43,45,31,47],[44,8,32,12],[44,12,32,16,"member"],[44,18,32,22],[44,21,32,25],[44,25,32,29],[44,26,32,30,"members"],[44,33,32,37],[44,34,32,38,"i"],[44,35,32,39],[44,36,32,40],[45,8,33,12],[45,12,33,16,"member"],[45,18,33,22],[45,19,33,23,"isPresent"],[45,28,33,32],[45,33,33,37],[45,38,33,42],[45,40,33,44],[46,10,34,16,"prevLead"],[46,18,34,24],[46,21,34,27,"member"],[46,27,34,33],[47,10,35,16],[48,8,36,12],[49,6,37,8],[50,6,38,8],[50,10,38,12,"prevLead"],[50,18,38,20],[50,20,38,22],[51,8,39,12],[51,12,39,16],[51,13,39,17,"promote"],[51,20,39,24],[51,21,39,25,"prevLead"],[51,29,39,33],[51,30,39,34],[52,8,40,12],[52,15,40,19],[52,19,40,23],[53,6,41,8],[53,7,41,9],[53,13,42,13],[54,8,43,12],[54,15,43,19],[54,20,43,24],[55,6,44,8],[56,4,45,4],[56,5,45,5],[57,4,46,4,"NodeStack"],[57,13,46,13],[57,14,46,14,"prototype"],[57,23,46,23],[57,24,46,24,"promote"],[57,31,46,31],[57,34,46,34],[57,44,46,44,"node"],[57,48,46,48],[57,50,46,50,"preserveFollowOpacity"],[57,71,46,71],[57,73,46,73],[58,6,47,8],[58,10,47,12,"_a"],[58,12,47,14],[59,6,48,8],[59,10,48,12,"prevLead"],[59,18,48,20],[59,21,48,23],[59,25,48,27],[59,26,48,28,"lead"],[59,30,48,32],[60,6,49,8],[60,10,49,12,"node"],[60,14,49,16],[60,19,49,21,"prevLead"],[60,27,49,29],[60,29,50,12],[61,6,51,8],[61,10,51,12],[61,11,51,13,"prevLead"],[61,19,51,21],[61,22,51,24,"prevLead"],[61,30,51,32],[62,6,52,8],[62,10,52,12],[62,11,52,13,"lead"],[62,15,52,17],[62,18,52,20,"node"],[62,22,52,24],[63,6,53,8,"node"],[63,10,53,12],[63,11,53,13,"show"],[63,15,53,17],[63,16,53,18],[63,17,53,19],[64,6,54,8],[64,10,54,12,"prevLead"],[64,18,54,20],[64,20,54,22],[65,8,55,12,"prevLead"],[65,16,55,20],[65,17,55,21,"instance"],[65,25,55,29],[65,29,55,33,"prevLead"],[65,37,55,41],[65,38,55,42,"scheduleRender"],[65,52,55,56],[65,53,55,57],[65,54,55,58],[66,8,56,12,"node"],[66,12,56,16],[66,13,56,17,"scheduleRender"],[66,27,56,31],[66,28,56,32],[66,29,56,33],[67,8,57,12,"node"],[67,12,57,16],[67,13,57,17,"resumeFrom"],[67,23,57,27],[67,26,57,30,"prevLead"],[67,34,57,38],[68,8,58,12],[68,12,58,16,"preserveFollowOpacity"],[68,33,58,37],[68,35,58,39],[69,10,59,16,"node"],[69,14,59,20],[69,15,59,21,"resumeFrom"],[69,25,59,31],[69,26,59,32,"preserveOpacity"],[69,41,59,47],[69,44,59,50],[69,48,59,54],[70,8,60,12],[71,8,61,12],[71,12,61,16,"prevLead"],[71,20,61,24],[71,21,61,25,"snapshot"],[71,29,61,33],[71,31,61,35],[72,10,62,16,"node"],[72,14,62,20],[72,15,62,21,"snapshot"],[72,23,62,29],[72,26,62,32,"prevLead"],[72,34,62,40],[72,35,62,41,"snapshot"],[72,43,62,49],[73,10,63,16,"node"],[73,14,63,20],[73,15,63,21,"snapshot"],[73,23,63,29],[73,24,63,30,"latestValues"],[73,36,63,42],[73,39,64,20,"prevLead"],[73,47,64,28],[73,48,64,29,"animationValues"],[73,63,64,44],[73,67,64,48,"prevLead"],[73,75,64,56],[73,76,64,57,"latestValues"],[73,88,64,69],[74,10,65,16,"node"],[74,14,65,20],[74,15,65,21,"snapshot"],[74,23,65,29],[74,24,65,30,"isShared"],[74,32,65,38],[74,35,65,41],[74,39,65,45],[75,8,66,12],[76,8,67,12],[76,12,67,16],[76,13,67,17,"_a"],[76,15,67,19],[76,18,67,22,"node"],[76,22,67,26],[76,23,67,27,"root"],[76,27,67,31],[76,33,67,37],[76,37,67,41],[76,41,67,45,"_a"],[76,43,67,47],[76,48,67,52],[76,53,67,57],[76,54,67,58],[76,57,67,61],[76,62,67,66],[76,63,67,67],[76,66,67,70,"_a"],[76,68,67,72],[76,69,67,73,"isUpdating"],[76,79,67,83],[76,81,67,85],[77,10,68,16,"node"],[77,14,68,20],[77,15,68,21,"isLayoutDirty"],[77,28,68,34],[77,31,68,37],[77,35,68,41],[78,8,69,12],[79,8,70,12],[79,12,70,16,"crossfade"],[79,21,70,25],[79,24,70,28,"node"],[79,28,70,32],[79,29,70,33,"options"],[79,36,70,40],[79,37,70,41,"crossfade"],[79,46,70,50],[80,8,71,12],[80,12,71,16,"crossfade"],[80,21,71,25],[80,26,71,30],[80,31,71,35],[80,33,71,37],[81,10,72,16,"prevLead"],[81,18,72,24],[81,19,72,25,"hide"],[81,23,72,29],[81,24,72,30],[81,25,72,31],[82,8,73,12],[83,8,74,12],[84,0,75,0],[85,0,76,0],[86,0,77,0],[87,0,78,0],[88,0,79,0],[89,0,80,0],[90,0,81,0],[91,0,82,0],[92,0,83,0],[93,0,84,0],[94,0,85,0],[95,6,86,8],[96,4,87,4],[96,5,87,5],[97,4,88,4,"NodeStack"],[97,13,88,13],[97,14,88,14,"prototype"],[97,23,88,23],[97,24,88,24,"exitAnimationComplete"],[97,45,88,45],[97,48,88,48],[97,60,88,60],[98,6,89,8],[98,10,89,12],[98,11,89,13,"members"],[98,18,89,20],[98,19,89,21,"forEach"],[98,26,89,28],[98,27,89,29],[98,37,89,39,"node"],[98,41,89,43],[98,43,89,45],[99,8,90,12],[99,12,90,16,"_a"],[99,14,90,18],[99,16,90,20,"_b"],[99,18,90,22],[99,20,90,24,"_c"],[99,22,90,26],[99,24,90,28,"_d"],[99,26,90,30],[99,28,90,32,"_e"],[99,30,90,34],[100,8,91,12],[100,9,91,13,"_b"],[100,11,91,15],[100,14,91,18],[100,15,91,19,"_a"],[100,17,91,21],[100,20,91,24,"node"],[100,24,91,28],[100,25,91,29,"options"],[100,32,91,36],[100,34,91,38,"onExitComplete"],[100,48,91,52],[100,54,91,58],[100,58,91,62],[100,62,91,66,"_b"],[100,64,91,68],[100,69,91,73],[100,74,91,78],[100,75,91,79],[100,78,91,82],[100,83,91,87],[100,84,91,88],[100,87,91,91,"_b"],[100,89,91,93],[100,90,91,94,"call"],[100,94,91,98],[100,95,91,99,"_a"],[100,97,91,101],[100,98,91,102],[101,8,92,12],[101,9,92,13,"_e"],[101,11,92,15],[101,14,92,18],[101,15,92,19,"_c"],[101,17,92,21],[101,20,92,24,"node"],[101,24,92,28],[101,25,92,29,"resumingFrom"],[101,37,92,41],[101,43,92,47],[101,47,92,51],[101,51,92,55,"_c"],[101,53,92,57],[101,58,92,62],[101,63,92,67],[101,64,92,68],[101,67,92,71],[101,72,92,76],[101,73,92,77],[101,76,92,80],[101,77,92,81,"_d"],[101,79,92,83],[101,82,92,86,"_c"],[101,84,92,88],[101,85,92,89,"options"],[101,92,92,96],[101,94,92,98,"onExitComplete"],[101,108,92,112],[101,114,92,118],[101,118,92,122],[101,122,92,126,"_e"],[101,124,92,128],[101,129,92,133],[101,134,92,138],[101,135,92,139],[101,138,92,142],[101,143,92,147],[101,144,92,148],[101,147,92,151,"_e"],[101,149,92,153],[101,150,92,154,"call"],[101,154,92,158],[101,155,92,159,"_d"],[101,157,92,161],[101,158,92,162],[102,6,93,8],[102,7,93,9],[102,8,93,10],[103,4,94,4],[103,5,94,5],[104,4,95,4,"NodeStack"],[104,13,95,13],[104,14,95,14,"prototype"],[104,23,95,23],[104,24,95,24,"scheduleRender"],[104,38,95,38],[104,41,95,41],[104,53,95,53],[105,6,96,8],[105,10,96,12],[105,11,96,13,"members"],[105,18,96,20],[105,19,96,21,"forEach"],[105,26,96,28],[105,27,96,29],[105,37,96,39,"node"],[105,41,96,43],[105,43,96,45],[106,8,97,12,"node"],[106,12,97,16],[106,13,97,17,"instance"],[106,21,97,25],[106,25,97,29,"node"],[106,29,97,33],[106,30,97,34,"scheduleRender"],[106,44,97,48],[106,45,97,49],[106,50,97,54],[106,51,97,55],[107,6,98,8],[107,7,98,9],[107,8,98,10],[108,4,99,4],[108,5,99,5],[109,4,100,4],[110,0,101,0],[111,0,102,0],[112,0,103,0],[113,4,104,4,"NodeStack"],[113,13,104,13],[113,14,104,14,"prototype"],[113,23,104,23],[113,24,104,24,"removeLeadSnapshot"],[113,42,104,42],[113,45,104,45],[113,57,104,57],[114,6,105,8],[114,10,105,12],[114,14,105,16],[114,15,105,17,"lead"],[114,19,105,21],[114,23,105,25],[114,27,105,29],[114,28,105,30,"lead"],[114,32,105,34],[114,33,105,35,"snapshot"],[114,41,105,43],[114,43,105,45],[115,8,106,12],[115,12,106,16],[115,13,106,17,"lead"],[115,17,106,21],[115,18,106,22,"snapshot"],[115,26,106,30],[115,29,106,33,"undefined"],[115,38,106,42],[116,6,107,8],[117,4,108,4],[117,5,108,5],[118,4,109,4],[118,11,109,11,"NodeStack"],[118,20,109,20],[119,2,110,0],[119,3,110,1],[119,4,110,2],[119,5,110,4],[120,0,110,5],[120,3]],"functionMap":{"names":["<global>","<anonymous>","NodeStack","NodeStack.prototype.add","NodeStack.prototype.remove","NodeStack.prototype.relegate","members.findIndex$argument_0","NodeStack.prototype.promote","NodeStack.prototype.exitAnimationComplete","members.forEach$argument_0","NodeStack.prototype.scheduleRender","NodeStack.prototype.removeLeadSnapshot"],"mappings":"AAA;+BCE;ICC;KDE;8BEC;KFG;iCGC;KHW;mCIC;iDCC,6CD;KJqB;kCMC;KNyC;gDOC;6BCC;SDI;KPC;yCSC;6BDC;SCE;KTC;6CUK;KVI;CDE"},"hasCjsExports":false},"type":"js/module"}]}