{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}},{"name":"../../animation/utils/transitions.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":71,"index":121}}],"key":"hn3Vecu+sEEscvlQG2C6h/71T1g=","exportNames":["*"],"imports":1}},{"name":"./setters.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":122},"end":{"line":3,"column":42,"index":164}}],"key":"Cr17q0J4xEqptsDsq/ikOc5PQhw=","exportNames":["*"],"imports":1}},{"name":"./variants.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":165},"end":{"line":4,"column":48,"index":213}}],"key":"TQrZmYkgA7MgDzQG+HyAZZldAMk=","exportNames":["*"],"imports":1}},{"name":"../html/utils/transform.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":214},"end":{"line":5,"column":62,"index":276}}],"key":"nqf1QO9AljmbwzIqcWwgNPo4e3U=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"animateVisualElement\", {\n    enumerable: true,\n    get: function () {\n      return animateVisualElement;\n    }\n  });\n  Object.defineProperty(exports, \"sortByTreeOrder\", {\n    enumerable: true,\n    get: function () {\n      return sortByTreeOrder;\n    }\n  });\n  Object.defineProperty(exports, \"stopAnimation\", {\n    enumerable: true,\n    get: function () {\n      return stopAnimation;\n    }\n  });\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _animationUtilsTransitionsMjs = require(_dependencyMap[1], \"../../animation/utils/transitions.mjs\");\n  var _settersMjs = require(_dependencyMap[2], \"./setters.mjs\");\n  var _variantsMjs = require(_dependencyMap[3], \"./variants.mjs\");\n  var _htmlUtilsTransformMjs = require(_dependencyMap[4], \"../html/utils/transform.mjs\");\n  function animateVisualElement(visualElement, definition, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    visualElement.notifyAnimationStart(definition);\n    var animation;\n    if (Array.isArray(definition)) {\n      var animations = definition.map(function (variant) {\n        return animateVariant(visualElement, variant, options);\n      });\n      animation = Promise.all(animations);\n    } else if (typeof definition === \"string\") {\n      animation = animateVariant(visualElement, definition, options);\n    } else {\n      var resolvedDefinition = typeof definition === \"function\" ? (0, _variantsMjs.resolveVariant)(visualElement, definition, options.custom) : definition;\n      animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(function () {\n      return visualElement.notifyAnimationComplete(definition);\n    });\n  }\n  function animateVariant(visualElement, variant, options) {\n    var _a;\n    if (options === void 0) {\n      options = {};\n    }\n    var resolved = (0, _variantsMjs.resolveVariant)(visualElement, variant, options.custom);\n    var _b = (resolved || {}).transition,\n      transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\n    if (options.transitionOverride) {\n      transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getAnimation = resolved ? function () {\n      return animateTarget(visualElement, resolved, options);\n    } : function () {\n      return Promise.resolve();\n    };\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size) ? function (forwardDelay) {\n      if (forwardDelay === void 0) {\n        forwardDelay = 0;\n      }\n      var _a = transition.delayChildren,\n        delayChildren = _a === void 0 ? 0 : _a,\n        staggerChildren = transition.staggerChildren,\n        staggerDirection = transition.staggerDirection;\n      return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n    } : function () {\n      return Promise.resolve();\n    };\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    var when = transition.when;\n    if (when) {\n      var _c = (0, _tslib.__read)(when === \"beforeChildren\" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation], 2),\n        first = _c[0],\n        last = _c[1];\n      return first().then(last);\n    } else {\n      return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n  }\n  /**\n   * @internal\n   */\n  function animateTarget(visualElement, definition, _a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a,\n      _d = _c.delay,\n      delay = _d === void 0 ? 0 : _d,\n      transitionOverride = _c.transitionOverride,\n      type = _c.type;\n    var _e = visualElement.makeTargetAnimatable(definition),\n      _f = _e.transition,\n      transition = _f === void 0 ? visualElement.getDefaultTransition() : _f,\n      transitionEnd = _e.transitionEnd,\n      target = (0, _tslib.__rest)(_e, [\"transition\", \"transitionEnd\"]);\n    if (transitionOverride) transition = transitionOverride;\n    var animations = [];\n    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n    for (var key in target) {\n      var value = visualElement.getValue(key);\n      var valueTarget = target[key];\n      if (!value || valueTarget === undefined || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {\n        continue;\n      }\n      var valueTransition = (0, _tslib.__assign)({\n        delay: delay\n      }, transition);\n      /**\n       * Make animation instant if this is a transform prop and we should reduce motion.\n       */\n      if (visualElement.shouldReduceMotion && (0, _htmlUtilsTransformMjs.isTransformProp)(key)) {\n        valueTransition = (0, _tslib.__assign)((0, _tslib.__assign)({}, valueTransition), {\n          type: false,\n          delay: 0\n        });\n      }\n      var animation = (0, _animationUtilsTransitionsMjs.startAnimation)(key, value, valueTarget, valueTransition);\n      animations.push(animation);\n    }\n    return Promise.all(animations).then(function () {\n      transitionEnd && (0, _settersMjs.setTarget)(visualElement, transitionEnd);\n    });\n  }\n  function animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\n    if (delayChildren === void 0) {\n      delayChildren = 0;\n    }\n    if (staggerChildren === void 0) {\n      staggerChildren = 0;\n    }\n    if (staggerDirection === void 0) {\n      staggerDirection = 1;\n    }\n    var animations = [];\n    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    var generateStaggerDuration = staggerDirection === 1 ? function (i) {\n      if (i === void 0) {\n        i = 0;\n      }\n      return i * staggerChildren;\n    } : function (i) {\n      if (i === void 0) {\n        i = 0;\n      }\n      return maxStaggerDuration - i * staggerChildren;\n    };\n    Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach(function (child, i) {\n      animations.push(animateVariant(child, variant, (0, _tslib.__assign)((0, _tslib.__assign)({}, options), {\n        delay: delayChildren + generateStaggerDuration(i)\n      })).then(function () {\n        return child.notifyAnimationComplete(variant);\n      }));\n    });\n    return Promise.all(animations);\n  }\n  function stopAnimation(visualElement) {\n    visualElement.forEachValue(function (value) {\n      return value.stop();\n    });\n  }\n  function sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n  }\n  /**\n   * Decide whether we should block this animation. Previously, we achieved this\n   * just by checking whether the key was listed in protectedKeys, but this\n   * posed problems if an animation was triggered by afterChildren and protectedKeys\n   * had been set to true in the meantime.\n   */\n  function shouldBlockAnimation(_a, key) {\n    var protectedKeys = _a.protectedKeys,\n      needsAnimating = _a.needsAnimating;\n    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n  }\n});","lineCount":197,"map":[[7,2,146,0,"Object"],[7,8,146,0],[7,9,146,0,"defineProperty"],[7,23,146,0],[7,24,146,0,"exports"],[7,31,146,0],[8,4,146,0,"enumerable"],[8,14,146,0],[9,4,146,0,"get"],[9,7,146,0],[9,18,146,0,"get"],[9,19,146,0],[10,6,146,0],[10,13,146,9,"animateVisualElement"],[10,33,146,29],[11,4,146,29],[12,2,146,29],[13,2,146,0,"Object"],[13,8,146,0],[13,9,146,0,"defineProperty"],[13,23,146,0],[13,24,146,0,"exports"],[13,31,146,0],[14,4,146,0,"enumerable"],[14,14,146,0],[15,4,146,0,"get"],[15,7,146,0],[15,18,146,0,"get"],[15,19,146,0],[16,6,146,0],[16,13,146,31,"sortByTreeOrder"],[16,28,146,46],[17,4,146,46],[18,2,146,46],[19,2,146,0,"Object"],[19,8,146,0],[19,9,146,0,"defineProperty"],[19,23,146,0],[19,24,146,0,"exports"],[19,31,146,0],[20,4,146,0,"enumerable"],[20,14,146,0],[21,4,146,0,"get"],[21,7,146,0],[21,18,146,0,"get"],[21,19,146,0],[22,6,146,0],[22,13,146,48,"stopAnimation"],[22,26,146,61],[23,4,146,61],[24,2,146,61],[25,2,1,0],[25,6,1,0,"_tslib"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_animationUtilsTransitionsMjs"],[26,35,2,0],[26,38,2,0,"require"],[26,45,2,0],[26,46,2,0,"_dependencyMap"],[26,60,2,0],[27,2,3,0],[27,6,3,0,"_settersMjs"],[27,17,3,0],[27,20,3,0,"require"],[27,27,3,0],[27,28,3,0,"_dependencyMap"],[27,42,3,0],[28,2,4,0],[28,6,4,0,"_variantsMjs"],[28,18,4,0],[28,21,4,0,"require"],[28,28,4,0],[28,29,4,0,"_dependencyMap"],[28,43,4,0],[29,2,5,0],[29,6,5,0,"_htmlUtilsTransformMjs"],[29,28,5,0],[29,31,5,0,"require"],[29,38,5,0],[29,39,5,0,"_dependencyMap"],[29,53,5,0],[30,2,7,0],[30,11,7,9,"animateVisualElement"],[30,31,7,29,"animateVisualElement"],[30,32,7,30,"visualElement"],[30,45,7,43],[30,47,7,45,"definition"],[30,57,7,55],[30,59,7,57,"options"],[30,66,7,64],[30,68,7,66],[31,4,8,4],[31,8,8,8,"options"],[31,15,8,15],[31,20,8,20],[31,25,8,25],[31,26,8,26],[31,28,8,28],[32,6,8,30,"options"],[32,13,8,37],[32,16,8,40],[32,17,8,41],[32,18,8,42],[33,4,8,44],[34,4,9,4,"visualElement"],[34,17,9,17],[34,18,9,18,"notifyAnimationStart"],[34,38,9,38],[34,39,9,39,"definition"],[34,49,9,49],[34,50,9,50],[35,4,10,4],[35,8,10,8,"animation"],[35,17,10,17],[36,4,11,4],[36,8,11,8,"Array"],[36,13,11,13],[36,14,11,14,"isArray"],[36,21,11,21],[36,22,11,22,"definition"],[36,32,11,32],[36,33,11,33],[36,35,11,35],[37,6,12,8],[37,10,12,12,"animations"],[37,20,12,22],[37,23,12,25,"definition"],[37,33,12,35],[37,34,12,36,"map"],[37,37,12,39],[37,38,12,40],[37,48,12,50,"variant"],[37,55,12,57],[37,57,12,59],[38,8,13,12],[38,15,13,19,"animateVariant"],[38,29,13,33],[38,30,13,34,"visualElement"],[38,43,13,47],[38,45,13,49,"variant"],[38,52,13,56],[38,54,13,58,"options"],[38,61,13,65],[38,62,13,66],[39,6,14,8],[39,7,14,9],[39,8,14,10],[40,6,15,8,"animation"],[40,15,15,17],[40,18,15,20,"Promise"],[40,25,15,27],[40,26,15,28,"all"],[40,29,15,31],[40,30,15,32,"animations"],[40,40,15,42],[40,41,15,43],[41,4,16,4],[41,5,16,5],[41,11,17,9],[41,15,17,13],[41,22,17,20,"definition"],[41,32,17,30],[41,37,17,35],[41,45,17,43],[41,47,17,45],[42,6,18,8,"animation"],[42,15,18,17],[42,18,18,20,"animateVariant"],[42,32,18,34],[42,33,18,35,"visualElement"],[42,46,18,48],[42,48,18,50,"definition"],[42,58,18,60],[42,60,18,62,"options"],[42,67,18,69],[42,68,18,70],[43,4,19,4],[43,5,19,5],[43,11,20,9],[44,6,21,8],[44,10,21,12,"resolvedDefinition"],[44,28,21,30],[44,31,21,33],[44,38,21,40,"definition"],[44,48,21,50],[44,53,21,55],[44,63,21,65],[44,66,22,14],[44,70,22,14,"resolveVariant"],[44,82,22,28],[44,83,22,28,"resolveVariant"],[44,97,22,28],[44,99,22,29,"visualElement"],[44,112,22,42],[44,114,22,44,"definition"],[44,124,22,54],[44,126,22,56,"options"],[44,133,22,63],[44,134,22,64,"custom"],[44,140,22,70],[44,141,22,71],[44,144,23,14,"definition"],[44,154,23,24],[45,6,24,8,"animation"],[45,15,24,17],[45,18,24,20,"animateTarget"],[45,31,24,33],[45,32,24,34,"visualElement"],[45,45,24,47],[45,47,24,49,"resolvedDefinition"],[45,65,24,67],[45,67,24,69,"options"],[45,74,24,76],[45,75,24,77],[46,4,25,4],[47,4,26,4],[47,11,26,11,"animation"],[47,20,26,20],[47,21,26,21,"then"],[47,25,26,25],[47,26,26,26],[47,38,26,38],[48,6,27,8],[48,13,27,15,"visualElement"],[48,26,27,28],[48,27,27,29,"notifyAnimationComplete"],[48,50,27,52],[48,51,27,53,"definition"],[48,61,27,63],[48,62,27,64],[49,4,28,4],[49,5,28,5],[49,6,28,6],[50,2,29,0],[51,2,30,0],[51,11,30,9,"animateVariant"],[51,25,30,23,"animateVariant"],[51,26,30,24,"visualElement"],[51,39,30,37],[51,41,30,39,"variant"],[51,48,30,46],[51,50,30,48,"options"],[51,57,30,55],[51,59,30,57],[52,4,31,4],[52,8,31,8,"_a"],[52,10,31,10],[53,4,32,4],[53,8,32,8,"options"],[53,15,32,15],[53,20,32,20],[53,25,32,25],[53,26,32,26],[53,28,32,28],[54,6,32,30,"options"],[54,13,32,37],[54,16,32,40],[54,17,32,41],[54,18,32,42],[55,4,32,44],[56,4,33,4],[56,8,33,8,"resolved"],[56,16,33,16],[56,19,33,19],[56,23,33,19,"resolveVariant"],[56,35,33,33],[56,36,33,33,"resolveVariant"],[56,50,33,33],[56,52,33,34,"visualElement"],[56,65,33,47],[56,67,33,49,"variant"],[56,74,33,56],[56,76,33,58,"options"],[56,83,33,65],[56,84,33,66,"custom"],[56,90,33,72],[56,91,33,73],[57,4,34,4],[57,8,34,8,"_b"],[57,10,34,10],[57,13,34,13],[57,14,34,14,"resolved"],[57,22,34,22],[57,26,34,26],[57,27,34,27],[57,28,34,28],[57,30,34,30,"transition"],[57,40,34,40],[58,6,34,42,"transition"],[58,16,34,52],[58,19,34,55,"_b"],[58,21,34,57],[58,26,34,62],[58,31,34,67],[58,32,34,68],[58,35,34,71,"visualElement"],[58,48,34,84],[58,49,34,85,"getDefaultTransition"],[58,69,34,105],[58,70,34,106],[58,71,34,107],[58,75,34,111],[58,76,34,112],[58,77,34,113],[58,80,34,116,"_b"],[58,82,34,118],[59,4,35,4],[59,8,35,8,"options"],[59,15,35,15],[59,16,35,16,"transitionOverride"],[59,34,35,34],[59,36,35,36],[60,6,36,8,"transition"],[60,16,36,18],[60,19,36,21,"options"],[60,26,36,28],[60,27,36,29,"transitionOverride"],[60,45,36,47],[61,4,37,4],[62,4,38,4],[63,0,39,0],[64,0,40,0],[65,0,41,0],[66,4,42,4],[66,8,42,8,"getAnimation"],[66,20,42,20],[66,23,42,23,"resolved"],[66,31,42,31],[66,34,43,10],[66,46,43,22],[67,6,43,24],[67,13,43,31,"animateTarget"],[67,26,43,44],[67,27,43,45,"visualElement"],[67,40,43,58],[67,42,43,60,"resolved"],[67,50,43,68],[67,52,43,70,"options"],[67,59,43,77],[67,60,43,78],[68,4,43,80],[68,5,43,81],[68,8,44,10],[68,20,44,22],[69,6,44,24],[69,13,44,31,"Promise"],[69,20,44,38],[69,21,44,39,"resolve"],[69,28,44,46],[69,29,44,47],[69,30,44,48],[70,4,44,50],[70,5,44,51],[71,4,45,4],[72,0,46,0],[73,0,47,0],[74,0,48,0],[75,4,49,4],[75,8,49,8,"getChildAnimations"],[75,26,49,26],[75,29,49,29],[75,30,49,30],[75,31,49,31,"_a"],[75,33,49,33],[75,36,49,36,"visualElement"],[75,49,49,49],[75,50,49,50,"variantChildren"],[75,65,49,65],[75,71,49,71],[75,75,49,75],[75,79,49,79,"_a"],[75,81,49,81],[75,86,49,86],[75,91,49,91],[75,92,49,92],[75,95,49,95],[75,100,49,100],[75,101,49,101],[75,104,49,104,"_a"],[75,106,49,106],[75,107,49,107,"size"],[75,111,49,111],[75,115,50,10],[75,125,50,20,"forwardDelay"],[75,137,50,32],[75,139,50,34],[76,6,51,12],[76,10,51,16,"forwardDelay"],[76,22,51,28],[76,27,51,33],[76,32,51,38],[76,33,51,39],[76,35,51,41],[77,8,51,43,"forwardDelay"],[77,20,51,55],[77,23,51,58],[77,24,51,59],[78,6,51,61],[79,6,52,12],[79,10,52,16,"_a"],[79,12,52,18],[79,15,52,21,"transition"],[79,25,52,31],[79,26,52,32,"delayChildren"],[79,39,52,45],[80,8,52,47,"delayChildren"],[80,21,52,60],[80,24,52,63,"_a"],[80,26,52,65],[80,31,52,70],[80,36,52,75],[80,37,52,76],[80,40,52,79],[80,41,52,80],[80,44,52,83,"_a"],[80,46,52,85],[81,8,52,87,"staggerChildren"],[81,23,52,102],[81,26,52,105,"transition"],[81,36,52,115],[81,37,52,116,"staggerChildren"],[81,52,52,131],[82,8,52,133,"staggerDirection"],[82,24,52,149],[82,27,52,152,"transition"],[82,37,52,162],[82,38,52,163,"staggerDirection"],[82,54,52,179],[83,6,53,12],[83,13,53,19,"animateChildren"],[83,28,53,34],[83,29,53,35,"visualElement"],[83,42,53,48],[83,44,53,50,"variant"],[83,51,53,57],[83,53,53,59,"delayChildren"],[83,66,53,72],[83,69,53,75,"forwardDelay"],[83,81,53,87],[83,83,53,89,"staggerChildren"],[83,98,53,104],[83,100,53,106,"staggerDirection"],[83,116,53,122],[83,118,53,124,"options"],[83,125,53,131],[83,126,53,132],[84,4,54,8],[84,5,54,9],[84,8,55,10],[84,20,55,22],[85,6,55,24],[85,13,55,31,"Promise"],[85,20,55,38],[85,21,55,39,"resolve"],[85,28,55,46],[85,29,55,47],[85,30,55,48],[86,4,55,50],[86,5,55,51],[87,4,56,4],[88,0,57,0],[89,0,58,0],[90,0,59,0],[91,4,60,4],[91,8,60,8,"when"],[91,12,60,12],[91,15,60,15,"transition"],[91,25,60,25],[91,26,60,26,"when"],[91,30,60,30],[92,4,61,4],[92,8,61,8,"when"],[92,12,61,12],[92,14,61,14],[93,6,62,8],[93,10,62,12,"_c"],[93,12,62,14],[93,15,62,17],[93,19,62,17,"__read"],[93,25,62,23],[93,26,62,23,"__read"],[93,32,62,23],[93,34,62,24,"when"],[93,38,62,28],[93,43,62,33],[93,59,62,49],[93,62,63,14],[93,63,63,15,"getAnimation"],[93,75,63,27],[93,77,63,29,"getChildAnimations"],[93,95,63,47],[93,96,63,48],[93,99,64,14],[93,100,64,15,"getChildAnimations"],[93,118,64,33],[93,120,64,35,"getAnimation"],[93,132,64,47],[93,133,64,48],[93,135,64,50],[93,136,64,51],[93,137,64,52],[94,8,64,54,"first"],[94,13,64,59],[94,16,64,62,"_c"],[94,18,64,64],[94,19,64,65],[94,20,64,66],[94,21,64,67],[95,8,64,69,"last"],[95,12,64,73],[95,15,64,76,"_c"],[95,17,64,78],[95,18,64,79],[95,19,64,80],[95,20,64,81],[96,6,65,8],[96,13,65,15,"first"],[96,18,65,20],[96,19,65,21],[96,20,65,22],[96,21,65,23,"then"],[96,25,65,27],[96,26,65,28,"last"],[96,30,65,32],[96,31,65,33],[97,4,66,4],[97,5,66,5],[97,11,67,9],[98,6,68,8],[98,13,68,15,"Promise"],[98,20,68,22],[98,21,68,23,"all"],[98,24,68,26],[98,25,68,27],[98,26,68,28,"getAnimation"],[98,38,68,40],[98,39,68,41],[98,40,68,42],[98,42,68,44,"getChildAnimations"],[98,60,68,62],[98,61,68,63,"options"],[98,68,68,70],[98,69,68,71,"delay"],[98,74,68,76],[98,75,68,77],[98,76,68,78],[98,77,68,79],[99,4,69,4],[100,2,70,0],[101,2,71,0],[102,0,72,0],[103,0,73,0],[104,2,74,0],[104,11,74,9,"animateTarget"],[104,24,74,22,"animateTarget"],[104,25,74,23,"visualElement"],[104,38,74,36],[104,40,74,38,"definition"],[104,50,74,48],[104,52,74,50,"_a"],[104,54,74,52],[104,56,74,54],[105,4,75,4],[105,8,75,8,"_b"],[105,10,75,10],[106,4,76,4],[106,8,76,8,"_c"],[106,10,76,10],[106,13,76,13,"_a"],[106,15,76,15],[106,20,76,20],[106,25,76,25],[106,26,76,26],[106,29,76,29],[106,30,76,30],[106,31,76,31],[106,34,76,34,"_a"],[106,36,76,36],[107,6,76,38,"_d"],[107,8,76,40],[107,11,76,43,"_c"],[107,13,76,45],[107,14,76,46,"delay"],[107,19,76,51],[108,6,76,53,"delay"],[108,11,76,58],[108,14,76,61,"_d"],[108,16,76,63],[108,21,76,68],[108,26,76,73],[108,27,76,74],[108,30,76,77],[108,31,76,78],[108,34,76,81,"_d"],[108,36,76,83],[109,6,76,85,"transitionOverride"],[109,24,76,103],[109,27,76,106,"_c"],[109,29,76,108],[109,30,76,109,"transitionOverride"],[109,48,76,127],[110,6,76,129,"type"],[110,10,76,133],[110,13,76,136,"_c"],[110,15,76,138],[110,16,76,139,"type"],[110,20,76,143],[111,4,77,4],[111,8,77,8,"_e"],[111,10,77,10],[111,13,77,13,"visualElement"],[111,26,77,26],[111,27,77,27,"makeTargetAnimatable"],[111,47,77,47],[111,48,77,48,"definition"],[111,58,77,58],[111,59,77,59],[112,6,77,61,"_f"],[112,8,77,63],[112,11,77,66,"_e"],[112,13,77,68],[112,14,77,69,"transition"],[112,24,77,79],[113,6,77,81,"transition"],[113,16,77,91],[113,19,77,94,"_f"],[113,21,77,96],[113,26,77,101],[113,31,77,106],[113,32,77,107],[113,35,77,110,"visualElement"],[113,48,77,123],[113,49,77,124,"getDefaultTransition"],[113,69,77,144],[113,70,77,145],[113,71,77,146],[113,74,77,149,"_f"],[113,76,77,151],[114,6,77,153,"transitionEnd"],[114,19,77,166],[114,22,77,169,"_e"],[114,24,77,171],[114,25,77,172,"transitionEnd"],[114,38,77,185],[115,6,77,187,"target"],[115,12,77,193],[115,15,77,196],[115,19,77,196,"__rest"],[115,25,77,202],[115,26,77,202,"__rest"],[115,32,77,202],[115,34,77,203,"_e"],[115,36,77,205],[115,38,77,207],[115,39,77,208],[115,51,77,220],[115,53,77,222],[115,68,77,237],[115,69,77,238],[115,70,77,239],[116,4,78,4],[116,8,78,8,"transitionOverride"],[116,26,78,26],[116,28,79,8,"transition"],[116,38,79,18],[116,41,79,21,"transitionOverride"],[116,59,79,39],[117,4,80,4],[117,8,80,8,"animations"],[117,18,80,18],[117,21,80,21],[117,23,80,23],[118,4,81,4],[118,8,81,8,"animationTypeState"],[118,26,81,26],[118,29,81,29,"type"],[118,33,81,33],[118,38,81,38],[118,39,81,39,"_b"],[118,41,81,41],[118,44,81,44,"visualElement"],[118,57,81,57],[118,58,81,58,"animationState"],[118,72,81,72],[118,78,81,78],[118,82,81,82],[118,86,81,86,"_b"],[118,88,81,88],[118,93,81,93],[118,98,81,98],[118,99,81,99],[118,102,81,102],[118,107,81,107],[118,108,81,108],[118,111,81,111,"_b"],[118,113,81,113],[118,114,81,114,"getState"],[118,122,81,122],[118,123,81,123],[118,124,81,124],[118,125,81,125,"type"],[118,129,81,129],[118,130,81,130],[118,131,81,131],[119,4,82,4],[119,9,82,9],[119,13,82,13,"key"],[119,16,82,16],[119,20,82,20,"target"],[119,26,82,26],[119,28,82,28],[120,6,83,8],[120,10,83,12,"value"],[120,15,83,17],[120,18,83,20,"visualElement"],[120,31,83,33],[120,32,83,34,"getValue"],[120,40,83,42],[120,41,83,43,"key"],[120,44,83,46],[120,45,83,47],[121,6,84,8],[121,10,84,12,"valueTarget"],[121,21,84,23],[121,24,84,26,"target"],[121,30,84,32],[121,31,84,33,"key"],[121,34,84,36],[121,35,84,37],[122,6,85,8],[122,10,85,12],[122,11,85,13,"value"],[122,16,85,18],[122,20,86,12,"valueTarget"],[122,31,86,23],[122,36,86,28,"undefined"],[122,45,86,37],[122,49,87,13,"animationTypeState"],[122,67,87,31],[122,71,88,16,"shouldBlockAnimation"],[122,91,88,36],[122,92,88,37,"animationTypeState"],[122,110,88,55],[122,112,88,57,"key"],[122,115,88,60],[122,116,88,62],[122,118,88,64],[123,8,89,12],[124,6,90,8],[125,6,91,8],[125,10,91,12,"valueTransition"],[125,25,91,27],[125,28,91,30],[125,32,91,30,"__assign"],[125,38,91,38],[125,39,91,38,"__assign"],[125,47,91,38],[125,49,91,39],[126,8,91,41,"delay"],[126,13,91,46],[126,15,91,48,"delay"],[127,6,91,54],[127,7,91,55],[127,9,91,57,"transition"],[127,19,91,67],[127,20,91,68],[128,6,92,8],[129,0,93,0],[130,0,94,0],[131,6,95,8],[131,10,95,12,"visualElement"],[131,23,95,25],[131,24,95,26,"shouldReduceMotion"],[131,42,95,44],[131,46,95,48],[131,50,95,48,"isTransformProp"],[131,72,95,63],[131,73,95,63,"isTransformProp"],[131,88,95,63],[131,90,95,64,"key"],[131,93,95,67],[131,94,95,68],[131,96,95,70],[132,8,96,12,"valueTransition"],[132,23,96,27],[132,26,96,30],[132,30,96,30,"__assign"],[132,36,96,38],[132,37,96,38,"__assign"],[132,45,96,38],[132,47,96,39],[132,51,96,39,"__assign"],[132,57,96,47],[132,58,96,47,"__assign"],[132,66,96,47],[132,68,96,48],[132,69,96,49],[132,70,96,50],[132,72,96,52,"valueTransition"],[132,87,96,67],[132,88,96,68],[132,90,96,70],[133,10,96,72,"type"],[133,14,96,76],[133,16,96,78],[133,21,96,83],[134,10,96,85,"delay"],[134,15,96,90],[134,17,96,92],[135,8,96,94],[135,9,96,95],[135,10,96,96],[136,6,97,8],[137,6,98,8],[137,10,98,12,"animation"],[137,19,98,21],[137,22,98,24],[137,26,98,24,"startAnimation"],[137,55,98,38],[137,56,98,38,"startAnimation"],[137,70,98,38],[137,72,98,39,"key"],[137,75,98,42],[137,77,98,44,"value"],[137,82,98,49],[137,84,98,51,"valueTarget"],[137,95,98,62],[137,97,98,64,"valueTransition"],[137,112,98,79],[137,113,98,80],[138,6,99,8,"animations"],[138,16,99,18],[138,17,99,19,"push"],[138,21,99,23],[138,22,99,24,"animation"],[138,31,99,33],[138,32,99,34],[139,4,100,4],[140,4,101,4],[140,11,101,11,"Promise"],[140,18,101,18],[140,19,101,19,"all"],[140,22,101,22],[140,23,101,23,"animations"],[140,33,101,33],[140,34,101,34],[140,35,101,35,"then"],[140,39,101,39],[140,40,101,40],[140,52,101,52],[141,6,102,8,"transitionEnd"],[141,19,102,21],[141,23,102,25],[141,27,102,25,"setTarget"],[141,38,102,34],[141,39,102,34,"setTarget"],[141,48,102,34],[141,50,102,35,"visualElement"],[141,63,102,48],[141,65,102,50,"transitionEnd"],[141,78,102,63],[141,79,102,64],[142,4,103,4],[142,5,103,5],[142,6,103,6],[143,2,104,0],[144,2,105,0],[144,11,105,9,"animateChildren"],[144,26,105,24,"animateChildren"],[144,27,105,25,"visualElement"],[144,40,105,38],[144,42,105,40,"variant"],[144,49,105,47],[144,51,105,49,"delayChildren"],[144,64,105,62],[144,66,105,64,"staggerChildren"],[144,81,105,79],[144,83,105,81,"staggerDirection"],[144,99,105,97],[144,101,105,99,"options"],[144,108,105,106],[144,110,105,108],[145,4,106,4],[145,8,106,8,"delayChildren"],[145,21,106,21],[145,26,106,26],[145,31,106,31],[145,32,106,32],[145,34,106,34],[146,6,106,36,"delayChildren"],[146,19,106,49],[146,22,106,52],[146,23,106,53],[147,4,106,55],[148,4,107,4],[148,8,107,8,"staggerChildren"],[148,23,107,23],[148,28,107,28],[148,33,107,33],[148,34,107,34],[148,36,107,36],[149,6,107,38,"staggerChildren"],[149,21,107,53],[149,24,107,56],[149,25,107,57],[150,4,107,59],[151,4,108,4],[151,8,108,8,"staggerDirection"],[151,24,108,24],[151,29,108,29],[151,34,108,34],[151,35,108,35],[151,37,108,37],[152,6,108,39,"staggerDirection"],[152,22,108,55],[152,25,108,58],[152,26,108,59],[153,4,108,61],[154,4,109,4],[154,8,109,8,"animations"],[154,18,109,18],[154,21,109,21],[154,23,109,23],[155,4,110,4],[155,8,110,8,"maxStaggerDuration"],[155,26,110,26],[155,29,110,29],[155,30,110,30,"visualElement"],[155,43,110,43],[155,44,110,44,"variantChildren"],[155,59,110,59],[155,60,110,60,"size"],[155,64,110,64],[155,67,110,67],[155,68,110,68],[155,72,110,72,"staggerChildren"],[155,87,110,87],[156,4,111,4],[156,8,111,8,"generateStaggerDuration"],[156,31,111,31],[156,34,111,34,"staggerDirection"],[156,50,111,50],[156,55,111,55],[156,56,111,56],[156,59,112,10],[156,69,112,20,"i"],[156,70,112,21],[156,72,112,23],[157,6,113,12],[157,10,113,16,"i"],[157,11,113,17],[157,16,113,22],[157,21,113,27],[157,22,113,28],[157,24,113,30],[158,8,113,32,"i"],[158,9,113,33],[158,12,113,36],[158,13,113,37],[159,6,113,39],[160,6,114,12],[160,13,114,19,"i"],[160,14,114,20],[160,17,114,23,"staggerChildren"],[160,32,114,38],[161,4,115,8],[161,5,115,9],[161,8,116,10],[161,18,116,20,"i"],[161,19,116,21],[161,21,116,23],[162,6,117,12],[162,10,117,16,"i"],[162,11,117,17],[162,16,117,22],[162,21,117,27],[162,22,117,28],[162,24,117,30],[163,8,117,32,"i"],[163,9,117,33],[163,12,117,36],[163,13,117,37],[164,6,117,39],[165,6,118,12],[165,13,118,19,"maxStaggerDuration"],[165,31,118,37],[165,34,118,40,"i"],[165,35,118,41],[165,38,118,44,"staggerChildren"],[165,53,118,59],[166,4,119,8],[166,5,119,9],[167,4,120,4,"Array"],[167,9,120,9],[167,10,120,10,"from"],[167,14,120,14],[167,15,120,15,"visualElement"],[167,28,120,28],[167,29,120,29,"variantChildren"],[167,44,120,44],[167,45,120,45],[167,46,121,9,"sort"],[167,50,121,13],[167,51,121,14,"sortByTreeOrder"],[167,66,121,29],[167,67,121,30],[167,68,122,9,"forEach"],[167,75,122,16],[167,76,122,17],[167,86,122,27,"child"],[167,91,122,32],[167,93,122,34,"i"],[167,94,122,35],[167,96,122,37],[168,6,123,8,"animations"],[168,16,123,18],[168,17,123,19,"push"],[168,21,123,23],[168,22,123,24,"animateVariant"],[168,36,123,38],[168,37,123,39,"child"],[168,42,123,44],[168,44,123,46,"variant"],[168,51,123,53],[168,53,123,55],[168,57,123,55,"__assign"],[168,63,123,63],[168,64,123,63,"__assign"],[168,72,123,63],[168,74,123,64],[168,78,123,64,"__assign"],[168,84,123,72],[168,85,123,72,"__assign"],[168,93,123,72],[168,95,123,73],[168,96,123,74],[168,97,123,75],[168,99,123,77,"options"],[168,106,123,84],[168,107,123,85],[168,109,123,87],[169,8,123,89,"delay"],[169,13,123,94],[169,15,123,96,"delayChildren"],[169,28,123,109],[169,31,123,112,"generateStaggerDuration"],[169,54,123,135],[169,55,123,136,"i"],[169,56,123,137],[170,6,123,139],[170,7,123,140],[170,8,123,141],[170,9,123,142],[170,10,123,143,"then"],[170,14,123,147],[170,15,123,148],[170,27,123,160],[171,8,123,162],[171,15,123,169,"child"],[171,20,123,174],[171,21,123,175,"notifyAnimationComplete"],[171,44,123,198],[171,45,123,199,"variant"],[171,52,123,206],[171,53,123,207],[172,6,123,209],[172,7,123,210],[172,8,123,211],[172,9,123,212],[173,4,124,4],[173,5,124,5],[173,6,124,6],[174,4,125,4],[174,11,125,11,"Promise"],[174,18,125,18],[174,19,125,19,"all"],[174,22,125,22],[174,23,125,23,"animations"],[174,33,125,33],[174,34,125,34],[175,2,126,0],[176,2,127,0],[176,11,127,9,"stopAnimation"],[176,24,127,22,"stopAnimation"],[176,25,127,23,"visualElement"],[176,38,127,36],[176,40,127,38],[177,4,128,4,"visualElement"],[177,17,128,17],[177,18,128,18,"forEachValue"],[177,30,128,30],[177,31,128,31],[177,41,128,41,"value"],[177,46,128,46],[177,48,128,48],[178,6,128,50],[178,13,128,57,"value"],[178,18,128,62],[178,19,128,63,"stop"],[178,23,128,67],[178,24,128,68],[178,25,128,69],[179,4,128,71],[179,5,128,72],[179,6,128,73],[180,2,129,0],[181,2,130,0],[181,11,130,9,"sortByTreeOrder"],[181,26,130,24,"sortByTreeOrder"],[181,27,130,25,"a"],[181,28,130,26],[181,30,130,28,"b"],[181,31,130,29],[181,33,130,31],[182,4,131,4],[182,11,131,11,"a"],[182,12,131,12],[182,13,131,13,"sortNodePosition"],[182,29,131,29],[182,30,131,30,"b"],[182,31,131,31],[182,32,131,32],[183,2,132,0],[184,2,133,0],[185,0,134,0],[186,0,135,0],[187,0,136,0],[188,0,137,0],[189,0,138,0],[190,2,139,0],[190,11,139,9,"shouldBlockAnimation"],[190,31,139,29,"shouldBlockAnimation"],[190,32,139,30,"_a"],[190,34,139,32],[190,36,139,34,"key"],[190,39,139,37],[190,41,139,39],[191,4,140,4],[191,8,140,8,"protectedKeys"],[191,21,140,21],[191,24,140,24,"_a"],[191,26,140,26],[191,27,140,27,"protectedKeys"],[191,40,140,40],[192,6,140,42,"needsAnimating"],[192,20,140,56],[192,23,140,59,"_a"],[192,25,140,61],[192,26,140,62,"needsAnimating"],[192,40,140,76],[193,4,141,4],[193,8,141,8,"shouldBlock"],[193,19,141,19],[193,22,141,22,"protectedKeys"],[193,35,141,35],[193,36,141,36,"hasOwnProperty"],[193,50,141,50],[193,51,141,51,"key"],[193,54,141,54],[193,55,141,55],[193,59,141,59,"needsAnimating"],[193,73,141,73],[193,74,141,74,"key"],[193,77,141,77],[193,78,141,78],[193,83,141,83],[193,87,141,87],[194,4,142,4,"needsAnimating"],[194,18,142,18],[194,19,142,19,"key"],[194,22,142,22],[194,23,142,23],[194,26,142,26],[194,31,142,31],[195,4,143,4],[195,11,143,11,"shouldBlock"],[195,22,143,22],[196,2,144,0],[197,0,144,1],[197,3]],"functionMap":{"names":["<global>","animateVisualElement","definition.map$argument_0","then$argument_0","animateVariant","<anonymous>","animateTarget","Promise.all.then$argument_0","animateChildren","Array.from.sort.forEach$argument_0","animateVariant.then$argument_0","stopAnimation","visualElement.forEachValue$argument_0","sortByTreeOrder","shouldBlockAnimation"],"mappings":"AAA;ACM;wCCK;SDE;0BEY;KFE;CDC;AIC;UCa,uED;UCC,yCD;UCM;SDI;UCC,yCD;CJe;AMI;wCC2B;KDE;CNC;AQC;UHO;SGG;UHC;SGG;iBCG;oJCC,8DD;KDC;CRE;AWC;+BCC,yCD;CXC;AaC;CbE;AcO;CdK"},"hasCjsExports":false},"type":"js/module"}]}