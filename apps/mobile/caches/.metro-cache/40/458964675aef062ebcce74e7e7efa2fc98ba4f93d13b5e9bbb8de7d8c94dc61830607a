{"dependencies":[{"name":"../../utils/resolve-elements.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":69,"index":69}}],"key":"vZ48H67af2BjPqjGWkqmYYyVc08=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"resizeElement\", {\n    enumerable: true,\n    get: function () {\n      return resizeElement;\n    }\n  });\n  var _utilsResolveElementsEsJs = require(_dependencyMap[0], \"../../utils/resolve-elements.es.js\");\n  const resizeHandlers = new WeakMap();\n  let observer;\n  function getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n      const {\n        inlineSize,\n        blockSize\n      } = borderBoxSize[0];\n      return {\n        width: inlineSize,\n        height: blockSize\n      };\n    } else if (target instanceof SVGElement && \"getBBox\" in target) {\n      return target.getBBox();\n    } else {\n      return {\n        width: target.offsetWidth,\n        height: target.offsetHeight\n      };\n    }\n  }\n  function notifyTarget({\n    target,\n    contentRect,\n    borderBoxSize\n  }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach(handler => {\n      handler({\n        target,\n        contentSize: contentRect,\n        get size() {\n          return getElementSize(target, borderBoxSize);\n        }\n      });\n    });\n  }\n  function notifyAll(entries) {\n    entries.forEach(notifyTarget);\n  }\n  function createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\") return;\n    observer = new ResizeObserver(notifyAll);\n  }\n  function resizeElement(target, handler) {\n    if (!observer) createResizeObserver();\n    const elements = (0, _utilsResolveElementsEsJs.resolveElements)(target);\n    elements.forEach(element => {\n      let elementHandlers = resizeHandlers.get(element);\n      if (!elementHandlers) {\n        elementHandlers = new Set();\n        resizeHandlers.set(element, elementHandlers);\n      }\n      elementHandlers.add(handler);\n      observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n      elements.forEach(element => {\n        const elementHandlers = resizeHandlers.get(element);\n        elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n        if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n          observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n        }\n      });\n    };\n  }\n});","lineCount":80,"map":[[7,2,64,0,"Object"],[7,8,64,0],[7,9,64,0,"defineProperty"],[7,23,64,0],[7,24,64,0,"exports"],[7,31,64,0],[8,4,64,0,"enumerable"],[8,14,64,0],[9,4,64,0,"get"],[9,7,64,0],[9,18,64,0,"get"],[9,19,64,0],[10,6,64,0],[10,13,64,9,"resizeElement"],[10,26,64,22],[11,4,64,22],[12,2,64,22],[13,2,1,0],[13,6,1,0,"_utilsResolveElementsEsJs"],[13,31,1,0],[13,34,1,0,"require"],[13,41,1,0],[13,42,1,0,"_dependencyMap"],[13,56,1,0],[14,2,3,0],[14,8,3,6,"resizeHandlers"],[14,22,3,20],[14,25,3,23],[14,29,3,27,"WeakMap"],[14,36,3,34],[14,37,3,35],[14,38,3,36],[15,2,4,0],[15,6,4,4,"observer"],[15,14,4,12],[16,2,5,0],[16,11,5,9,"getElementSize"],[16,25,5,23,"getElementSize"],[16,26,5,24,"target"],[16,32,5,30],[16,34,5,32,"borderBoxSize"],[16,47,5,45],[16,49,5,47],[17,4,6,4],[17,8,6,8,"borderBoxSize"],[17,21,6,21],[17,23,6,23],[18,6,7,8],[18,12,7,14],[19,8,7,16,"inlineSize"],[19,18,7,26],[20,8,7,28,"blockSize"],[21,6,7,38],[21,7,7,39],[21,10,7,42,"borderBoxSize"],[21,23,7,55],[21,24,7,56],[21,25,7,57],[21,26,7,58],[22,6,8,8],[22,13,8,15],[23,8,8,17,"width"],[23,13,8,22],[23,15,8,24,"inlineSize"],[23,25,8,34],[24,8,8,36,"height"],[24,14,8,42],[24,16,8,44,"blockSize"],[25,6,8,54],[25,7,8,55],[26,4,9,4],[26,5,9,5],[26,11,10,9],[26,15,10,13,"target"],[26,21,10,19],[26,33,10,31,"SVGElement"],[26,43,10,41],[26,47,10,45],[26,56,10,54],[26,60,10,58,"target"],[26,66,10,64],[26,68,10,66],[27,6,11,8],[27,13,11,15,"target"],[27,19,11,21],[27,20,11,22,"getBBox"],[27,27,11,29],[27,28,11,30],[27,29,11,31],[28,4,12,4],[28,5,12,5],[28,11,13,9],[29,6,14,8],[29,13,14,15],[30,8,15,12,"width"],[30,13,15,17],[30,15,15,19,"target"],[30,21,15,25],[30,22,15,26,"offsetWidth"],[30,33,15,37],[31,8,16,12,"height"],[31,14,16,18],[31,16,16,20,"target"],[31,22,16,26],[31,23,16,27,"offsetHeight"],[32,6,17,8],[32,7,17,9],[33,4,18,4],[34,2,19,0],[35,2,20,0],[35,11,20,9,"notifyTarget"],[35,23,20,21,"notifyTarget"],[35,24,20,22],[36,4,20,24,"target"],[36,10,20,30],[37,4,20,32,"contentRect"],[37,15,20,43],[38,4,20,45,"borderBoxSize"],[39,2,20,60],[39,3,20,61],[39,5,20,63],[40,4,21,4],[40,8,21,8,"_a"],[40,10,21,10],[41,4,22,4],[41,5,22,5,"_a"],[41,7,22,7],[41,10,22,10,"resizeHandlers"],[41,24,22,24],[41,25,22,25,"get"],[41,28,22,28],[41,29,22,29,"target"],[41,35,22,35],[41,36,22,36],[41,42,22,42],[41,46,22,46],[41,50,22,50,"_a"],[41,52,22,52],[41,57,22,57],[41,62,22,62],[41,63,22,63],[41,66,22,66],[41,71,22,71],[41,72,22,72],[41,75,22,75,"_a"],[41,77,22,77],[41,78,22,78,"forEach"],[41,85,22,85],[41,86,22,87,"handler"],[41,93,22,94],[41,97,22,99],[42,6,23,8,"handler"],[42,13,23,15],[42,14,23,16],[43,8,24,12,"target"],[43,14,24,18],[44,8,25,12,"contentSize"],[44,19,25,23],[44,21,25,25,"contentRect"],[44,32,25,36],[45,8,26,12],[45,12,26,16,"size"],[45,16,26,20,"size"],[45,17,26,20],[45,19,26,23],[46,10,27,16],[46,17,27,23,"getElementSize"],[46,31,27,37],[46,32,27,38,"target"],[46,38,27,44],[46,40,27,46,"borderBoxSize"],[46,53,27,59],[46,54,27,60],[47,8,28,12],[48,6,29,8],[48,7,29,9],[48,8,29,10],[49,4,30,4],[49,5,30,5],[49,6,30,6],[50,2,31,0],[51,2,32,0],[51,11,32,9,"notifyAll"],[51,20,32,18,"notifyAll"],[51,21,32,19,"entries"],[51,28,32,26],[51,30,32,28],[52,4,33,4,"entries"],[52,11,33,11],[52,12,33,12,"forEach"],[52,19,33,19],[52,20,33,20,"notifyTarget"],[52,32,33,32],[52,33,33,33],[53,2,34,0],[54,2,35,0],[54,11,35,9,"createResizeObserver"],[54,31,35,29,"createResizeObserver"],[54,32,35,29],[54,34,35,32],[55,4,36,4],[55,8,36,8],[55,15,36,15,"ResizeObserver"],[55,29,36,29],[55,34,36,34],[55,45,36,45],[55,47,37,8],[56,4,38,4,"observer"],[56,12,38,12],[56,15,38,15],[56,19,38,19,"ResizeObserver"],[56,33,38,33],[56,34,38,34,"notifyAll"],[56,43,38,43],[56,44,38,44],[57,2,39,0],[58,2,40,0],[58,11,40,9,"resizeElement"],[58,24,40,22,"resizeElement"],[58,25,40,23,"target"],[58,31,40,29],[58,33,40,31,"handler"],[58,40,40,38],[58,42,40,40],[59,4,41,4],[59,8,41,8],[59,9,41,9,"observer"],[59,17,41,17],[59,19,42,8,"createResizeObserver"],[59,39,42,28],[59,40,42,29],[59,41,42,30],[60,4,43,4],[60,10,43,10,"elements"],[60,18,43,18],[60,21,43,21],[60,25,43,21,"resolveElements"],[60,50,43,36],[60,51,43,36,"resolveElements"],[60,66,43,36],[60,68,43,37,"target"],[60,74,43,43],[60,75,43,44],[61,4,44,4,"elements"],[61,12,44,12],[61,13,44,13,"forEach"],[61,20,44,20],[61,21,44,22,"element"],[61,28,44,29],[61,32,44,34],[62,6,45,8],[62,10,45,12,"elementHandlers"],[62,25,45,27],[62,28,45,30,"resizeHandlers"],[62,42,45,44],[62,43,45,45,"get"],[62,46,45,48],[62,47,45,49,"element"],[62,54,45,56],[62,55,45,57],[63,6,46,8],[63,10,46,12],[63,11,46,13,"elementHandlers"],[63,26,46,28],[63,28,46,30],[64,8,47,12,"elementHandlers"],[64,23,47,27],[64,26,47,30],[64,30,47,34,"Set"],[64,33,47,37],[64,34,47,38],[64,35,47,39],[65,8,48,12,"resizeHandlers"],[65,22,48,26],[65,23,48,27,"set"],[65,26,48,30],[65,27,48,31,"element"],[65,34,48,38],[65,36,48,40,"elementHandlers"],[65,51,48,55],[65,52,48,56],[66,6,49,8],[67,6,50,8,"elementHandlers"],[67,21,50,23],[67,22,50,24,"add"],[67,25,50,27],[67,26,50,28,"handler"],[67,33,50,35],[67,34,50,36],[68,6,51,8,"observer"],[68,14,51,16],[68,19,51,21],[68,23,51,25],[68,27,51,29,"observer"],[68,35,51,37],[68,40,51,42],[68,45,51,47],[68,46,51,48],[68,49,51,51],[68,54,51,56],[68,55,51,57],[68,58,51,60,"observer"],[68,66,51,68],[68,67,51,69,"observe"],[68,74,51,76],[68,75,51,77,"element"],[68,82,51,84],[68,83,51,85],[69,4,52,4],[69,5,52,5],[69,6,52,6],[70,4,53,4],[70,11,53,11],[70,17,53,17],[71,6,54,8,"elements"],[71,14,54,16],[71,15,54,17,"forEach"],[71,22,54,24],[71,23,54,26,"element"],[71,30,54,33],[71,34,54,38],[72,8,55,12],[72,14,55,18,"elementHandlers"],[72,29,55,33],[72,32,55,36,"resizeHandlers"],[72,46,55,50],[72,47,55,51,"get"],[72,50,55,54],[72,51,55,55,"element"],[72,58,55,62],[72,59,55,63],[73,8,56,12,"elementHandlers"],[73,23,56,27],[73,28,56,32],[73,32,56,36],[73,36,56,40,"elementHandlers"],[73,51,56,55],[73,56,56,60],[73,61,56,65],[73,62,56,66],[73,65,56,69],[73,70,56,74],[73,71,56,75],[73,74,56,78,"elementHandlers"],[73,89,56,93],[73,90,56,94,"delete"],[73,96,56,100],[73,97,56,101,"handler"],[73,104,56,108],[73,105,56,109],[74,8,57,12],[74,12,57,16],[74,14,57,18,"elementHandlers"],[74,29,57,33],[74,34,57,38],[74,38,57,42],[74,42,57,46,"elementHandlers"],[74,57,57,61],[74,62,57,66],[74,67,57,71],[74,68,57,72],[74,71,57,75],[74,76,57,80],[74,77,57,81],[74,80,57,84,"elementHandlers"],[74,95,57,99],[74,96,57,100,"size"],[74,100,57,104],[74,101,57,105],[74,103,57,107],[75,10,58,16,"observer"],[75,18,58,24],[75,23,58,29],[75,27,58,33],[75,31,58,37,"observer"],[75,39,58,45],[75,44,58,50],[75,49,58,55],[75,50,58,56],[75,53,58,59],[75,58,58,64],[75,59,58,65],[75,62,58,68,"observer"],[75,70,58,76],[75,71,58,77,"unobserve"],[75,80,58,86],[75,81,58,87,"element"],[75,88,58,94],[75,89,58,95],[76,8,59,12],[77,6,60,8],[77,7,60,9],[77,8,60,10],[78,4,61,4],[78,5,61,5],[79,2,62,0],[80,0,62,1],[80,3]],"functionMap":{"names":["<global>","getElementSize","notifyTarget","_a.forEach$argument_0","handler$argument_0.get__size","notifyAll","createResizeObserver","resizeElement","elements.forEach$argument_0","<anonymous>"],"mappings":"AAA;ACI;CDc;AEC;sFCE;YCI;aDE;KDE;CFC;AKC;CLE;AMC;CNI;AOC;qBCI;KDQ;WEC;yBDC;SCM;KFC;CPC"},"hasCjsExports":false},"type":"js/module"}]}