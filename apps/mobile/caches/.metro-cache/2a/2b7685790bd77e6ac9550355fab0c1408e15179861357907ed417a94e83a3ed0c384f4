{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}},{"name":"framesync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":56,"index":113}}],"key":"24PTcPTPyjPm5C9bri3IX7JZMU4=","exportNames":["*"],"imports":1}},{"name":"popmotion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":114},"end":{"line":3,"column":32,"index":146}}],"key":"9R4e9vFYMhq+Tk7xvkZO6aYjkW8=","exportNames":["*"],"imports":1}},{"name":"../../animation/animate.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":147},"end":{"line":4,"column":54,"index":201}}],"key":"196IFkEshicIT78mIT4ngpXFUpo=","exportNames":["*"],"imports":1}},{"name":"../../utils/subscription-manager.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":202},"end":{"line":5,"column":75,"index":277}}],"key":"ZiHPgmpZrShJJLY/1RL5k+VvjEc=","exportNames":["*"],"imports":1}},{"name":"../animation/mix-values.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":278},"end":{"line":6,"column":56,"index":334}}],"key":"pIMEJLKGlNbOALEWK08PvUInC5U=","exportNames":["*"],"imports":1}},{"name":"../geometry/copy.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":335},"end":{"line":7,"column":51,"index":386}}],"key":"fkrObswSCFIoEyFtqXZ6mH5mP1g=","exportNames":["*"],"imports":1}},{"name":"../geometry/delta-apply.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":387},"end":{"line":8,"column":106,"index":493}}],"key":"xkwWqTQTDv1k7fI0CXh4R4gY/9Q=","exportNames":["*"],"imports":1}},{"name":"../geometry/delta-calc.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":494},"end":{"line":9,"column":109,"index":603}}],"key":"86nb8DKVGK7F+V87/OlkPfEMYKg=","exportNames":["*"],"imports":1}},{"name":"../geometry/delta-remove.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":604},"end":{"line":10,"column":67,"index":671}}],"key":"+SFUDOZPSlOlcLzE7nc6HjCkeRQ=","exportNames":["*"],"imports":1}},{"name":"../geometry/models.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":672},"end":{"line":11,"column":64,"index":736}}],"key":"TRUqL3PikL1/SIBn3zTMQ3L02gA=","exportNames":["*"],"imports":1}},{"name":"../../animation/utils/transitions.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":737},"end":{"line":12,"column":75,"index":812}}],"key":"hn3Vecu+sEEscvlQG2C6h/71T1g=","exportNames":["*"],"imports":1}},{"name":"../geometry/utils.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":813},"end":{"line":13,"column":63,"index":876}}],"key":"lA92yDNBmEp0aaWqFMwmP3KJBuk=","exportNames":["*"],"imports":1}},{"name":"../shared/stack.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":877},"end":{"line":14,"column":48,"index":925}}],"key":"OSRIqcwvNqvR21E+DwoyJpKNxQE=","exportNames":["*"],"imports":1}},{"name":"../styles/scale-correction.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":926},"end":{"line":15,"column":65,"index":991}}],"key":"pvpEtJ5sAWs58aOT6HzQWl4LLZ4=","exportNames":["*"],"imports":1}},{"name":"../styles/transform.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":992},"end":{"line":16,"column":67,"index":1059}}],"key":"TeJq1m4kByB+VHJsQkOtw0Z9lv0=","exportNames":["*"],"imports":1}},{"name":"../utils/each-axis.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1060},"end":{"line":17,"column":50,"index":1110}}],"key":"dRXmIXxY24oWOTr+yH8+a82IEHA=","exportNames":["*"],"imports":1}},{"name":"../utils/has-transform.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":1111},"end":{"line":18,"column":68,"index":1179}}],"key":"r9B8RMRIEocTKPTvNdiirYGT2kY=","exportNames":["*"],"imports":1}},{"name":"../../render/html/utils/transform.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":1180},"end":{"line":19,"column":70,"index":1250}}],"key":"Og9Rpk9wvR/TYqadTbR8RsRWZmk=","exportNames":["*"],"imports":1}},{"name":"../../render/utils/flat-tree.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":1251},"end":{"line":20,"column":60,"index":1311}}],"key":"9jIBZxFYF6VNsTQ7sNW0KL+0mdQ=","exportNames":["*"],"imports":1}},{"name":"../../value/utils/resolve-motion-value.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":1312},"end":{"line":21,"column":80,"index":1392}}],"key":"YwZ5KrxV/XAxktgSVTAA2EgjSso=","exportNames":["*"],"imports":1}},{"name":"./state.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1393},"end":{"line":22,"column":52,"index":1445}}],"key":"WUxvlHZF42931I+TeeMpXeqpoK8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"createProjectionNode\", {\n    enumerable: true,\n    get: function () {\n      return createProjectionNode;\n    }\n  });\n  Object.defineProperty(exports, \"mixAxis\", {\n    enumerable: true,\n    get: function () {\n      return mixAxis;\n    }\n  });\n  Object.defineProperty(exports, \"mixAxisDelta\", {\n    enumerable: true,\n    get: function () {\n      return mixAxisDelta;\n    }\n  });\n  Object.defineProperty(exports, \"mixBox\", {\n    enumerable: true,\n    get: function () {\n      return mixBox;\n    }\n  });\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _framesync = require(_dependencyMap[1], \"framesync\");\n  var sync = _interopDefault(_framesync);\n  var _popmotion = require(_dependencyMap[2], \"popmotion\");\n  var _animationAnimateMjs = require(_dependencyMap[3], \"../../animation/animate.mjs\");\n  var _utilsSubscriptionManagerMjs = require(_dependencyMap[4], \"../../utils/subscription-manager.mjs\");\n  var _animationMixValuesMjs = require(_dependencyMap[5], \"../animation/mix-values.mjs\");\n  var _geometryCopyMjs = require(_dependencyMap[6], \"../geometry/copy.mjs\");\n  var _geometryDeltaApplyMjs = require(_dependencyMap[7], \"../geometry/delta-apply.mjs\");\n  var _geometryDeltaCalcMjs = require(_dependencyMap[8], \"../geometry/delta-calc.mjs\");\n  var _geometryDeltaRemoveMjs = require(_dependencyMap[9], \"../geometry/delta-remove.mjs\");\n  var _geometryModelsMjs = require(_dependencyMap[10], \"../geometry/models.mjs\");\n  var _animationUtilsTransitionsMjs = require(_dependencyMap[11], \"../../animation/utils/transitions.mjs\");\n  var _geometryUtilsMjs = require(_dependencyMap[12], \"../geometry/utils.mjs\");\n  var _sharedStackMjs = require(_dependencyMap[13], \"../shared/stack.mjs\");\n  var _stylesScaleCorrectionMjs = require(_dependencyMap[14], \"../styles/scale-correction.mjs\");\n  var _stylesTransformMjs = require(_dependencyMap[15], \"../styles/transform.mjs\");\n  var _utilsEachAxisMjs = require(_dependencyMap[16], \"../utils/each-axis.mjs\");\n  var _utilsHasTransformMjs = require(_dependencyMap[17], \"../utils/has-transform.mjs\");\n  var _renderHtmlUtilsTransformMjs = require(_dependencyMap[18], \"../../render/html/utils/transform.mjs\");\n  var _renderUtilsFlatTreeMjs = require(_dependencyMap[19], \"../../render/utils/flat-tree.mjs\");\n  var _valueUtilsResolveMotionValueMjs = require(_dependencyMap[20], \"../../value/utils/resolve-motion-value.mjs\");\n  var _stateMjs = require(_dependencyMap[21], \"./state.mjs\");\n  /**\n   * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n   * which has a noticeable difference in spring animations\n   */\n  var animationTarget = 1000;\n  function createProjectionNode(_a) {\n    var attachResizeListener = _a.attachResizeListener,\n      defaultParent = _a.defaultParent,\n      measureScroll = _a.measureScroll,\n      checkIsScrollRoot = _a.checkIsScrollRoot,\n      resetTransform = _a.resetTransform;\n    return /** @class */function () {\n      function ProjectionNode(id, latestValues, parent) {\n        var _this = this;\n        if (latestValues === void 0) {\n          latestValues = {};\n        }\n        if (parent === void 0) {\n          parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent();\n        }\n        /**\n         * A Set containing all this component's children. This is used to iterate\n         * through the children.\n         *\n         * TODO: This could be faster to iterate as a flat array stored on the root node.\n         */\n        this.children = new Set();\n        /**\n         * Options for the node. We use this to configure what kind of layout animations\n         * we should perform (if any).\n         */\n        this.options = {};\n        /**\n         * We use this to detect when its safe to shut down part of a projection tree.\n         * We have to keep projecting children for scale correction and relative projection\n         * until all their parents stop performing layout animations.\n         */\n        this.isTreeAnimating = false;\n        this.isAnimationBlocked = false;\n        /**\n         * Flag to true if we think this layout has been changed. We can't always know this,\n         * currently we set it to true every time a component renders, or if it has a layoutDependency\n         * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n         * and if one node is dirtied, they all are.\n         */\n        this.isLayoutDirty = false;\n        /**\n         * Block layout updates for instant layout transitions throughout the tree.\n         */\n        this.updateManuallyBlocked = false;\n        this.updateBlockedByResize = false;\n        /**\n         * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n         * call.\n         */\n        this.isUpdating = false;\n        /**\n         * If this is an SVG element we currently disable projection transforms\n         */\n        this.isSVG = false;\n        /**\n         * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n         * its projection styles.\n         */\n        this.needsReset = false;\n        /**\n         * Flags whether this node should have its transform reset prior to measuring.\n         */\n        this.shouldResetTransform = false;\n        /**\n         * An object representing the calculated contextual/accumulated/tree scale.\n         * This will be used to scale calculcated projection transforms, as these are\n         * calculated in screen-space but need to be scaled for elements to actually\n         * make it to their calculated destinations.\n         *\n         * TODO: Lazy-init\n         */\n        this.treeScale = {\n          x: 1,\n          y: 1\n        };\n        /**\n         *\n         */\n        this.eventHandlers = new Map();\n        // Note: Currently only running on root node\n        this.potentialNodes = new Map();\n        this.checkUpdateFailed = function () {\n          if (_this.isUpdating) {\n            _this.isUpdating = false;\n            _this.clearAllSnapshots();\n          }\n        };\n        this.updateProjection = function () {\n          _this.nodes.forEach(resolveTargetDelta);\n          _this.nodes.forEach(calcProjection);\n        };\n        this.hasProjected = false;\n        this.isVisible = true;\n        this.animationProgress = 0;\n        /**\n         * Shared layout\n         */\n        // TODO Only running on root node\n        this.sharedNodes = new Map();\n        this.id = id;\n        this.latestValues = latestValues;\n        this.root = parent ? parent.root || parent : this;\n        this.path = parent ? (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], (0, _tslib.__read)(parent.path), false), [parent], false) : [];\n        this.parent = parent;\n        this.depth = parent ? parent.depth + 1 : 0;\n        id && this.root.registerPotentialNode(id, this);\n        for (var i = 0; i < this.path.length; i++) {\n          this.path[i].shouldResetTransform = true;\n        }\n        if (this.root === this) this.nodes = new _renderUtilsFlatTreeMjs.FlatTree();\n      }\n      ProjectionNode.prototype.addEventListener = function (name, handler) {\n        if (!this.eventHandlers.has(name)) {\n          this.eventHandlers.set(name, new _utilsSubscriptionManagerMjs.SubscriptionManager());\n        }\n        return this.eventHandlers.get(name).add(handler);\n      };\n      ProjectionNode.prototype.notifyListeners = function (name) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n          args[_i - 1] = arguments[_i];\n        }\n        var subscriptionManager = this.eventHandlers.get(name);\n        subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(args), false));\n      };\n      ProjectionNode.prototype.hasListeners = function (name) {\n        return this.eventHandlers.has(name);\n      };\n      ProjectionNode.prototype.registerPotentialNode = function (id, node) {\n        this.potentialNodes.set(id, node);\n      };\n      /**\n       * Lifecycles\n       */\n      ProjectionNode.prototype.mount = function (instance, isLayoutDirty) {\n        var _this = this;\n        var _a;\n        if (isLayoutDirty === void 0) {\n          isLayoutDirty = false;\n        }\n        if (this.instance) return;\n        this.isSVG = instance instanceof SVGElement && instance.tagName !== \"svg\";\n        this.instance = instance;\n        var _b = this.options,\n          layoutId = _b.layoutId,\n          layout = _b.layout,\n          visualElement = _b.visualElement;\n        if (visualElement && !visualElement.getInstance()) {\n          visualElement.mount(instance);\n        }\n        this.root.nodes.add(this);\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n        this.id && this.root.potentialNodes.delete(this.id);\n        if (isLayoutDirty && (layout || layoutId)) {\n          this.isLayoutDirty = true;\n        }\n        if (attachResizeListener) {\n          var unblockTimeout_1;\n          var resizeUnblockUpdate_1 = function () {\n            return _this.root.updateBlockedByResize = false;\n          };\n          attachResizeListener(instance, function () {\n            _this.root.updateBlockedByResize = true;\n            clearTimeout(unblockTimeout_1);\n            unblockTimeout_1 = window.setTimeout(resizeUnblockUpdate_1, 250);\n            if (_stateMjs.globalProjectionState.hasAnimatedSinceResize) {\n              _stateMjs.globalProjectionState.hasAnimatedSinceResize = false;\n              _this.nodes.forEach(finishAnimation);\n            }\n          });\n        }\n        if (layoutId) {\n          this.root.registerSharedNode(layoutId, this);\n        }\n        // Only register the handler if it requires layout animation\n        if (this.options.animate !== false && visualElement && (layoutId || layout)) {\n          this.addEventListener(\"didUpdate\", function (_a) {\n            var _b, _c, _d, _e, _f;\n            var delta = _a.delta,\n              hasLayoutChanged = _a.hasLayoutChanged,\n              hasRelativeTargetChanged = _a.hasRelativeTargetChanged,\n              newLayout = _a.layout;\n            if (_this.isTreeAnimationBlocked()) {\n              _this.target = undefined;\n              _this.relativeTarget = undefined;\n              return;\n            }\n            // TODO: Check here if an animation exists\n            var layoutTransition = (_c = (_b = _this.options.transition) !== null && _b !== void 0 ? _b : visualElement.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;\n            var _g = visualElement.getProps(),\n              onLayoutAnimationStart = _g.onLayoutAnimationStart,\n              onLayoutAnimationComplete = _g.onLayoutAnimationComplete;\n            /**\n             * The target layout of the element might stay the same,\n             * but its position relative to its parent has changed.\n             */\n            var targetChanged = !_this.targetLayout || !(0, _geometryUtilsMjs.boxEquals)(_this.targetLayout, newLayout) || hasRelativeTargetChanged;\n            /**\n             * If the layout hasn't seemed to have changed, it might be that the\n             * element is visually in the same place in the document but its position\n             * relative to its parent has indeed changed. So here we check for that.\n             */\n            var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n            if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !_this.currentAnimation)) {\n              if (_this.resumeFrom) {\n                _this.resumingFrom = _this.resumeFrom;\n                _this.resumingFrom.resumingFrom = undefined;\n              }\n              _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n              var animationOptions = (0, _tslib.__assign)((0, _tslib.__assign)({}, (0, _animationUtilsTransitionsMjs.getValueTransition)(layoutTransition, \"layout\")), {\n                onPlay: onLayoutAnimationStart,\n                onComplete: onLayoutAnimationComplete\n              });\n              if (visualElement.shouldReduceMotion) {\n                animationOptions.delay = 0;\n                animationOptions.type = false;\n              }\n              _this.startAnimation(animationOptions);\n            } else {\n              /**\n               * If the layout hasn't changed and we have an animation that hasn't started yet,\n               * finish it immediately. Otherwise it will be animating from a location\n               * that was probably never commited to screen and look like a jumpy box.\n               */\n              if (!hasLayoutChanged && _this.animationProgress === 0) {\n                _this.finishAnimation();\n              }\n              _this.isLead() && ((_f = (_e = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e));\n            }\n            _this.targetLayout = newLayout;\n          });\n        }\n      };\n      ProjectionNode.prototype.unmount = function () {\n        var _a, _b;\n        this.options.layoutId && this.willUpdate();\n        this.root.nodes.remove(this);\n        (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n        (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n        this.instance = undefined;\n        _framesync.cancelSync.preRender(this.updateProjection);\n      };\n      // only on the root\n      ProjectionNode.prototype.blockUpdate = function () {\n        this.updateManuallyBlocked = true;\n      };\n      ProjectionNode.prototype.unblockUpdate = function () {\n        this.updateManuallyBlocked = false;\n      };\n      ProjectionNode.prototype.isUpdateBlocked = function () {\n        return this.updateManuallyBlocked || this.updateBlockedByResize;\n      };\n      ProjectionNode.prototype.isTreeAnimationBlocked = function () {\n        var _a;\n        return this.isAnimationBlocked || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) || false;\n      };\n      // Note: currently only running on root node\n      ProjectionNode.prototype.startUpdate = function () {\n        var _a;\n        if (this.isUpdateBlocked()) return;\n        this.isUpdating = true;\n        (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n      };\n      ProjectionNode.prototype.willUpdate = function (shouldNotifyListeners) {\n        var _a, _b, _c;\n        if (shouldNotifyListeners === void 0) {\n          shouldNotifyListeners = true;\n        }\n        if (this.root.isUpdateBlocked()) {\n          (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n          return;\n        }\n        !this.root.isUpdating && this.root.startUpdate();\n        if (this.isLayoutDirty) return;\n        this.isLayoutDirty = true;\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n          node.shouldResetTransform = true;\n          /**\n           * TODO: Check we haven't updated the scroll\n           * since the last didUpdate\n           */\n          node.updateScroll();\n        }\n        var _d = this.options,\n          layoutId = _d.layoutId,\n          layout = _d.layout;\n        if (layoutId === undefined && !layout) return;\n        var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n        this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n        this.updateSnapshot();\n        shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n      };\n      // Note: Currently only running on root node\n      ProjectionNode.prototype.didUpdate = function () {\n        var updateWasBlocked = this.isUpdateBlocked();\n        // When doing an instant transition, we skip the layout update,\n        // but should still clean up the measurements so that the next\n        // snapshot could be taken correctly.\n        if (updateWasBlocked) {\n          this.unblockUpdate();\n          this.clearAllSnapshots();\n          this.nodes.forEach(clearMeasurements);\n          return;\n        }\n        if (!this.isUpdating) return;\n        this.isUpdating = false;\n        /**\n         * Search for and mount newly-added projection elements.\n         *\n         * TODO: Every time a new component is rendered we could search up the tree for\n         * the closest mounted node and query from there rather than document.\n         */\n        if (this.potentialNodes.size) {\n          this.potentialNodes.forEach(mountNodeEarly);\n          this.potentialNodes.clear();\n        }\n        /**\n         * Write\n         */\n        this.nodes.forEach(resetTransformStyle);\n        /**\n         * Read ==================\n         */\n        // Update layout measurements of updated children\n        this.nodes.forEach(updateLayout);\n        /**\n         * Write\n         */\n        // Notify listeners that the layout is updated\n        this.nodes.forEach(notifyLayoutUpdate);\n        this.clearAllSnapshots();\n        // Flush any scheduled updates\n        _framesync.flushSync.update();\n        _framesync.flushSync.preRender();\n        _framesync.flushSync.render();\n      };\n      ProjectionNode.prototype.clearAllSnapshots = function () {\n        this.nodes.forEach(clearSnapshot);\n        this.sharedNodes.forEach(removeLeadSnapshots);\n      };\n      ProjectionNode.prototype.scheduleUpdateProjection = function () {\n        sync.default.preRender(this.updateProjection, false, true);\n      };\n      ProjectionNode.prototype.scheduleCheckAfterUnmount = function () {\n        var _this = this;\n        /**\n         * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n         * we manually call didUpdate to give a chance to the siblings to animate.\n         * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n         */\n        sync.default.postRender(function () {\n          if (_this.isLayoutDirty) {\n            _this.root.didUpdate();\n          } else {\n            _this.root.checkUpdateFailed();\n          }\n        });\n      };\n      /**\n       * Update measurements\n       */\n      ProjectionNode.prototype.updateSnapshot = function () {\n        if (this.snapshot || !this.instance) return;\n        var measured = this.measure();\n        var layout = this.removeTransform(this.removeElementScroll(measured));\n        roundBox(layout);\n        this.snapshot = {\n          measured: measured,\n          layout: layout,\n          latestValues: {}\n        };\n      };\n      ProjectionNode.prototype.updateLayout = function () {\n        var _a;\n        if (!this.instance) return;\n        // TODO: Incorporate into a forwarded scroll offset\n        this.updateScroll();\n        if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {\n          return;\n        }\n        /**\n         * When a node is mounted, it simply resumes from the prevLead's\n         * snapshot instead of taking a new one, but the ancestors scroll\n         * might have updated while the prevLead is unmounted. We need to\n         * update the scroll again to make sure the layout we measure is\n         * up to date.\n         */\n        if (this.resumeFrom && !this.resumeFrom.instance) {\n          for (var i = 0; i < this.path.length; i++) {\n            var node = this.path[i];\n            node.updateScroll();\n          }\n        }\n        var measured = this.measure();\n        roundBox(measured);\n        var prevLayout = this.layout;\n        this.layout = {\n          measured: measured,\n          actual: this.removeElementScroll(measured)\n        };\n        this.layoutCorrected = (0, _geometryModelsMjs.createBox)();\n        this.isLayoutDirty = false;\n        this.projectionDelta = undefined;\n        this.notifyListeners(\"measure\", this.layout.actual);\n        (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n      };\n      ProjectionNode.prototype.updateScroll = function () {\n        if (this.options.layoutScroll && this.instance) {\n          this.isScrollRoot = checkIsScrollRoot(this.instance);\n          this.scroll = measureScroll(this.instance);\n        }\n      };\n      ProjectionNode.prototype.resetTransform = function () {\n        var _a;\n        if (!resetTransform) return;\n        var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n        var hasProjection = this.projectionDelta && !(0, _geometryUtilsMjs.isDeltaZero)(this.projectionDelta);\n        var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n        var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n        if (isResetRequested && (hasProjection || (0, _utilsHasTransformMjs.hasTransform)(this.latestValues) || transformTemplateHasChanged)) {\n          resetTransform(this.instance, transformTemplateValue);\n          this.shouldResetTransform = false;\n          this.scheduleRender();\n        }\n      };\n      ProjectionNode.prototype.measure = function () {\n        var visualElement = this.options.visualElement;\n        if (!visualElement) return (0, _geometryModelsMjs.createBox)();\n        var box = visualElement.measureViewportBox();\n        // Remove viewport scroll to give page-relative coordinates\n        var scroll = this.root.scroll;\n        if (scroll) {\n          (0, _geometryDeltaApplyMjs.translateAxis)(box.x, scroll.x);\n          (0, _geometryDeltaApplyMjs.translateAxis)(box.y, scroll.y);\n        }\n        return box;\n      };\n      ProjectionNode.prototype.removeElementScroll = function (box) {\n        var boxWithoutScroll = (0, _geometryModelsMjs.createBox)();\n        (0, _geometryCopyMjs.copyBoxInto)(boxWithoutScroll, box);\n        /**\n         * Performance TODO: Keep a cumulative scroll offset down the tree\n         * rather than loop back up the path.\n         */\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n          var scroll_1 = node.scroll,\n            options = node.options,\n            isScrollRoot = node.isScrollRoot;\n          if (node !== this.root && scroll_1 && options.layoutScroll) {\n            /**\n             * If this is a new scroll root, we want to remove all previous scrolls\n             * from the viewport box.\n             */\n            if (isScrollRoot) {\n              (0, _geometryCopyMjs.copyBoxInto)(boxWithoutScroll, box);\n              var rootScroll = this.root.scroll;\n              /**\n               * Undo the application of page scroll that was originally added\n               * to the measured bounding box.\n               */\n              if (rootScroll) {\n                (0, _geometryDeltaApplyMjs.translateAxis)(boxWithoutScroll.x, -rootScroll.x);\n                (0, _geometryDeltaApplyMjs.translateAxis)(boxWithoutScroll.y, -rootScroll.y);\n              }\n            }\n            (0, _geometryDeltaApplyMjs.translateAxis)(boxWithoutScroll.x, scroll_1.x);\n            (0, _geometryDeltaApplyMjs.translateAxis)(boxWithoutScroll.y, scroll_1.y);\n          }\n        }\n        return boxWithoutScroll;\n      };\n      ProjectionNode.prototype.applyTransform = function (box, transformOnly) {\n        if (transformOnly === void 0) {\n          transformOnly = false;\n        }\n        var withTransforms = (0, _geometryModelsMjs.createBox)();\n        (0, _geometryCopyMjs.copyBoxInto)(withTransforms, box);\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n          if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {\n            (0, _geometryDeltaApplyMjs.transformBox)(withTransforms, {\n              x: -node.scroll.x,\n              y: -node.scroll.y\n            });\n          }\n          if (!(0, _utilsHasTransformMjs.hasTransform)(node.latestValues)) continue;\n          (0, _geometryDeltaApplyMjs.transformBox)(withTransforms, node.latestValues);\n        }\n        if ((0, _utilsHasTransformMjs.hasTransform)(this.latestValues)) {\n          (0, _geometryDeltaApplyMjs.transformBox)(withTransforms, this.latestValues);\n        }\n        return withTransforms;\n      };\n      ProjectionNode.prototype.removeTransform = function (box) {\n        var _a;\n        var boxWithoutTransform = (0, _geometryModelsMjs.createBox)();\n        (0, _geometryCopyMjs.copyBoxInto)(boxWithoutTransform, box);\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n          if (!node.instance) continue;\n          if (!(0, _utilsHasTransformMjs.hasTransform)(node.latestValues)) continue;\n          (0, _utilsHasTransformMjs.hasScale)(node.latestValues) && node.updateSnapshot();\n          var sourceBox = (0, _geometryModelsMjs.createBox)();\n          var nodeBox = node.measure();\n          (0, _geometryCopyMjs.copyBoxInto)(sourceBox, nodeBox);\n          (0, _geometryDeltaRemoveMjs.removeBoxTransforms)(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n        }\n        if ((0, _utilsHasTransformMjs.hasTransform)(this.latestValues)) {\n          (0, _geometryDeltaRemoveMjs.removeBoxTransforms)(boxWithoutTransform, this.latestValues);\n        }\n        return boxWithoutTransform;\n      };\n      /**\n       *\n       */\n      ProjectionNode.prototype.setTargetDelta = function (delta) {\n        this.targetDelta = delta;\n        this.root.scheduleUpdateProjection();\n      };\n      ProjectionNode.prototype.setOptions = function (options) {\n        var _a;\n        this.options = (0, _tslib.__assign)((0, _tslib.__assign)((0, _tslib.__assign)({}, this.options), options), {\n          crossfade: (_a = options.crossfade) !== null && _a !== void 0 ? _a : true\n        });\n      };\n      ProjectionNode.prototype.clearMeasurements = function () {\n        this.scroll = undefined;\n        this.layout = undefined;\n        this.snapshot = undefined;\n        this.prevTransformTemplateValue = undefined;\n        this.targetDelta = undefined;\n        this.target = undefined;\n        this.isLayoutDirty = false;\n      };\n      /**\n       * Frame calculations\n       */\n      ProjectionNode.prototype.resolveTargetDelta = function () {\n        var _a;\n        var _b = this.options,\n          layout = _b.layout,\n          layoutId = _b.layoutId;\n        /**\n         * If we have no layout, we can't perform projection, so early return\n         */\n        if (!this.layout || !(layout || layoutId)) return;\n        /**\n         * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n         * a relativeParent. This will allow a component to perform scale correction\n         * even if no animation has started.\n         */\n        // TODO If this is unsuccessful this currently happens every frame\n        if (!this.targetDelta && !this.relativeTarget) {\n          // TODO: This is a semi-repetition of further down this function, make DRY\n          this.relativeParent = this.getClosestProjectingParent();\n          if (this.relativeParent && this.relativeParent.layout) {\n            this.relativeTarget = (0, _geometryModelsMjs.createBox)();\n            this.relativeTargetOrigin = (0, _geometryModelsMjs.createBox)();\n            (0, _geometryDeltaCalcMjs.calcRelativePosition)(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n            (0, _geometryCopyMjs.copyBoxInto)(this.relativeTarget, this.relativeTargetOrigin);\n          }\n        }\n        /**\n         * If we have no relative target or no target delta our target isn't valid\n         * for this frame.\n         */\n        if (!this.relativeTarget && !this.targetDelta) return;\n        /**\n         * Lazy-init target data structure\n         */\n        if (!this.target) {\n          this.target = (0, _geometryModelsMjs.createBox)();\n          this.targetWithTransforms = (0, _geometryModelsMjs.createBox)();\n        }\n        /**\n         * If we've got a relative box for this component, resolve it into a target relative to the parent.\n         */\n        if (this.relativeTarget && this.relativeTargetOrigin && ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n          (0, _geometryDeltaCalcMjs.calcRelativeBox)(this.target, this.relativeTarget, this.relativeParent.target);\n          /**\n           * If we've only got a targetDelta, resolve it into a target\n           */\n        } else if (this.targetDelta) {\n          if (Boolean(this.resumingFrom)) {\n            // TODO: This is creating a new object every frame\n            this.target = this.applyTransform(this.layout.actual);\n          } else {\n            (0, _geometryCopyMjs.copyBoxInto)(this.target, this.layout.actual);\n          }\n          (0, _geometryDeltaApplyMjs.applyBoxDelta)(this.target, this.targetDelta);\n        } else {\n          /**\n           * If no target, use own layout as target\n           */\n          (0, _geometryCopyMjs.copyBoxInto)(this.target, this.layout.actual);\n        }\n        /**\n         * If we've been told to attempt to resolve a relative target, do so.\n         */\n        if (this.attemptToResolveRelativeTarget) {\n          this.attemptToResolveRelativeTarget = false;\n          this.relativeParent = this.getClosestProjectingParent();\n          if (this.relativeParent && Boolean(this.relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !this.relativeParent.options.layoutScroll && this.relativeParent.target) {\n            this.relativeTarget = (0, _geometryModelsMjs.createBox)();\n            this.relativeTargetOrigin = (0, _geometryModelsMjs.createBox)();\n            (0, _geometryDeltaCalcMjs.calcRelativePosition)(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n            (0, _geometryCopyMjs.copyBoxInto)(this.relativeTarget, this.relativeTargetOrigin);\n          }\n        }\n      };\n      ProjectionNode.prototype.getClosestProjectingParent = function () {\n        if (!this.parent || (0, _utilsHasTransformMjs.hasTransform)(this.parent.latestValues)) return undefined;\n        if ((this.parent.relativeTarget || this.parent.targetDelta) && this.parent.layout) {\n          return this.parent;\n        } else {\n          return this.parent.getClosestProjectingParent();\n        }\n      };\n      ProjectionNode.prototype.calcProjection = function () {\n        var _a;\n        var _b = this.options,\n          layout = _b.layout,\n          layoutId = _b.layoutId;\n        /**\n         * If this section of the tree isn't animating we can\n         * delete our target sources for the following frame.\n         */\n        this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) || this.currentAnimation || this.pendingAnimation);\n        if (!this.isTreeAnimating) {\n          this.targetDelta = this.relativeTarget = undefined;\n        }\n        if (!this.layout || !(layout || layoutId)) return;\n        var lead = this.getLead();\n        /**\n         * Reset the corrected box with the latest values from box, as we're then going\n         * to perform mutative operations on it.\n         */\n        (0, _geometryCopyMjs.copyBoxInto)(this.layoutCorrected, this.layout.actual);\n        /**\n         * Apply all the parent deltas to this box to produce the corrected box. This\n         * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n         */\n        (0, _geometryDeltaApplyMjs.applyTreeDeltas)(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n        var target = lead.target;\n        if (!target) return;\n        if (!this.projectionDelta) {\n          this.projectionDelta = (0, _geometryModelsMjs.createDelta)();\n          this.projectionDeltaWithTransform = (0, _geometryModelsMjs.createDelta)();\n        }\n        var prevTreeScaleX = this.treeScale.x;\n        var prevTreeScaleY = this.treeScale.y;\n        var prevProjectionTransform = this.projectionTransform;\n        /**\n         * Update the delta between the corrected box and the target box before user-set transforms were applied.\n         * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n         * for our layout reprojection, but still allow them to be scaled correctly by the user.\n         * It might be that to simplify this we may want to accept that user-set scale is also corrected\n         * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n         * to allow people to choose whether these styles are corrected based on just the\n         * layout reprojection or the final bounding box.\n         */\n        (0, _geometryDeltaCalcMjs.calcBoxDelta)(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n        this.projectionTransform = (0, _stylesTransformMjs.buildProjectionTransform)(this.projectionDelta, this.treeScale);\n        if (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) {\n          this.hasProjected = true;\n          this.scheduleRender();\n          this.notifyListeners(\"projectionUpdate\", target);\n        }\n      };\n      ProjectionNode.prototype.hide = function () {\n        this.isVisible = false;\n        // TODO: Schedule render\n      };\n      ProjectionNode.prototype.show = function () {\n        this.isVisible = true;\n        // TODO: Schedule render\n      };\n      ProjectionNode.prototype.scheduleRender = function (notifyAll) {\n        var _a, _b, _c;\n        if (notifyAll === void 0) {\n          notifyAll = true;\n        }\n        (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n        notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n        if (this.resumingFrom && !this.resumingFrom.instance) {\n          this.resumingFrom = undefined;\n        }\n      };\n      ProjectionNode.prototype.setAnimationOrigin = function (delta, hasOnlyRelativeTargetChanged) {\n        var _this = this;\n        var _a;\n        if (hasOnlyRelativeTargetChanged === void 0) {\n          hasOnlyRelativeTargetChanged = false;\n        }\n        var snapshot = this.snapshot;\n        var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n        var mixedValues = (0, _tslib.__assign)({}, this.latestValues);\n        var targetDelta = (0, _geometryModelsMjs.createDelta)();\n        this.relativeTarget = this.relativeTargetOrigin = undefined;\n        this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n        var relativeLayout = (0, _geometryModelsMjs.createBox)();\n        var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n        var isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n        var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));\n        this.animationProgress = 0;\n        this.mixTargetDelta = function (latest) {\n          var _a;\n          var progress = latest / 1000;\n          mixAxisDelta(targetDelta.x, delta.x, progress);\n          mixAxisDelta(targetDelta.y, delta.y, progress);\n          _this.setTargetDelta(targetDelta);\n          if (_this.relativeTarget && _this.relativeTargetOrigin && _this.layout && ((_a = _this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n            (0, _geometryDeltaCalcMjs.calcRelativePosition)(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);\n            mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress);\n          }\n          if (isSharedLayoutAnimation) {\n            _this.animationValues = mixedValues;\n            (0, _animationMixValuesMjs.mixValues)(mixedValues, snapshotLatestValues, _this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n          }\n          _this.root.scheduleUpdateProjection();\n          _this.scheduleRender();\n          _this.animationProgress = progress;\n        };\n        this.mixTargetDelta(0);\n      };\n      ProjectionNode.prototype.startAnimation = function (options) {\n        var _this = this;\n        var _a, _b;\n        this.notifyListeners(\"animationStart\");\n        (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n        if (this.resumingFrom) {\n          (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n        }\n        if (this.pendingAnimation) {\n          _framesync.cancelSync.update(this.pendingAnimation);\n          this.pendingAnimation = undefined;\n        }\n        /**\n         * Start the animation in the next frame to have a frame with progress 0,\n         * where the target is the same as when the animation started, so we can\n         * calculate the relative positions correctly for instant transitions.\n         */\n        this.pendingAnimation = sync.default.update(function () {\n          _stateMjs.globalProjectionState.hasAnimatedSinceResize = true;\n          _this.currentAnimation = (0, _animationAnimateMjs.animate)(0, animationTarget, (0, _tslib.__assign)((0, _tslib.__assign)({}, options), {\n            onUpdate: function (latest) {\n              var _a;\n              _this.mixTargetDelta(latest);\n              (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n            },\n            onComplete: function () {\n              var _a;\n              (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n              _this.completeAnimation();\n            }\n          }));\n          if (_this.resumingFrom) {\n            _this.resumingFrom.currentAnimation = _this.currentAnimation;\n          }\n          _this.pendingAnimation = undefined;\n        });\n      };\n      ProjectionNode.prototype.completeAnimation = function () {\n        var _a;\n        if (this.resumingFrom) {\n          this.resumingFrom.currentAnimation = undefined;\n          this.resumingFrom.preserveOpacity = undefined;\n        }\n        (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n        this.resumingFrom = this.currentAnimation = this.animationValues = undefined;\n        this.notifyListeners(\"animationComplete\");\n      };\n      ProjectionNode.prototype.finishAnimation = function () {\n        var _a;\n        if (this.currentAnimation) {\n          (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n          this.currentAnimation.stop();\n        }\n        this.completeAnimation();\n      };\n      ProjectionNode.prototype.applyTransformsToTarget = function () {\n        var _a = this.getLead(),\n          targetWithTransforms = _a.targetWithTransforms,\n          target = _a.target,\n          layout = _a.layout,\n          latestValues = _a.latestValues;\n        if (!targetWithTransforms || !target || !layout) return;\n        (0, _geometryCopyMjs.copyBoxInto)(targetWithTransforms, target);\n        /**\n         * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n         * This is the final box that we will then project into by calculating a transform delta and\n         * applying it to the corrected box.\n         */\n        (0, _geometryDeltaApplyMjs.transformBox)(targetWithTransforms, latestValues);\n        /**\n         * Update the delta between the corrected box and the final target box, after\n         * user-set transforms are applied to it. This will be used by the renderer to\n         * create a transform style that will reproject the element from its actual layout\n         * into the desired bounding box.\n         */\n        (0, _geometryDeltaCalcMjs.calcBoxDelta)(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n      };\n      ProjectionNode.prototype.registerSharedNode = function (layoutId, node) {\n        var _a, _b, _c;\n        if (!this.sharedNodes.has(layoutId)) {\n          this.sharedNodes.set(layoutId, new _sharedStackMjs.NodeStack());\n        }\n        var stack = this.sharedNodes.get(layoutId);\n        stack.add(node);\n        node.promote({\n          transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n          preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node)\n        });\n      };\n      ProjectionNode.prototype.isLead = function () {\n        var stack = this.getStack();\n        return stack ? stack.lead === this : true;\n      };\n      ProjectionNode.prototype.getLead = function () {\n        var _a;\n        var layoutId = this.options.layoutId;\n        return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n      };\n      ProjectionNode.prototype.getPrevLead = function () {\n        var _a;\n        var layoutId = this.options.layoutId;\n        return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n      };\n      ProjectionNode.prototype.getStack = function () {\n        var layoutId = this.options.layoutId;\n        if (layoutId) return this.root.sharedNodes.get(layoutId);\n      };\n      ProjectionNode.prototype.promote = function (_a) {\n        var _b = _a === void 0 ? {} : _a,\n          needsReset = _b.needsReset,\n          transition = _b.transition,\n          preserveFollowOpacity = _b.preserveFollowOpacity;\n        var stack = this.getStack();\n        if (stack) stack.promote(this, preserveFollowOpacity);\n        if (needsReset) {\n          this.projectionDelta = undefined;\n          this.needsReset = true;\n        }\n        if (transition) this.setOptions({\n          transition: transition\n        });\n      };\n      ProjectionNode.prototype.relegate = function () {\n        var stack = this.getStack();\n        if (stack) {\n          return stack.relegate(this);\n        } else {\n          return false;\n        }\n      };\n      ProjectionNode.prototype.resetRotation = function () {\n        var visualElement = this.options.visualElement;\n        if (!visualElement) return;\n        // If there's no detected rotation values, we can early return without a forced render.\n        var hasRotate = false;\n        // Keep a record of all the values we've reset\n        var resetValues = {};\n        // Check the rotate value of all axes and reset to 0\n        for (var i = 0; i < _renderHtmlUtilsTransformMjs.transformAxes.length; i++) {\n          var axis = _renderHtmlUtilsTransformMjs.transformAxes[i];\n          var key = \"rotate\" + axis;\n          // If this rotation doesn't exist as a motion value, then we don't\n          // need to reset it\n          if (!visualElement.getStaticValue(key)) {\n            continue;\n          }\n          hasRotate = true;\n          // Record the rotation and then temporarily set it to 0\n          resetValues[key] = visualElement.getStaticValue(key);\n          visualElement.setStaticValue(key, 0);\n        }\n        // If there's no rotation values, we don't need to do any more.\n        if (!hasRotate) return;\n        // Force a render of this element to apply the transform with all rotations\n        // set to 0.\n        visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n        // Put back all the values we reset\n        for (var key in resetValues) {\n          visualElement.setStaticValue(key, resetValues[key]);\n        }\n        // Schedule a render for the next frame. This ensures we won't visually\n        // see the element with the reset rotate value applied.\n        visualElement.scheduleRender();\n      };\n      ProjectionNode.prototype.getProjectionStyles = function (styleProp) {\n        var _a, _b, _c, _d, _e, _f;\n        if (styleProp === void 0) {\n          styleProp = {};\n        }\n        // TODO: Return lifecycle-persistent object\n        var styles = {};\n        if (!this.instance || this.isSVG) return styles;\n        if (!this.isVisible) {\n          return {\n            visibility: \"hidden\"\n          };\n        } else {\n          styles.visibility = \"\";\n        }\n        var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        if (this.needsReset) {\n          this.needsReset = false;\n          styles.opacity = \"\";\n          styles.pointerEvents = (0, _valueUtilsResolveMotionValueMjs.resolveMotionValue)(styleProp.pointerEvents) || \"\";\n          styles.transform = transformTemplate ? transformTemplate(this.latestValues, \"\") : \"none\";\n          return styles;\n        }\n        var lead = this.getLead();\n        if (!this.projectionDelta || !this.layout || !lead.target) {\n          var emptyStyles = {};\n          if (this.options.layoutId) {\n            emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;\n            emptyStyles.pointerEvents = (0, _valueUtilsResolveMotionValueMjs.resolveMotionValue)(styleProp.pointerEvents) || \"\";\n          }\n          if (this.hasProjected && !(0, _utilsHasTransformMjs.hasTransform)(this.latestValues)) {\n            emptyStyles.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\";\n            this.hasProjected = false;\n          }\n          return emptyStyles;\n        }\n        var valuesToRender = lead.animationValues || lead.latestValues;\n        this.applyTransformsToTarget();\n        styles.transform = (0, _stylesTransformMjs.buildProjectionTransform)(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n        if (transformTemplate) {\n          styles.transform = transformTemplate(valuesToRender, styles.transform);\n        }\n        var _g = this.projectionDelta,\n          x = _g.x,\n          y = _g.y;\n        styles.transformOrigin = \"\".concat(x.origin * 100, \"% \").concat(y.origin * 100, \"% 0\");\n        if (lead.animationValues) {\n          /**\n           * If the lead component is animating, assign this either the entering/leaving\n           * opacity\n           */\n          styles.opacity = lead === this ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;\n        } else {\n          /**\n           * Or we're not animating at all, set the lead component to its actual\n           * opacity and other components to hidden.\n           */\n          styles.opacity = lead === this ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : \"\" : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;\n        }\n        /**\n         * Apply scale correction\n         */\n        for (var key in _stylesScaleCorrectionMjs.scaleCorrectors) {\n          if (valuesToRender[key] === undefined) continue;\n          var _h = _stylesScaleCorrectionMjs.scaleCorrectors[key],\n            correct = _h.correct,\n            applyTo = _h.applyTo;\n          var corrected = correct(valuesToRender[key], lead);\n          if (applyTo) {\n            var num = applyTo.length;\n            for (var i = 0; i < num; i++) {\n              styles[applyTo[i]] = corrected;\n            }\n          } else {\n            styles[key] = corrected;\n          }\n        }\n        /**\n         * Disable pointer events on follow components. This is to ensure\n         * that if a follow component covers a lead component it doesn't block\n         * pointer events on the lead.\n         */\n        if (this.options.layoutId) {\n          styles.pointerEvents = lead === this ? (0, _valueUtilsResolveMotionValueMjs.resolveMotionValue)(styleProp.pointerEvents) || \"\" : \"none\";\n        }\n        return styles;\n      };\n      ProjectionNode.prototype.clearSnapshot = function () {\n        this.resumeFrom = this.snapshot = undefined;\n      };\n      // Only run on root\n      ProjectionNode.prototype.resetTree = function () {\n        this.root.nodes.forEach(function (node) {\n          var _a;\n          return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n        });\n        this.root.nodes.forEach(clearMeasurements);\n        this.root.sharedNodes.clear();\n      };\n      return ProjectionNode;\n    }();\n  }\n  function updateLayout(node) {\n    node.updateLayout();\n  }\n  function notifyLayoutUpdate(node) {\n    var _a, _b, _c, _d;\n    var snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;\n    if (node.isLead() && node.layout && snapshot && node.hasListeners(\"didUpdate\")) {\n      var _e = node.layout,\n        layout_1 = _e.actual,\n        measuredLayout = _e.measured;\n      // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n      // animations for instance if layout=\"size\" and an element has only changed position\n      if (node.options.animationType === \"size\") {\n        (0, _utilsEachAxisMjs.eachAxis)(function (axis) {\n          var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];\n          var length = (0, _geometryDeltaCalcMjs.calcLength)(axisSnapshot);\n          axisSnapshot.min = layout_1[axis].min;\n          axisSnapshot.max = axisSnapshot.min + length;\n        });\n      } else if (node.options.animationType === \"position\") {\n        (0, _utilsEachAxisMjs.eachAxis)(function (axis) {\n          var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];\n          var length = (0, _geometryDeltaCalcMjs.calcLength)(layout_1[axis]);\n          axisSnapshot.max = axisSnapshot.min + length;\n        });\n      }\n      var layoutDelta = (0, _geometryModelsMjs.createDelta)();\n      (0, _geometryDeltaCalcMjs.calcBoxDelta)(layoutDelta, layout_1, snapshot.layout);\n      var visualDelta = (0, _geometryModelsMjs.createDelta)();\n      if (snapshot.isShared) {\n        (0, _geometryDeltaCalcMjs.calcBoxDelta)(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n      } else {\n        (0, _geometryDeltaCalcMjs.calcBoxDelta)(visualDelta, layout_1, snapshot.layout);\n      }\n      var hasLayoutChanged = !(0, _geometryUtilsMjs.isDeltaZero)(layoutDelta);\n      var hasRelativeTargetChanged = false;\n      if (!node.resumeFrom) {\n        node.relativeParent = node.getClosestProjectingParent();\n        /**\n         * If the relativeParent is itself resuming from a different element then\n         * the relative snapshot is not relavent\n         */\n        if (node.relativeParent && !node.relativeParent.resumeFrom) {\n          var _f = node.relativeParent,\n            parentSnapshot = _f.snapshot,\n            parentLayout = _f.layout;\n          if (parentSnapshot && parentLayout) {\n            var relativeSnapshot = (0, _geometryModelsMjs.createBox)();\n            (0, _geometryDeltaCalcMjs.calcRelativePosition)(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n            var relativeLayout = (0, _geometryModelsMjs.createBox)();\n            (0, _geometryDeltaCalcMjs.calcRelativePosition)(relativeLayout, layout_1, parentLayout.actual);\n            if (!(0, _geometryUtilsMjs.boxEquals)(relativeSnapshot, relativeLayout)) {\n              hasRelativeTargetChanged = true;\n            }\n          }\n        }\n      }\n      node.notifyListeners(\"didUpdate\", {\n        layout: layout_1,\n        snapshot: snapshot,\n        delta: visualDelta,\n        layoutDelta: layoutDelta,\n        hasLayoutChanged: hasLayoutChanged,\n        hasRelativeTargetChanged: hasRelativeTargetChanged\n      });\n    } else if (node.isLead()) {\n      (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n  }\n  function clearSnapshot(node) {\n    node.clearSnapshot();\n  }\n  function clearMeasurements(node) {\n    node.clearMeasurements();\n  }\n  function resetTransformStyle(node) {\n    var visualElement = node.options.visualElement;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n      visualElement.notifyBeforeLayoutMeasure();\n    }\n    node.resetTransform();\n  }\n  function finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n  }\n  function resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n  }\n  function calcProjection(node) {\n    node.calcProjection();\n  }\n  function resetRotation(node) {\n    node.resetRotation();\n  }\n  function removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n  }\n  function mixAxisDelta(output, delta, p) {\n    output.translate = (0, _popmotion.mix)(delta.translate, 0, p);\n    output.scale = (0, _popmotion.mix)(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n  }\n  function mixAxis(output, from, to, p) {\n    output.min = (0, _popmotion.mix)(from.min, to.min, p);\n    output.max = (0, _popmotion.mix)(from.max, to.max, p);\n  }\n  function mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n  }\n  function hasOpacityCrossfade(node) {\n    return node.animationValues && node.animationValues.opacityExit !== undefined;\n  }\n  var defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1]\n  };\n  function mountNodeEarly(node, id) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    var searchNode = node.root;\n    for (var i = node.path.length - 1; i >= 0; i--) {\n      if (Boolean(node.path[i].instance)) {\n        searchNode = node.path[i];\n        break;\n      }\n    }\n    var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    var element = searchElement.querySelector(\"[data-projection-id=\\\"\".concat(id, \"\\\"]\"));\n    if (element) node.mount(element, true);\n  }\n  function roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n  }\n  function roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n  }\n});","lineCount":1208,"map":[[12,2,1207,0,"Object"],[12,8,1207,0],[12,9,1207,0,"defineProperty"],[12,23,1207,0],[12,24,1207,0,"exports"],[12,31,1207,0],[13,4,1207,0,"enumerable"],[13,14,1207,0],[14,4,1207,0,"get"],[14,7,1207,0],[14,18,1207,0,"get"],[14,19,1207,0],[15,6,1207,0],[15,13,1207,9,"createProjectionNode"],[15,33,1207,29],[16,4,1207,29],[17,2,1207,29],[18,2,1207,0,"Object"],[18,8,1207,0],[18,9,1207,0,"defineProperty"],[18,23,1207,0],[18,24,1207,0,"exports"],[18,31,1207,0],[19,4,1207,0,"enumerable"],[19,14,1207,0],[20,4,1207,0,"get"],[20,7,1207,0],[20,18,1207,0,"get"],[20,19,1207,0],[21,6,1207,0],[21,13,1207,31,"mixAxis"],[21,20,1207,38],[22,4,1207,38],[23,2,1207,38],[24,2,1207,0,"Object"],[24,8,1207,0],[24,9,1207,0,"defineProperty"],[24,23,1207,0],[24,24,1207,0,"exports"],[24,31,1207,0],[25,4,1207,0,"enumerable"],[25,14,1207,0],[26,4,1207,0,"get"],[26,7,1207,0],[26,18,1207,0,"get"],[26,19,1207,0],[27,6,1207,0],[27,13,1207,40,"mixAxisDelta"],[27,25,1207,52],[28,4,1207,52],[29,2,1207,52],[30,2,1207,0,"Object"],[30,8,1207,0],[30,9,1207,0,"defineProperty"],[30,23,1207,0],[30,24,1207,0,"exports"],[30,31,1207,0],[31,4,1207,0,"enumerable"],[31,14,1207,0],[32,4,1207,0,"get"],[32,7,1207,0],[32,18,1207,0,"get"],[32,19,1207,0],[33,6,1207,0],[33,13,1207,54,"mixBox"],[33,19,1207,60],[34,4,1207,60],[35,2,1207,60],[36,2,1,0],[36,6,1,0,"_tslib"],[36,12,1,0],[36,15,1,0,"require"],[36,22,1,0],[36,23,1,0,"_dependencyMap"],[36,37,1,0],[37,2,2,0],[37,6,2,0,"_framesync"],[37,16,2,0],[37,19,2,0,"require"],[37,26,2,0],[37,27,2,0,"_dependencyMap"],[37,41,2,0],[38,2,2,0],[38,6,2,0,"sync"],[38,10,2,0],[38,13,2,0,"_interopDefault"],[38,28,2,0],[38,29,2,0,"_framesync"],[38,39,2,0],[39,2,3,0],[39,6,3,0,"_popmotion"],[39,16,3,0],[39,19,3,0,"require"],[39,26,3,0],[39,27,3,0,"_dependencyMap"],[39,41,3,0],[40,2,4,0],[40,6,4,0,"_animationAnimateMjs"],[40,26,4,0],[40,29,4,0,"require"],[40,36,4,0],[40,37,4,0,"_dependencyMap"],[40,51,4,0],[41,2,5,0],[41,6,5,0,"_utilsSubscriptionManagerMjs"],[41,34,5,0],[41,37,5,0,"require"],[41,44,5,0],[41,45,5,0,"_dependencyMap"],[41,59,5,0],[42,2,6,0],[42,6,6,0,"_animationMixValuesMjs"],[42,28,6,0],[42,31,6,0,"require"],[42,38,6,0],[42,39,6,0,"_dependencyMap"],[42,53,6,0],[43,2,7,0],[43,6,7,0,"_geometryCopyMjs"],[43,22,7,0],[43,25,7,0,"require"],[43,32,7,0],[43,33,7,0,"_dependencyMap"],[43,47,7,0],[44,2,8,0],[44,6,8,0,"_geometryDeltaApplyMjs"],[44,28,8,0],[44,31,8,0,"require"],[44,38,8,0],[44,39,8,0,"_dependencyMap"],[44,53,8,0],[45,2,9,0],[45,6,9,0,"_geometryDeltaCalcMjs"],[45,27,9,0],[45,30,9,0,"require"],[45,37,9,0],[45,38,9,0,"_dependencyMap"],[45,52,9,0],[46,2,10,0],[46,6,10,0,"_geometryDeltaRemoveMjs"],[46,29,10,0],[46,32,10,0,"require"],[46,39,10,0],[46,40,10,0,"_dependencyMap"],[46,54,10,0],[47,2,11,0],[47,6,11,0,"_geometryModelsMjs"],[47,24,11,0],[47,27,11,0,"require"],[47,34,11,0],[47,35,11,0,"_dependencyMap"],[47,49,11,0],[48,2,12,0],[48,6,12,0,"_animationUtilsTransitionsMjs"],[48,35,12,0],[48,38,12,0,"require"],[48,45,12,0],[48,46,12,0,"_dependencyMap"],[48,60,12,0],[49,2,13,0],[49,6,13,0,"_geometryUtilsMjs"],[49,23,13,0],[49,26,13,0,"require"],[49,33,13,0],[49,34,13,0,"_dependencyMap"],[49,48,13,0],[50,2,14,0],[50,6,14,0,"_sharedStackMjs"],[50,21,14,0],[50,24,14,0,"require"],[50,31,14,0],[50,32,14,0,"_dependencyMap"],[50,46,14,0],[51,2,15,0],[51,6,15,0,"_stylesScaleCorrectionMjs"],[51,31,15,0],[51,34,15,0,"require"],[51,41,15,0],[51,42,15,0,"_dependencyMap"],[51,56,15,0],[52,2,16,0],[52,6,16,0,"_stylesTransformMjs"],[52,25,16,0],[52,28,16,0,"require"],[52,35,16,0],[52,36,16,0,"_dependencyMap"],[52,50,16,0],[53,2,17,0],[53,6,17,0,"_utilsEachAxisMjs"],[53,23,17,0],[53,26,17,0,"require"],[53,33,17,0],[53,34,17,0,"_dependencyMap"],[53,48,17,0],[54,2,18,0],[54,6,18,0,"_utilsHasTransformMjs"],[54,27,18,0],[54,30,18,0,"require"],[54,37,18,0],[54,38,18,0,"_dependencyMap"],[54,52,18,0],[55,2,19,0],[55,6,19,0,"_renderHtmlUtilsTransformMjs"],[55,34,19,0],[55,37,19,0,"require"],[55,44,19,0],[55,45,19,0,"_dependencyMap"],[55,59,19,0],[56,2,20,0],[56,6,20,0,"_renderUtilsFlatTreeMjs"],[56,29,20,0],[56,32,20,0,"require"],[56,39,20,0],[56,40,20,0,"_dependencyMap"],[56,54,20,0],[57,2,21,0],[57,6,21,0,"_valueUtilsResolveMotionValueMjs"],[57,38,21,0],[57,41,21,0,"require"],[57,48,21,0],[57,49,21,0,"_dependencyMap"],[57,63,21,0],[58,2,22,0],[58,6,22,0,"_stateMjs"],[58,15,22,0],[58,18,22,0,"require"],[58,25,22,0],[58,26,22,0,"_dependencyMap"],[58,40,22,0],[59,2,24,0],[60,0,25,0],[61,0,26,0],[62,0,27,0],[63,2,28,0],[63,6,28,4,"animationTarget"],[63,21,28,19],[63,24,28,22],[63,28,28,26],[64,2,29,0],[64,11,29,9,"createProjectionNode"],[64,31,29,29,"createProjectionNode"],[64,32,29,30,"_a"],[64,34,29,32],[64,36,29,34],[65,4,30,4],[65,8,30,8,"attachResizeListener"],[65,28,30,28],[65,31,30,31,"_a"],[65,33,30,33],[65,34,30,34,"attachResizeListener"],[65,54,30,54],[66,6,30,56,"defaultParent"],[66,19,30,69],[66,22,30,72,"_a"],[66,24,30,74],[66,25,30,75,"defaultParent"],[66,38,30,88],[67,6,30,90,"measureScroll"],[67,19,30,103],[67,22,30,106,"_a"],[67,24,30,108],[67,25,30,109,"measureScroll"],[67,38,30,122],[68,6,30,124,"checkIsScrollRoot"],[68,23,30,141],[68,26,30,144,"_a"],[68,28,30,146],[68,29,30,147,"checkIsScrollRoot"],[68,46,30,164],[69,6,30,166,"resetTransform"],[69,20,30,180],[69,23,30,183,"_a"],[69,25,30,185],[69,26,30,186,"resetTransform"],[69,40,30,200],[70,4,31,4],[70,11,31,11],[70,24,31,26],[70,36,31,38],[71,6,32,8],[71,15,32,17,"ProjectionNode"],[71,29,32,31,"ProjectionNode"],[71,30,32,32,"id"],[71,32,32,34],[71,34,32,36,"latestValues"],[71,46,32,48],[71,48,32,50,"parent"],[71,54,32,56],[71,56,32,58],[72,8,33,12],[72,12,33,16,"_this"],[72,17,33,21],[72,20,33,24],[72,24,33,28],[73,8,34,12],[73,12,34,16,"latestValues"],[73,24,34,28],[73,29,34,33],[73,34,34,38],[73,35,34,39],[73,37,34,41],[74,10,34,43,"latestValues"],[74,22,34,55],[74,25,34,58],[74,26,34,59],[74,27,34,60],[75,8,34,62],[76,8,35,12],[76,12,35,16,"parent"],[76,18,35,22],[76,23,35,27],[76,28,35,32],[76,29,35,33],[76,31,35,35],[77,10,35,37,"parent"],[77,16,35,43],[77,19,35,46,"defaultParent"],[77,32,35,59],[77,37,35,64],[77,41,35,68],[77,45,35,72,"defaultParent"],[77,58,35,85],[77,63,35,90],[77,68,35,95],[77,69,35,96],[77,72,35,99],[77,77,35,104],[77,78,35,105],[77,81,35,108,"defaultParent"],[77,94,35,121],[77,95,35,122],[77,96,35,123],[78,8,35,125],[79,8,36,12],[80,0,37,0],[81,0,38,0],[82,0,39,0],[83,0,40,0],[84,0,41,0],[85,8,42,12],[85,12,42,16],[85,13,42,17,"children"],[85,21,42,25],[85,24,42,28],[85,28,42,32,"Set"],[85,31,42,35],[85,32,42,36],[85,33,42,37],[86,8,43,12],[87,0,44,0],[88,0,45,0],[89,0,46,0],[90,8,47,12],[90,12,47,16],[90,13,47,17,"options"],[90,20,47,24],[90,23,47,27],[90,24,47,28],[90,25,47,29],[91,8,48,12],[92,0,49,0],[93,0,50,0],[94,0,51,0],[95,0,52,0],[96,8,53,12],[96,12,53,16],[96,13,53,17,"isTreeAnimating"],[96,28,53,32],[96,31,53,35],[96,36,53,40],[97,8,54,12],[97,12,54,16],[97,13,54,17,"isAnimationBlocked"],[97,31,54,35],[97,34,54,38],[97,39,54,43],[98,8,55,12],[99,0,56,0],[100,0,57,0],[101,0,58,0],[102,0,59,0],[103,0,60,0],[104,8,61,12],[104,12,61,16],[104,13,61,17,"isLayoutDirty"],[104,26,61,30],[104,29,61,33],[104,34,61,38],[105,8,62,12],[106,0,63,0],[107,0,64,0],[108,8,65,12],[108,12,65,16],[108,13,65,17,"updateManuallyBlocked"],[108,34,65,38],[108,37,65,41],[108,42,65,46],[109,8,66,12],[109,12,66,16],[109,13,66,17,"updateBlockedByResize"],[109,34,66,38],[109,37,66,41],[109,42,66,46],[110,8,67,12],[111,0,68,0],[112,0,69,0],[113,0,70,0],[114,8,71,12],[114,12,71,16],[114,13,71,17,"isUpdating"],[114,23,71,27],[114,26,71,30],[114,31,71,35],[115,8,72,12],[116,0,73,0],[117,0,74,0],[118,8,75,12],[118,12,75,16],[118,13,75,17,"isSVG"],[118,18,75,22],[118,21,75,25],[118,26,75,30],[119,8,76,12],[120,0,77,0],[121,0,78,0],[122,0,79,0],[123,8,80,12],[123,12,80,16],[123,13,80,17,"needsReset"],[123,23,80,27],[123,26,80,30],[123,31,80,35],[124,8,81,12],[125,0,82,0],[126,0,83,0],[127,8,84,12],[127,12,84,16],[127,13,84,17,"shouldResetTransform"],[127,33,84,37],[127,36,84,40],[127,41,84,45],[128,8,85,12],[129,0,86,0],[130,0,87,0],[131,0,88,0],[132,0,89,0],[133,0,90,0],[134,0,91,0],[135,0,92,0],[136,8,93,12],[136,12,93,16],[136,13,93,17,"treeScale"],[136,22,93,26],[136,25,93,29],[137,10,93,31,"x"],[137,11,93,32],[137,13,93,34],[137,14,93,35],[138,10,93,37,"y"],[138,11,93,38],[138,13,93,40],[139,8,93,42],[139,9,93,43],[140,8,94,12],[141,0,95,0],[142,0,96,0],[143,8,97,12],[143,12,97,16],[143,13,97,17,"eventHandlers"],[143,26,97,30],[143,29,97,33],[143,33,97,37,"Map"],[143,36,97,40],[143,37,97,41],[143,38,97,42],[144,8,98,12],[145,8,99,12],[145,12,99,16],[145,13,99,17,"potentialNodes"],[145,27,99,31],[145,30,99,34],[145,34,99,38,"Map"],[145,37,99,41],[145,38,99,42],[145,39,99,43],[146,8,100,12],[146,12,100,16],[146,13,100,17,"checkUpdateFailed"],[146,30,100,34],[146,33,100,37],[146,45,100,49],[147,10,101,16],[147,14,101,20,"_this"],[147,19,101,25],[147,20,101,26,"isUpdating"],[147,30,101,36],[147,32,101,38],[148,12,102,20,"_this"],[148,17,102,25],[148,18,102,26,"isUpdating"],[148,28,102,36],[148,31,102,39],[148,36,102,44],[149,12,103,20,"_this"],[149,17,103,25],[149,18,103,26,"clearAllSnapshots"],[149,35,103,43],[149,36,103,44],[149,37,103,45],[150,10,104,16],[151,8,105,12],[151,9,105,13],[152,8,106,12],[152,12,106,16],[152,13,106,17,"updateProjection"],[152,29,106,33],[152,32,106,36],[152,44,106,48],[153,10,107,16,"_this"],[153,15,107,21],[153,16,107,22,"nodes"],[153,21,107,27],[153,22,107,28,"forEach"],[153,29,107,35],[153,30,107,36,"resolveTargetDelta"],[153,48,107,54],[153,49,107,55],[154,10,108,16,"_this"],[154,15,108,21],[154,16,108,22,"nodes"],[154,21,108,27],[154,22,108,28,"forEach"],[154,29,108,35],[154,30,108,36,"calcProjection"],[154,44,108,50],[154,45,108,51],[155,8,109,12],[155,9,109,13],[156,8,110,12],[156,12,110,16],[156,13,110,17,"hasProjected"],[156,25,110,29],[156,28,110,32],[156,33,110,37],[157,8,111,12],[157,12,111,16],[157,13,111,17,"isVisible"],[157,22,111,26],[157,25,111,29],[157,29,111,33],[158,8,112,12],[158,12,112,16],[158,13,112,17,"animationProgress"],[158,30,112,34],[158,33,112,37],[158,34,112,38],[159,8,113,12],[160,0,114,0],[161,0,115,0],[162,8,116,12],[163,8,117,12],[163,12,117,16],[163,13,117,17,"sharedNodes"],[163,24,117,28],[163,27,117,31],[163,31,117,35,"Map"],[163,34,117,38],[163,35,117,39],[163,36,117,40],[164,8,118,12],[164,12,118,16],[164,13,118,17,"id"],[164,15,118,19],[164,18,118,22,"id"],[164,20,118,24],[165,8,119,12],[165,12,119,16],[165,13,119,17,"latestValues"],[165,25,119,29],[165,28,119,32,"latestValues"],[165,40,119,44],[166,8,120,12],[166,12,120,16],[166,13,120,17,"root"],[166,17,120,21],[166,20,120,24,"parent"],[166,26,120,30],[166,29,120,33,"parent"],[166,35,120,39],[166,36,120,40,"root"],[166,40,120,44],[166,44,120,48,"parent"],[166,50,120,54],[166,53,120,57],[166,57,120,61],[167,8,121,12],[167,12,121,16],[167,13,121,17,"path"],[167,17,121,21],[167,20,121,24,"parent"],[167,26,121,30],[167,29,121,33],[167,33,121,33,"__spreadArray"],[167,39,121,46],[167,40,121,46,"__spreadArray"],[167,53,121,46],[167,55,121,47],[167,59,121,47,"__spreadArray"],[167,65,121,60],[167,66,121,60,"__spreadArray"],[167,79,121,60],[167,81,121,61],[167,83,121,63],[167,85,121,65],[167,89,121,65,"__read"],[167,95,121,71],[167,96,121,71,"__read"],[167,102,121,71],[167,104,121,72,"parent"],[167,110,121,78],[167,111,121,79,"path"],[167,115,121,83],[167,116,121,84],[167,118,121,86],[167,123,121,91],[167,124,121,92],[167,126,121,94],[167,127,121,95,"parent"],[167,133,121,101],[167,134,121,102],[167,136,121,104],[167,141,121,109],[167,142,121,110],[167,145,121,113],[167,147,121,115],[168,8,122,12],[168,12,122,16],[168,13,122,17,"parent"],[168,19,122,23],[168,22,122,26,"parent"],[168,28,122,32],[169,8,123,12],[169,12,123,16],[169,13,123,17,"depth"],[169,18,123,22],[169,21,123,25,"parent"],[169,27,123,31],[169,30,123,34,"parent"],[169,36,123,40],[169,37,123,41,"depth"],[169,42,123,46],[169,45,123,49],[169,46,123,50],[169,49,123,53],[169,50,123,54],[170,8,124,12,"id"],[170,10,124,14],[170,14,124,18],[170,18,124,22],[170,19,124,23,"root"],[170,23,124,27],[170,24,124,28,"registerPotentialNode"],[170,45,124,49],[170,46,124,50,"id"],[170,48,124,52],[170,50,124,54],[170,54,124,58],[170,55,124,59],[171,8,125,12],[171,13,125,17],[171,17,125,21,"i"],[171,18,125,22],[171,21,125,25],[171,22,125,26],[171,24,125,28,"i"],[171,25,125,29],[171,28,125,32],[171,32,125,36],[171,33,125,37,"path"],[171,37,125,41],[171,38,125,42,"length"],[171,44,125,48],[171,46,125,50,"i"],[171,47,125,51],[171,49,125,53],[171,51,125,55],[172,10,126,16],[172,14,126,20],[172,15,126,21,"path"],[172,19,126,25],[172,20,126,26,"i"],[172,21,126,27],[172,22,126,28],[172,23,126,29,"shouldResetTransform"],[172,43,126,49],[172,46,126,52],[172,50,126,56],[173,8,127,12],[174,8,128,12],[174,12,128,16],[174,16,128,20],[174,17,128,21,"root"],[174,21,128,25],[174,26,128,30],[174,30,128,34],[174,32,129,16],[174,36,129,20],[174,37,129,21,"nodes"],[174,42,129,26],[174,45,129,29],[174,49,129,33,"FlatTree"],[174,72,129,41],[174,73,129,41,"FlatTree"],[174,81,129,41],[174,82,129,42],[174,83,129,43],[175,6,130,8],[176,6,131,8,"ProjectionNode"],[176,20,131,22],[176,21,131,23,"prototype"],[176,30,131,32],[176,31,131,33,"addEventListener"],[176,47,131,49],[176,50,131,52],[176,60,131,62,"name"],[176,64,131,66],[176,66,131,68,"handler"],[176,73,131,75],[176,75,131,77],[177,8,132,12],[177,12,132,16],[177,13,132,17],[177,17,132,21],[177,18,132,22,"eventHandlers"],[177,31,132,35],[177,32,132,36,"has"],[177,35,132,39],[177,36,132,40,"name"],[177,40,132,44],[177,41,132,45],[177,43,132,47],[178,10,133,16],[178,14,133,20],[178,15,133,21,"eventHandlers"],[178,28,133,34],[178,29,133,35,"set"],[178,32,133,38],[178,33,133,39,"name"],[178,37,133,43],[178,39,133,45],[178,43,133,49,"SubscriptionManager"],[178,71,133,68],[178,72,133,68,"SubscriptionManager"],[178,91,133,68],[178,92,133,69],[178,93,133,70],[178,94,133,71],[179,8,134,12],[180,8,135,12],[180,15,135,19],[180,19,135,23],[180,20,135,24,"eventHandlers"],[180,33,135,37],[180,34,135,38,"get"],[180,37,135,41],[180,38,135,42,"name"],[180,42,135,46],[180,43,135,47],[180,44,135,48,"add"],[180,47,135,51],[180,48,135,52,"handler"],[180,55,135,59],[180,56,135,60],[181,6,136,8],[181,7,136,9],[182,6,137,8,"ProjectionNode"],[182,20,137,22],[182,21,137,23,"prototype"],[182,30,137,32],[182,31,137,33,"notifyListeners"],[182,46,137,48],[182,49,137,51],[182,59,137,61,"name"],[182,63,137,65],[182,65,137,67],[183,8,138,12],[183,12,138,16,"args"],[183,16,138,20],[183,19,138,23],[183,21,138,25],[184,8,139,12],[184,13,139,17],[184,17,139,21,"_i"],[184,19,139,23],[184,22,139,26],[184,23,139,27],[184,25,139,29,"_i"],[184,27,139,31],[184,30,139,34,"arguments"],[184,39,139,43],[184,40,139,44,"length"],[184,46,139,50],[184,48,139,52,"_i"],[184,50,139,54],[184,52,139,56],[184,54,139,58],[185,10,140,16,"args"],[185,14,140,20],[185,15,140,21,"_i"],[185,17,140,23],[185,20,140,26],[185,21,140,27],[185,22,140,28],[185,25,140,31,"arguments"],[185,34,140,40],[185,35,140,41,"_i"],[185,37,140,43],[185,38,140,44],[186,8,141,12],[187,8,142,12],[187,12,142,16,"subscriptionManager"],[187,31,142,35],[187,34,142,38],[187,38,142,42],[187,39,142,43,"eventHandlers"],[187,52,142,56],[187,53,142,57,"get"],[187,56,142,60],[187,57,142,61,"name"],[187,61,142,65],[187,62,142,66],[188,8,143,12,"subscriptionManager"],[188,27,143,31],[188,32,143,36],[188,36,143,40],[188,40,143,44,"subscriptionManager"],[188,59,143,63],[188,64,143,68],[188,69,143,73],[188,70,143,74],[188,73,143,77],[188,78,143,82],[188,79,143,83],[188,82,143,86,"subscriptionManager"],[188,101,143,105],[188,102,143,106,"notify"],[188,108,143,112],[188,109,143,113,"apply"],[188,114,143,118],[188,115,143,119,"subscriptionManager"],[188,134,143,138],[188,136,143,140],[188,140,143,140,"__spreadArray"],[188,146,143,153],[188,147,143,153,"__spreadArray"],[188,160,143,153],[188,162,143,154],[188,164,143,156],[188,166,143,158],[188,170,143,158,"__read"],[188,176,143,164],[188,177,143,164,"__read"],[188,183,143,164],[188,185,143,165,"args"],[188,189,143,169],[188,190,143,170],[188,192,143,172],[188,197,143,177],[188,198,143,178],[188,199,143,179],[189,6,144,8],[189,7,144,9],[190,6,145,8,"ProjectionNode"],[190,20,145,22],[190,21,145,23,"prototype"],[190,30,145,32],[190,31,145,33,"hasListeners"],[190,43,145,45],[190,46,145,48],[190,56,145,58,"name"],[190,60,145,62],[190,62,145,64],[191,8,146,12],[191,15,146,19],[191,19,146,23],[191,20,146,24,"eventHandlers"],[191,33,146,37],[191,34,146,38,"has"],[191,37,146,41],[191,38,146,42,"name"],[191,42,146,46],[191,43,146,47],[192,6,147,8],[192,7,147,9],[193,6,148,8,"ProjectionNode"],[193,20,148,22],[193,21,148,23,"prototype"],[193,30,148,32],[193,31,148,33,"registerPotentialNode"],[193,52,148,54],[193,55,148,57],[193,65,148,67,"id"],[193,67,148,69],[193,69,148,71,"node"],[193,73,148,75],[193,75,148,77],[194,8,149,12],[194,12,149,16],[194,13,149,17,"potentialNodes"],[194,27,149,31],[194,28,149,32,"set"],[194,31,149,35],[194,32,149,36,"id"],[194,34,149,38],[194,36,149,40,"node"],[194,40,149,44],[194,41,149,45],[195,6,150,8],[195,7,150,9],[196,6,151,8],[197,0,152,0],[198,0,153,0],[199,6,154,8,"ProjectionNode"],[199,20,154,22],[199,21,154,23,"prototype"],[199,30,154,32],[199,31,154,33,"mount"],[199,36,154,38],[199,39,154,41],[199,49,154,51,"instance"],[199,57,154,59],[199,59,154,61,"isLayoutDirty"],[199,72,154,74],[199,74,154,76],[200,8,155,12],[200,12,155,16,"_this"],[200,17,155,21],[200,20,155,24],[200,24,155,28],[201,8,156,12],[201,12,156,16,"_a"],[201,14,156,18],[202,8,157,12],[202,12,157,16,"isLayoutDirty"],[202,25,157,29],[202,30,157,34],[202,35,157,39],[202,36,157,40],[202,38,157,42],[203,10,157,44,"isLayoutDirty"],[203,23,157,57],[203,26,157,60],[203,31,157,65],[204,8,157,67],[205,8,158,12],[205,12,158,16],[205,16,158,20],[205,17,158,21,"instance"],[205,25,158,29],[205,27,159,16],[206,8,160,12],[206,12,160,16],[206,13,160,17,"isSVG"],[206,18,160,22],[206,21,161,16,"instance"],[206,29,161,24],[206,41,161,36,"SVGElement"],[206,51,161,46],[206,55,161,50,"instance"],[206,63,161,58],[206,64,161,59,"tagName"],[206,71,161,66],[206,76,161,71],[206,81,161,76],[207,8,162,12],[207,12,162,16],[207,13,162,17,"instance"],[207,21,162,25],[207,24,162,28,"instance"],[207,32,162,36],[208,8,163,12],[208,12,163,16,"_b"],[208,14,163,18],[208,17,163,21],[208,21,163,25],[208,22,163,26,"options"],[208,29,163,33],[209,10,163,35,"layoutId"],[209,18,163,43],[209,21,163,46,"_b"],[209,23,163,48],[209,24,163,49,"layoutId"],[209,32,163,57],[210,10,163,59,"layout"],[210,16,163,65],[210,19,163,68,"_b"],[210,21,163,70],[210,22,163,71,"layout"],[210,28,163,77],[211,10,163,79,"visualElement"],[211,23,163,92],[211,26,163,95,"_b"],[211,28,163,97],[211,29,163,98,"visualElement"],[211,42,163,111],[212,8,164,12],[212,12,164,16,"visualElement"],[212,25,164,29],[212,29,164,33],[212,30,164,34,"visualElement"],[212,43,164,47],[212,44,164,48,"getInstance"],[212,55,164,59],[212,56,164,60],[212,57,164,61],[212,59,164,63],[213,10,165,16,"visualElement"],[213,23,165,29],[213,24,165,30,"mount"],[213,29,165,35],[213,30,165,36,"instance"],[213,38,165,44],[213,39,165,45],[214,8,166,12],[215,8,167,12],[215,12,167,16],[215,13,167,17,"root"],[215,17,167,21],[215,18,167,22,"nodes"],[215,23,167,27],[215,24,167,28,"add"],[215,27,167,31],[215,28,167,32],[215,32,167,36],[215,33,167,37],[216,8,168,12],[216,9,168,13,"_a"],[216,11,168,15],[216,14,168,18],[216,18,168,22],[216,19,168,23,"parent"],[216,25,168,29],[216,31,168,35],[216,35,168,39],[216,39,168,43,"_a"],[216,41,168,45],[216,46,168,50],[216,51,168,55],[216,52,168,56],[216,55,168,59],[216,60,168,64],[216,61,168,65],[216,64,168,68,"_a"],[216,66,168,70],[216,67,168,71,"children"],[216,75,168,79],[216,76,168,80,"add"],[216,79,168,83],[216,80,168,84],[216,84,168,88],[216,85,168,89],[217,8,169,12],[217,12,169,16],[217,13,169,17,"id"],[217,15,169,19],[217,19,169,23],[217,23,169,27],[217,24,169,28,"root"],[217,28,169,32],[217,29,169,33,"potentialNodes"],[217,43,169,47],[217,44,169,48,"delete"],[217,50,169,54],[217,51,169,55],[217,55,169,59],[217,56,169,60,"id"],[217,58,169,62],[217,59,169,63],[218,8,170,12],[218,12,170,16,"isLayoutDirty"],[218,25,170,29],[218,30,170,34,"layout"],[218,36,170,40],[218,40,170,44,"layoutId"],[218,48,170,52],[218,49,170,53],[218,51,170,55],[219,10,171,16],[219,14,171,20],[219,15,171,21,"isLayoutDirty"],[219,28,171,34],[219,31,171,37],[219,35,171,41],[220,8,172,12],[221,8,173,12],[221,12,173,16,"attachResizeListener"],[221,32,173,36],[221,34,173,38],[222,10,174,16],[222,14,174,20,"unblockTimeout_1"],[222,30,174,36],[223,10,175,16],[223,14,175,20,"resizeUnblockUpdate_1"],[223,35,175,41],[223,38,175,44],[223,47,175,44,"resizeUnblockUpdate_1"],[223,48,175,44],[223,50,175,56],[224,12,176,20],[224,19,176,28,"_this"],[224,24,176,33],[224,25,176,34,"root"],[224,29,176,38],[224,30,176,39,"updateBlockedByResize"],[224,51,176,60],[224,54,176,63],[224,59,176,68],[225,10,177,16],[225,11,177,17],[226,10,178,16,"attachResizeListener"],[226,30,178,36],[226,31,178,37,"instance"],[226,39,178,45],[226,41,178,47],[226,53,178,59],[227,12,179,20,"_this"],[227,17,179,25],[227,18,179,26,"root"],[227,22,179,30],[227,23,179,31,"updateBlockedByResize"],[227,44,179,52],[227,47,179,55],[227,51,179,59],[228,12,180,20,"clearTimeout"],[228,24,180,32],[228,25,180,33,"unblockTimeout_1"],[228,41,180,49],[228,42,180,50],[229,12,181,20,"unblockTimeout_1"],[229,28,181,36],[229,31,181,39,"window"],[229,37,181,45],[229,38,181,46,"setTimeout"],[229,48,181,56],[229,49,181,57,"resizeUnblockUpdate_1"],[229,70,181,78],[229,72,181,80],[229,75,181,83],[229,76,181,84],[230,12,182,20],[230,16,182,24,"globalProjectionState"],[230,25,182,45],[230,26,182,45,"globalProjectionState"],[230,47,182,45],[230,48,182,46,"hasAnimatedSinceResize"],[230,70,182,68],[230,72,182,70],[231,14,183,24,"globalProjectionState"],[231,23,183,45],[231,24,183,45,"globalProjectionState"],[231,45,183,45],[231,46,183,46,"hasAnimatedSinceResize"],[231,68,183,68],[231,71,183,71],[231,76,183,76],[232,14,184,24,"_this"],[232,19,184,29],[232,20,184,30,"nodes"],[232,25,184,35],[232,26,184,36,"forEach"],[232,33,184,43],[232,34,184,44,"finishAnimation"],[232,49,184,59],[232,50,184,60],[233,12,185,20],[234,10,186,16],[234,11,186,17],[234,12,186,18],[235,8,187,12],[236,8,188,12],[236,12,188,16,"layoutId"],[236,20,188,24],[236,22,188,26],[237,10,189,16],[237,14,189,20],[237,15,189,21,"root"],[237,19,189,25],[237,20,189,26,"registerSharedNode"],[237,38,189,44],[237,39,189,45,"layoutId"],[237,47,189,53],[237,49,189,55],[237,53,189,59],[237,54,189,60],[238,8,190,12],[239,8,191,12],[240,8,192,12],[240,12,192,16],[240,16,192,20],[240,17,192,21,"options"],[240,24,192,28],[240,25,192,29,"animate"],[240,32,192,36],[240,37,192,41],[240,42,192,46],[240,46,193,16,"visualElement"],[240,59,193,29],[240,64,194,17,"layoutId"],[240,72,194,25],[240,76,194,29,"layout"],[240,82,194,35],[240,83,194,36],[240,85,194,38],[241,10,195,16],[241,14,195,20],[241,15,195,21,"addEventListener"],[241,31,195,37],[241,32,195,38],[241,43,195,49],[241,45,195,51],[241,55,195,61,"_a"],[241,57,195,63],[241,59,195,65],[242,12,196,20],[242,16,196,24,"_b"],[242,18,196,26],[242,20,196,28,"_c"],[242,22,196,30],[242,24,196,32,"_d"],[242,26,196,34],[242,28,196,36,"_e"],[242,30,196,38],[242,32,196,40,"_f"],[242,34,196,42],[243,12,197,20],[243,16,197,24,"delta"],[243,21,197,29],[243,24,197,32,"_a"],[243,26,197,34],[243,27,197,35,"delta"],[243,32,197,40],[244,14,197,42,"hasLayoutChanged"],[244,30,197,58],[244,33,197,61,"_a"],[244,35,197,63],[244,36,197,64,"hasLayoutChanged"],[244,52,197,80],[245,14,197,82,"hasRelativeTargetChanged"],[245,38,197,106],[245,41,197,109,"_a"],[245,43,197,111],[245,44,197,112,"hasRelativeTargetChanged"],[245,68,197,136],[246,14,197,138,"newLayout"],[246,23,197,147],[246,26,197,150,"_a"],[246,28,197,152],[246,29,197,153,"layout"],[246,35,197,159],[247,12,198,20],[247,16,198,24,"_this"],[247,21,198,29],[247,22,198,30,"isTreeAnimationBlocked"],[247,44,198,52],[247,45,198,53],[247,46,198,54],[247,48,198,56],[248,14,199,24,"_this"],[248,19,199,29],[248,20,199,30,"target"],[248,26,199,36],[248,29,199,39,"undefined"],[248,38,199,48],[249,14,200,24,"_this"],[249,19,200,29],[249,20,200,30,"relativeTarget"],[249,34,200,44],[249,37,200,47,"undefined"],[249,46,200,56],[250,14,201,24],[251,12,202,20],[252,12,203,20],[253,12,204,20],[253,16,204,24,"layoutTransition"],[253,32,204,40],[253,35,204,43],[253,36,204,44,"_c"],[253,38,204,46],[253,41,204,49],[253,42,204,50,"_b"],[253,44,204,52],[253,47,204,55,"_this"],[253,52,204,60],[253,53,204,61,"options"],[253,60,204,68],[253,61,204,69,"transition"],[253,71,204,79],[253,77,204,85],[253,81,204,89],[253,85,204,93,"_b"],[253,87,204,95],[253,92,204,100],[253,97,204,105],[253,98,204,106],[253,101,204,109,"_b"],[253,103,204,111],[253,106,204,114,"visualElement"],[253,119,204,127],[253,120,204,128,"getDefaultTransition"],[253,140,204,148],[253,141,204,149],[253,142,204,150],[253,148,204,156],[253,152,204,160],[253,156,204,164,"_c"],[253,158,204,166],[253,163,204,171],[253,168,204,176],[253,169,204,177],[253,172,204,180,"_c"],[253,174,204,182],[253,177,204,185,"defaultLayoutTransition"],[253,200,204,208],[254,12,205,20],[254,16,205,24,"_g"],[254,18,205,26],[254,21,205,29,"visualElement"],[254,34,205,42],[254,35,205,43,"getProps"],[254,43,205,51],[254,44,205,52],[254,45,205,53],[255,14,205,55,"onLayoutAnimationStart"],[255,36,205,77],[255,39,205,80,"_g"],[255,41,205,82],[255,42,205,83,"onLayoutAnimationStart"],[255,64,205,105],[256,14,205,107,"onLayoutAnimationComplete"],[256,39,205,132],[256,42,205,135,"_g"],[256,44,205,137],[256,45,205,138,"onLayoutAnimationComplete"],[256,70,205,163],[257,12,206,20],[258,0,207,0],[259,0,208,0],[260,0,209,0],[261,12,210,20],[261,16,210,24,"targetChanged"],[261,29,210,37],[261,32,210,40],[261,33,210,41,"_this"],[261,38,210,46],[261,39,210,47,"targetLayout"],[261,51,210,59],[261,55,211,24],[261,56,211,25],[261,60,211,25,"boxEquals"],[261,77,211,34],[261,78,211,34,"boxEquals"],[261,87,211,34],[261,89,211,35,"_this"],[261,94,211,40],[261,95,211,41,"targetLayout"],[261,107,211,53],[261,109,211,55,"newLayout"],[261,118,211,64],[261,119,211,65],[261,123,212,24,"hasRelativeTargetChanged"],[261,147,212,48],[262,12,213,20],[263,0,214,0],[264,0,215,0],[265,0,216,0],[266,0,217,0],[267,12,218,20],[267,16,218,24,"hasOnlyRelativeTargetChanged"],[267,44,218,52],[267,47,218,55],[267,48,218,56,"hasLayoutChanged"],[267,64,218,72],[267,68,218,76,"hasRelativeTargetChanged"],[267,92,218,100],[268,12,219,20],[268,16,219,24],[268,17,219,25],[268,18,219,26,"_d"],[268,20,219,28],[268,23,219,31,"_this"],[268,28,219,36],[268,29,219,37,"resumeFrom"],[268,39,219,47],[268,45,219,53],[268,49,219,57],[268,53,219,61,"_d"],[268,55,219,63],[268,60,219,68],[268,65,219,73],[268,66,219,74],[268,69,219,77],[268,74,219,82],[268,75,219,83],[268,78,219,86,"_d"],[268,80,219,88],[268,81,219,89,"instance"],[268,89,219,97],[268,94,220,24,"hasOnlyRelativeTargetChanged"],[268,122,220,52],[268,126,221,25,"hasLayoutChanged"],[268,142,221,41],[268,147,222,29,"targetChanged"],[268,160,222,42],[268,164,222,46],[268,165,222,47,"_this"],[268,170,222,52],[268,171,222,53,"currentAnimation"],[268,187,222,69],[268,188,222,71],[268,190,222,73],[269,14,223,24],[269,18,223,28,"_this"],[269,23,223,33],[269,24,223,34,"resumeFrom"],[269,34,223,44],[269,36,223,46],[270,16,224,28,"_this"],[270,21,224,33],[270,22,224,34,"resumingFrom"],[270,34,224,46],[270,37,224,49,"_this"],[270,42,224,54],[270,43,224,55,"resumeFrom"],[270,53,224,65],[271,16,225,28,"_this"],[271,21,225,33],[271,22,225,34,"resumingFrom"],[271,34,225,46],[271,35,225,47,"resumingFrom"],[271,47,225,59],[271,50,225,62,"undefined"],[271,59,225,71],[272,14,226,24],[273,14,227,24,"_this"],[273,19,227,29],[273,20,227,30,"setAnimationOrigin"],[273,38,227,48],[273,39,227,49,"delta"],[273,44,227,54],[273,46,227,56,"hasOnlyRelativeTargetChanged"],[273,74,227,84],[273,75,227,85],[274,14,228,24],[274,18,228,28,"animationOptions"],[274,34,228,44],[274,37,228,47],[274,41,228,47,"__assign"],[274,47,228,55],[274,48,228,55,"__assign"],[274,56,228,55],[274,58,228,56],[274,62,228,56,"__assign"],[274,68,228,64],[274,69,228,64,"__assign"],[274,77,228,64],[274,79,228,65],[274,80,228,66],[274,81,228,67],[274,83,228,69],[274,87,228,69,"getValueTransition"],[274,116,228,87],[274,117,228,87,"getValueTransition"],[274,135,228,87],[274,137,228,88,"layoutTransition"],[274,153,228,104],[274,155,228,106],[274,163,228,114],[274,164,228,115],[274,165,228,116],[274,167,228,118],[275,16,228,120,"onPlay"],[275,22,228,126],[275,24,228,128,"onLayoutAnimationStart"],[275,46,228,150],[276,16,228,152,"onComplete"],[276,26,228,162],[276,28,228,164,"onLayoutAnimationComplete"],[277,14,228,190],[277,15,228,191],[277,16,228,192],[278,14,229,24],[278,18,229,28,"visualElement"],[278,31,229,41],[278,32,229,42,"shouldReduceMotion"],[278,50,229,60],[278,52,229,62],[279,16,230,28,"animationOptions"],[279,32,230,44],[279,33,230,45,"delay"],[279,38,230,50],[279,41,230,53],[279,42,230,54],[280,16,231,28,"animationOptions"],[280,32,231,44],[280,33,231,45,"type"],[280,37,231,49],[280,40,231,52],[280,45,231,57],[281,14,232,24],[282,14,233,24,"_this"],[282,19,233,29],[282,20,233,30,"startAnimation"],[282,34,233,44],[282,35,233,45,"animationOptions"],[282,51,233,61],[282,52,233,62],[283,12,234,20],[283,13,234,21],[283,19,235,25],[284,14,236,24],[285,0,237,0],[286,0,238,0],[287,0,239,0],[288,0,240,0],[289,14,241,24],[289,18,241,28],[289,19,241,29,"hasLayoutChanged"],[289,35,241,45],[289,39,242,28,"_this"],[289,44,242,33],[289,45,242,34,"animationProgress"],[289,62,242,51],[289,67,242,56],[289,68,242,57],[289,70,242,59],[290,16,243,28,"_this"],[290,21,243,33],[290,22,243,34,"finishAnimation"],[290,37,243,49],[290,38,243,50],[290,39,243,51],[291,14,244,24],[292,14,245,24,"_this"],[292,19,245,29],[292,20,245,30,"isLead"],[292,26,245,36],[292,27,245,37],[292,28,245,38],[292,33,245,43],[292,34,245,44,"_f"],[292,36,245,46],[292,39,245,49],[292,40,245,50,"_e"],[292,42,245,52],[292,45,245,55,"_this"],[292,50,245,60],[292,51,245,61,"options"],[292,58,245,68],[292,60,245,70,"onExitComplete"],[292,74,245,84],[292,80,245,90],[292,84,245,94],[292,88,245,98,"_f"],[292,90,245,100],[292,95,245,105],[292,100,245,110],[292,101,245,111],[292,104,245,114],[292,109,245,119],[292,110,245,120],[292,113,245,123,"_f"],[292,115,245,125],[292,116,245,126,"call"],[292,120,245,130],[292,121,245,131,"_e"],[292,123,245,133],[292,124,245,134],[292,125,245,135],[293,12,246,20],[294,12,247,20,"_this"],[294,17,247,25],[294,18,247,26,"targetLayout"],[294,30,247,38],[294,33,247,41,"newLayout"],[294,42,247,50],[295,10,248,16],[295,11,248,17],[295,12,248,18],[296,8,249,12],[297,6,250,8],[297,7,250,9],[298,6,251,8,"ProjectionNode"],[298,20,251,22],[298,21,251,23,"prototype"],[298,30,251,32],[298,31,251,33,"unmount"],[298,38,251,40],[298,41,251,43],[298,53,251,55],[299,8,252,12],[299,12,252,16,"_a"],[299,14,252,18],[299,16,252,20,"_b"],[299,18,252,22],[300,8,253,12],[300,12,253,16],[300,13,253,17,"options"],[300,20,253,24],[300,21,253,25,"layoutId"],[300,29,253,33],[300,33,253,37],[300,37,253,41],[300,38,253,42,"willUpdate"],[300,48,253,52],[300,49,253,53],[300,50,253,54],[301,8,254,12],[301,12,254,16],[301,13,254,17,"root"],[301,17,254,21],[301,18,254,22,"nodes"],[301,23,254,27],[301,24,254,28,"remove"],[301,30,254,34],[301,31,254,35],[301,35,254,39],[301,36,254,40],[302,8,255,12],[302,9,255,13,"_a"],[302,11,255,15],[302,14,255,18],[302,18,255,22],[302,19,255,23,"getStack"],[302,27,255,31],[302,28,255,32],[302,29,255,33],[302,35,255,39],[302,39,255,43],[302,43,255,47,"_a"],[302,45,255,49],[302,50,255,54],[302,55,255,59],[302,56,255,60],[302,59,255,63],[302,64,255,68],[302,65,255,69],[302,68,255,72,"_a"],[302,70,255,74],[302,71,255,75,"remove"],[302,77,255,81],[302,78,255,82],[302,82,255,86],[302,83,255,87],[303,8,256,12],[303,9,256,13,"_b"],[303,11,256,15],[303,14,256,18],[303,18,256,22],[303,19,256,23,"parent"],[303,25,256,29],[303,31,256,35],[303,35,256,39],[303,39,256,43,"_b"],[303,41,256,45],[303,46,256,50],[303,51,256,55],[303,52,256,56],[303,55,256,59],[303,60,256,64],[303,61,256,65],[303,64,256,68,"_b"],[303,66,256,70],[303,67,256,71,"children"],[303,75,256,79],[303,76,256,80,"delete"],[303,82,256,86],[303,83,256,87],[303,87,256,91],[303,88,256,92],[304,8,257,12],[304,12,257,16],[304,13,257,17,"instance"],[304,21,257,25],[304,24,257,28,"undefined"],[304,33,257,37],[305,8,258,12,"cancelSync"],[305,18,258,22],[305,19,258,22,"cancelSync"],[305,29,258,22],[305,30,258,23,"preRender"],[305,39,258,32],[305,40,258,33],[305,44,258,37],[305,45,258,38,"updateProjection"],[305,61,258,54],[305,62,258,55],[306,6,259,8],[306,7,259,9],[307,6,260,8],[308,6,261,8,"ProjectionNode"],[308,20,261,22],[308,21,261,23,"prototype"],[308,30,261,32],[308,31,261,33,"blockUpdate"],[308,42,261,44],[308,45,261,47],[308,57,261,59],[309,8,262,12],[309,12,262,16],[309,13,262,17,"updateManuallyBlocked"],[309,34,262,38],[309,37,262,41],[309,41,262,45],[310,6,263,8],[310,7,263,9],[311,6,264,8,"ProjectionNode"],[311,20,264,22],[311,21,264,23,"prototype"],[311,30,264,32],[311,31,264,33,"unblockUpdate"],[311,44,264,46],[311,47,264,49],[311,59,264,61],[312,8,265,12],[312,12,265,16],[312,13,265,17,"updateManuallyBlocked"],[312,34,265,38],[312,37,265,41],[312,42,265,46],[313,6,266,8],[313,7,266,9],[314,6,267,8,"ProjectionNode"],[314,20,267,22],[314,21,267,23,"prototype"],[314,30,267,32],[314,31,267,33,"isUpdateBlocked"],[314,46,267,48],[314,49,267,51],[314,61,267,63],[315,8,268,12],[315,15,268,19],[315,19,268,23],[315,20,268,24,"updateManuallyBlocked"],[315,41,268,45],[315,45,268,49],[315,49,268,53],[315,50,268,54,"updateBlockedByResize"],[315,71,268,75],[316,6,269,8],[316,7,269,9],[317,6,270,8,"ProjectionNode"],[317,20,270,22],[317,21,270,23,"prototype"],[317,30,270,32],[317,31,270,33,"isTreeAnimationBlocked"],[317,53,270,55],[317,56,270,58],[317,68,270,70],[318,8,271,12],[318,12,271,16,"_a"],[318,14,271,18],[319,8,272,12],[319,15,272,20],[319,19,272,24],[319,20,272,25,"isAnimationBlocked"],[319,38,272,43],[319,43,273,17],[319,44,273,18,"_a"],[319,46,273,20],[319,49,273,23],[319,53,273,27],[319,54,273,28,"parent"],[319,60,273,34],[319,66,273,40],[319,70,273,44],[319,74,273,48,"_a"],[319,76,273,50],[319,81,273,55],[319,86,273,60],[319,87,273,61],[319,90,273,64],[319,95,273,69],[319,96,273,70],[319,99,273,73,"_a"],[319,101,273,75],[319,102,273,76,"isTreeAnimationBlocked"],[319,124,273,98],[319,125,273,99],[319,126,273,100],[319,127,273,101],[319,131,274,16],[319,136,274,21],[320,6,275,8],[320,7,275,9],[321,6,276,8],[322,6,277,8,"ProjectionNode"],[322,20,277,22],[322,21,277,23,"prototype"],[322,30,277,32],[322,31,277,33,"startUpdate"],[322,42,277,44],[322,45,277,47],[322,57,277,59],[323,8,278,12],[323,12,278,16,"_a"],[323,14,278,18],[324,8,279,12],[324,12,279,16],[324,16,279,20],[324,17,279,21,"isUpdateBlocked"],[324,32,279,36],[324,33,279,37],[324,34,279,38],[324,36,280,16],[325,8,281,12],[325,12,281,16],[325,13,281,17,"isUpdating"],[325,23,281,27],[325,26,281,30],[325,30,281,34],[326,8,282,12],[326,9,282,13,"_a"],[326,11,282,15],[326,14,282,18],[326,18,282,22],[326,19,282,23,"nodes"],[326,24,282,28],[326,30,282,34],[326,34,282,38],[326,38,282,42,"_a"],[326,40,282,44],[326,45,282,49],[326,50,282,54],[326,51,282,55],[326,54,282,58],[326,59,282,63],[326,60,282,64],[326,63,282,67,"_a"],[326,65,282,69],[326,66,282,70,"forEach"],[326,73,282,77],[326,74,282,78,"resetRotation"],[326,87,282,91],[326,88,282,92],[327,6,283,8],[327,7,283,9],[328,6,284,8,"ProjectionNode"],[328,20,284,22],[328,21,284,23,"prototype"],[328,30,284,32],[328,31,284,33,"willUpdate"],[328,41,284,43],[328,44,284,46],[328,54,284,56,"shouldNotifyListeners"],[328,75,284,77],[328,77,284,79],[329,8,285,12],[329,12,285,16,"_a"],[329,14,285,18],[329,16,285,20,"_b"],[329,18,285,22],[329,20,285,24,"_c"],[329,22,285,26],[330,8,286,12],[330,12,286,16,"shouldNotifyListeners"],[330,33,286,37],[330,38,286,42],[330,43,286,47],[330,44,286,48],[330,46,286,50],[331,10,286,52,"shouldNotifyListeners"],[331,31,286,73],[331,34,286,76],[331,38,286,80],[332,8,286,82],[333,8,287,12],[333,12,287,16],[333,16,287,20],[333,17,287,21,"root"],[333,21,287,25],[333,22,287,26,"isUpdateBlocked"],[333,37,287,41],[333,38,287,42],[333,39,287,43],[333,41,287,45],[334,10,288,16],[334,11,288,17,"_b"],[334,13,288,19],[334,16,288,22],[334,17,288,23,"_a"],[334,19,288,25],[334,22,288,28],[334,26,288,32],[334,27,288,33,"options"],[334,34,288,40],[334,36,288,42,"onExitComplete"],[334,50,288,56],[334,56,288,62],[334,60,288,66],[334,64,288,70,"_b"],[334,66,288,72],[334,71,288,77],[334,76,288,82],[334,77,288,83],[334,80,288,86],[334,85,288,91],[334,86,288,92],[334,89,288,95,"_b"],[334,91,288,97],[334,92,288,98,"call"],[334,96,288,102],[334,97,288,103,"_a"],[334,99,288,105],[334,100,288,106],[335,10,289,16],[336,8,290,12],[337,8,291,12],[337,9,291,13],[337,13,291,17],[337,14,291,18,"root"],[337,18,291,22],[337,19,291,23,"isUpdating"],[337,29,291,33],[337,33,291,37],[337,37,291,41],[337,38,291,42,"root"],[337,42,291,46],[337,43,291,47,"startUpdate"],[337,54,291,58],[337,55,291,59],[337,56,291,60],[338,8,292,12],[338,12,292,16],[338,16,292,20],[338,17,292,21,"isLayoutDirty"],[338,30,292,34],[338,32,293,16],[339,8,294,12],[339,12,294,16],[339,13,294,17,"isLayoutDirty"],[339,26,294,30],[339,29,294,33],[339,33,294,37],[340,8,295,12],[340,13,295,17],[340,17,295,21,"i"],[340,18,295,22],[340,21,295,25],[340,22,295,26],[340,24,295,28,"i"],[340,25,295,29],[340,28,295,32],[340,32,295,36],[340,33,295,37,"path"],[340,37,295,41],[340,38,295,42,"length"],[340,44,295,48],[340,46,295,50,"i"],[340,47,295,51],[340,49,295,53],[340,51,295,55],[341,10,296,16],[341,14,296,20,"node"],[341,18,296,24],[341,21,296,27],[341,25,296,31],[341,26,296,32,"path"],[341,30,296,36],[341,31,296,37,"i"],[341,32,296,38],[341,33,296,39],[342,10,297,16,"node"],[342,14,297,20],[342,15,297,21,"shouldResetTransform"],[342,35,297,41],[342,38,297,44],[342,42,297,48],[343,10,298,16],[344,0,299,0],[345,0,300,0],[346,0,301,0],[347,10,302,16,"node"],[347,14,302,20],[347,15,302,21,"updateScroll"],[347,27,302,33],[347,28,302,34],[347,29,302,35],[348,8,303,12],[349,8,304,12],[349,12,304,16,"_d"],[349,14,304,18],[349,17,304,21],[349,21,304,25],[349,22,304,26,"options"],[349,29,304,33],[350,10,304,35,"layoutId"],[350,18,304,43],[350,21,304,46,"_d"],[350,23,304,48],[350,24,304,49,"layoutId"],[350,32,304,57],[351,10,304,59,"layout"],[351,16,304,65],[351,19,304,68,"_d"],[351,21,304,70],[351,22,304,71,"layout"],[351,28,304,77],[352,8,305,12],[352,12,305,16,"layoutId"],[352,20,305,24],[352,25,305,29,"undefined"],[352,34,305,38],[352,38,305,42],[352,39,305,43,"layout"],[352,45,305,49],[352,47,306,16],[353,8,307,12],[353,12,307,16,"transformTemplate"],[353,29,307,33],[353,32,307,36],[353,33,307,37,"_c"],[353,35,307,39],[353,38,307,42],[353,42,307,46],[353,43,307,47,"options"],[353,50,307,54],[353,51,307,55,"visualElement"],[353,64,307,68],[353,70,307,74],[353,74,307,78],[353,78,307,82,"_c"],[353,80,307,84],[353,85,307,89],[353,90,307,94],[353,91,307,95],[353,94,307,98],[353,99,307,103],[353,100,307,104],[353,103,307,107,"_c"],[353,105,307,109],[353,106,307,110,"getProps"],[353,114,307,118],[353,115,307,119],[353,116,307,120],[353,117,307,121,"transformTemplate"],[353,134,307,138],[354,8,308,12],[354,12,308,16],[354,13,308,17,"prevTransformTemplateValue"],[354,39,308,43],[354,42,308,46,"transformTemplate"],[354,59,308,63],[354,64,308,68],[354,68,308,72],[354,72,308,76,"transformTemplate"],[354,89,308,93],[354,94,308,98],[354,99,308,103],[354,100,308,104],[354,103,308,107],[354,108,308,112],[354,109,308,113],[354,112,308,116,"transformTemplate"],[354,129,308,133],[354,130,308,134],[354,134,308,138],[354,135,308,139,"latestValues"],[354,147,308,151],[354,149,308,153],[354,151,308,155],[354,152,308,156],[355,8,309,12],[355,12,309,16],[355,13,309,17,"updateSnapshot"],[355,27,309,31],[355,28,309,32],[355,29,309,33],[356,8,310,12,"shouldNotifyListeners"],[356,29,310,33],[356,33,310,37],[356,37,310,41],[356,38,310,42,"notifyListeners"],[356,53,310,57],[356,54,310,58],[356,66,310,70],[356,67,310,71],[357,6,311,8],[357,7,311,9],[358,6,312,8],[359,6,313,8,"ProjectionNode"],[359,20,313,22],[359,21,313,23,"prototype"],[359,30,313,32],[359,31,313,33,"didUpdate"],[359,40,313,42],[359,43,313,45],[359,55,313,57],[360,8,314,12],[360,12,314,16,"updateWasBlocked"],[360,28,314,32],[360,31,314,35],[360,35,314,39],[360,36,314,40,"isUpdateBlocked"],[360,51,314,55],[360,52,314,56],[360,53,314,57],[361,8,315,12],[362,8,316,12],[363,8,317,12],[364,8,318,12],[364,12,318,16,"updateWasBlocked"],[364,28,318,32],[364,30,318,34],[365,10,319,16],[365,14,319,20],[365,15,319,21,"unblockUpdate"],[365,28,319,34],[365,29,319,35],[365,30,319,36],[366,10,320,16],[366,14,320,20],[366,15,320,21,"clearAllSnapshots"],[366,32,320,38],[366,33,320,39],[366,34,320,40],[367,10,321,16],[367,14,321,20],[367,15,321,21,"nodes"],[367,20,321,26],[367,21,321,27,"forEach"],[367,28,321,34],[367,29,321,35,"clearMeasurements"],[367,46,321,52],[367,47,321,53],[368,10,322,16],[369,8,323,12],[370,8,324,12],[370,12,324,16],[370,13,324,17],[370,17,324,21],[370,18,324,22,"isUpdating"],[370,28,324,32],[370,30,325,16],[371,8,326,12],[371,12,326,16],[371,13,326,17,"isUpdating"],[371,23,326,27],[371,26,326,30],[371,31,326,35],[372,8,327,12],[373,0,328,0],[374,0,329,0],[375,0,330,0],[376,0,331,0],[377,0,332,0],[378,8,333,12],[378,12,333,16],[378,16,333,20],[378,17,333,21,"potentialNodes"],[378,31,333,35],[378,32,333,36,"size"],[378,36,333,40],[378,38,333,42],[379,10,334,16],[379,14,334,20],[379,15,334,21,"potentialNodes"],[379,29,334,35],[379,30,334,36,"forEach"],[379,37,334,43],[379,38,334,44,"mountNodeEarly"],[379,52,334,58],[379,53,334,59],[380,10,335,16],[380,14,335,20],[380,15,335,21,"potentialNodes"],[380,29,335,35],[380,30,335,36,"clear"],[380,35,335,41],[380,36,335,42],[380,37,335,43],[381,8,336,12],[382,8,337,12],[383,0,338,0],[384,0,339,0],[385,8,340,12],[385,12,340,16],[385,13,340,17,"nodes"],[385,18,340,22],[385,19,340,23,"forEach"],[385,26,340,30],[385,27,340,31,"resetTransformStyle"],[385,46,340,50],[385,47,340,51],[386,8,341,12],[387,0,342,0],[388,0,343,0],[389,8,344,12],[390,8,345,12],[390,12,345,16],[390,13,345,17,"nodes"],[390,18,345,22],[390,19,345,23,"forEach"],[390,26,345,30],[390,27,345,31,"updateLayout"],[390,39,345,43],[390,40,345,44],[391,8,346,12],[392,0,347,0],[393,0,348,0],[394,8,349,12],[395,8,350,12],[395,12,350,16],[395,13,350,17,"nodes"],[395,18,350,22],[395,19,350,23,"forEach"],[395,26,350,30],[395,27,350,31,"notifyLayoutUpdate"],[395,45,350,49],[395,46,350,50],[396,8,351,12],[396,12,351,16],[396,13,351,17,"clearAllSnapshots"],[396,30,351,34],[396,31,351,35],[396,32,351,36],[397,8,352,12],[398,8,353,12,"flushSync"],[398,18,353,21],[398,19,353,21,"flushSync"],[398,28,353,21],[398,29,353,22,"update"],[398,35,353,28],[398,36,353,29],[398,37,353,30],[399,8,354,12,"flushSync"],[399,18,354,21],[399,19,354,21,"flushSync"],[399,28,354,21],[399,29,354,22,"preRender"],[399,38,354,31],[399,39,354,32],[399,40,354,33],[400,8,355,12,"flushSync"],[400,18,355,21],[400,19,355,21,"flushSync"],[400,28,355,21],[400,29,355,22,"render"],[400,35,355,28],[400,36,355,29],[400,37,355,30],[401,6,356,8],[401,7,356,9],[402,6,357,8,"ProjectionNode"],[402,20,357,22],[402,21,357,23,"prototype"],[402,30,357,32],[402,31,357,33,"clearAllSnapshots"],[402,48,357,50],[402,51,357,53],[402,63,357,65],[403,8,358,12],[403,12,358,16],[403,13,358,17,"nodes"],[403,18,358,22],[403,19,358,23,"forEach"],[403,26,358,30],[403,27,358,31,"clearSnapshot"],[403,40,358,44],[403,41,358,45],[404,8,359,12],[404,12,359,16],[404,13,359,17,"sharedNodes"],[404,24,359,28],[404,25,359,29,"forEach"],[404,32,359,36],[404,33,359,37,"removeLeadSnapshots"],[404,52,359,56],[404,53,359,57],[405,6,360,8],[405,7,360,9],[406,6,361,8,"ProjectionNode"],[406,20,361,22],[406,21,361,23,"prototype"],[406,30,361,32],[406,31,361,33,"scheduleUpdateProjection"],[406,55,361,57],[406,58,361,60],[406,70,361,72],[407,8,362,12,"sync"],[407,12,362,16],[407,13,362,16,"default"],[407,20,362,16],[407,21,362,17,"preRender"],[407,30,362,26],[407,31,362,27],[407,35,362,31],[407,36,362,32,"updateProjection"],[407,52,362,48],[407,54,362,50],[407,59,362,55],[407,61,362,57],[407,65,362,61],[407,66,362,62],[408,6,363,8],[408,7,363,9],[409,6,364,8,"ProjectionNode"],[409,20,364,22],[409,21,364,23,"prototype"],[409,30,364,32],[409,31,364,33,"scheduleCheckAfterUnmount"],[409,56,364,58],[409,59,364,61],[409,71,364,73],[410,8,365,12],[410,12,365,16,"_this"],[410,17,365,21],[410,20,365,24],[410,24,365,28],[411,8,366,12],[412,0,367,0],[413,0,368,0],[414,0,369,0],[415,0,370,0],[416,8,371,12,"sync"],[416,12,371,16],[416,13,371,16,"default"],[416,20,371,16],[416,21,371,17,"postRender"],[416,31,371,27],[416,32,371,28],[416,44,371,40],[417,10,372,16],[417,14,372,20,"_this"],[417,19,372,25],[417,20,372,26,"isLayoutDirty"],[417,33,372,39],[417,35,372,41],[418,12,373,20,"_this"],[418,17,373,25],[418,18,373,26,"root"],[418,22,373,30],[418,23,373,31,"didUpdate"],[418,32,373,40],[418,33,373,41],[418,34,373,42],[419,10,374,16],[419,11,374,17],[419,17,375,21],[420,12,376,20,"_this"],[420,17,376,25],[420,18,376,26,"root"],[420,22,376,30],[420,23,376,31,"checkUpdateFailed"],[420,40,376,48],[420,41,376,49],[420,42,376,50],[421,10,377,16],[422,8,378,12],[422,9,378,13],[422,10,378,14],[423,6,379,8],[423,7,379,9],[424,6,380,8],[425,0,381,0],[426,0,382,0],[427,6,383,8,"ProjectionNode"],[427,20,383,22],[427,21,383,23,"prototype"],[427,30,383,32],[427,31,383,33,"updateSnapshot"],[427,45,383,47],[427,48,383,50],[427,60,383,62],[428,8,384,12],[428,12,384,16],[428,16,384,20],[428,17,384,21,"snapshot"],[428,25,384,29],[428,29,384,33],[428,30,384,34],[428,34,384,38],[428,35,384,39,"instance"],[428,43,384,47],[428,45,385,16],[429,8,386,12],[429,12,386,16,"measured"],[429,20,386,24],[429,23,386,27],[429,27,386,31],[429,28,386,32,"measure"],[429,35,386,39],[429,36,386,40],[429,37,386,41],[430,8,387,12],[430,12,387,16,"layout"],[430,18,387,22],[430,21,387,25],[430,25,387,29],[430,26,387,30,"removeTransform"],[430,41,387,45],[430,42,387,46],[430,46,387,50],[430,47,387,51,"removeElementScroll"],[430,66,387,70],[430,67,387,71,"measured"],[430,75,387,79],[430,76,387,80],[430,77,387,81],[431,8,388,12,"roundBox"],[431,16,388,20],[431,17,388,21,"layout"],[431,23,388,27],[431,24,388,28],[432,8,389,12],[432,12,389,16],[432,13,389,17,"snapshot"],[432,21,389,25],[432,24,389,28],[433,10,390,16,"measured"],[433,18,390,24],[433,20,390,26,"measured"],[433,28,390,34],[434,10,391,16,"layout"],[434,16,391,22],[434,18,391,24,"layout"],[434,24,391,30],[435,10,392,16,"latestValues"],[435,22,392,28],[435,24,392,30],[435,25,392,31],[436,8,393,12],[436,9,393,13],[437,6,394,8],[437,7,394,9],[438,6,395,8,"ProjectionNode"],[438,20,395,22],[438,21,395,23,"prototype"],[438,30,395,32],[438,31,395,33,"updateLayout"],[438,43,395,45],[438,46,395,48],[438,58,395,60],[439,8,396,12],[439,12,396,16,"_a"],[439,14,396,18],[440,8,397,12],[440,12,397,16],[440,13,397,17],[440,17,397,21],[440,18,397,22,"instance"],[440,26,397,30],[440,28,398,16],[441,8,399,12],[442,8,400,12],[442,12,400,16],[442,13,400,17,"updateScroll"],[442,25,400,29],[442,26,400,30],[442,27,400,31],[443,8,401,12],[443,12,401,16],[443,14,401,18],[443,18,401,22],[443,19,401,23,"options"],[443,26,401,30],[443,27,401,31,"alwaysMeasureLayout"],[443,46,401,50],[443,50,401,54],[443,54,401,58],[443,55,401,59,"isLead"],[443,61,401,65],[443,62,401,66],[443,63,401,67],[443,64,401,68],[443,68,402,16],[443,69,402,17],[443,73,402,21],[443,74,402,22,"isLayoutDirty"],[443,87,402,35],[443,89,402,37],[444,10,403,16],[445,8,404,12],[446,8,405,12],[447,0,406,0],[448,0,407,0],[449,0,408,0],[450,0,409,0],[451,0,410,0],[452,0,411,0],[453,8,412,12],[453,12,412,16],[453,16,412,20],[453,17,412,21,"resumeFrom"],[453,27,412,31],[453,31,412,35],[453,32,412,36],[453,36,412,40],[453,37,412,41,"resumeFrom"],[453,47,412,51],[453,48,412,52,"instance"],[453,56,412,60],[453,58,412,62],[454,10,413,16],[454,15,413,21],[454,19,413,25,"i"],[454,20,413,26],[454,23,413,29],[454,24,413,30],[454,26,413,32,"i"],[454,27,413,33],[454,30,413,36],[454,34,413,40],[454,35,413,41,"path"],[454,39,413,45],[454,40,413,46,"length"],[454,46,413,52],[454,48,413,54,"i"],[454,49,413,55],[454,51,413,57],[454,53,413,59],[455,12,414,20],[455,16,414,24,"node"],[455,20,414,28],[455,23,414,31],[455,27,414,35],[455,28,414,36,"path"],[455,32,414,40],[455,33,414,41,"i"],[455,34,414,42],[455,35,414,43],[456,12,415,20,"node"],[456,16,415,24],[456,17,415,25,"updateScroll"],[456,29,415,37],[456,30,415,38],[456,31,415,39],[457,10,416,16],[458,8,417,12],[459,8,418,12],[459,12,418,16,"measured"],[459,20,418,24],[459,23,418,27],[459,27,418,31],[459,28,418,32,"measure"],[459,35,418,39],[459,36,418,40],[459,37,418,41],[460,8,419,12,"roundBox"],[460,16,419,20],[460,17,419,21,"measured"],[460,25,419,29],[460,26,419,30],[461,8,420,12],[461,12,420,16,"prevLayout"],[461,22,420,26],[461,25,420,29],[461,29,420,33],[461,30,420,34,"layout"],[461,36,420,40],[462,8,421,12],[462,12,421,16],[462,13,421,17,"layout"],[462,19,421,23],[462,22,421,26],[463,10,422,16,"measured"],[463,18,422,24],[463,20,422,26,"measured"],[463,28,422,34],[464,10,423,16,"actual"],[464,16,423,22],[464,18,423,24],[464,22,423,28],[464,23,423,29,"removeElementScroll"],[464,42,423,48],[464,43,423,49,"measured"],[464,51,423,57],[465,8,424,12],[465,9,424,13],[466,8,425,12],[466,12,425,16],[466,13,425,17,"layoutCorrected"],[466,28,425,32],[466,31,425,35],[466,35,425,35,"createBox"],[466,53,425,44],[466,54,425,44,"createBox"],[466,63,425,44],[466,65,425,45],[466,66,425,46],[467,8,426,12],[467,12,426,16],[467,13,426,17,"isLayoutDirty"],[467,26,426,30],[467,29,426,33],[467,34,426,38],[468,8,427,12],[468,12,427,16],[468,13,427,17,"projectionDelta"],[468,28,427,32],[468,31,427,35,"undefined"],[468,40,427,44],[469,8,428,12],[469,12,428,16],[469,13,428,17,"notifyListeners"],[469,28,428,32],[469,29,428,33],[469,38,428,42],[469,40,428,44],[469,44,428,48],[469,45,428,49,"layout"],[469,51,428,55],[469,52,428,56,"actual"],[469,58,428,62],[469,59,428,63],[470,8,429,12],[470,9,429,13,"_a"],[470,11,429,15],[470,14,429,18],[470,18,429,22],[470,19,429,23,"options"],[470,26,429,30],[470,27,429,31,"visualElement"],[470,40,429,44],[470,46,429,50],[470,50,429,54],[470,54,429,58,"_a"],[470,56,429,60],[470,61,429,65],[470,66,429,70],[470,67,429,71],[470,70,429,74],[470,75,429,79],[470,76,429,80],[470,79,429,83,"_a"],[470,81,429,85],[470,82,429,86,"notifyLayoutMeasure"],[470,101,429,105],[470,102,429,106],[470,106,429,110],[470,107,429,111,"layout"],[470,113,429,117],[470,114,429,118,"actual"],[470,120,429,124],[470,122,429,126,"prevLayout"],[470,132,429,136],[470,137,429,141],[470,141,429,145],[470,145,429,149,"prevLayout"],[470,155,429,159],[470,160,429,164],[470,165,429,169],[470,166,429,170],[470,169,429,173],[470,174,429,178],[470,175,429,179],[470,178,429,182,"prevLayout"],[470,188,429,192],[470,189,429,193,"actual"],[470,195,429,199],[470,196,429,200],[471,6,430,8],[471,7,430,9],[472,6,431,8,"ProjectionNode"],[472,20,431,22],[472,21,431,23,"prototype"],[472,30,431,32],[472,31,431,33,"updateScroll"],[472,43,431,45],[472,46,431,48],[472,58,431,60],[473,8,432,12],[473,12,432,16],[473,16,432,20],[473,17,432,21,"options"],[473,24,432,28],[473,25,432,29,"layoutScroll"],[473,37,432,41],[473,41,432,45],[473,45,432,49],[473,46,432,50,"instance"],[473,54,432,58],[473,56,432,60],[474,10,433,16],[474,14,433,20],[474,15,433,21,"isScrollRoot"],[474,27,433,33],[474,30,433,36,"checkIsScrollRoot"],[474,47,433,53],[474,48,433,54],[474,52,433,58],[474,53,433,59,"instance"],[474,61,433,67],[474,62,433,68],[475,10,434,16],[475,14,434,20],[475,15,434,21,"scroll"],[475,21,434,27],[475,24,434,30,"measureScroll"],[475,37,434,43],[475,38,434,44],[475,42,434,48],[475,43,434,49,"instance"],[475,51,434,57],[475,52,434,58],[476,8,435,12],[477,6,436,8],[477,7,436,9],[478,6,437,8,"ProjectionNode"],[478,20,437,22],[478,21,437,23,"prototype"],[478,30,437,32],[478,31,437,33,"resetTransform"],[478,45,437,47],[478,48,437,50],[478,60,437,62],[479,8,438,12],[479,12,438,16,"_a"],[479,14,438,18],[480,8,439,12],[480,12,439,16],[480,13,439,17,"resetTransform"],[480,27,439,31],[480,29,440,16],[481,8,441,12],[481,12,441,16,"isResetRequested"],[481,28,441,32],[481,31,441,35],[481,35,441,39],[481,36,441,40,"isLayoutDirty"],[481,49,441,53],[481,53,441,57],[481,57,441,61],[481,58,441,62,"shouldResetTransform"],[481,78,441,82],[482,8,442,12],[482,12,442,16,"hasProjection"],[482,25,442,29],[482,28,442,32],[482,32,442,36],[482,33,442,37,"projectionDelta"],[482,48,442,52],[482,52,442,56],[482,53,442,57],[482,57,442,57,"isDeltaZero"],[482,74,442,68],[482,75,442,68,"isDeltaZero"],[482,86,442,68],[482,88,442,69],[482,92,442,73],[482,93,442,74,"projectionDelta"],[482,108,442,89],[482,109,442,90],[483,8,443,12],[483,12,443,16,"transformTemplate"],[483,29,443,33],[483,32,443,36],[483,33,443,37,"_a"],[483,35,443,39],[483,38,443,42],[483,42,443,46],[483,43,443,47,"options"],[483,50,443,54],[483,51,443,55,"visualElement"],[483,64,443,68],[483,70,443,74],[483,74,443,78],[483,78,443,82,"_a"],[483,80,443,84],[483,85,443,89],[483,90,443,94],[483,91,443,95],[483,94,443,98],[483,99,443,103],[483,100,443,104],[483,103,443,107,"_a"],[483,105,443,109],[483,106,443,110,"getProps"],[483,114,443,118],[483,115,443,119],[483,116,443,120],[483,117,443,121,"transformTemplate"],[483,134,443,138],[484,8,444,12],[484,12,444,16,"transformTemplateValue"],[484,34,444,38],[484,37,444,41,"transformTemplate"],[484,54,444,58],[484,59,444,63],[484,63,444,67],[484,67,444,71,"transformTemplate"],[484,84,444,88],[484,89,444,93],[484,94,444,98],[484,95,444,99],[484,98,444,102],[484,103,444,107],[484,104,444,108],[484,107,444,111,"transformTemplate"],[484,124,444,128],[484,125,444,129],[484,129,444,133],[484,130,444,134,"latestValues"],[484,142,444,146],[484,144,444,148],[484,146,444,150],[484,147,444,151],[485,8,445,12],[485,12,445,16,"transformTemplateHasChanged"],[485,39,445,43],[485,42,445,46,"transformTemplateValue"],[485,64,445,68],[485,69,445,73],[485,73,445,77],[485,74,445,78,"prevTransformTemplateValue"],[485,100,445,104],[486,8,446,12],[486,12,446,16,"isResetRequested"],[486,28,446,32],[486,33,447,17,"hasProjection"],[486,46,447,30],[486,50,448,20],[486,54,448,20,"hasTransform"],[486,75,448,32],[486,76,448,32,"hasTransform"],[486,88,448,32],[486,90,448,33],[486,94,448,37],[486,95,448,38,"latestValues"],[486,107,448,50],[486,108,448,51],[486,112,449,20,"transformTemplateHasChanged"],[486,139,449,47],[486,140,449,48],[486,142,449,50],[487,10,450,16,"resetTransform"],[487,24,450,30],[487,25,450,31],[487,29,450,35],[487,30,450,36,"instance"],[487,38,450,44],[487,40,450,46,"transformTemplateValue"],[487,62,450,68],[487,63,450,69],[488,10,451,16],[488,14,451,20],[488,15,451,21,"shouldResetTransform"],[488,35,451,41],[488,38,451,44],[488,43,451,49],[489,10,452,16],[489,14,452,20],[489,15,452,21,"scheduleRender"],[489,29,452,35],[489,30,452,36],[489,31,452,37],[490,8,453,12],[491,6,454,8],[491,7,454,9],[492,6,455,8,"ProjectionNode"],[492,20,455,22],[492,21,455,23,"prototype"],[492,30,455,32],[492,31,455,33,"measure"],[492,38,455,40],[492,41,455,43],[492,53,455,55],[493,8,456,12],[493,12,456,16,"visualElement"],[493,25,456,29],[493,28,456,32],[493,32,456,36],[493,33,456,37,"options"],[493,40,456,44],[493,41,456,45,"visualElement"],[493,54,456,58],[494,8,457,12],[494,12,457,16],[494,13,457,17,"visualElement"],[494,26,457,30],[494,28,458,16],[494,35,458,23],[494,39,458,23,"createBox"],[494,57,458,32],[494,58,458,32,"createBox"],[494,67,458,32],[494,69,458,33],[494,70,458,34],[495,8,459,12],[495,12,459,16,"box"],[495,15,459,19],[495,18,459,22,"visualElement"],[495,31,459,35],[495,32,459,36,"measureViewportBox"],[495,50,459,54],[495,51,459,55],[495,52,459,56],[496,8,460,12],[497,8,461,12],[497,12,461,16,"scroll"],[497,18,461,22],[497,21,461,25],[497,25,461,29],[497,26,461,30,"root"],[497,30,461,34],[497,31,461,35,"scroll"],[497,37,461,41],[498,8,462,12],[498,12,462,16,"scroll"],[498,18,462,22],[498,20,462,24],[499,10,463,16],[499,14,463,16,"translateAxis"],[499,36,463,29],[499,37,463,29,"translateAxis"],[499,50,463,29],[499,52,463,30,"box"],[499,55,463,33],[499,56,463,34,"x"],[499,57,463,35],[499,59,463,37,"scroll"],[499,65,463,43],[499,66,463,44,"x"],[499,67,463,45],[499,68,463,46],[500,10,464,16],[500,14,464,16,"translateAxis"],[500,36,464,29],[500,37,464,29,"translateAxis"],[500,50,464,29],[500,52,464,30,"box"],[500,55,464,33],[500,56,464,34,"y"],[500,57,464,35],[500,59,464,37,"scroll"],[500,65,464,43],[500,66,464,44,"y"],[500,67,464,45],[500,68,464,46],[501,8,465,12],[502,8,466,12],[502,15,466,19,"box"],[502,18,466,22],[503,6,467,8],[503,7,467,9],[504,6,468,8,"ProjectionNode"],[504,20,468,22],[504,21,468,23,"prototype"],[504,30,468,32],[504,31,468,33,"removeElementScroll"],[504,50,468,52],[504,53,468,55],[504,63,468,65,"box"],[504,66,468,68],[504,68,468,70],[505,8,469,12],[505,12,469,16,"boxWithoutScroll"],[505,28,469,32],[505,31,469,35],[505,35,469,35,"createBox"],[505,53,469,44],[505,54,469,44,"createBox"],[505,63,469,44],[505,65,469,45],[505,66,469,46],[506,8,470,12],[506,12,470,12,"copyBoxInto"],[506,28,470,23],[506,29,470,23,"copyBoxInto"],[506,40,470,23],[506,42,470,24,"boxWithoutScroll"],[506,58,470,40],[506,60,470,42,"box"],[506,63,470,45],[506,64,470,46],[507,8,471,12],[508,0,472,0],[509,0,473,0],[510,0,474,0],[511,8,475,12],[511,13,475,17],[511,17,475,21,"i"],[511,18,475,22],[511,21,475,25],[511,22,475,26],[511,24,475,28,"i"],[511,25,475,29],[511,28,475,32],[511,32,475,36],[511,33,475,37,"path"],[511,37,475,41],[511,38,475,42,"length"],[511,44,475,48],[511,46,475,50,"i"],[511,47,475,51],[511,49,475,53],[511,51,475,55],[512,10,476,16],[512,14,476,20,"node"],[512,18,476,24],[512,21,476,27],[512,25,476,31],[512,26,476,32,"path"],[512,30,476,36],[512,31,476,37,"i"],[512,32,476,38],[512,33,476,39],[513,10,477,16],[513,14,477,20,"scroll_1"],[513,22,477,28],[513,25,477,31,"node"],[513,29,477,35],[513,30,477,36,"scroll"],[513,36,477,42],[514,12,477,44,"options"],[514,19,477,51],[514,22,477,54,"node"],[514,26,477,58],[514,27,477,59,"options"],[514,34,477,66],[515,12,477,68,"isScrollRoot"],[515,24,477,80],[515,27,477,83,"node"],[515,31,477,87],[515,32,477,88,"isScrollRoot"],[515,44,477,100],[516,10,478,16],[516,14,478,20,"node"],[516,18,478,24],[516,23,478,29],[516,27,478,33],[516,28,478,34,"root"],[516,32,478,38],[516,36,478,42,"scroll_1"],[516,44,478,50],[516,48,478,54,"options"],[516,55,478,61],[516,56,478,62,"layoutScroll"],[516,68,478,74],[516,70,478,76],[517,12,479,20],[518,0,480,0],[519,0,481,0],[520,0,482,0],[521,12,483,20],[521,16,483,24,"isScrollRoot"],[521,28,483,36],[521,30,483,38],[522,14,484,24],[522,18,484,24,"copyBoxInto"],[522,34,484,35],[522,35,484,35,"copyBoxInto"],[522,46,484,35],[522,48,484,36,"boxWithoutScroll"],[522,64,484,52],[522,66,484,54,"box"],[522,69,484,57],[522,70,484,58],[523,14,485,24],[523,18,485,28,"rootScroll"],[523,28,485,38],[523,31,485,41],[523,35,485,45],[523,36,485,46,"root"],[523,40,485,50],[523,41,485,51,"scroll"],[523,47,485,57],[524,14,486,24],[525,0,487,0],[526,0,488,0],[527,0,489,0],[528,14,490,24],[528,18,490,28,"rootScroll"],[528,28,490,38],[528,30,490,40],[529,16,491,28],[529,20,491,28,"translateAxis"],[529,42,491,41],[529,43,491,41,"translateAxis"],[529,56,491,41],[529,58,491,42,"boxWithoutScroll"],[529,74,491,58],[529,75,491,59,"x"],[529,76,491,60],[529,78,491,62],[529,79,491,63,"rootScroll"],[529,89,491,73],[529,90,491,74,"x"],[529,91,491,75],[529,92,491,76],[530,16,492,28],[530,20,492,28,"translateAxis"],[530,42,492,41],[530,43,492,41,"translateAxis"],[530,56,492,41],[530,58,492,42,"boxWithoutScroll"],[530,74,492,58],[530,75,492,59,"y"],[530,76,492,60],[530,78,492,62],[530,79,492,63,"rootScroll"],[530,89,492,73],[530,90,492,74,"y"],[530,91,492,75],[530,92,492,76],[531,14,493,24],[532,12,494,20],[533,12,495,20],[533,16,495,20,"translateAxis"],[533,38,495,33],[533,39,495,33,"translateAxis"],[533,52,495,33],[533,54,495,34,"boxWithoutScroll"],[533,70,495,50],[533,71,495,51,"x"],[533,72,495,52],[533,74,495,54,"scroll_1"],[533,82,495,62],[533,83,495,63,"x"],[533,84,495,64],[533,85,495,65],[534,12,496,20],[534,16,496,20,"translateAxis"],[534,38,496,33],[534,39,496,33,"translateAxis"],[534,52,496,33],[534,54,496,34,"boxWithoutScroll"],[534,70,496,50],[534,71,496,51,"y"],[534,72,496,52],[534,74,496,54,"scroll_1"],[534,82,496,62],[534,83,496,63,"y"],[534,84,496,64],[534,85,496,65],[535,10,497,16],[536,8,498,12],[537,8,499,12],[537,15,499,19,"boxWithoutScroll"],[537,31,499,35],[538,6,500,8],[538,7,500,9],[539,6,501,8,"ProjectionNode"],[539,20,501,22],[539,21,501,23,"prototype"],[539,30,501,32],[539,31,501,33,"applyTransform"],[539,45,501,47],[539,48,501,50],[539,58,501,60,"box"],[539,61,501,63],[539,63,501,65,"transformOnly"],[539,76,501,78],[539,78,501,80],[540,8,502,12],[540,12,502,16,"transformOnly"],[540,25,502,29],[540,30,502,34],[540,35,502,39],[540,36,502,40],[540,38,502,42],[541,10,502,44,"transformOnly"],[541,23,502,57],[541,26,502,60],[541,31,502,65],[542,8,502,67],[543,8,503,12],[543,12,503,16,"withTransforms"],[543,26,503,30],[543,29,503,33],[543,33,503,33,"createBox"],[543,51,503,42],[543,52,503,42,"createBox"],[543,61,503,42],[543,63,503,43],[543,64,503,44],[544,8,504,12],[544,12,504,12,"copyBoxInto"],[544,28,504,23],[544,29,504,23,"copyBoxInto"],[544,40,504,23],[544,42,504,24,"withTransforms"],[544,56,504,38],[544,58,504,40,"box"],[544,61,504,43],[544,62,504,44],[545,8,505,12],[545,13,505,17],[545,17,505,21,"i"],[545,18,505,22],[545,21,505,25],[545,22,505,26],[545,24,505,28,"i"],[545,25,505,29],[545,28,505,32],[545,32,505,36],[545,33,505,37,"path"],[545,37,505,41],[545,38,505,42,"length"],[545,44,505,48],[545,46,505,50,"i"],[545,47,505,51],[545,49,505,53],[545,51,505,55],[546,10,506,16],[546,14,506,20,"node"],[546,18,506,24],[546,21,506,27],[546,25,506,31],[546,26,506,32,"path"],[546,30,506,36],[546,31,506,37,"i"],[546,32,506,38],[546,33,506,39],[547,10,507,16],[547,14,507,20],[547,15,507,21,"transformOnly"],[547,28,507,34],[547,32,508,20,"node"],[547,36,508,24],[547,37,508,25,"options"],[547,44,508,32],[547,45,508,33,"layoutScroll"],[547,57,508,45],[547,61,509,20,"node"],[547,65,509,24],[547,66,509,25,"scroll"],[547,72,509,31],[547,76,510,20,"node"],[547,80,510,24],[547,85,510,29,"node"],[547,89,510,33],[547,90,510,34,"root"],[547,94,510,38],[547,96,510,40],[548,12,511,20],[548,16,511,20,"transformBox"],[548,38,511,32],[548,39,511,32,"transformBox"],[548,51,511,32],[548,53,511,33,"withTransforms"],[548,67,511,47],[548,69,511,49],[549,14,512,24,"x"],[549,15,512,25],[549,17,512,27],[549,18,512,28,"node"],[549,22,512,32],[549,23,512,33,"scroll"],[549,29,512,39],[549,30,512,40,"x"],[549,31,512,41],[550,14,513,24,"y"],[550,15,513,25],[550,17,513,27],[550,18,513,28,"node"],[550,22,513,32],[550,23,513,33,"scroll"],[550,29,513,39],[550,30,513,40,"y"],[551,12,514,20],[551,13,514,21],[551,14,514,22],[552,10,515,16],[553,10,516,16],[553,14,516,20],[553,15,516,21],[553,19,516,21,"hasTransform"],[553,40,516,33],[553,41,516,33,"hasTransform"],[553,53,516,33],[553,55,516,34,"node"],[553,59,516,38],[553,60,516,39,"latestValues"],[553,72,516,51],[553,73,516,52],[553,75,517,20],[554,10,518,16],[554,14,518,16,"transformBox"],[554,36,518,28],[554,37,518,28,"transformBox"],[554,49,518,28],[554,51,518,29,"withTransforms"],[554,65,518,43],[554,67,518,45,"node"],[554,71,518,49],[554,72,518,50,"latestValues"],[554,84,518,62],[554,85,518,63],[555,8,519,12],[556,8,520,12],[556,12,520,16],[556,16,520,16,"hasTransform"],[556,37,520,28],[556,38,520,28,"hasTransform"],[556,50,520,28],[556,52,520,29],[556,56,520,33],[556,57,520,34,"latestValues"],[556,69,520,46],[556,70,520,47],[556,72,520,49],[557,10,521,16],[557,14,521,16,"transformBox"],[557,36,521,28],[557,37,521,28,"transformBox"],[557,49,521,28],[557,51,521,29,"withTransforms"],[557,65,521,43],[557,67,521,45],[557,71,521,49],[557,72,521,50,"latestValues"],[557,84,521,62],[557,85,521,63],[558,8,522,12],[559,8,523,12],[559,15,523,19,"withTransforms"],[559,29,523,33],[560,6,524,8],[560,7,524,9],[561,6,525,8,"ProjectionNode"],[561,20,525,22],[561,21,525,23,"prototype"],[561,30,525,32],[561,31,525,33,"removeTransform"],[561,46,525,48],[561,49,525,51],[561,59,525,61,"box"],[561,62,525,64],[561,64,525,66],[562,8,526,12],[562,12,526,16,"_a"],[562,14,526,18],[563,8,527,12],[563,12,527,16,"boxWithoutTransform"],[563,31,527,35],[563,34,527,38],[563,38,527,38,"createBox"],[563,56,527,47],[563,57,527,47,"createBox"],[563,66,527,47],[563,68,527,48],[563,69,527,49],[564,8,528,12],[564,12,528,12,"copyBoxInto"],[564,28,528,23],[564,29,528,23,"copyBoxInto"],[564,40,528,23],[564,42,528,24,"boxWithoutTransform"],[564,61,528,43],[564,63,528,45,"box"],[564,66,528,48],[564,67,528,49],[565,8,529,12],[565,13,529,17],[565,17,529,21,"i"],[565,18,529,22],[565,21,529,25],[565,22,529,26],[565,24,529,28,"i"],[565,25,529,29],[565,28,529,32],[565,32,529,36],[565,33,529,37,"path"],[565,37,529,41],[565,38,529,42,"length"],[565,44,529,48],[565,46,529,50,"i"],[565,47,529,51],[565,49,529,53],[565,51,529,55],[566,10,530,16],[566,14,530,20,"node"],[566,18,530,24],[566,21,530,27],[566,25,530,31],[566,26,530,32,"path"],[566,30,530,36],[566,31,530,37,"i"],[566,32,530,38],[566,33,530,39],[567,10,531,16],[567,14,531,20],[567,15,531,21,"node"],[567,19,531,25],[567,20,531,26,"instance"],[567,28,531,34],[567,30,532,20],[568,10,533,16],[568,14,533,20],[568,15,533,21],[568,19,533,21,"hasTransform"],[568,40,533,33],[568,41,533,33,"hasTransform"],[568,53,533,33],[568,55,533,34,"node"],[568,59,533,38],[568,60,533,39,"latestValues"],[568,72,533,51],[568,73,533,52],[568,75,534,20],[569,10,535,16],[569,14,535,16,"hasScale"],[569,35,535,24],[569,36,535,24,"hasScale"],[569,44,535,24],[569,46,535,25,"node"],[569,50,535,29],[569,51,535,30,"latestValues"],[569,63,535,42],[569,64,535,43],[569,68,535,47,"node"],[569,72,535,51],[569,73,535,52,"updateSnapshot"],[569,87,535,66],[569,88,535,67],[569,89,535,68],[570,10,536,16],[570,14,536,20,"sourceBox"],[570,23,536,29],[570,26,536,32],[570,30,536,32,"createBox"],[570,48,536,41],[570,49,536,41,"createBox"],[570,58,536,41],[570,60,536,42],[570,61,536,43],[571,10,537,16],[571,14,537,20,"nodeBox"],[571,21,537,27],[571,24,537,30,"node"],[571,28,537,34],[571,29,537,35,"measure"],[571,36,537,42],[571,37,537,43],[571,38,537,44],[572,10,538,16],[572,14,538,16,"copyBoxInto"],[572,30,538,27],[572,31,538,27,"copyBoxInto"],[572,42,538,27],[572,44,538,28,"sourceBox"],[572,53,538,37],[572,55,538,39,"nodeBox"],[572,62,538,46],[572,63,538,47],[573,10,539,16],[573,14,539,16,"removeBoxTransforms"],[573,37,539,35],[573,38,539,35,"removeBoxTransforms"],[573,57,539,35],[573,59,539,36,"boxWithoutTransform"],[573,78,539,55],[573,80,539,57,"node"],[573,84,539,61],[573,85,539,62,"latestValues"],[573,97,539,74],[573,99,539,76],[573,100,539,77,"_a"],[573,102,539,79],[573,105,539,82,"node"],[573,109,539,86],[573,110,539,87,"snapshot"],[573,118,539,95],[573,124,539,101],[573,128,539,105],[573,132,539,109,"_a"],[573,134,539,111],[573,139,539,116],[573,144,539,121],[573,145,539,122],[573,148,539,125],[573,153,539,130],[573,154,539,131],[573,157,539,134,"_a"],[573,159,539,136],[573,160,539,137,"layout"],[573,166,539,143],[573,168,539,145,"sourceBox"],[573,177,539,154],[573,178,539,155],[574,8,540,12],[575,8,541,12],[575,12,541,16],[575,16,541,16,"hasTransform"],[575,37,541,28],[575,38,541,28,"hasTransform"],[575,50,541,28],[575,52,541,29],[575,56,541,33],[575,57,541,34,"latestValues"],[575,69,541,46],[575,70,541,47],[575,72,541,49],[576,10,542,16],[576,14,542,16,"removeBoxTransforms"],[576,37,542,35],[576,38,542,35,"removeBoxTransforms"],[576,57,542,35],[576,59,542,36,"boxWithoutTransform"],[576,78,542,55],[576,80,542,57],[576,84,542,61],[576,85,542,62,"latestValues"],[576,97,542,74],[576,98,542,75],[577,8,543,12],[578,8,544,12],[578,15,544,19,"boxWithoutTransform"],[578,34,544,38],[579,6,545,8],[579,7,545,9],[580,6,546,8],[581,0,547,0],[582,0,548,0],[583,6,549,8,"ProjectionNode"],[583,20,549,22],[583,21,549,23,"prototype"],[583,30,549,32],[583,31,549,33,"setTargetDelta"],[583,45,549,47],[583,48,549,50],[583,58,549,60,"delta"],[583,63,549,65],[583,65,549,67],[584,8,550,12],[584,12,550,16],[584,13,550,17,"targetDelta"],[584,24,550,28],[584,27,550,31,"delta"],[584,32,550,36],[585,8,551,12],[585,12,551,16],[585,13,551,17,"root"],[585,17,551,21],[585,18,551,22,"scheduleUpdateProjection"],[585,42,551,46],[585,43,551,47],[585,44,551,48],[586,6,552,8],[586,7,552,9],[587,6,553,8,"ProjectionNode"],[587,20,553,22],[587,21,553,23,"prototype"],[587,30,553,32],[587,31,553,33,"setOptions"],[587,41,553,43],[587,44,553,46],[587,54,553,56,"options"],[587,61,553,63],[587,63,553,65],[588,8,554,12],[588,12,554,16,"_a"],[588,14,554,18],[589,8,555,12],[589,12,555,16],[589,13,555,17,"options"],[589,20,555,24],[589,23,555,27],[589,27,555,27,"__assign"],[589,33,555,35],[589,34,555,35,"__assign"],[589,42,555,35],[589,44,555,36],[589,48,555,36,"__assign"],[589,54,555,44],[589,55,555,44,"__assign"],[589,63,555,44],[589,65,555,45],[589,69,555,45,"__assign"],[589,75,555,53],[589,76,555,53,"__assign"],[589,84,555,53],[589,86,555,54],[589,87,555,55],[589,88,555,56],[589,90,555,58],[589,94,555,62],[589,95,555,63,"options"],[589,102,555,70],[589,103,555,71],[589,105,555,73,"options"],[589,112,555,80],[589,113,555,81],[589,115,555,83],[590,10,555,85,"crossfade"],[590,19,555,94],[590,21,555,96],[590,22,555,97,"_a"],[590,24,555,99],[590,27,555,102,"options"],[590,34,555,109],[590,35,555,110,"crossfade"],[590,44,555,119],[590,50,555,125],[590,54,555,129],[590,58,555,133,"_a"],[590,60,555,135],[590,65,555,140],[590,70,555,145],[590,71,555,146],[590,74,555,149,"_a"],[590,76,555,151],[590,79,555,154],[591,8,555,159],[591,9,555,160],[591,10,555,161],[592,6,556,8],[592,7,556,9],[593,6,557,8,"ProjectionNode"],[593,20,557,22],[593,21,557,23,"prototype"],[593,30,557,32],[593,31,557,33,"clearMeasurements"],[593,48,557,50],[593,51,557,53],[593,63,557,65],[594,8,558,12],[594,12,558,16],[594,13,558,17,"scroll"],[594,19,558,23],[594,22,558,26,"undefined"],[594,31,558,35],[595,8,559,12],[595,12,559,16],[595,13,559,17,"layout"],[595,19,559,23],[595,22,559,26,"undefined"],[595,31,559,35],[596,8,560,12],[596,12,560,16],[596,13,560,17,"snapshot"],[596,21,560,25],[596,24,560,28,"undefined"],[596,33,560,37],[597,8,561,12],[597,12,561,16],[597,13,561,17,"prevTransformTemplateValue"],[597,39,561,43],[597,42,561,46,"undefined"],[597,51,561,55],[598,8,562,12],[598,12,562,16],[598,13,562,17,"targetDelta"],[598,24,562,28],[598,27,562,31,"undefined"],[598,36,562,40],[599,8,563,12],[599,12,563,16],[599,13,563,17,"target"],[599,19,563,23],[599,22,563,26,"undefined"],[599,31,563,35],[600,8,564,12],[600,12,564,16],[600,13,564,17,"isLayoutDirty"],[600,26,564,30],[600,29,564,33],[600,34,564,38],[601,6,565,8],[601,7,565,9],[602,6,566,8],[603,0,567,0],[604,0,568,0],[605,6,569,8,"ProjectionNode"],[605,20,569,22],[605,21,569,23,"prototype"],[605,30,569,32],[605,31,569,33,"resolveTargetDelta"],[605,49,569,51],[605,52,569,54],[605,64,569,66],[606,8,570,12],[606,12,570,16,"_a"],[606,14,570,18],[607,8,571,12],[607,12,571,16,"_b"],[607,14,571,18],[607,17,571,21],[607,21,571,25],[607,22,571,26,"options"],[607,29,571,33],[608,10,571,35,"layout"],[608,16,571,41],[608,19,571,44,"_b"],[608,21,571,46],[608,22,571,47,"layout"],[608,28,571,53],[609,10,571,55,"layoutId"],[609,18,571,63],[609,21,571,66,"_b"],[609,23,571,68],[609,24,571,69,"layoutId"],[609,32,571,77],[610,8,572,12],[611,0,573,0],[612,0,574,0],[613,8,575,12],[613,12,575,16],[613,13,575,17],[613,17,575,21],[613,18,575,22,"layout"],[613,24,575,28],[613,28,575,32],[613,30,575,34,"layout"],[613,36,575,40],[613,40,575,44,"layoutId"],[613,48,575,52],[613,49,575,53],[613,51,576,16],[614,8,577,12],[615,0,578,0],[616,0,579,0],[617,0,580,0],[618,0,581,0],[619,8,582,12],[620,8,583,12],[620,12,583,16],[620,13,583,17],[620,17,583,21],[620,18,583,22,"targetDelta"],[620,29,583,33],[620,33,583,37],[620,34,583,38],[620,38,583,42],[620,39,583,43,"relativeTarget"],[620,53,583,57],[620,55,583,59],[621,10,584,16],[622,10,585,16],[622,14,585,20],[622,15,585,21,"relativeParent"],[622,29,585,35],[622,32,585,38],[622,36,585,42],[622,37,585,43,"getClosestProjectingParent"],[622,63,585,69],[622,64,585,70],[622,65,585,71],[623,10,586,16],[623,14,586,20],[623,18,586,24],[623,19,586,25,"relativeParent"],[623,33,586,39],[623,37,586,43],[623,41,586,47],[623,42,586,48,"relativeParent"],[623,56,586,62],[623,57,586,63,"layout"],[623,63,586,69],[623,65,586,71],[624,12,587,20],[624,16,587,24],[624,17,587,25,"relativeTarget"],[624,31,587,39],[624,34,587,42],[624,38,587,42,"createBox"],[624,56,587,51],[624,57,587,51,"createBox"],[624,66,587,51],[624,68,587,52],[624,69,587,53],[625,12,588,20],[625,16,588,24],[625,17,588,25,"relativeTargetOrigin"],[625,37,588,45],[625,40,588,48],[625,44,588,48,"createBox"],[625,62,588,57],[625,63,588,57,"createBox"],[625,72,588,57],[625,74,588,58],[625,75,588,59],[626,12,589,20],[626,16,589,20,"calcRelativePosition"],[626,37,589,40],[626,38,589,40,"calcRelativePosition"],[626,58,589,40],[626,60,589,41],[626,64,589,45],[626,65,589,46,"relativeTargetOrigin"],[626,85,589,66],[626,87,589,68],[626,91,589,72],[626,92,589,73,"layout"],[626,98,589,79],[626,99,589,80,"actual"],[626,105,589,86],[626,107,589,88],[626,111,589,92],[626,112,589,93,"relativeParent"],[626,126,589,107],[626,127,589,108,"layout"],[626,133,589,114],[626,134,589,115,"actual"],[626,140,589,121],[626,141,589,122],[627,12,590,20],[627,16,590,20,"copyBoxInto"],[627,32,590,31],[627,33,590,31,"copyBoxInto"],[627,44,590,31],[627,46,590,32],[627,50,590,36],[627,51,590,37,"relativeTarget"],[627,65,590,51],[627,67,590,53],[627,71,590,57],[627,72,590,58,"relativeTargetOrigin"],[627,92,590,78],[627,93,590,79],[628,10,591,16],[629,8,592,12],[630,8,593,12],[631,0,594,0],[632,0,595,0],[633,0,596,0],[634,8,597,12],[634,12,597,16],[634,13,597,17],[634,17,597,21],[634,18,597,22,"relativeTarget"],[634,32,597,36],[634,36,597,40],[634,37,597,41],[634,41,597,45],[634,42,597,46,"targetDelta"],[634,53,597,57],[634,55,598,16],[635,8,599,12],[636,0,600,0],[637,0,601,0],[638,8,602,12],[638,12,602,16],[638,13,602,17],[638,17,602,21],[638,18,602,22,"target"],[638,24,602,28],[638,26,602,30],[639,10,603,16],[639,14,603,20],[639,15,603,21,"target"],[639,21,603,27],[639,24,603,30],[639,28,603,30,"createBox"],[639,46,603,39],[639,47,603,39,"createBox"],[639,56,603,39],[639,58,603,40],[639,59,603,41],[640,10,604,16],[640,14,604,20],[640,15,604,21,"targetWithTransforms"],[640,35,604,41],[640,38,604,44],[640,42,604,44,"createBox"],[640,60,604,53],[640,61,604,53,"createBox"],[640,70,604,53],[640,72,604,54],[640,73,604,55],[641,8,605,12],[642,8,606,12],[643,0,607,0],[644,0,608,0],[645,8,609,12],[645,12,609,16],[645,16,609,20],[645,17,609,21,"relativeTarget"],[645,31,609,35],[645,35,610,16],[645,39,610,20],[645,40,610,21,"relativeTargetOrigin"],[645,60,610,41],[645,65,611,17],[645,66,611,18,"_a"],[645,68,611,20],[645,71,611,23],[645,75,611,27],[645,76,611,28,"relativeParent"],[645,90,611,42],[645,96,611,48],[645,100,611,52],[645,104,611,56,"_a"],[645,106,611,58],[645,111,611,63],[645,116,611,68],[645,117,611,69],[645,120,611,72],[645,125,611,77],[645,126,611,78],[645,129,611,81,"_a"],[645,131,611,83],[645,132,611,84,"target"],[645,138,611,90],[645,139,611,91],[645,141,611,93],[646,10,612,16],[646,14,612,16,"calcRelativeBox"],[646,35,612,31],[646,36,612,31,"calcRelativeBox"],[646,51,612,31],[646,53,612,32],[646,57,612,36],[646,58,612,37,"target"],[646,64,612,43],[646,66,612,45],[646,70,612,49],[646,71,612,50,"relativeTarget"],[646,85,612,64],[646,87,612,66],[646,91,612,70],[646,92,612,71,"relativeParent"],[646,106,612,85],[646,107,612,86,"target"],[646,113,612,92],[646,114,612,93],[647,10,613,16],[648,0,614,0],[649,0,615,0],[650,8,616,12],[650,9,616,13],[650,15,617,17],[650,19,617,21],[650,23,617,25],[650,24,617,26,"targetDelta"],[650,35,617,37],[650,37,617,39],[651,10,618,16],[651,14,618,20,"Boolean"],[651,21,618,27],[651,22,618,28],[651,26,618,32],[651,27,618,33,"resumingFrom"],[651,39,618,45],[651,40,618,46],[651,42,618,48],[652,12,619,20],[653,12,620,20],[653,16,620,24],[653,17,620,25,"target"],[653,23,620,31],[653,26,620,34],[653,30,620,38],[653,31,620,39,"applyTransform"],[653,45,620,53],[653,46,620,54],[653,50,620,58],[653,51,620,59,"layout"],[653,57,620,65],[653,58,620,66,"actual"],[653,64,620,72],[653,65,620,73],[654,10,621,16],[654,11,621,17],[654,17,622,21],[655,12,623,20],[655,16,623,20,"copyBoxInto"],[655,32,623,31],[655,33,623,31,"copyBoxInto"],[655,44,623,31],[655,46,623,32],[655,50,623,36],[655,51,623,37,"target"],[655,57,623,43],[655,59,623,45],[655,63,623,49],[655,64,623,50,"layout"],[655,70,623,56],[655,71,623,57,"actual"],[655,77,623,63],[655,78,623,64],[656,10,624,16],[657,10,625,16],[657,14,625,16,"applyBoxDelta"],[657,36,625,29],[657,37,625,29,"applyBoxDelta"],[657,50,625,29],[657,52,625,30],[657,56,625,34],[657,57,625,35,"target"],[657,63,625,41],[657,65,625,43],[657,69,625,47],[657,70,625,48,"targetDelta"],[657,81,625,59],[657,82,625,60],[658,8,626,12],[658,9,626,13],[658,15,627,17],[659,10,628,16],[660,0,629,0],[661,0,630,0],[662,10,631,16],[662,14,631,16,"copyBoxInto"],[662,30,631,27],[662,31,631,27,"copyBoxInto"],[662,42,631,27],[662,44,631,28],[662,48,631,32],[662,49,631,33,"target"],[662,55,631,39],[662,57,631,41],[662,61,631,45],[662,62,631,46,"layout"],[662,68,631,52],[662,69,631,53,"actual"],[662,75,631,59],[662,76,631,60],[663,8,632,12],[664,8,633,12],[665,0,634,0],[666,0,635,0],[667,8,636,12],[667,12,636,16],[667,16,636,20],[667,17,636,21,"attemptToResolveRelativeTarget"],[667,47,636,51],[667,49,636,53],[668,10,637,16],[668,14,637,20],[668,15,637,21,"attemptToResolveRelativeTarget"],[668,45,637,51],[668,48,637,54],[668,53,637,59],[669,10,638,16],[669,14,638,20],[669,15,638,21,"relativeParent"],[669,29,638,35],[669,32,638,38],[669,36,638,42],[669,37,638,43,"getClosestProjectingParent"],[669,63,638,69],[669,64,638,70],[669,65,638,71],[670,10,639,16],[670,14,639,20],[670,18,639,24],[670,19,639,25,"relativeParent"],[670,33,639,39],[670,37,640,20,"Boolean"],[670,44,640,27],[670,45,640,28],[670,49,640,32],[670,50,640,33,"relativeParent"],[670,64,640,47],[670,65,640,48,"resumingFrom"],[670,77,640,60],[670,78,640,61],[670,83,641,24,"Boolean"],[670,90,641,31],[670,91,641,32],[670,95,641,36],[670,96,641,37,"resumingFrom"],[670,108,641,49],[670,109,641,50],[670,113,642,20],[670,114,642,21],[670,118,642,25],[670,119,642,26,"relativeParent"],[670,133,642,40],[670,134,642,41,"options"],[670,141,642,48],[670,142,642,49,"layoutScroll"],[670,154,642,61],[670,158,643,20],[670,162,643,24],[670,163,643,25,"relativeParent"],[670,177,643,39],[670,178,643,40,"target"],[670,184,643,46],[670,186,643,48],[671,12,644,20],[671,16,644,24],[671,17,644,25,"relativeTarget"],[671,31,644,39],[671,34,644,42],[671,38,644,42,"createBox"],[671,56,644,51],[671,57,644,51,"createBox"],[671,66,644,51],[671,68,644,52],[671,69,644,53],[672,12,645,20],[672,16,645,24],[672,17,645,25,"relativeTargetOrigin"],[672,37,645,45],[672,40,645,48],[672,44,645,48,"createBox"],[672,62,645,57],[672,63,645,57,"createBox"],[672,72,645,57],[672,74,645,58],[672,75,645,59],[673,12,646,20],[673,16,646,20,"calcRelativePosition"],[673,37,646,40],[673,38,646,40,"calcRelativePosition"],[673,58,646,40],[673,60,646,41],[673,64,646,45],[673,65,646,46,"relativeTargetOrigin"],[673,85,646,66],[673,87,646,68],[673,91,646,72],[673,92,646,73,"target"],[673,98,646,79],[673,100,646,81],[673,104,646,85],[673,105,646,86,"relativeParent"],[673,119,646,100],[673,120,646,101,"target"],[673,126,646,107],[673,127,646,108],[674,12,647,20],[674,16,647,20,"copyBoxInto"],[674,32,647,31],[674,33,647,31,"copyBoxInto"],[674,44,647,31],[674,46,647,32],[674,50,647,36],[674,51,647,37,"relativeTarget"],[674,65,647,51],[674,67,647,53],[674,71,647,57],[674,72,647,58,"relativeTargetOrigin"],[674,92,647,78],[674,93,647,79],[675,10,648,16],[676,8,649,12],[677,6,650,8],[677,7,650,9],[678,6,651,8,"ProjectionNode"],[678,20,651,22],[678,21,651,23,"prototype"],[678,30,651,32],[678,31,651,33,"getClosestProjectingParent"],[678,57,651,59],[678,60,651,62],[678,72,651,74],[679,8,652,12],[679,12,652,16],[679,13,652,17],[679,17,652,21],[679,18,652,22,"parent"],[679,24,652,28],[679,28,652,32],[679,32,652,32,"hasTransform"],[679,53,652,44],[679,54,652,44,"hasTransform"],[679,66,652,44],[679,68,652,45],[679,72,652,49],[679,73,652,50,"parent"],[679,79,652,56],[679,80,652,57,"latestValues"],[679,92,652,69],[679,93,652,70],[679,95,653,16],[679,102,653,23,"undefined"],[679,111,653,32],[680,8,654,12],[680,12,654,16],[680,13,654,17],[680,17,654,21],[680,18,654,22,"parent"],[680,24,654,28],[680,25,654,29,"relativeTarget"],[680,39,654,43],[680,43,654,47],[680,47,654,51],[680,48,654,52,"parent"],[680,54,654,58],[680,55,654,59,"targetDelta"],[680,66,654,70],[680,71,655,16],[680,75,655,20],[680,76,655,21,"parent"],[680,82,655,27],[680,83,655,28,"layout"],[680,89,655,34],[680,91,655,36],[681,10,656,16],[681,17,656,23],[681,21,656,27],[681,22,656,28,"parent"],[681,28,656,34],[682,8,657,12],[682,9,657,13],[682,15,658,17],[683,10,659,16],[683,17,659,23],[683,21,659,27],[683,22,659,28,"parent"],[683,28,659,34],[683,29,659,35,"getClosestProjectingParent"],[683,55,659,61],[683,56,659,62],[683,57,659,63],[684,8,660,12],[685,6,661,8],[685,7,661,9],[686,6,662,8,"ProjectionNode"],[686,20,662,22],[686,21,662,23,"prototype"],[686,30,662,32],[686,31,662,33,"calcProjection"],[686,45,662,47],[686,48,662,50],[686,60,662,62],[687,8,663,12],[687,12,663,16,"_a"],[687,14,663,18],[688,8,664,12],[688,12,664,16,"_b"],[688,14,664,18],[688,17,664,21],[688,21,664,25],[688,22,664,26,"options"],[688,29,664,33],[689,10,664,35,"layout"],[689,16,664,41],[689,19,664,44,"_b"],[689,21,664,46],[689,22,664,47,"layout"],[689,28,664,53],[690,10,664,55,"layoutId"],[690,18,664,63],[690,21,664,66,"_b"],[690,23,664,68],[690,24,664,69,"layoutId"],[690,32,664,77],[691,8,665,12],[692,0,666,0],[693,0,667,0],[694,0,668,0],[695,8,669,12],[695,12,669,16],[695,13,669,17,"isTreeAnimating"],[695,28,669,32],[695,31,669,35,"Boolean"],[695,38,669,42],[695,39,669,43],[695,40,669,44],[695,41,669,45,"_a"],[695,43,669,47],[695,46,669,50],[695,50,669,54],[695,51,669,55,"parent"],[695,57,669,61],[695,63,669,67],[695,67,669,71],[695,71,669,75,"_a"],[695,73,669,77],[695,78,669,82],[695,83,669,87],[695,84,669,88],[695,87,669,91],[695,92,669,96],[695,93,669,97],[695,96,669,100,"_a"],[695,98,669,102],[695,99,669,103,"isTreeAnimating"],[695,114,669,118],[695,119,670,16],[695,123,670,20],[695,124,670,21,"currentAnimation"],[695,140,670,37],[695,144,671,16],[695,148,671,20],[695,149,671,21,"pendingAnimation"],[695,165,671,37],[695,166,671,38],[696,8,672,12],[696,12,672,16],[696,13,672,17],[696,17,672,21],[696,18,672,22,"isTreeAnimating"],[696,33,672,37],[696,35,672,39],[697,10,673,16],[697,14,673,20],[697,15,673,21,"targetDelta"],[697,26,673,32],[697,29,673,35],[697,33,673,39],[697,34,673,40,"relativeTarget"],[697,48,673,54],[697,51,673,57,"undefined"],[697,60,673,66],[698,8,674,12],[699,8,675,12],[699,12,675,16],[699,13,675,17],[699,17,675,21],[699,18,675,22,"layout"],[699,24,675,28],[699,28,675,32],[699,30,675,34,"layout"],[699,36,675,40],[699,40,675,44,"layoutId"],[699,48,675,52],[699,49,675,53],[699,51,676,16],[700,8,677,12],[700,12,677,16,"lead"],[700,16,677,20],[700,19,677,23],[700,23,677,27],[700,24,677,28,"getLead"],[700,31,677,35],[700,32,677,36],[700,33,677,37],[701,8,678,12],[702,0,679,0],[703,0,680,0],[704,0,681,0],[705,8,682,12],[705,12,682,12,"copyBoxInto"],[705,28,682,23],[705,29,682,23,"copyBoxInto"],[705,40,682,23],[705,42,682,24],[705,46,682,28],[705,47,682,29,"layoutCorrected"],[705,62,682,44],[705,64,682,46],[705,68,682,50],[705,69,682,51,"layout"],[705,75,682,57],[705,76,682,58,"actual"],[705,82,682,64],[705,83,682,65],[706,8,683,12],[707,0,684,0],[708,0,685,0],[709,0,686,0],[710,8,687,12],[710,12,687,12,"applyTreeDeltas"],[710,34,687,27],[710,35,687,27,"applyTreeDeltas"],[710,50,687,27],[710,52,687,28],[710,56,687,32],[710,57,687,33,"layoutCorrected"],[710,72,687,48],[710,74,687,50],[710,78,687,54],[710,79,687,55,"treeScale"],[710,88,687,64],[710,90,687,66],[710,94,687,70],[710,95,687,71,"path"],[710,99,687,75],[710,101,687,77,"Boolean"],[710,108,687,84],[710,109,687,85],[710,113,687,89],[710,114,687,90,"resumingFrom"],[710,126,687,102],[710,127,687,103],[710,131,687,107],[710,135,687,111],[710,140,687,116,"lead"],[710,144,687,120],[710,145,687,121],[711,8,688,12],[711,12,688,16,"target"],[711,18,688,22],[711,21,688,25,"lead"],[711,25,688,29],[711,26,688,30,"target"],[711,32,688,36],[712,8,689,12],[712,12,689,16],[712,13,689,17,"target"],[712,19,689,23],[712,21,690,16],[713,8,691,12],[713,12,691,16],[713,13,691,17],[713,17,691,21],[713,18,691,22,"projectionDelta"],[713,33,691,37],[713,35,691,39],[714,10,692,16],[714,14,692,20],[714,15,692,21,"projectionDelta"],[714,30,692,36],[714,33,692,39],[714,37,692,39,"createDelta"],[714,55,692,50],[714,56,692,50,"createDelta"],[714,67,692,50],[714,69,692,51],[714,70,692,52],[715,10,693,16],[715,14,693,20],[715,15,693,21,"projectionDeltaWithTransform"],[715,43,693,49],[715,46,693,52],[715,50,693,52,"createDelta"],[715,68,693,63],[715,69,693,63,"createDelta"],[715,80,693,63],[715,82,693,64],[715,83,693,65],[716,8,694,12],[717,8,695,12],[717,12,695,16,"prevTreeScaleX"],[717,26,695,30],[717,29,695,33],[717,33,695,37],[717,34,695,38,"treeScale"],[717,43,695,47],[717,44,695,48,"x"],[717,45,695,49],[718,8,696,12],[718,12,696,16,"prevTreeScaleY"],[718,26,696,30],[718,29,696,33],[718,33,696,37],[718,34,696,38,"treeScale"],[718,43,696,47],[718,44,696,48,"y"],[718,45,696,49],[719,8,697,12],[719,12,697,16,"prevProjectionTransform"],[719,35,697,39],[719,38,697,42],[719,42,697,46],[719,43,697,47,"projectionTransform"],[719,62,697,66],[720,8,698,12],[721,0,699,0],[722,0,700,0],[723,0,701,0],[724,0,702,0],[725,0,703,0],[726,0,704,0],[727,0,705,0],[728,0,706,0],[729,8,707,12],[729,12,707,12,"calcBoxDelta"],[729,33,707,24],[729,34,707,24,"calcBoxDelta"],[729,46,707,24],[729,48,707,25],[729,52,707,29],[729,53,707,30,"projectionDelta"],[729,68,707,45],[729,70,707,47],[729,74,707,51],[729,75,707,52,"layoutCorrected"],[729,90,707,67],[729,92,707,69,"target"],[729,98,707,75],[729,100,707,77],[729,104,707,81],[729,105,707,82,"latestValues"],[729,117,707,94],[729,118,707,95],[730,8,708,12],[730,12,708,16],[730,13,708,17,"projectionTransform"],[730,32,708,36],[730,35,708,39],[730,39,708,39,"buildProjectionTransform"],[730,58,708,63],[730,59,708,63,"buildProjectionTransform"],[730,83,708,63],[730,85,708,64],[730,89,708,68],[730,90,708,69,"projectionDelta"],[730,105,708,84],[730,107,708,86],[730,111,708,90],[730,112,708,91,"treeScale"],[730,121,708,100],[730,122,708,101],[731,8,709,12],[731,12,709,16],[731,16,709,20],[731,17,709,21,"projectionTransform"],[731,36,709,40],[731,41,709,45,"prevProjectionTransform"],[731,64,709,68],[731,68,710,16],[731,72,710,20],[731,73,710,21,"treeScale"],[731,82,710,30],[731,83,710,31,"x"],[731,84,710,32],[731,89,710,37,"prevTreeScaleX"],[731,103,710,51],[731,107,711,16],[731,111,711,20],[731,112,711,21,"treeScale"],[731,121,711,30],[731,122,711,31,"y"],[731,123,711,32],[731,128,711,37,"prevTreeScaleY"],[731,142,711,51],[731,144,711,53],[732,10,712,16],[732,14,712,20],[732,15,712,21,"hasProjected"],[732,27,712,33],[732,30,712,36],[732,34,712,40],[733,10,713,16],[733,14,713,20],[733,15,713,21,"scheduleRender"],[733,29,713,35],[733,30,713,36],[733,31,713,37],[734,10,714,16],[734,14,714,20],[734,15,714,21,"notifyListeners"],[734,30,714,36],[734,31,714,37],[734,49,714,55],[734,51,714,57,"target"],[734,57,714,63],[734,58,714,64],[735,8,715,12],[736,6,716,8],[736,7,716,9],[737,6,717,8,"ProjectionNode"],[737,20,717,22],[737,21,717,23,"prototype"],[737,30,717,32],[737,31,717,33,"hide"],[737,35,717,37],[737,38,717,40],[737,50,717,52],[738,8,718,12],[738,12,718,16],[738,13,718,17,"isVisible"],[738,22,718,26],[738,25,718,29],[738,30,718,34],[739,8,719,12],[740,6,720,8],[740,7,720,9],[741,6,721,8,"ProjectionNode"],[741,20,721,22],[741,21,721,23,"prototype"],[741,30,721,32],[741,31,721,33,"show"],[741,35,721,37],[741,38,721,40],[741,50,721,52],[742,8,722,12],[742,12,722,16],[742,13,722,17,"isVisible"],[742,22,722,26],[742,25,722,29],[742,29,722,33],[743,8,723,12],[744,6,724,8],[744,7,724,9],[745,6,725,8,"ProjectionNode"],[745,20,725,22],[745,21,725,23,"prototype"],[745,30,725,32],[745,31,725,33,"scheduleRender"],[745,45,725,47],[745,48,725,50],[745,58,725,60,"notifyAll"],[745,67,725,69],[745,69,725,71],[746,8,726,12],[746,12,726,16,"_a"],[746,14,726,18],[746,16,726,20,"_b"],[746,18,726,22],[746,20,726,24,"_c"],[746,22,726,26],[747,8,727,12],[747,12,727,16,"notifyAll"],[747,21,727,25],[747,26,727,30],[747,31,727,35],[747,32,727,36],[747,34,727,38],[748,10,727,40,"notifyAll"],[748,19,727,49],[748,22,727,52],[748,26,727,56],[749,8,727,58],[750,8,728,12],[750,9,728,13,"_b"],[750,11,728,15],[750,14,728,18],[750,15,728,19,"_a"],[750,17,728,21],[750,20,728,24],[750,24,728,28],[750,25,728,29,"options"],[750,32,728,36],[750,34,728,38,"scheduleRender"],[750,48,728,52],[750,54,728,58],[750,58,728,62],[750,62,728,66,"_b"],[750,64,728,68],[750,69,728,73],[750,74,728,78],[750,75,728,79],[750,78,728,82],[750,83,728,87],[750,84,728,88],[750,87,728,91,"_b"],[750,89,728,93],[750,90,728,94,"call"],[750,94,728,98],[750,95,728,99,"_a"],[750,97,728,101],[750,98,728,102],[751,8,729,12,"notifyAll"],[751,17,729,21],[751,22,729,26],[751,23,729,27,"_c"],[751,25,729,29],[751,28,729,32],[751,32,729,36],[751,33,729,37,"getStack"],[751,41,729,45],[751,42,729,46],[751,43,729,47],[751,49,729,53],[751,53,729,57],[751,57,729,61,"_c"],[751,59,729,63],[751,64,729,68],[751,69,729,73],[751,70,729,74],[751,73,729,77],[751,78,729,82],[751,79,729,83],[751,82,729,86,"_c"],[751,84,729,88],[751,85,729,89,"scheduleRender"],[751,99,729,103],[751,100,729,104],[751,101,729,105],[751,102,729,106],[752,8,730,12],[752,12,730,16],[752,16,730,20],[752,17,730,21,"resumingFrom"],[752,29,730,33],[752,33,730,37],[752,34,730,38],[752,38,730,42],[752,39,730,43,"resumingFrom"],[752,51,730,55],[752,52,730,56,"instance"],[752,60,730,64],[752,62,730,66],[753,10,731,16],[753,14,731,20],[753,15,731,21,"resumingFrom"],[753,27,731,33],[753,30,731,36,"undefined"],[753,39,731,45],[754,8,732,12],[755,6,733,8],[755,7,733,9],[756,6,734,8,"ProjectionNode"],[756,20,734,22],[756,21,734,23,"prototype"],[756,30,734,32],[756,31,734,33,"setAnimationOrigin"],[756,49,734,51],[756,52,734,54],[756,62,734,64,"delta"],[756,67,734,69],[756,69,734,71,"hasOnlyRelativeTargetChanged"],[756,97,734,99],[756,99,734,101],[757,8,735,12],[757,12,735,16,"_this"],[757,17,735,21],[757,20,735,24],[757,24,735,28],[758,8,736,12],[758,12,736,16,"_a"],[758,14,736,18],[759,8,737,12],[759,12,737,16,"hasOnlyRelativeTargetChanged"],[759,40,737,44],[759,45,737,49],[759,50,737,54],[759,51,737,55],[759,53,737,57],[760,10,737,59,"hasOnlyRelativeTargetChanged"],[760,38,737,87],[760,41,737,90],[760,46,737,95],[761,8,737,97],[762,8,738,12],[762,12,738,16,"snapshot"],[762,20,738,24],[762,23,738,27],[762,27,738,31],[762,28,738,32,"snapshot"],[762,36,738,40],[763,8,739,12],[763,12,739,16,"snapshotLatestValues"],[763,32,739,36],[763,35,739,39],[763,36,739,40,"snapshot"],[763,44,739,48],[763,49,739,53],[763,53,739,57],[763,57,739,61,"snapshot"],[763,65,739,69],[763,70,739,74],[763,75,739,79],[763,76,739,80],[763,79,739,83],[763,84,739,88],[763,85,739,89],[763,88,739,92,"snapshot"],[763,96,739,100],[763,97,739,101,"latestValues"],[763,109,739,113],[763,114,739,118],[763,115,739,119],[763,116,739,120],[764,8,740,12],[764,12,740,16,"mixedValues"],[764,23,740,27],[764,26,740,30],[764,30,740,30,"__assign"],[764,36,740,38],[764,37,740,38,"__assign"],[764,45,740,38],[764,47,740,39],[764,48,740,40],[764,49,740,41],[764,51,740,43],[764,55,740,47],[764,56,740,48,"latestValues"],[764,68,740,60],[764,69,740,61],[765,8,741,12],[765,12,741,16,"targetDelta"],[765,23,741,27],[765,26,741,30],[765,30,741,30,"createDelta"],[765,48,741,41],[765,49,741,41,"createDelta"],[765,60,741,41],[765,62,741,42],[765,63,741,43],[766,8,742,12],[766,12,742,16],[766,13,742,17,"relativeTarget"],[766,27,742,31],[766,30,742,34],[766,34,742,38],[766,35,742,39,"relativeTargetOrigin"],[766,55,742,59],[766,58,742,62,"undefined"],[766,67,742,71],[767,8,743,12],[767,12,743,16],[767,13,743,17,"attemptToResolveRelativeTarget"],[767,43,743,47],[767,46,743,50],[767,47,743,51,"hasOnlyRelativeTargetChanged"],[767,75,743,79],[768,8,744,12],[768,12,744,16,"relativeLayout"],[768,26,744,30],[768,29,744,33],[768,33,744,33,"createBox"],[768,51,744,42],[768,52,744,42,"createBox"],[768,61,744,42],[768,63,744,43],[768,64,744,44],[769,8,745,12],[769,12,745,16,"isSharedLayoutAnimation"],[769,35,745,39],[769,38,745,42,"snapshot"],[769,46,745,50],[769,51,745,55],[769,55,745,59],[769,59,745,63,"snapshot"],[769,67,745,71],[769,72,745,76],[769,77,745,81],[769,78,745,82],[769,81,745,85],[769,86,745,90],[769,87,745,91],[769,90,745,94,"snapshot"],[769,98,745,102],[769,99,745,103,"isShared"],[769,107,745,111],[770,8,746,12],[770,12,746,16,"isOnlyMember"],[770,24,746,28],[770,27,746,31],[770,28,746,32],[770,29,746,33],[770,30,746,34,"_a"],[770,32,746,36],[770,35,746,39],[770,39,746,43],[770,40,746,44,"getStack"],[770,48,746,52],[770,49,746,53],[770,50,746,54],[770,56,746,60],[770,60,746,64],[770,64,746,68,"_a"],[770,66,746,70],[770,71,746,75],[770,76,746,80],[770,77,746,81],[770,80,746,84],[770,85,746,89],[770,86,746,90],[770,89,746,93,"_a"],[770,91,746,95],[770,92,746,96,"members"],[770,99,746,103],[770,100,746,104,"length"],[770,106,746,110],[770,111,746,115],[770,112,746,116],[770,117,746,121],[770,118,746,122],[771,8,747,12],[771,12,747,16,"shouldCrossfadeOpacity"],[771,34,747,38],[771,37,747,41,"Boolean"],[771,44,747,48],[771,45,747,49,"isSharedLayoutAnimation"],[771,68,747,72],[771,72,748,16],[771,73,748,17,"isOnlyMember"],[771,85,748,29],[771,89,749,16],[771,93,749,20],[771,94,749,21,"options"],[771,101,749,28],[771,102,749,29,"crossfade"],[771,111,749,38],[771,116,749,43],[771,120,749,47],[771,124,750,16],[771,125,750,17],[771,129,750,21],[771,130,750,22,"path"],[771,134,750,26],[771,135,750,27,"some"],[771,139,750,31],[771,140,750,32,"hasOpacityCrossfade"],[771,159,750,51],[771,160,750,52],[771,161,750,53],[772,8,751,12],[772,12,751,16],[772,13,751,17,"animationProgress"],[772,30,751,34],[772,33,751,37],[772,34,751,38],[773,8,752,12],[773,12,752,16],[773,13,752,17,"mixTargetDelta"],[773,27,752,31],[773,30,752,34],[773,40,752,44,"latest"],[773,46,752,50],[773,48,752,52],[774,10,753,16],[774,14,753,20,"_a"],[774,16,753,22],[775,10,754,16],[775,14,754,20,"progress"],[775,22,754,28],[775,25,754,31,"latest"],[775,31,754,37],[775,34,754,40],[775,38,754,44],[776,10,755,16,"mixAxisDelta"],[776,22,755,28],[776,23,755,29,"targetDelta"],[776,34,755,40],[776,35,755,41,"x"],[776,36,755,42],[776,38,755,44,"delta"],[776,43,755,49],[776,44,755,50,"x"],[776,45,755,51],[776,47,755,53,"progress"],[776,55,755,61],[776,56,755,62],[777,10,756,16,"mixAxisDelta"],[777,22,756,28],[777,23,756,29,"targetDelta"],[777,34,756,40],[777,35,756,41,"y"],[777,36,756,42],[777,38,756,44,"delta"],[777,43,756,49],[777,44,756,50,"y"],[777,45,756,51],[777,47,756,53,"progress"],[777,55,756,61],[777,56,756,62],[778,10,757,16,"_this"],[778,15,757,21],[778,16,757,22,"setTargetDelta"],[778,30,757,36],[778,31,757,37,"targetDelta"],[778,42,757,48],[778,43,757,49],[779,10,758,16],[779,14,758,20,"_this"],[779,19,758,25],[779,20,758,26,"relativeTarget"],[779,34,758,40],[779,38,759,20,"_this"],[779,43,759,25],[779,44,759,26,"relativeTargetOrigin"],[779,64,759,46],[779,68,760,20,"_this"],[779,73,760,25],[779,74,760,26,"layout"],[779,80,760,32],[779,85,761,21],[779,86,761,22,"_a"],[779,88,761,24],[779,91,761,27,"_this"],[779,96,761,32],[779,97,761,33,"relativeParent"],[779,111,761,47],[779,117,761,53],[779,121,761,57],[779,125,761,61,"_a"],[779,127,761,63],[779,132,761,68],[779,137,761,73],[779,138,761,74],[779,141,761,77],[779,146,761,82],[779,147,761,83],[779,150,761,86,"_a"],[779,152,761,88],[779,153,761,89,"layout"],[779,159,761,95],[779,160,761,96],[779,162,761,98],[780,12,762,20],[780,16,762,20,"calcRelativePosition"],[780,37,762,40],[780,38,762,40,"calcRelativePosition"],[780,58,762,40],[780,60,762,41,"relativeLayout"],[780,74,762,55],[780,76,762,57,"_this"],[780,81,762,62],[780,82,762,63,"layout"],[780,88,762,69],[780,89,762,70,"actual"],[780,95,762,76],[780,97,762,78,"_this"],[780,102,762,83],[780,103,762,84,"relativeParent"],[780,117,762,98],[780,118,762,99,"layout"],[780,124,762,105],[780,125,762,106,"actual"],[780,131,762,112],[780,132,762,113],[781,12,763,20,"mixBox"],[781,18,763,26],[781,19,763,27,"_this"],[781,24,763,32],[781,25,763,33,"relativeTarget"],[781,39,763,47],[781,41,763,49,"_this"],[781,46,763,54],[781,47,763,55,"relativeTargetOrigin"],[781,67,763,75],[781,69,763,77,"relativeLayout"],[781,83,763,91],[781,85,763,93,"progress"],[781,93,763,101],[781,94,763,102],[782,10,764,16],[783,10,765,16],[783,14,765,20,"isSharedLayoutAnimation"],[783,37,765,43],[783,39,765,45],[784,12,766,20,"_this"],[784,17,766,25],[784,18,766,26,"animationValues"],[784,33,766,41],[784,36,766,44,"mixedValues"],[784,47,766,55],[785,12,767,20],[785,16,767,20,"mixValues"],[785,38,767,29],[785,39,767,29,"mixValues"],[785,48,767,29],[785,50,767,30,"mixedValues"],[785,61,767,41],[785,63,767,43,"snapshotLatestValues"],[785,83,767,63],[785,85,767,65,"_this"],[785,90,767,70],[785,91,767,71,"latestValues"],[785,103,767,83],[785,105,767,85,"progress"],[785,113,767,93],[785,115,767,95,"shouldCrossfadeOpacity"],[785,137,767,117],[785,139,767,119,"isOnlyMember"],[785,151,767,131],[785,152,767,132],[786,10,768,16],[787,10,769,16,"_this"],[787,15,769,21],[787,16,769,22,"root"],[787,20,769,26],[787,21,769,27,"scheduleUpdateProjection"],[787,45,769,51],[787,46,769,52],[787,47,769,53],[788,10,770,16,"_this"],[788,15,770,21],[788,16,770,22,"scheduleRender"],[788,30,770,36],[788,31,770,37],[788,32,770,38],[789,10,771,16,"_this"],[789,15,771,21],[789,16,771,22,"animationProgress"],[789,33,771,39],[789,36,771,42,"progress"],[789,44,771,50],[790,8,772,12],[790,9,772,13],[791,8,773,12],[791,12,773,16],[791,13,773,17,"mixTargetDelta"],[791,27,773,31],[791,28,773,32],[791,29,773,33],[791,30,773,34],[792,6,774,8],[792,7,774,9],[793,6,775,8,"ProjectionNode"],[793,20,775,22],[793,21,775,23,"prototype"],[793,30,775,32],[793,31,775,33,"startAnimation"],[793,45,775,47],[793,48,775,50],[793,58,775,60,"options"],[793,65,775,67],[793,67,775,69],[794,8,776,12],[794,12,776,16,"_this"],[794,17,776,21],[794,20,776,24],[794,24,776,28],[795,8,777,12],[795,12,777,16,"_a"],[795,14,777,18],[795,16,777,20,"_b"],[795,18,777,22],[796,8,778,12],[796,12,778,16],[796,13,778,17,"notifyListeners"],[796,28,778,32],[796,29,778,33],[796,45,778,49],[796,46,778,50],[797,8,779,12],[797,9,779,13,"_a"],[797,11,779,15],[797,14,779,18],[797,18,779,22],[797,19,779,23,"currentAnimation"],[797,35,779,39],[797,41,779,45],[797,45,779,49],[797,49,779,53,"_a"],[797,51,779,55],[797,56,779,60],[797,61,779,65],[797,62,779,66],[797,65,779,69],[797,70,779,74],[797,71,779,75],[797,74,779,78,"_a"],[797,76,779,80],[797,77,779,81,"stop"],[797,81,779,85],[797,82,779,86],[797,83,779,87],[798,8,780,12],[798,12,780,16],[798,16,780,20],[798,17,780,21,"resumingFrom"],[798,29,780,33],[798,31,780,35],[799,10,781,16],[799,11,781,17,"_b"],[799,13,781,19],[799,16,781,22],[799,20,781,26],[799,21,781,27,"resumingFrom"],[799,33,781,39],[799,34,781,40,"currentAnimation"],[799,50,781,56],[799,56,781,62],[799,60,781,66],[799,64,781,70,"_b"],[799,66,781,72],[799,71,781,77],[799,76,781,82],[799,77,781,83],[799,80,781,86],[799,85,781,91],[799,86,781,92],[799,89,781,95,"_b"],[799,91,781,97],[799,92,781,98,"stop"],[799,96,781,102],[799,97,781,103],[799,98,781,104],[800,8,782,12],[801,8,783,12],[801,12,783,16],[801,16,783,20],[801,17,783,21,"pendingAnimation"],[801,33,783,37],[801,35,783,39],[802,10,784,16,"cancelSync"],[802,20,784,26],[802,21,784,26,"cancelSync"],[802,31,784,26],[802,32,784,27,"update"],[802,38,784,33],[802,39,784,34],[802,43,784,38],[802,44,784,39,"pendingAnimation"],[802,60,784,55],[802,61,784,56],[803,10,785,16],[803,14,785,20],[803,15,785,21,"pendingAnimation"],[803,31,785,37],[803,34,785,40,"undefined"],[803,43,785,49],[804,8,786,12],[805,8,787,12],[806,0,788,0],[807,0,789,0],[808,0,790,0],[809,0,791,0],[810,8,792,12],[810,12,792,16],[810,13,792,17,"pendingAnimation"],[810,29,792,33],[810,32,792,36,"sync"],[810,36,792,40],[810,37,792,40,"default"],[810,44,792,40],[810,45,792,41,"update"],[810,51,792,47],[810,52,792,48],[810,64,792,60],[811,10,793,16,"globalProjectionState"],[811,19,793,37],[811,20,793,37,"globalProjectionState"],[811,41,793,37],[811,42,793,38,"hasAnimatedSinceResize"],[811,64,793,60],[811,67,793,63],[811,71,793,67],[812,10,794,16,"_this"],[812,15,794,21],[812,16,794,22,"currentAnimation"],[812,32,794,38],[812,35,794,41],[812,39,794,41,"animate"],[812,59,794,48],[812,60,794,48,"animate"],[812,67,794,48],[812,69,794,49],[812,70,794,50],[812,72,794,52,"animationTarget"],[812,87,794,67],[812,89,794,69],[812,93,794,69,"__assign"],[812,99,794,77],[812,100,794,77,"__assign"],[812,108,794,77],[812,110,794,78],[812,114,794,78,"__assign"],[812,120,794,86],[812,121,794,86,"__assign"],[812,129,794,86],[812,131,794,87],[812,132,794,88],[812,133,794,89],[812,135,794,91,"options"],[812,142,794,98],[812,143,794,99],[812,145,794,101],[813,12,794,103,"onUpdate"],[813,20,794,111],[813,22,794,113],[813,31,794,113,"onUpdate"],[813,32,794,123,"latest"],[813,38,794,129],[813,40,794,131],[814,14,795,24],[814,18,795,28,"_a"],[814,20,795,30],[815,14,796,24,"_this"],[815,19,796,29],[815,20,796,30,"mixTargetDelta"],[815,34,796,44],[815,35,796,45,"latest"],[815,41,796,51],[815,42,796,52],[816,14,797,24],[816,15,797,25,"_a"],[816,17,797,27],[816,20,797,30,"options"],[816,27,797,37],[816,28,797,38,"onUpdate"],[816,36,797,46],[816,42,797,52],[816,46,797,56],[816,50,797,60,"_a"],[816,52,797,62],[816,57,797,67],[816,62,797,72],[816,63,797,73],[816,66,797,76],[816,71,797,81],[816,72,797,82],[816,75,797,85,"_a"],[816,77,797,87],[816,78,797,88,"call"],[816,82,797,92],[816,83,797,93,"options"],[816,90,797,100],[816,92,797,102,"latest"],[816,98,797,108],[816,99,797,109],[817,12,798,20],[817,13,798,21],[818,12,798,23,"onComplete"],[818,22,798,33],[818,24,798,35],[818,33,798,35,"onComplete"],[818,34,798,35],[818,36,798,47],[819,14,799,24],[819,18,799,28,"_a"],[819,20,799,30],[820,14,800,24],[820,15,800,25,"_a"],[820,17,800,27],[820,20,800,30,"options"],[820,27,800,37],[820,28,800,38,"onComplete"],[820,38,800,48],[820,44,800,54],[820,48,800,58],[820,52,800,62,"_a"],[820,54,800,64],[820,59,800,69],[820,64,800,74],[820,65,800,75],[820,68,800,78],[820,73,800,83],[820,74,800,84],[820,77,800,87,"_a"],[820,79,800,89],[820,80,800,90,"call"],[820,84,800,94],[820,85,800,95,"options"],[820,92,800,102],[820,93,800,103],[821,14,801,24,"_this"],[821,19,801,29],[821,20,801,30,"completeAnimation"],[821,37,801,47],[821,38,801,48],[821,39,801,49],[822,12,802,20],[823,10,802,22],[823,11,802,23],[823,12,802,24],[823,13,802,25],[824,10,803,16],[824,14,803,20,"_this"],[824,19,803,25],[824,20,803,26,"resumingFrom"],[824,32,803,38],[824,34,803,40],[825,12,804,20,"_this"],[825,17,804,25],[825,18,804,26,"resumingFrom"],[825,30,804,38],[825,31,804,39,"currentAnimation"],[825,47,804,55],[825,50,804,58,"_this"],[825,55,804,63],[825,56,804,64,"currentAnimation"],[825,72,804,80],[826,10,805,16],[827,10,806,16,"_this"],[827,15,806,21],[827,16,806,22,"pendingAnimation"],[827,32,806,38],[827,35,806,41,"undefined"],[827,44,806,50],[828,8,807,12],[828,9,807,13],[828,10,807,14],[829,6,808,8],[829,7,808,9],[830,6,809,8,"ProjectionNode"],[830,20,809,22],[830,21,809,23,"prototype"],[830,30,809,32],[830,31,809,33,"completeAnimation"],[830,48,809,50],[830,51,809,53],[830,63,809,65],[831,8,810,12],[831,12,810,16,"_a"],[831,14,810,18],[832,8,811,12],[832,12,811,16],[832,16,811,20],[832,17,811,21,"resumingFrom"],[832,29,811,33],[832,31,811,35],[833,10,812,16],[833,14,812,20],[833,15,812,21,"resumingFrom"],[833,27,812,33],[833,28,812,34,"currentAnimation"],[833,44,812,50],[833,47,812,53,"undefined"],[833,56,812,62],[834,10,813,16],[834,14,813,20],[834,15,813,21,"resumingFrom"],[834,27,813,33],[834,28,813,34,"preserveOpacity"],[834,43,813,49],[834,46,813,52,"undefined"],[834,55,813,61],[835,8,814,12],[836,8,815,12],[836,9,815,13,"_a"],[836,11,815,15],[836,14,815,18],[836,18,815,22],[836,19,815,23,"getStack"],[836,27,815,31],[836,28,815,32],[836,29,815,33],[836,35,815,39],[836,39,815,43],[836,43,815,47,"_a"],[836,45,815,49],[836,50,815,54],[836,55,815,59],[836,56,815,60],[836,59,815,63],[836,64,815,68],[836,65,815,69],[836,68,815,72,"_a"],[836,70,815,74],[836,71,815,75,"exitAnimationComplete"],[836,92,815,96],[836,93,815,97],[836,94,815,98],[837,8,816,12],[837,12,816,16],[837,13,816,17,"resumingFrom"],[837,25,816,29],[837,28,817,16],[837,32,817,20],[837,33,817,21,"currentAnimation"],[837,49,817,37],[837,52,818,20],[837,56,818,24],[837,57,818,25,"animationValues"],[837,72,818,40],[837,75,819,24,"undefined"],[837,84,819,33],[838,8,820,12],[838,12,820,16],[838,13,820,17,"notifyListeners"],[838,28,820,32],[838,29,820,33],[838,48,820,52],[838,49,820,53],[839,6,821,8],[839,7,821,9],[840,6,822,8,"ProjectionNode"],[840,20,822,22],[840,21,822,23,"prototype"],[840,30,822,32],[840,31,822,33,"finishAnimation"],[840,46,822,48],[840,49,822,51],[840,61,822,63],[841,8,823,12],[841,12,823,16,"_a"],[841,14,823,18],[842,8,824,12],[842,12,824,16],[842,16,824,20],[842,17,824,21,"currentAnimation"],[842,33,824,37],[842,35,824,39],[843,10,825,16],[843,11,825,17,"_a"],[843,13,825,19],[843,16,825,22],[843,20,825,26],[843,21,825,27,"mixTargetDelta"],[843,35,825,41],[843,41,825,47],[843,45,825,51],[843,49,825,55,"_a"],[843,51,825,57],[843,56,825,62],[843,61,825,67],[843,62,825,68],[843,65,825,71],[843,70,825,76],[843,71,825,77],[843,74,825,80,"_a"],[843,76,825,82],[843,77,825,83,"call"],[843,81,825,87],[843,82,825,88],[843,86,825,92],[843,88,825,94,"animationTarget"],[843,103,825,109],[843,104,825,110],[844,10,826,16],[844,14,826,20],[844,15,826,21,"currentAnimation"],[844,31,826,37],[844,32,826,38,"stop"],[844,36,826,42],[844,37,826,43],[844,38,826,44],[845,8,827,12],[846,8,828,12],[846,12,828,16],[846,13,828,17,"completeAnimation"],[846,30,828,34],[846,31,828,35],[846,32,828,36],[847,6,829,8],[847,7,829,9],[848,6,830,8,"ProjectionNode"],[848,20,830,22],[848,21,830,23,"prototype"],[848,30,830,32],[848,31,830,33,"applyTransformsToTarget"],[848,54,830,56],[848,57,830,59],[848,69,830,71],[849,8,831,12],[849,12,831,16,"_a"],[849,14,831,18],[849,17,831,21],[849,21,831,25],[849,22,831,26,"getLead"],[849,29,831,33],[849,30,831,34],[849,31,831,35],[850,10,831,37,"targetWithTransforms"],[850,30,831,57],[850,33,831,60,"_a"],[850,35,831,62],[850,36,831,63,"targetWithTransforms"],[850,56,831,83],[851,10,831,85,"target"],[851,16,831,91],[851,19,831,94,"_a"],[851,21,831,96],[851,22,831,97,"target"],[851,28,831,103],[852,10,831,105,"layout"],[852,16,831,111],[852,19,831,114,"_a"],[852,21,831,116],[852,22,831,117,"layout"],[852,28,831,123],[853,10,831,125,"latestValues"],[853,22,831,137],[853,25,831,140,"_a"],[853,27,831,142],[853,28,831,143,"latestValues"],[853,40,831,155],[854,8,832,12],[854,12,832,16],[854,13,832,17,"targetWithTransforms"],[854,33,832,37],[854,37,832,41],[854,38,832,42,"target"],[854,44,832,48],[854,48,832,52],[854,49,832,53,"layout"],[854,55,832,59],[854,57,833,16],[855,8,834,12],[855,12,834,12,"copyBoxInto"],[855,28,834,23],[855,29,834,23,"copyBoxInto"],[855,40,834,23],[855,42,834,24,"targetWithTransforms"],[855,62,834,44],[855,64,834,46,"target"],[855,70,834,52],[855,71,834,53],[856,8,835,12],[857,0,836,0],[858,0,837,0],[859,0,838,0],[860,0,839,0],[861,8,840,12],[861,12,840,12,"transformBox"],[861,34,840,24],[861,35,840,24,"transformBox"],[861,47,840,24],[861,49,840,25,"targetWithTransforms"],[861,69,840,45],[861,71,840,47,"latestValues"],[861,83,840,59],[861,84,840,60],[862,8,841,12],[863,0,842,0],[864,0,843,0],[865,0,844,0],[866,0,845,0],[867,0,846,0],[868,8,847,12],[868,12,847,12,"calcBoxDelta"],[868,33,847,24],[868,34,847,24,"calcBoxDelta"],[868,46,847,24],[868,48,847,25],[868,52,847,29],[868,53,847,30,"projectionDeltaWithTransform"],[868,81,847,58],[868,83,847,60],[868,87,847,64],[868,88,847,65,"layoutCorrected"],[868,103,847,80],[868,105,847,82,"targetWithTransforms"],[868,125,847,102],[868,127,847,104,"latestValues"],[868,139,847,116],[868,140,847,117],[869,6,848,8],[869,7,848,9],[870,6,849,8,"ProjectionNode"],[870,20,849,22],[870,21,849,23,"prototype"],[870,30,849,32],[870,31,849,33,"registerSharedNode"],[870,49,849,51],[870,52,849,54],[870,62,849,64,"layoutId"],[870,70,849,72],[870,72,849,74,"node"],[870,76,849,78],[870,78,849,80],[871,8,850,12],[871,12,850,16,"_a"],[871,14,850,18],[871,16,850,20,"_b"],[871,18,850,22],[871,20,850,24,"_c"],[871,22,850,26],[872,8,851,12],[872,12,851,16],[872,13,851,17],[872,17,851,21],[872,18,851,22,"sharedNodes"],[872,29,851,33],[872,30,851,34,"has"],[872,33,851,37],[872,34,851,38,"layoutId"],[872,42,851,46],[872,43,851,47],[872,45,851,49],[873,10,852,16],[873,14,852,20],[873,15,852,21,"sharedNodes"],[873,26,852,32],[873,27,852,33,"set"],[873,30,852,36],[873,31,852,37,"layoutId"],[873,39,852,45],[873,41,852,47],[873,45,852,51,"NodeStack"],[873,60,852,60],[873,61,852,60,"NodeStack"],[873,70,852,60],[873,71,852,61],[873,72,852,62],[873,73,852,63],[874,8,853,12],[875,8,854,12],[875,12,854,16,"stack"],[875,17,854,21],[875,20,854,24],[875,24,854,28],[875,25,854,29,"sharedNodes"],[875,36,854,40],[875,37,854,41,"get"],[875,40,854,44],[875,41,854,45,"layoutId"],[875,49,854,53],[875,50,854,54],[876,8,855,12,"stack"],[876,13,855,17],[876,14,855,18,"add"],[876,17,855,21],[876,18,855,22,"node"],[876,22,855,26],[876,23,855,27],[877,8,856,12,"node"],[877,12,856,16],[877,13,856,17,"promote"],[877,20,856,24],[877,21,856,25],[878,10,857,16,"transition"],[878,20,857,26],[878,22,857,28],[878,23,857,29,"_a"],[878,25,857,31],[878,28,857,34,"node"],[878,32,857,38],[878,33,857,39,"options"],[878,40,857,46],[878,41,857,47,"initialPromotionConfig"],[878,63,857,69],[878,69,857,75],[878,73,857,79],[878,77,857,83,"_a"],[878,79,857,85],[878,84,857,90],[878,89,857,95],[878,90,857,96],[878,93,857,99],[878,98,857,104],[878,99,857,105],[878,102,857,108,"_a"],[878,104,857,110],[878,105,857,111,"transition"],[878,115,857,121],[879,10,858,16,"preserveFollowOpacity"],[879,31,858,37],[879,33,858,39],[879,34,858,40,"_c"],[879,36,858,42],[879,39,858,45],[879,40,858,46,"_b"],[879,42,858,48],[879,45,858,51,"node"],[879,49,858,55],[879,50,858,56,"options"],[879,57,858,63],[879,58,858,64,"initialPromotionConfig"],[879,80,858,86],[879,86,858,92],[879,90,858,96],[879,94,858,100,"_b"],[879,96,858,102],[879,101,858,107],[879,106,858,112],[879,107,858,113],[879,110,858,116],[879,115,858,121],[879,116,858,122],[879,119,858,125,"_b"],[879,121,858,127],[879,122,858,128,"shouldPreserveFollowOpacity"],[879,149,858,155],[879,155,858,161],[879,159,858,165],[879,163,858,169,"_c"],[879,165,858,171],[879,170,858,176],[879,175,858,181],[879,176,858,182],[879,179,858,185],[879,184,858,190],[879,185,858,191],[879,188,858,194,"_c"],[879,190,858,196],[879,191,858,197,"call"],[879,195,858,201],[879,196,858,202,"_b"],[879,198,858,204],[879,200,858,206,"node"],[879,204,858,210],[880,8,859,12],[880,9,859,13],[880,10,859,14],[881,6,860,8],[881,7,860,9],[882,6,861,8,"ProjectionNode"],[882,20,861,22],[882,21,861,23,"prototype"],[882,30,861,32],[882,31,861,33,"isLead"],[882,37,861,39],[882,40,861,42],[882,52,861,54],[883,8,862,12],[883,12,862,16,"stack"],[883,17,862,21],[883,20,862,24],[883,24,862,28],[883,25,862,29,"getStack"],[883,33,862,37],[883,34,862,38],[883,35,862,39],[884,8,863,12],[884,15,863,19,"stack"],[884,20,863,24],[884,23,863,27,"stack"],[884,28,863,32],[884,29,863,33,"lead"],[884,33,863,37],[884,38,863,42],[884,42,863,46],[884,45,863,49],[884,49,863,53],[885,6,864,8],[885,7,864,9],[886,6,865,8,"ProjectionNode"],[886,20,865,22],[886,21,865,23,"prototype"],[886,30,865,32],[886,31,865,33,"getLead"],[886,38,865,40],[886,41,865,43],[886,53,865,55],[887,8,866,12],[887,12,866,16,"_a"],[887,14,866,18],[888,8,867,12],[888,12,867,16,"layoutId"],[888,20,867,24],[888,23,867,27],[888,27,867,31],[888,28,867,32,"options"],[888,35,867,39],[888,36,867,40,"layoutId"],[888,44,867,48],[889,8,868,12],[889,15,868,19,"layoutId"],[889,23,868,27],[889,26,868,30],[889,27,868,31],[889,28,868,32,"_a"],[889,30,868,34],[889,33,868,37],[889,37,868,41],[889,38,868,42,"getStack"],[889,46,868,50],[889,47,868,51],[889,48,868,52],[889,54,868,58],[889,58,868,62],[889,62,868,66,"_a"],[889,64,868,68],[889,69,868,73],[889,74,868,78],[889,75,868,79],[889,78,868,82],[889,83,868,87],[889,84,868,88],[889,87,868,91,"_a"],[889,89,868,93],[889,90,868,94,"lead"],[889,94,868,98],[889,99,868,103],[889,103,868,107],[889,106,868,110],[889,110,868,114],[890,6,869,8],[890,7,869,9],[891,6,870,8,"ProjectionNode"],[891,20,870,22],[891,21,870,23,"prototype"],[891,30,870,32],[891,31,870,33,"getPrevLead"],[891,42,870,44],[891,45,870,47],[891,57,870,59],[892,8,871,12],[892,12,871,16,"_a"],[892,14,871,18],[893,8,872,12],[893,12,872,16,"layoutId"],[893,20,872,24],[893,23,872,27],[893,27,872,31],[893,28,872,32,"options"],[893,35,872,39],[893,36,872,40,"layoutId"],[893,44,872,48],[894,8,873,12],[894,15,873,19,"layoutId"],[894,23,873,27],[894,26,873,30],[894,27,873,31,"_a"],[894,29,873,33],[894,32,873,36],[894,36,873,40],[894,37,873,41,"getStack"],[894,45,873,49],[894,46,873,50],[894,47,873,51],[894,53,873,57],[894,57,873,61],[894,61,873,65,"_a"],[894,63,873,67],[894,68,873,72],[894,73,873,77],[894,74,873,78],[894,77,873,81],[894,82,873,86],[894,83,873,87],[894,86,873,90,"_a"],[894,88,873,92],[894,89,873,93,"prevLead"],[894,97,873,101],[894,100,873,104,"undefined"],[894,109,873,113],[895,6,874,8],[895,7,874,9],[896,6,875,8,"ProjectionNode"],[896,20,875,22],[896,21,875,23,"prototype"],[896,30,875,32],[896,31,875,33,"getStack"],[896,39,875,41],[896,42,875,44],[896,54,875,56],[897,8,876,12],[897,12,876,16,"layoutId"],[897,20,876,24],[897,23,876,27],[897,27,876,31],[897,28,876,32,"options"],[897,35,876,39],[897,36,876,40,"layoutId"],[897,44,876,48],[898,8,877,12],[898,12,877,16,"layoutId"],[898,20,877,24],[898,22,878,16],[898,29,878,23],[898,33,878,27],[898,34,878,28,"root"],[898,38,878,32],[898,39,878,33,"sharedNodes"],[898,50,878,44],[898,51,878,45,"get"],[898,54,878,48],[898,55,878,49,"layoutId"],[898,63,878,57],[898,64,878,58],[899,6,879,8],[899,7,879,9],[900,6,880,8,"ProjectionNode"],[900,20,880,22],[900,21,880,23,"prototype"],[900,30,880,32],[900,31,880,33,"promote"],[900,38,880,40],[900,41,880,43],[900,51,880,53,"_a"],[900,53,880,55],[900,55,880,57],[901,8,881,12],[901,12,881,16,"_b"],[901,14,881,18],[901,17,881,21,"_a"],[901,19,881,23],[901,24,881,28],[901,29,881,33],[901,30,881,34],[901,33,881,37],[901,34,881,38],[901,35,881,39],[901,38,881,42,"_a"],[901,40,881,44],[902,10,881,46,"needsReset"],[902,20,881,56],[902,23,881,59,"_b"],[902,25,881,61],[902,26,881,62,"needsReset"],[902,36,881,72],[903,10,881,74,"transition"],[903,20,881,84],[903,23,881,87,"_b"],[903,25,881,89],[903,26,881,90,"transition"],[903,36,881,100],[904,10,881,102,"preserveFollowOpacity"],[904,31,881,123],[904,34,881,126,"_b"],[904,36,881,128],[904,37,881,129,"preserveFollowOpacity"],[904,58,881,150],[905,8,882,12],[905,12,882,16,"stack"],[905,17,882,21],[905,20,882,24],[905,24,882,28],[905,25,882,29,"getStack"],[905,33,882,37],[905,34,882,38],[905,35,882,39],[906,8,883,12],[906,12,883,16,"stack"],[906,17,883,21],[906,19,884,16,"stack"],[906,24,884,21],[906,25,884,22,"promote"],[906,32,884,29],[906,33,884,30],[906,37,884,34],[906,39,884,36,"preserveFollowOpacity"],[906,60,884,57],[906,61,884,58],[907,8,885,12],[907,12,885,16,"needsReset"],[907,22,885,26],[907,24,885,28],[908,10,886,16],[908,14,886,20],[908,15,886,21,"projectionDelta"],[908,30,886,36],[908,33,886,39,"undefined"],[908,42,886,48],[909,10,887,16],[909,14,887,20],[909,15,887,21,"needsReset"],[909,25,887,31],[909,28,887,34],[909,32,887,38],[910,8,888,12],[911,8,889,12],[911,12,889,16,"transition"],[911,22,889,26],[911,24,890,16],[911,28,890,20],[911,29,890,21,"setOptions"],[911,39,890,31],[911,40,890,32],[912,10,890,34,"transition"],[912,20,890,44],[912,22,890,46,"transition"],[913,8,890,57],[913,9,890,58],[913,10,890,59],[914,6,891,8],[914,7,891,9],[915,6,892,8,"ProjectionNode"],[915,20,892,22],[915,21,892,23,"prototype"],[915,30,892,32],[915,31,892,33,"relegate"],[915,39,892,41],[915,42,892,44],[915,54,892,56],[916,8,893,12],[916,12,893,16,"stack"],[916,17,893,21],[916,20,893,24],[916,24,893,28],[916,25,893,29,"getStack"],[916,33,893,37],[916,34,893,38],[916,35,893,39],[917,8,894,12],[917,12,894,16,"stack"],[917,17,894,21],[917,19,894,23],[918,10,895,16],[918,17,895,23,"stack"],[918,22,895,28],[918,23,895,29,"relegate"],[918,31,895,37],[918,32,895,38],[918,36,895,42],[918,37,895,43],[919,8,896,12],[919,9,896,13],[919,15,897,17],[920,10,898,16],[920,17,898,23],[920,22,898,28],[921,8,899,12],[922,6,900,8],[922,7,900,9],[923,6,901,8,"ProjectionNode"],[923,20,901,22],[923,21,901,23,"prototype"],[923,30,901,32],[923,31,901,33,"resetRotation"],[923,44,901,46],[923,47,901,49],[923,59,901,61],[924,8,902,12],[924,12,902,16,"visualElement"],[924,25,902,29],[924,28,902,32],[924,32,902,36],[924,33,902,37,"options"],[924,40,902,44],[924,41,902,45,"visualElement"],[924,54,902,58],[925,8,903,12],[925,12,903,16],[925,13,903,17,"visualElement"],[925,26,903,30],[925,28,904,16],[926,8,905,12],[927,8,906,12],[927,12,906,16,"hasRotate"],[927,21,906,25],[927,24,906,28],[927,29,906,33],[928,8,907,12],[929,8,908,12],[929,12,908,16,"resetValues"],[929,23,908,27],[929,26,908,30],[929,27,908,31],[929,28,908,32],[930,8,909,12],[931,8,910,12],[931,13,910,17],[931,17,910,21,"i"],[931,18,910,22],[931,21,910,25],[931,22,910,26],[931,24,910,28,"i"],[931,25,910,29],[931,28,910,32,"transformAxes"],[931,56,910,45],[931,57,910,45,"transformAxes"],[931,70,910,45],[931,71,910,46,"length"],[931,77,910,52],[931,79,910,54,"i"],[931,80,910,55],[931,82,910,57],[931,84,910,59],[932,10,911,16],[932,14,911,20,"axis"],[932,18,911,24],[932,21,911,27,"transformAxes"],[932,49,911,40],[932,50,911,40,"transformAxes"],[932,63,911,40],[932,64,911,41,"i"],[932,65,911,42],[932,66,911,43],[933,10,912,16],[933,14,912,20,"key"],[933,17,912,23],[933,20,912,26],[933,28,912,34],[933,31,912,37,"axis"],[933,35,912,41],[934,10,913,16],[935,10,914,16],[936,10,915,16],[936,14,915,20],[936,15,915,21,"visualElement"],[936,28,915,34],[936,29,915,35,"getStaticValue"],[936,43,915,49],[936,44,915,50,"key"],[936,47,915,53],[936,48,915,54],[936,50,915,56],[937,12,916,20],[938,10,917,16],[939,10,918,16,"hasRotate"],[939,19,918,25],[939,22,918,28],[939,26,918,32],[940,10,919,16],[941,10,920,16,"resetValues"],[941,21,920,27],[941,22,920,28,"key"],[941,25,920,31],[941,26,920,32],[941,29,920,35,"visualElement"],[941,42,920,48],[941,43,920,49,"getStaticValue"],[941,57,920,63],[941,58,920,64,"key"],[941,61,920,67],[941,62,920,68],[942,10,921,16,"visualElement"],[942,23,921,29],[942,24,921,30,"setStaticValue"],[942,38,921,44],[942,39,921,45,"key"],[942,42,921,48],[942,44,921,50],[942,45,921,51],[942,46,921,52],[943,8,922,12],[944,8,923,12],[945,8,924,12],[945,12,924,16],[945,13,924,17,"hasRotate"],[945,22,924,26],[945,24,925,16],[946,8,926,12],[947,8,927,12],[948,8,928,12,"visualElement"],[948,21,928,25],[948,26,928,30],[948,30,928,34],[948,34,928,38,"visualElement"],[948,47,928,51],[948,52,928,56],[948,57,928,61],[948,58,928,62],[948,61,928,65],[948,66,928,70],[948,67,928,71],[948,70,928,74,"visualElement"],[948,83,928,87],[948,84,928,88,"syncRender"],[948,94,928,98],[948,95,928,99],[948,96,928,100],[949,8,929,12],[950,8,930,12],[950,13,930,17],[950,17,930,21,"key"],[950,20,930,24],[950,24,930,28,"resetValues"],[950,35,930,39],[950,37,930,41],[951,10,931,16,"visualElement"],[951,23,931,29],[951,24,931,30,"setStaticValue"],[951,38,931,44],[951,39,931,45,"key"],[951,42,931,48],[951,44,931,50,"resetValues"],[951,55,931,61],[951,56,931,62,"key"],[951,59,931,65],[951,60,931,66],[951,61,931,67],[952,8,932,12],[953,8,933,12],[954,8,934,12],[955,8,935,12,"visualElement"],[955,21,935,25],[955,22,935,26,"scheduleRender"],[955,36,935,40],[955,37,935,41],[955,38,935,42],[956,6,936,8],[956,7,936,9],[957,6,937,8,"ProjectionNode"],[957,20,937,22],[957,21,937,23,"prototype"],[957,30,937,32],[957,31,937,33,"getProjectionStyles"],[957,50,937,52],[957,53,937,55],[957,63,937,65,"styleProp"],[957,72,937,74],[957,74,937,76],[958,8,938,12],[958,12,938,16,"_a"],[958,14,938,18],[958,16,938,20,"_b"],[958,18,938,22],[958,20,938,24,"_c"],[958,22,938,26],[958,24,938,28,"_d"],[958,26,938,30],[958,28,938,32,"_e"],[958,30,938,34],[958,32,938,36,"_f"],[958,34,938,38],[959,8,939,12],[959,12,939,16,"styleProp"],[959,21,939,25],[959,26,939,30],[959,31,939,35],[959,32,939,36],[959,34,939,38],[960,10,939,40,"styleProp"],[960,19,939,49],[960,22,939,52],[960,23,939,53],[960,24,939,54],[961,8,939,56],[962,8,940,12],[963,8,941,12],[963,12,941,16,"styles"],[963,18,941,22],[963,21,941,25],[963,22,941,26],[963,23,941,27],[964,8,942,12],[964,12,942,16],[964,13,942,17],[964,17,942,21],[964,18,942,22,"instance"],[964,26,942,30],[964,30,942,34],[964,34,942,38],[964,35,942,39,"isSVG"],[964,40,942,44],[964,42,943,16],[964,49,943,23,"styles"],[964,55,943,29],[965,8,944,12],[965,12,944,16],[965,13,944,17],[965,17,944,21],[965,18,944,22,"isVisible"],[965,27,944,31],[965,29,944,33],[966,10,945,16],[966,17,945,23],[967,12,945,25,"visibility"],[967,22,945,35],[967,24,945,37],[968,10,945,46],[968,11,945,47],[969,8,946,12],[969,9,946,13],[969,15,947,17],[970,10,948,16,"styles"],[970,16,948,22],[970,17,948,23,"visibility"],[970,27,948,33],[970,30,948,36],[970,32,948,38],[971,8,949,12],[972,8,950,12],[972,12,950,16,"transformTemplate"],[972,29,950,33],[972,32,950,36],[972,33,950,37,"_a"],[972,35,950,39],[972,38,950,42],[972,42,950,46],[972,43,950,47,"options"],[972,50,950,54],[972,51,950,55,"visualElement"],[972,64,950,68],[972,70,950,74],[972,74,950,78],[972,78,950,82,"_a"],[972,80,950,84],[972,85,950,89],[972,90,950,94],[972,91,950,95],[972,94,950,98],[972,99,950,103],[972,100,950,104],[972,103,950,107,"_a"],[972,105,950,109],[972,106,950,110,"getProps"],[972,114,950,118],[972,115,950,119],[972,116,950,120],[972,117,950,121,"transformTemplate"],[972,134,950,138],[973,8,951,12],[973,12,951,16],[973,16,951,20],[973,17,951,21,"needsReset"],[973,27,951,31],[973,29,951,33],[974,10,952,16],[974,14,952,20],[974,15,952,21,"needsReset"],[974,25,952,31],[974,28,952,34],[974,33,952,39],[975,10,953,16,"styles"],[975,16,953,22],[975,17,953,23,"opacity"],[975,24,953,30],[975,27,953,33],[975,29,953,35],[976,10,954,16,"styles"],[976,16,954,22],[976,17,954,23,"pointerEvents"],[976,30,954,36],[976,33,955,20],[976,37,955,20,"resolveMotionValue"],[976,69,955,38],[976,70,955,38,"resolveMotionValue"],[976,88,955,38],[976,90,955,39,"styleProp"],[976,99,955,48],[976,100,955,49,"pointerEvents"],[976,113,955,62],[976,114,955,63],[976,118,955,67],[976,120,955,69],[977,10,956,16,"styles"],[977,16,956,22],[977,17,956,23,"transform"],[977,26,956,32],[977,29,956,35,"transformTemplate"],[977,46,956,52],[977,49,957,22,"transformTemplate"],[977,66,957,39],[977,67,957,40],[977,71,957,44],[977,72,957,45,"latestValues"],[977,84,957,57],[977,86,957,59],[977,88,957,61],[977,89,957,62],[977,92,958,22],[977,98,958,28],[978,10,959,16],[978,17,959,23,"styles"],[978,23,959,29],[979,8,960,12],[980,8,961,12],[980,12,961,16,"lead"],[980,16,961,20],[980,19,961,23],[980,23,961,27],[980,24,961,28,"getLead"],[980,31,961,35],[980,32,961,36],[980,33,961,37],[981,8,962,12],[981,12,962,16],[981,13,962,17],[981,17,962,21],[981,18,962,22,"projectionDelta"],[981,33,962,37],[981,37,962,41],[981,38,962,42],[981,42,962,46],[981,43,962,47,"layout"],[981,49,962,53],[981,53,962,57],[981,54,962,58,"lead"],[981,58,962,62],[981,59,962,63,"target"],[981,65,962,69],[981,67,962,71],[982,10,963,16],[982,14,963,20,"emptyStyles"],[982,25,963,31],[982,28,963,34],[982,29,963,35],[982,30,963,36],[983,10,964,16],[983,14,964,20],[983,18,964,24],[983,19,964,25,"options"],[983,26,964,32],[983,27,964,33,"layoutId"],[983,35,964,41],[983,37,964,43],[984,12,965,20,"emptyStyles"],[984,23,965,31],[984,24,965,32,"opacity"],[984,31,965,39],[984,34,965,42],[984,35,965,43,"_b"],[984,37,965,45],[984,40,965,48],[984,44,965,52],[984,45,965,53,"latestValues"],[984,57,965,65],[984,58,965,66,"opacity"],[984,65,965,73],[984,71,965,79],[984,75,965,83],[984,79,965,87,"_b"],[984,81,965,89],[984,86,965,94],[984,91,965,99],[984,92,965,100],[984,95,965,103,"_b"],[984,97,965,105],[984,100,965,108],[984,101,965,109],[985,12,966,20,"emptyStyles"],[985,23,966,31],[985,24,966,32,"pointerEvents"],[985,37,966,45],[985,40,967,24],[985,44,967,24,"resolveMotionValue"],[985,76,967,42],[985,77,967,42,"resolveMotionValue"],[985,95,967,42],[985,97,967,43,"styleProp"],[985,106,967,52],[985,107,967,53,"pointerEvents"],[985,120,967,66],[985,121,967,67],[985,125,967,71],[985,127,967,73],[986,10,968,16],[987,10,969,16],[987,14,969,20],[987,18,969,24],[987,19,969,25,"hasProjected"],[987,31,969,37],[987,35,969,41],[987,36,969,42],[987,40,969,42,"hasTransform"],[987,61,969,54],[987,62,969,54,"hasTransform"],[987,74,969,54],[987,76,969,55],[987,80,969,59],[987,81,969,60,"latestValues"],[987,93,969,72],[987,94,969,73],[987,96,969,75],[988,12,970,20,"emptyStyles"],[988,23,970,31],[988,24,970,32,"transform"],[988,33,970,41],[988,36,970,44,"transformTemplate"],[988,53,970,61],[988,56,971,26,"transformTemplate"],[988,73,971,43],[988,74,971,44],[988,75,971,45],[988,76,971,46],[988,78,971,48],[988,80,971,50],[988,81,971,51],[988,84,972,26],[988,90,972,32],[989,12,973,20],[989,16,973,24],[989,17,973,25,"hasProjected"],[989,29,973,37],[989,32,973,40],[989,37,973,45],[990,10,974,16],[991,10,975,16],[991,17,975,23,"emptyStyles"],[991,28,975,34],[992,8,976,12],[993,8,977,12],[993,12,977,16,"valuesToRender"],[993,26,977,30],[993,29,977,33,"lead"],[993,33,977,37],[993,34,977,38,"animationValues"],[993,49,977,53],[993,53,977,57,"lead"],[993,57,977,61],[993,58,977,62,"latestValues"],[993,70,977,74],[994,8,978,12],[994,12,978,16],[994,13,978,17,"applyTransformsToTarget"],[994,36,978,40],[994,37,978,41],[994,38,978,42],[995,8,979,12,"styles"],[995,14,979,18],[995,15,979,19,"transform"],[995,24,979,28],[995,27,979,31],[995,31,979,31,"buildProjectionTransform"],[995,50,979,55],[995,51,979,55,"buildProjectionTransform"],[995,75,979,55],[995,77,979,56],[995,81,979,60],[995,82,979,61,"projectionDeltaWithTransform"],[995,110,979,89],[995,112,979,91],[995,116,979,95],[995,117,979,96,"treeScale"],[995,126,979,105],[995,128,979,107,"valuesToRender"],[995,142,979,121],[995,143,979,122],[996,8,980,12],[996,12,980,16,"transformTemplate"],[996,29,980,33],[996,31,980,35],[997,10,981,16,"styles"],[997,16,981,22],[997,17,981,23,"transform"],[997,26,981,32],[997,29,981,35,"transformTemplate"],[997,46,981,52],[997,47,981,53,"valuesToRender"],[997,61,981,67],[997,63,981,69,"styles"],[997,69,981,75],[997,70,981,76,"transform"],[997,79,981,85],[997,80,981,86],[998,8,982,12],[999,8,983,12],[999,12,983,16,"_g"],[999,14,983,18],[999,17,983,21],[999,21,983,25],[999,22,983,26,"projectionDelta"],[999,37,983,41],[1000,10,983,43,"x"],[1000,11,983,44],[1000,14,983,47,"_g"],[1000,16,983,49],[1000,17,983,50,"x"],[1000,18,983,51],[1001,10,983,53,"y"],[1001,11,983,54],[1001,14,983,57,"_g"],[1001,16,983,59],[1001,17,983,60,"y"],[1001,18,983,61],[1002,8,984,12,"styles"],[1002,14,984,18],[1002,15,984,19,"transformOrigin"],[1002,30,984,34],[1002,33,984,37],[1002,35,984,39],[1002,36,984,40,"concat"],[1002,42,984,46],[1002,43,984,47,"x"],[1002,44,984,48],[1002,45,984,49,"origin"],[1002,51,984,55],[1002,54,984,58],[1002,57,984,61],[1002,59,984,63],[1002,63,984,67],[1002,64,984,68],[1002,65,984,69,"concat"],[1002,71,984,75],[1002,72,984,76,"y"],[1002,73,984,77],[1002,74,984,78,"origin"],[1002,80,984,84],[1002,83,984,87],[1002,86,984,90],[1002,88,984,92],[1002,93,984,97],[1002,94,984,98],[1003,8,985,12],[1003,12,985,16,"lead"],[1003,16,985,20],[1003,17,985,21,"animationValues"],[1003,32,985,36],[1003,34,985,38],[1004,10,986,16],[1005,0,987,0],[1006,0,988,0],[1007,0,989,0],[1008,10,990,16,"styles"],[1008,16,990,22],[1008,17,990,23,"opacity"],[1008,24,990,30],[1008,27,991,20,"lead"],[1008,31,991,24],[1008,36,991,29],[1008,40,991,33],[1008,43,992,26],[1008,44,992,27,"_d"],[1008,46,992,29],[1008,49,992,32],[1008,50,992,33,"_c"],[1008,52,992,35],[1008,55,992,38,"valuesToRender"],[1008,69,992,52],[1008,70,992,53,"opacity"],[1008,77,992,60],[1008,83,992,66],[1008,87,992,70],[1008,91,992,74,"_c"],[1008,93,992,76],[1008,98,992,81],[1008,103,992,86],[1008,104,992,87],[1008,107,992,90,"_c"],[1008,109,992,92],[1008,112,992,95],[1008,116,992,99],[1008,117,992,100,"latestValues"],[1008,129,992,112],[1008,130,992,113,"opacity"],[1008,137,992,120],[1008,143,992,126],[1008,147,992,130],[1008,151,992,134,"_d"],[1008,153,992,136],[1008,158,992,141],[1008,163,992,146],[1008,164,992,147],[1008,167,992,150,"_d"],[1008,169,992,152],[1008,172,992,155],[1008,173,992,156],[1008,176,993,26],[1008,180,993,30],[1008,181,993,31,"preserveOpacity"],[1008,196,993,46],[1008,199,994,30],[1008,203,994,34],[1008,204,994,35,"latestValues"],[1008,216,994,47],[1008,217,994,48,"opacity"],[1008,224,994,55],[1008,227,995,30,"valuesToRender"],[1008,241,995,44],[1008,242,995,45,"opacityExit"],[1008,253,995,56],[1009,8,996,12],[1009,9,996,13],[1009,15,997,17],[1010,10,998,16],[1011,0,999,0],[1012,0,1000,0],[1013,0,1001,0],[1014,10,1002,16,"styles"],[1014,16,1002,22],[1014,17,1002,23,"opacity"],[1014,24,1002,30],[1014,27,1003,20,"lead"],[1014,31,1003,24],[1014,36,1003,29],[1014,40,1003,33],[1014,43,1004,26],[1014,44,1004,27,"_e"],[1014,46,1004,29],[1014,49,1004,32,"valuesToRender"],[1014,63,1004,46],[1014,64,1004,47,"opacity"],[1014,71,1004,54],[1014,77,1004,60],[1014,81,1004,64],[1014,85,1004,68,"_e"],[1014,87,1004,70],[1014,92,1004,75],[1014,97,1004,80],[1014,98,1004,81],[1014,101,1004,84,"_e"],[1014,103,1004,86],[1014,106,1004,89],[1014,108,1004,91],[1014,111,1005,26],[1014,112,1005,27,"_f"],[1014,114,1005,29],[1014,117,1005,32,"valuesToRender"],[1014,131,1005,46],[1014,132,1005,47,"opacityExit"],[1014,143,1005,58],[1014,149,1005,64],[1014,153,1005,68],[1014,157,1005,72,"_f"],[1014,159,1005,74],[1014,164,1005,79],[1014,169,1005,84],[1014,170,1005,85],[1014,173,1005,88,"_f"],[1014,175,1005,90],[1014,178,1005,93],[1014,179,1005,94],[1015,8,1006,12],[1016,8,1007,12],[1017,0,1008,0],[1018,0,1009,0],[1019,8,1010,12],[1019,13,1010,17],[1019,17,1010,21,"key"],[1019,20,1010,24],[1019,24,1010,28,"scaleCorrectors"],[1019,49,1010,43],[1019,50,1010,43,"scaleCorrectors"],[1019,65,1010,43],[1019,67,1010,45],[1020,10,1011,16],[1020,14,1011,20,"valuesToRender"],[1020,28,1011,34],[1020,29,1011,35,"key"],[1020,32,1011,38],[1020,33,1011,39],[1020,38,1011,44,"undefined"],[1020,47,1011,53],[1020,49,1012,20],[1021,10,1013,16],[1021,14,1013,20,"_h"],[1021,16,1013,22],[1021,19,1013,25,"scaleCorrectors"],[1021,44,1013,40],[1021,45,1013,40,"scaleCorrectors"],[1021,60,1013,40],[1021,61,1013,41,"key"],[1021,64,1013,44],[1021,65,1013,45],[1022,12,1013,47,"correct"],[1022,19,1013,54],[1022,22,1013,57,"_h"],[1022,24,1013,59],[1022,25,1013,60,"correct"],[1022,32,1013,67],[1023,12,1013,69,"applyTo"],[1023,19,1013,76],[1023,22,1013,79,"_h"],[1023,24,1013,81],[1023,25,1013,82,"applyTo"],[1023,32,1013,89],[1024,10,1014,16],[1024,14,1014,20,"corrected"],[1024,23,1014,29],[1024,26,1014,32,"correct"],[1024,33,1014,39],[1024,34,1014,40,"valuesToRender"],[1024,48,1014,54],[1024,49,1014,55,"key"],[1024,52,1014,58],[1024,53,1014,59],[1024,55,1014,61,"lead"],[1024,59,1014,65],[1024,60,1014,66],[1025,10,1015,16],[1025,14,1015,20,"applyTo"],[1025,21,1015,27],[1025,23,1015,29],[1026,12,1016,20],[1026,16,1016,24,"num"],[1026,19,1016,27],[1026,22,1016,30,"applyTo"],[1026,29,1016,37],[1026,30,1016,38,"length"],[1026,36,1016,44],[1027,12,1017,20],[1027,17,1017,25],[1027,21,1017,29,"i"],[1027,22,1017,30],[1027,25,1017,33],[1027,26,1017,34],[1027,28,1017,36,"i"],[1027,29,1017,37],[1027,32,1017,40,"num"],[1027,35,1017,43],[1027,37,1017,45,"i"],[1027,38,1017,46],[1027,40,1017,48],[1027,42,1017,50],[1028,14,1018,24,"styles"],[1028,20,1018,30],[1028,21,1018,31,"applyTo"],[1028,28,1018,38],[1028,29,1018,39,"i"],[1028,30,1018,40],[1028,31,1018,41],[1028,32,1018,42],[1028,35,1018,45,"corrected"],[1028,44,1018,54],[1029,12,1019,20],[1030,10,1020,16],[1030,11,1020,17],[1030,17,1021,21],[1031,12,1022,20,"styles"],[1031,18,1022,26],[1031,19,1022,27,"key"],[1031,22,1022,30],[1031,23,1022,31],[1031,26,1022,34,"corrected"],[1031,35,1022,43],[1032,10,1023,16],[1033,8,1024,12],[1034,8,1025,12],[1035,0,1026,0],[1036,0,1027,0],[1037,0,1028,0],[1038,0,1029,0],[1039,8,1030,12],[1039,12,1030,16],[1039,16,1030,20],[1039,17,1030,21,"options"],[1039,24,1030,28],[1039,25,1030,29,"layoutId"],[1039,33,1030,37],[1039,35,1030,39],[1040,10,1031,16,"styles"],[1040,16,1031,22],[1040,17,1031,23,"pointerEvents"],[1040,30,1031,36],[1040,33,1032,20,"lead"],[1040,37,1032,24],[1040,42,1032,29],[1040,46,1032,33],[1040,49,1033,26],[1040,53,1033,26,"resolveMotionValue"],[1040,85,1033,44],[1040,86,1033,44,"resolveMotionValue"],[1040,104,1033,44],[1040,106,1033,45,"styleProp"],[1040,115,1033,54],[1040,116,1033,55,"pointerEvents"],[1040,129,1033,68],[1040,130,1033,69],[1040,134,1033,73],[1040,136,1033,75],[1040,139,1034,26],[1040,145,1034,32],[1041,8,1035,12],[1042,8,1036,12],[1042,15,1036,19,"styles"],[1042,21,1036,25],[1043,6,1037,8],[1043,7,1037,9],[1044,6,1038,8,"ProjectionNode"],[1044,20,1038,22],[1044,21,1038,23,"prototype"],[1044,30,1038,32],[1044,31,1038,33,"clearSnapshot"],[1044,44,1038,46],[1044,47,1038,49],[1044,59,1038,61],[1045,8,1039,12],[1045,12,1039,16],[1045,13,1039,17,"resumeFrom"],[1045,23,1039,27],[1045,26,1039,30],[1045,30,1039,34],[1045,31,1039,35,"snapshot"],[1045,39,1039,43],[1045,42,1039,46,"undefined"],[1045,51,1039,55],[1046,6,1040,8],[1046,7,1040,9],[1047,6,1041,8],[1048,6,1042,8,"ProjectionNode"],[1048,20,1042,22],[1048,21,1042,23,"prototype"],[1048,30,1042,32],[1048,31,1042,33,"resetTree"],[1048,40,1042,42],[1048,43,1042,45],[1048,55,1042,57],[1049,8,1043,12],[1049,12,1043,16],[1049,13,1043,17,"root"],[1049,17,1043,21],[1049,18,1043,22,"nodes"],[1049,23,1043,27],[1049,24,1043,28,"forEach"],[1049,31,1043,35],[1049,32,1043,36],[1049,42,1043,46,"node"],[1049,46,1043,50],[1049,48,1043,52],[1050,10,1043,54],[1050,14,1043,58,"_a"],[1050,16,1043,60],[1051,10,1043,62],[1051,17,1043,69],[1051,18,1043,70,"_a"],[1051,20,1043,72],[1051,23,1043,75,"node"],[1051,27,1043,79],[1051,28,1043,80,"currentAnimation"],[1051,44,1043,96],[1051,50,1043,102],[1051,54,1043,106],[1051,58,1043,110,"_a"],[1051,60,1043,112],[1051,65,1043,117],[1051,70,1043,122],[1051,71,1043,123],[1051,74,1043,126],[1051,79,1043,131],[1051,80,1043,132],[1051,83,1043,135,"_a"],[1051,85,1043,137],[1051,86,1043,138,"stop"],[1051,90,1043,142],[1051,91,1043,143],[1051,92,1043,144],[1052,8,1043,146],[1052,9,1043,147],[1052,10,1043,148],[1053,8,1044,12],[1053,12,1044,16],[1053,13,1044,17,"root"],[1053,17,1044,21],[1053,18,1044,22,"nodes"],[1053,23,1044,27],[1053,24,1044,28,"forEach"],[1053,31,1044,35],[1053,32,1044,36,"clearMeasurements"],[1053,49,1044,53],[1053,50,1044,54],[1054,8,1045,12],[1054,12,1045,16],[1054,13,1045,17,"root"],[1054,17,1045,21],[1054,18,1045,22,"sharedNodes"],[1054,29,1045,33],[1054,30,1045,34,"clear"],[1054,35,1045,39],[1054,36,1045,40],[1054,37,1045,41],[1055,6,1046,8],[1055,7,1046,9],[1056,6,1047,8],[1056,13,1047,15,"ProjectionNode"],[1056,27,1047,29],[1057,4,1048,4],[1057,5,1048,5],[1057,6,1048,6],[1057,7,1048,7],[1058,2,1049,0],[1059,2,1050,0],[1059,11,1050,9,"updateLayout"],[1059,23,1050,21,"updateLayout"],[1059,24,1050,22,"node"],[1059,28,1050,26],[1059,30,1050,28],[1060,4,1051,4,"node"],[1060,8,1051,8],[1060,9,1051,9,"updateLayout"],[1060,21,1051,21],[1060,22,1051,22],[1060,23,1051,23],[1061,2,1052,0],[1062,2,1053,0],[1062,11,1053,9,"notifyLayoutUpdate"],[1062,29,1053,27,"notifyLayoutUpdate"],[1062,30,1053,28,"node"],[1062,34,1053,32],[1062,36,1053,34],[1063,4,1054,4],[1063,8,1054,8,"_a"],[1063,10,1054,10],[1063,12,1054,12,"_b"],[1063,14,1054,14],[1063,16,1054,16,"_c"],[1063,18,1054,18],[1063,20,1054,20,"_d"],[1063,22,1054,22],[1064,4,1055,4],[1064,8,1055,8,"snapshot"],[1064,16,1055,16],[1064,19,1055,19],[1064,20,1055,20,"_b"],[1064,22,1055,22],[1064,25,1055,25],[1064,26,1055,26,"_a"],[1064,28,1055,28],[1064,31,1055,31,"node"],[1064,35,1055,35],[1064,36,1055,36,"resumeFrom"],[1064,46,1055,46],[1064,52,1055,52],[1064,56,1055,56],[1064,60,1055,60,"_a"],[1064,62,1055,62],[1064,67,1055,67],[1064,72,1055,72],[1064,73,1055,73],[1064,76,1055,76],[1064,81,1055,81],[1064,82,1055,82],[1064,85,1055,85,"_a"],[1064,87,1055,87],[1064,88,1055,88,"snapshot"],[1064,96,1055,96],[1064,102,1055,102],[1064,106,1055,106],[1064,110,1055,110,"_b"],[1064,112,1055,112],[1064,117,1055,117],[1064,122,1055,122],[1064,123,1055,123],[1064,126,1055,126,"_b"],[1064,128,1055,128],[1064,131,1055,131,"node"],[1064,135,1055,135],[1064,136,1055,136,"snapshot"],[1064,144,1055,144],[1065,4,1056,4],[1065,8,1056,8,"node"],[1065,12,1056,12],[1065,13,1056,13,"isLead"],[1065,19,1056,19],[1065,20,1056,20],[1065,21,1056,21],[1065,25,1057,8,"node"],[1065,29,1057,12],[1065,30,1057,13,"layout"],[1065,36,1057,19],[1065,40,1058,8,"snapshot"],[1065,48,1058,16],[1065,52,1059,8,"node"],[1065,56,1059,12],[1065,57,1059,13,"hasListeners"],[1065,69,1059,25],[1065,70,1059,26],[1065,81,1059,37],[1065,82,1059,38],[1065,84,1059,40],[1066,6,1060,8],[1066,10,1060,12,"_e"],[1066,12,1060,14],[1066,15,1060,17,"node"],[1066,19,1060,21],[1066,20,1060,22,"layout"],[1066,26,1060,28],[1067,8,1060,30,"layout_1"],[1067,16,1060,38],[1067,19,1060,41,"_e"],[1067,21,1060,43],[1067,22,1060,44,"actual"],[1067,28,1060,50],[1068,8,1060,52,"measuredLayout"],[1068,22,1060,66],[1068,25,1060,69,"_e"],[1068,27,1060,71],[1068,28,1060,72,"measured"],[1068,36,1060,80],[1069,6,1061,8],[1070,6,1062,8],[1071,6,1063,8],[1071,10,1063,12,"node"],[1071,14,1063,16],[1071,15,1063,17,"options"],[1071,22,1063,24],[1071,23,1063,25,"animationType"],[1071,36,1063,38],[1071,41,1063,43],[1071,47,1063,49],[1071,49,1063,51],[1072,8,1064,12],[1072,12,1064,12,"eachAxis"],[1072,29,1064,20],[1072,30,1064,20,"eachAxis"],[1072,38,1064,20],[1072,40,1064,21],[1072,50,1064,31,"axis"],[1072,54,1064,35],[1072,56,1064,37],[1073,10,1065,16],[1073,14,1065,20,"axisSnapshot"],[1073,26,1065,32],[1073,29,1065,35,"snapshot"],[1073,37,1065,43],[1073,38,1065,44,"isShared"],[1073,46,1065,52],[1073,49,1066,22,"snapshot"],[1073,57,1066,30],[1073,58,1066,31,"measured"],[1073,66,1066,39],[1073,67,1066,40,"axis"],[1073,71,1066,44],[1073,72,1066,45],[1073,75,1067,22,"snapshot"],[1073,83,1067,30],[1073,84,1067,31,"layout"],[1073,90,1067,37],[1073,91,1067,38,"axis"],[1073,95,1067,42],[1073,96,1067,43],[1074,10,1068,16],[1074,14,1068,20,"length"],[1074,20,1068,26],[1074,23,1068,29],[1074,27,1068,29,"calcLength"],[1074,48,1068,39],[1074,49,1068,39,"calcLength"],[1074,59,1068,39],[1074,61,1068,40,"axisSnapshot"],[1074,73,1068,52],[1074,74,1068,53],[1075,10,1069,16,"axisSnapshot"],[1075,22,1069,28],[1075,23,1069,29,"min"],[1075,26,1069,32],[1075,29,1069,35,"layout_1"],[1075,37,1069,43],[1075,38,1069,44,"axis"],[1075,42,1069,48],[1075,43,1069,49],[1075,44,1069,50,"min"],[1075,47,1069,53],[1076,10,1070,16,"axisSnapshot"],[1076,22,1070,28],[1076,23,1070,29,"max"],[1076,26,1070,32],[1076,29,1070,35,"axisSnapshot"],[1076,41,1070,47],[1076,42,1070,48,"min"],[1076,45,1070,51],[1076,48,1070,54,"length"],[1076,54,1070,60],[1077,8,1071,12],[1077,9,1071,13],[1077,10,1071,14],[1078,6,1072,8],[1078,7,1072,9],[1078,13,1073,13],[1078,17,1073,17,"node"],[1078,21,1073,21],[1078,22,1073,22,"options"],[1078,29,1073,29],[1078,30,1073,30,"animationType"],[1078,43,1073,43],[1078,48,1073,48],[1078,58,1073,58],[1078,60,1073,60],[1079,8,1074,12],[1079,12,1074,12,"eachAxis"],[1079,29,1074,20],[1079,30,1074,20,"eachAxis"],[1079,38,1074,20],[1079,40,1074,21],[1079,50,1074,31,"axis"],[1079,54,1074,35],[1079,56,1074,37],[1080,10,1075,16],[1080,14,1075,20,"axisSnapshot"],[1080,26,1075,32],[1080,29,1075,35,"snapshot"],[1080,37,1075,43],[1080,38,1075,44,"isShared"],[1080,46,1075,52],[1080,49,1076,22,"snapshot"],[1080,57,1076,30],[1080,58,1076,31,"measured"],[1080,66,1076,39],[1080,67,1076,40,"axis"],[1080,71,1076,44],[1080,72,1076,45],[1080,75,1077,22,"snapshot"],[1080,83,1077,30],[1080,84,1077,31,"layout"],[1080,90,1077,37],[1080,91,1077,38,"axis"],[1080,95,1077,42],[1080,96,1077,43],[1081,10,1078,16],[1081,14,1078,20,"length"],[1081,20,1078,26],[1081,23,1078,29],[1081,27,1078,29,"calcLength"],[1081,48,1078,39],[1081,49,1078,39,"calcLength"],[1081,59,1078,39],[1081,61,1078,40,"layout_1"],[1081,69,1078,48],[1081,70,1078,49,"axis"],[1081,74,1078,53],[1081,75,1078,54],[1081,76,1078,55],[1082,10,1079,16,"axisSnapshot"],[1082,22,1079,28],[1082,23,1079,29,"max"],[1082,26,1079,32],[1082,29,1079,35,"axisSnapshot"],[1082,41,1079,47],[1082,42,1079,48,"min"],[1082,45,1079,51],[1082,48,1079,54,"length"],[1082,54,1079,60],[1083,8,1080,12],[1083,9,1080,13],[1083,10,1080,14],[1084,6,1081,8],[1085,6,1082,8],[1085,10,1082,12,"layoutDelta"],[1085,21,1082,23],[1085,24,1082,26],[1085,28,1082,26,"createDelta"],[1085,46,1082,37],[1085,47,1082,37,"createDelta"],[1085,58,1082,37],[1085,60,1082,38],[1085,61,1082,39],[1086,6,1083,8],[1086,10,1083,8,"calcBoxDelta"],[1086,31,1083,20],[1086,32,1083,20,"calcBoxDelta"],[1086,44,1083,20],[1086,46,1083,21,"layoutDelta"],[1086,57,1083,32],[1086,59,1083,34,"layout_1"],[1086,67,1083,42],[1086,69,1083,44,"snapshot"],[1086,77,1083,52],[1086,78,1083,53,"layout"],[1086,84,1083,59],[1086,85,1083,60],[1087,6,1084,8],[1087,10,1084,12,"visualDelta"],[1087,21,1084,23],[1087,24,1084,26],[1087,28,1084,26,"createDelta"],[1087,46,1084,37],[1087,47,1084,37,"createDelta"],[1087,58,1084,37],[1087,60,1084,38],[1087,61,1084,39],[1088,6,1085,8],[1088,10,1085,12,"snapshot"],[1088,18,1085,20],[1088,19,1085,21,"isShared"],[1088,27,1085,29],[1088,29,1085,31],[1089,8,1086,12],[1089,12,1086,12,"calcBoxDelta"],[1089,33,1086,24],[1089,34,1086,24,"calcBoxDelta"],[1089,46,1086,24],[1089,48,1086,25,"visualDelta"],[1089,59,1086,36],[1089,61,1086,38,"node"],[1089,65,1086,42],[1089,66,1086,43,"applyTransform"],[1089,80,1086,57],[1089,81,1086,58,"measuredLayout"],[1089,95,1086,72],[1089,97,1086,74],[1089,101,1086,78],[1089,102,1086,79],[1089,104,1086,81,"snapshot"],[1089,112,1086,89],[1089,113,1086,90,"measured"],[1089,121,1086,98],[1089,122,1086,99],[1090,6,1087,8],[1090,7,1087,9],[1090,13,1088,13],[1091,8,1089,12],[1091,12,1089,12,"calcBoxDelta"],[1091,33,1089,24],[1091,34,1089,24,"calcBoxDelta"],[1091,46,1089,24],[1091,48,1089,25,"visualDelta"],[1091,59,1089,36],[1091,61,1089,38,"layout_1"],[1091,69,1089,46],[1091,71,1089,48,"snapshot"],[1091,79,1089,56],[1091,80,1089,57,"layout"],[1091,86,1089,63],[1091,87,1089,64],[1092,6,1090,8],[1093,6,1091,8],[1093,10,1091,12,"hasLayoutChanged"],[1093,26,1091,28],[1093,29,1091,31],[1093,30,1091,32],[1093,34,1091,32,"isDeltaZero"],[1093,51,1091,43],[1093,52,1091,43,"isDeltaZero"],[1093,63,1091,43],[1093,65,1091,44,"layoutDelta"],[1093,76,1091,55],[1093,77,1091,56],[1094,6,1092,8],[1094,10,1092,12,"hasRelativeTargetChanged"],[1094,34,1092,36],[1094,37,1092,39],[1094,42,1092,44],[1095,6,1093,8],[1095,10,1093,12],[1095,11,1093,13,"node"],[1095,15,1093,17],[1095,16,1093,18,"resumeFrom"],[1095,26,1093,28],[1095,28,1093,30],[1096,8,1094,12,"node"],[1096,12,1094,16],[1096,13,1094,17,"relativeParent"],[1096,27,1094,31],[1096,30,1094,34,"node"],[1096,34,1094,38],[1096,35,1094,39,"getClosestProjectingParent"],[1096,61,1094,65],[1096,62,1094,66],[1096,63,1094,67],[1097,8,1095,12],[1098,0,1096,0],[1099,0,1097,0],[1100,0,1098,0],[1101,8,1099,12],[1101,12,1099,16,"node"],[1101,16,1099,20],[1101,17,1099,21,"relativeParent"],[1101,31,1099,35],[1101,35,1099,39],[1101,36,1099,40,"node"],[1101,40,1099,44],[1101,41,1099,45,"relativeParent"],[1101,55,1099,59],[1101,56,1099,60,"resumeFrom"],[1101,66,1099,70],[1101,68,1099,72],[1102,10,1100,16],[1102,14,1100,20,"_f"],[1102,16,1100,22],[1102,19,1100,25,"node"],[1102,23,1100,29],[1102,24,1100,30,"relativeParent"],[1102,38,1100,44],[1103,12,1100,46,"parentSnapshot"],[1103,26,1100,60],[1103,29,1100,63,"_f"],[1103,31,1100,65],[1103,32,1100,66,"snapshot"],[1103,40,1100,74],[1104,12,1100,76,"parentLayout"],[1104,24,1100,88],[1104,27,1100,91,"_f"],[1104,29,1100,93],[1104,30,1100,94,"layout"],[1104,36,1100,100],[1105,10,1101,16],[1105,14,1101,20,"parentSnapshot"],[1105,28,1101,34],[1105,32,1101,38,"parentLayout"],[1105,44,1101,50],[1105,46,1101,52],[1106,12,1102,20],[1106,16,1102,24,"relativeSnapshot"],[1106,32,1102,40],[1106,35,1102,43],[1106,39,1102,43,"createBox"],[1106,57,1102,52],[1106,58,1102,52,"createBox"],[1106,67,1102,52],[1106,69,1102,53],[1106,70,1102,54],[1107,12,1103,20],[1107,16,1103,20,"calcRelativePosition"],[1107,37,1103,40],[1107,38,1103,40,"calcRelativePosition"],[1107,58,1103,40],[1107,60,1103,41,"relativeSnapshot"],[1107,76,1103,57],[1107,78,1103,59,"snapshot"],[1107,86,1103,67],[1107,87,1103,68,"layout"],[1107,93,1103,74],[1107,95,1103,76,"parentSnapshot"],[1107,109,1103,90],[1107,110,1103,91,"layout"],[1107,116,1103,97],[1107,117,1103,98],[1108,12,1104,20],[1108,16,1104,24,"relativeLayout"],[1108,30,1104,38],[1108,33,1104,41],[1108,37,1104,41,"createBox"],[1108,55,1104,50],[1108,56,1104,50,"createBox"],[1108,65,1104,50],[1108,67,1104,51],[1108,68,1104,52],[1109,12,1105,20],[1109,16,1105,20,"calcRelativePosition"],[1109,37,1105,40],[1109,38,1105,40,"calcRelativePosition"],[1109,58,1105,40],[1109,60,1105,41,"relativeLayout"],[1109,74,1105,55],[1109,76,1105,57,"layout_1"],[1109,84,1105,65],[1109,86,1105,67,"parentLayout"],[1109,98,1105,79],[1109,99,1105,80,"actual"],[1109,105,1105,86],[1109,106,1105,87],[1110,12,1106,20],[1110,16,1106,24],[1110,17,1106,25],[1110,21,1106,25,"boxEquals"],[1110,38,1106,34],[1110,39,1106,34,"boxEquals"],[1110,48,1106,34],[1110,50,1106,35,"relativeSnapshot"],[1110,66,1106,51],[1110,68,1106,53,"relativeLayout"],[1110,82,1106,67],[1110,83,1106,68],[1110,85,1106,70],[1111,14,1107,24,"hasRelativeTargetChanged"],[1111,38,1107,48],[1111,41,1107,51],[1111,45,1107,55],[1112,12,1108,20],[1113,10,1109,16],[1114,8,1110,12],[1115,6,1111,8],[1116,6,1112,8,"node"],[1116,10,1112,12],[1116,11,1112,13,"notifyListeners"],[1116,26,1112,28],[1116,27,1112,29],[1116,38,1112,40],[1116,40,1112,42],[1117,8,1113,12,"layout"],[1117,14,1113,18],[1117,16,1113,20,"layout_1"],[1117,24,1113,28],[1118,8,1114,12,"snapshot"],[1118,16,1114,20],[1118,18,1114,22,"snapshot"],[1118,26,1114,30],[1119,8,1115,12,"delta"],[1119,13,1115,17],[1119,15,1115,19,"visualDelta"],[1119,26,1115,30],[1120,8,1116,12,"layoutDelta"],[1120,19,1116,23],[1120,21,1116,25,"layoutDelta"],[1120,32,1116,36],[1121,8,1117,12,"hasLayoutChanged"],[1121,24,1117,28],[1121,26,1117,30,"hasLayoutChanged"],[1121,42,1117,46],[1122,8,1118,12,"hasRelativeTargetChanged"],[1122,32,1118,36],[1122,34,1118,38,"hasRelativeTargetChanged"],[1123,6,1119,8],[1123,7,1119,9],[1123,8,1119,10],[1124,4,1120,4],[1124,5,1120,5],[1124,11,1121,9],[1124,15,1121,13,"node"],[1124,19,1121,17],[1124,20,1121,18,"isLead"],[1124,26,1121,24],[1124,27,1121,25],[1124,28,1121,26],[1124,30,1121,28],[1125,6,1122,8],[1125,7,1122,9,"_d"],[1125,9,1122,11],[1125,12,1122,14],[1125,13,1122,15,"_c"],[1125,15,1122,17],[1125,18,1122,20,"node"],[1125,22,1122,24],[1125,23,1122,25,"options"],[1125,30,1122,32],[1125,32,1122,34,"onExitComplete"],[1125,46,1122,48],[1125,52,1122,54],[1125,56,1122,58],[1125,60,1122,62,"_d"],[1125,62,1122,64],[1125,67,1122,69],[1125,72,1122,74],[1125,73,1122,75],[1125,76,1122,78],[1125,81,1122,83],[1125,82,1122,84],[1125,85,1122,87,"_d"],[1125,87,1122,89],[1125,88,1122,90,"call"],[1125,92,1122,94],[1125,93,1122,95,"_c"],[1125,95,1122,97],[1125,96,1122,98],[1126,4,1123,4],[1127,4,1124,4],[1128,0,1125,0],[1129,0,1126,0],[1130,0,1127,0],[1131,0,1128,0],[1132,4,1129,4,"node"],[1132,8,1129,8],[1132,9,1129,9,"options"],[1132,16,1129,16],[1132,17,1129,17,"transition"],[1132,27,1129,27],[1132,30,1129,30,"undefined"],[1132,39,1129,39],[1133,2,1130,0],[1134,2,1131,0],[1134,11,1131,9,"clearSnapshot"],[1134,24,1131,22,"clearSnapshot"],[1134,25,1131,23,"node"],[1134,29,1131,27],[1134,31,1131,29],[1135,4,1132,4,"node"],[1135,8,1132,8],[1135,9,1132,9,"clearSnapshot"],[1135,22,1132,22],[1135,23,1132,23],[1135,24,1132,24],[1136,2,1133,0],[1137,2,1134,0],[1137,11,1134,9,"clearMeasurements"],[1137,28,1134,26,"clearMeasurements"],[1137,29,1134,27,"node"],[1137,33,1134,31],[1137,35,1134,33],[1138,4,1135,4,"node"],[1138,8,1135,8],[1138,9,1135,9,"clearMeasurements"],[1138,26,1135,26],[1138,27,1135,27],[1138,28,1135,28],[1139,2,1136,0],[1140,2,1137,0],[1140,11,1137,9,"resetTransformStyle"],[1140,30,1137,28,"resetTransformStyle"],[1140,31,1137,29,"node"],[1140,35,1137,33],[1140,37,1137,35],[1141,4,1138,4],[1141,8,1138,8,"visualElement"],[1141,21,1138,21],[1141,24,1138,24,"node"],[1141,28,1138,28],[1141,29,1138,29,"options"],[1141,36,1138,36],[1141,37,1138,37,"visualElement"],[1141,50,1138,50],[1142,4,1139,4],[1142,8,1139,8,"visualElement"],[1142,21,1139,21],[1142,26,1139,26],[1142,30,1139,30],[1142,34,1139,34,"visualElement"],[1142,47,1139,47],[1142,52,1139,52],[1142,57,1139,57],[1142,58,1139,58],[1142,61,1139,61],[1142,66,1139,66],[1142,67,1139,67],[1142,70,1139,70,"visualElement"],[1142,83,1139,83],[1142,84,1139,84,"getProps"],[1142,92,1139,92],[1142,93,1139,93],[1142,94,1139,94],[1142,95,1139,95,"onBeforeLayoutMeasure"],[1142,116,1139,116],[1142,118,1139,118],[1143,6,1140,8,"visualElement"],[1143,19,1140,21],[1143,20,1140,22,"notifyBeforeLayoutMeasure"],[1143,45,1140,47],[1143,46,1140,48],[1143,47,1140,49],[1144,4,1141,4],[1145,4,1142,4,"node"],[1145,8,1142,8],[1145,9,1142,9,"resetTransform"],[1145,23,1142,23],[1145,24,1142,24],[1145,25,1142,25],[1146,2,1143,0],[1147,2,1144,0],[1147,11,1144,9,"finishAnimation"],[1147,26,1144,24,"finishAnimation"],[1147,27,1144,25,"node"],[1147,31,1144,29],[1147,33,1144,31],[1148,4,1145,4,"node"],[1148,8,1145,8],[1148,9,1145,9,"finishAnimation"],[1148,24,1145,24],[1148,25,1145,25],[1148,26,1145,26],[1149,4,1146,4,"node"],[1149,8,1146,8],[1149,9,1146,9,"targetDelta"],[1149,20,1146,20],[1149,23,1146,23,"node"],[1149,27,1146,27],[1149,28,1146,28,"relativeTarget"],[1149,42,1146,42],[1149,45,1146,45,"node"],[1149,49,1146,49],[1149,50,1146,50,"target"],[1149,56,1146,56],[1149,59,1146,59,"undefined"],[1149,68,1146,68],[1150,2,1147,0],[1151,2,1148,0],[1151,11,1148,9,"resolveTargetDelta"],[1151,29,1148,27,"resolveTargetDelta"],[1151,30,1148,28,"node"],[1151,34,1148,32],[1151,36,1148,34],[1152,4,1149,4,"node"],[1152,8,1149,8],[1152,9,1149,9,"resolveTargetDelta"],[1152,27,1149,27],[1152,28,1149,28],[1152,29,1149,29],[1153,2,1150,0],[1154,2,1151,0],[1154,11,1151,9,"calcProjection"],[1154,25,1151,23,"calcProjection"],[1154,26,1151,24,"node"],[1154,30,1151,28],[1154,32,1151,30],[1155,4,1152,4,"node"],[1155,8,1152,8],[1155,9,1152,9,"calcProjection"],[1155,23,1152,23],[1155,24,1152,24],[1155,25,1152,25],[1156,2,1153,0],[1157,2,1154,0],[1157,11,1154,9,"resetRotation"],[1157,24,1154,22,"resetRotation"],[1157,25,1154,23,"node"],[1157,29,1154,27],[1157,31,1154,29],[1158,4,1155,4,"node"],[1158,8,1155,8],[1158,9,1155,9,"resetRotation"],[1158,22,1155,22],[1158,23,1155,23],[1158,24,1155,24],[1159,2,1156,0],[1160,2,1157,0],[1160,11,1157,9,"removeLeadSnapshots"],[1160,30,1157,28,"removeLeadSnapshots"],[1160,31,1157,29,"stack"],[1160,36,1157,34],[1160,38,1157,36],[1161,4,1158,4,"stack"],[1161,9,1158,9],[1161,10,1158,10,"removeLeadSnapshot"],[1161,28,1158,28],[1161,29,1158,29],[1161,30,1158,30],[1162,2,1159,0],[1163,2,1160,0],[1163,11,1160,9,"mixAxisDelta"],[1163,23,1160,21,"mixAxisDelta"],[1163,24,1160,22,"output"],[1163,30,1160,28],[1163,32,1160,30,"delta"],[1163,37,1160,35],[1163,39,1160,37,"p"],[1163,40,1160,38],[1163,42,1160,40],[1164,4,1161,4,"output"],[1164,10,1161,10],[1164,11,1161,11,"translate"],[1164,20,1161,20],[1164,23,1161,23],[1164,27,1161,23,"mix"],[1164,37,1161,26],[1164,38,1161,26,"mix"],[1164,41,1161,26],[1164,43,1161,27,"delta"],[1164,48,1161,32],[1164,49,1161,33,"translate"],[1164,58,1161,42],[1164,60,1161,44],[1164,61,1161,45],[1164,63,1161,47,"p"],[1164,64,1161,48],[1164,65,1161,49],[1165,4,1162,4,"output"],[1165,10,1162,10],[1165,11,1162,11,"scale"],[1165,16,1162,16],[1165,19,1162,19],[1165,23,1162,19,"mix"],[1165,33,1162,22],[1165,34,1162,22,"mix"],[1165,37,1162,22],[1165,39,1162,23,"delta"],[1165,44,1162,28],[1165,45,1162,29,"scale"],[1165,50,1162,34],[1165,52,1162,36],[1165,53,1162,37],[1165,55,1162,39,"p"],[1165,56,1162,40],[1165,57,1162,41],[1166,4,1163,4,"output"],[1166,10,1163,10],[1166,11,1163,11,"origin"],[1166,17,1163,17],[1166,20,1163,20,"delta"],[1166,25,1163,25],[1166,26,1163,26,"origin"],[1166,32,1163,32],[1167,4,1164,4,"output"],[1167,10,1164,10],[1167,11,1164,11,"originPoint"],[1167,22,1164,22],[1167,25,1164,25,"delta"],[1167,30,1164,30],[1167,31,1164,31,"originPoint"],[1167,42,1164,42],[1168,2,1165,0],[1169,2,1166,0],[1169,11,1166,9,"mixAxis"],[1169,18,1166,16,"mixAxis"],[1169,19,1166,17,"output"],[1169,25,1166,23],[1169,27,1166,25,"from"],[1169,31,1166,29],[1169,33,1166,31,"to"],[1169,35,1166,33],[1169,37,1166,35,"p"],[1169,38,1166,36],[1169,40,1166,38],[1170,4,1167,4,"output"],[1170,10,1167,10],[1170,11,1167,11,"min"],[1170,14,1167,14],[1170,17,1167,17],[1170,21,1167,17,"mix"],[1170,31,1167,20],[1170,32,1167,20,"mix"],[1170,35,1167,20],[1170,37,1167,21,"from"],[1170,41,1167,25],[1170,42,1167,26,"min"],[1170,45,1167,29],[1170,47,1167,31,"to"],[1170,49,1167,33],[1170,50,1167,34,"min"],[1170,53,1167,37],[1170,55,1167,39,"p"],[1170,56,1167,40],[1170,57,1167,41],[1171,4,1168,4,"output"],[1171,10,1168,10],[1171,11,1168,11,"max"],[1171,14,1168,14],[1171,17,1168,17],[1171,21,1168,17,"mix"],[1171,31,1168,20],[1171,32,1168,20,"mix"],[1171,35,1168,20],[1171,37,1168,21,"from"],[1171,41,1168,25],[1171,42,1168,26,"max"],[1171,45,1168,29],[1171,47,1168,31,"to"],[1171,49,1168,33],[1171,50,1168,34,"max"],[1171,53,1168,37],[1171,55,1168,39,"p"],[1171,56,1168,40],[1171,57,1168,41],[1172,2,1169,0],[1173,2,1170,0],[1173,11,1170,9,"mixBox"],[1173,17,1170,15,"mixBox"],[1173,18,1170,16,"output"],[1173,24,1170,22],[1173,26,1170,24,"from"],[1173,30,1170,28],[1173,32,1170,30,"to"],[1173,34,1170,32],[1173,36,1170,34,"p"],[1173,37,1170,35],[1173,39,1170,37],[1174,4,1171,4,"mixAxis"],[1174,11,1171,11],[1174,12,1171,12,"output"],[1174,18,1171,18],[1174,19,1171,19,"x"],[1174,20,1171,20],[1174,22,1171,22,"from"],[1174,26,1171,26],[1174,27,1171,27,"x"],[1174,28,1171,28],[1174,30,1171,30,"to"],[1174,32,1171,32],[1174,33,1171,33,"x"],[1174,34,1171,34],[1174,36,1171,36,"p"],[1174,37,1171,37],[1174,38,1171,38],[1175,4,1172,4,"mixAxis"],[1175,11,1172,11],[1175,12,1172,12,"output"],[1175,18,1172,18],[1175,19,1172,19,"y"],[1175,20,1172,20],[1175,22,1172,22,"from"],[1175,26,1172,26],[1175,27,1172,27,"y"],[1175,28,1172,28],[1175,30,1172,30,"to"],[1175,32,1172,32],[1175,33,1172,33,"y"],[1175,34,1172,34],[1175,36,1172,36,"p"],[1175,37,1172,37],[1175,38,1172,38],[1176,2,1173,0],[1177,2,1174,0],[1177,11,1174,9,"hasOpacityCrossfade"],[1177,30,1174,28,"hasOpacityCrossfade"],[1177,31,1174,29,"node"],[1177,35,1174,33],[1177,37,1174,35],[1178,4,1175,4],[1178,11,1175,12,"node"],[1178,15,1175,16],[1178,16,1175,17,"animationValues"],[1178,31,1175,32],[1178,35,1175,36,"node"],[1178,39,1175,40],[1178,40,1175,41,"animationValues"],[1178,55,1175,56],[1178,56,1175,57,"opacityExit"],[1178,67,1175,68],[1178,72,1175,73,"undefined"],[1178,81,1175,82],[1179,2,1176,0],[1180,2,1177,0],[1180,6,1177,4,"defaultLayoutTransition"],[1180,29,1177,27],[1180,32,1177,30],[1181,4,1178,4,"duration"],[1181,12,1178,12],[1181,14,1178,14],[1181,18,1178,18],[1182,4,1179,4,"ease"],[1182,8,1179,8],[1182,10,1179,10],[1182,11,1179,11],[1182,14,1179,14],[1182,16,1179,16],[1182,17,1179,17],[1182,19,1179,19],[1182,22,1179,22],[1182,24,1179,24],[1182,25,1179,25],[1183,2,1180,0],[1183,3,1180,1],[1184,2,1181,0],[1184,11,1181,9,"mountNodeEarly"],[1184,25,1181,23,"mountNodeEarly"],[1184,26,1181,24,"node"],[1184,30,1181,28],[1184,32,1181,30,"id"],[1184,34,1181,32],[1184,36,1181,34],[1185,4,1182,4],[1186,0,1183,0],[1187,0,1184,0],[1188,0,1185,0],[1189,4,1186,4],[1189,8,1186,8,"searchNode"],[1189,18,1186,18],[1189,21,1186,21,"node"],[1189,25,1186,25],[1189,26,1186,26,"root"],[1189,30,1186,30],[1190,4,1187,4],[1190,9,1187,9],[1190,13,1187,13,"i"],[1190,14,1187,14],[1190,17,1187,17,"node"],[1190,21,1187,21],[1190,22,1187,22,"path"],[1190,26,1187,26],[1190,27,1187,27,"length"],[1190,33,1187,33],[1190,36,1187,36],[1190,37,1187,37],[1190,39,1187,39,"i"],[1190,40,1187,40],[1190,44,1187,44],[1190,45,1187,45],[1190,47,1187,47,"i"],[1190,48,1187,48],[1190,50,1187,50],[1190,52,1187,52],[1191,6,1188,8],[1191,10,1188,12,"Boolean"],[1191,17,1188,19],[1191,18,1188,20,"node"],[1191,22,1188,24],[1191,23,1188,25,"path"],[1191,27,1188,29],[1191,28,1188,30,"i"],[1191,29,1188,31],[1191,30,1188,32],[1191,31,1188,33,"instance"],[1191,39,1188,41],[1191,40,1188,42],[1191,42,1188,44],[1192,8,1189,12,"searchNode"],[1192,18,1189,22],[1192,21,1189,25,"node"],[1192,25,1189,29],[1192,26,1189,30,"path"],[1192,30,1189,34],[1192,31,1189,35,"i"],[1192,32,1189,36],[1192,33,1189,37],[1193,8,1190,12],[1194,6,1191,8],[1195,4,1192,4],[1196,4,1193,4],[1196,8,1193,8,"searchElement"],[1196,21,1193,21],[1196,24,1193,24,"searchNode"],[1196,34,1193,34],[1196,38,1193,38,"searchNode"],[1196,48,1193,48],[1196,53,1193,53,"node"],[1196,57,1193,57],[1196,58,1193,58,"root"],[1196,62,1193,62],[1196,65,1193,65,"searchNode"],[1196,75,1193,75],[1196,76,1193,76,"instance"],[1196,84,1193,84],[1196,87,1193,87,"document"],[1196,95,1193,95],[1197,4,1194,4],[1197,8,1194,8,"element"],[1197,15,1194,15],[1197,18,1194,18,"searchElement"],[1197,31,1194,31],[1197,32,1194,32,"querySelector"],[1197,45,1194,45],[1197,46,1194,46],[1197,70,1194,70],[1197,71,1194,71,"concat"],[1197,77,1194,77],[1197,78,1194,78,"id"],[1197,80,1194,80],[1197,82,1194,82],[1197,87,1194,87],[1197,88,1194,88],[1197,89,1194,89],[1198,4,1195,4],[1198,8,1195,8,"element"],[1198,15,1195,15],[1198,17,1196,8,"node"],[1198,21,1196,12],[1198,22,1196,13,"mount"],[1198,27,1196,18],[1198,28,1196,19,"element"],[1198,35,1196,26],[1198,37,1196,28],[1198,41,1196,32],[1198,42,1196,33],[1199,2,1197,0],[1200,2,1198,0],[1200,11,1198,9,"roundAxis"],[1200,20,1198,18,"roundAxis"],[1200,21,1198,19,"axis"],[1200,25,1198,23],[1200,27,1198,25],[1201,4,1199,4,"axis"],[1201,8,1199,8],[1201,9,1199,9,"min"],[1201,12,1199,12],[1201,15,1199,15,"Math"],[1201,19,1199,19],[1201,20,1199,20,"round"],[1201,25,1199,25],[1201,26,1199,26,"axis"],[1201,30,1199,30],[1201,31,1199,31,"min"],[1201,34,1199,34],[1201,35,1199,35],[1202,4,1200,4,"axis"],[1202,8,1200,8],[1202,9,1200,9,"max"],[1202,12,1200,12],[1202,15,1200,15,"Math"],[1202,19,1200,19],[1202,20,1200,20,"round"],[1202,25,1200,25],[1202,26,1200,26,"axis"],[1202,30,1200,30],[1202,31,1200,31,"max"],[1202,34,1200,34],[1202,35,1200,35],[1203,2,1201,0],[1204,2,1202,0],[1204,11,1202,9,"roundBox"],[1204,19,1202,17,"roundBox"],[1204,20,1202,18,"box"],[1204,23,1202,21],[1204,25,1202,23],[1205,4,1203,4,"roundAxis"],[1205,13,1203,13],[1205,14,1203,14,"box"],[1205,17,1203,17],[1205,18,1203,18,"x"],[1205,19,1203,19],[1205,20,1203,20],[1206,4,1204,4,"roundAxis"],[1206,13,1204,13],[1206,14,1204,14,"box"],[1206,17,1204,17],[1206,18,1204,18,"y"],[1206,19,1204,19],[1206,20,1204,20],[1207,2,1205,0],[1208,0,1205,1],[1208,3]],"functionMap":{"names":["<global>","createProjectionNode","<anonymous>","ProjectionNode","checkUpdateFailed","updateProjection","ProjectionNode.prototype.addEventListener","ProjectionNode.prototype.notifyListeners","ProjectionNode.prototype.hasListeners","ProjectionNode.prototype.registerPotentialNode","ProjectionNode.prototype.mount","resizeUnblockUpdate_1","attachResizeListener$argument_1","addEventListener$argument_1","ProjectionNode.prototype.unmount","ProjectionNode.prototype.blockUpdate","ProjectionNode.prototype.unblockUpdate","ProjectionNode.prototype.isUpdateBlocked","ProjectionNode.prototype.isTreeAnimationBlocked","ProjectionNode.prototype.startUpdate","ProjectionNode.prototype.willUpdate","ProjectionNode.prototype.didUpdate","ProjectionNode.prototype.clearAllSnapshots","ProjectionNode.prototype.scheduleUpdateProjection","ProjectionNode.prototype.scheduleCheckAfterUnmount","sync.postRender$argument_0","ProjectionNode.prototype.updateSnapshot","ProjectionNode.prototype.updateLayout","ProjectionNode.prototype.updateScroll","ProjectionNode.prototype.resetTransform","ProjectionNode.prototype.measure","ProjectionNode.prototype.removeElementScroll","ProjectionNode.prototype.applyTransform","ProjectionNode.prototype.removeTransform","ProjectionNode.prototype.setTargetDelta","ProjectionNode.prototype.setOptions","ProjectionNode.prototype.clearMeasurements","ProjectionNode.prototype.resolveTargetDelta","ProjectionNode.prototype.getClosestProjectingParent","ProjectionNode.prototype.calcProjection","ProjectionNode.prototype.hide","ProjectionNode.prototype.show","ProjectionNode.prototype.scheduleRender","ProjectionNode.prototype.setAnimationOrigin","mixTargetDelta","ProjectionNode.prototype.startAnimation","sync.update$argument_0","__assign$argument_1.onUpdate","__assign$argument_1.onComplete","ProjectionNode.prototype.completeAnimation","ProjectionNode.prototype.finishAnimation","ProjectionNode.prototype.applyTransformsToTarget","ProjectionNode.prototype.registerSharedNode","ProjectionNode.prototype.isLead","ProjectionNode.prototype.getLead","ProjectionNode.prototype.getPrevLead","ProjectionNode.prototype.getStack","ProjectionNode.prototype.promote","ProjectionNode.prototype.relegate","ProjectionNode.prototype.resetRotation","ProjectionNode.prototype.getProjectionStyles","ProjectionNode.prototype.clearSnapshot","ProjectionNode.prototype.resetTree","root.nodes.forEach$argument_0","updateLayout","notifyLayoutUpdate","eachAxis$argument_0","clearSnapshot","clearMeasurements","resetTransformStyle","finishAnimation","resolveTargetDelta","calcProjection","resetRotation","removeLeadSnapshots","mixAxisDelta","mixAxis","mixBox","hasOpacityCrossfade","mountNodeEarly","roundAxis","roundBox"],"mappings":"AAA;AC4B;0BCE;QCC;qCCoE;aDK;oCEC;aFG;SDqB;oDIC;SJK;mDKC;SLO;gDMC;SNE;yDOC;SPE;yCQI;4CCqB;iBDE;+CEC;iBFQ;mDGS;iBHqD;SRE;2CYC;SZQ;+CaE;SbE;iDcC;SdE;mDeC;SfE;0DgBC;ShBK;+CiBE;SjBM;8CkBC;SlB2B;6CmBE;SnB2C;qDoBC;SpBG;4DqBC;SrBE;6DsBC;4BCO;aDO;StBC;kDwBI;SxBW;gDyBC;SzBmC;gD0BC;S1BK;kD2BC;S3BiB;2C4BC;S5BY;uD6BC;S7BgC;kD8BC;S9BuB;mD+BC;S/BoB;kDgCI;ShCG;8CiCC;SjCG;qDkCC;SlCQ;sDmCI;SnCiF;8DoCC;SpCU;kDqCC;SrCsD;wCsCC;StCG;wCuCC;SvCG;kDwCC;SxCQ;sDyCC;kCCkB;aDoB;SzCE;kD2CC;gDCiB;iHCE;qBDI,cE;qBFI;aDK;S3CC;qD+CC;S/CY;mDgDC;ShDO;2DiDC;SjDkB;sDkDC;SlDW;0CmDC;SnDG;2CoDC;SpDI;+CqDC;SrDI;4CsDC;StDI;2CuDC;SvDW;4CwDC;SxDQ;iDyDC;SzDmC;uD0DC;S1DoG;iD2DC;S3DE;6C4DE;oCCC,+GD;S5DG;KDE;CDC;AgEC;ChEE;AiEC;qBCW;aDO;qBCG;aDM;CjEkD;AmEC;CnEE;AoEC;CpEE;AqEC;CrEM;AsEC;CtEG;AuEC;CvEE;AwEC;CxEE;AyEC;CzEE;A0EC;C1EE;A2EC;C3EK;A4EC;C5EG;A6EC;C7EG;A8EC;C9EE;A+EK;C/EgB;AgFC;ChFG;AiFC;CjFG"},"hasCjsExports":false},"type":"js/module"}]}