{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"observeIntersection\", {\n    enumerable: true,\n    get: function () {\n      return observeIntersection;\n    }\n  });\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  /**\n   * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n   * element, so even though these handlers might all be triggered by different\n   * observers, we can keep them in the same map.\n   */\n  var observerCallbacks = new WeakMap();\n  /**\n   * Multiple observers can be created for multiple element/document roots. Each with\n   * different settings. So here we store dictionaries of observers to each root,\n   * using serialised settings (threshold/margin) as lookup keys.\n   */\n  var observers = new WeakMap();\n  var fireObserverCallback = function (entry) {\n    var _a;\n    (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n  };\n  var fireAllObserverCallbacks = function (entries) {\n    entries.forEach(fireObserverCallback);\n  };\n  function initIntersectionObserver(_a) {\n    var root = _a.root,\n      options = (0, _tslib.__rest)(_a, [\"root\"]);\n    var lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n      observers.set(lookupRoot, {});\n    }\n    var rootObservers = observers.get(lookupRoot);\n    var key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n      rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, (0, _tslib.__assign)({\n        root: root\n      }, options));\n    }\n    return rootObservers[key];\n  }\n  function observeIntersection(element, options, callback) {\n    var rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return function () {\n      observerCallbacks.delete(element);\n      rootInteresectionObserver.unobserve(element);\n    };\n  }\n});","lineCount":65,"map":[[7,2,52,0,"Object"],[7,8,52,0],[7,9,52,0,"defineProperty"],[7,23,52,0],[7,24,52,0,"exports"],[7,31,52,0],[8,4,52,0,"enumerable"],[8,14,52,0],[9,4,52,0,"get"],[9,7,52,0],[9,18,52,0,"get"],[9,19,52,0],[10,6,52,0],[10,13,52,9,"observeIntersection"],[10,32,52,28],[11,4,52,28],[12,2,52,28],[13,2,1,0],[13,6,1,0,"_tslib"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,3,0],[15,0,4,0],[16,0,5,0],[17,0,6,0],[18,0,7,0],[19,2,8,0],[19,6,8,4,"observerCallbacks"],[19,23,8,21],[19,26,8,24],[19,30,8,28,"WeakMap"],[19,37,8,35],[19,38,8,36],[19,39,8,37],[20,2,9,0],[21,0,10,0],[22,0,11,0],[23,0,12,0],[24,0,13,0],[25,2,14,0],[25,6,14,4,"observers"],[25,15,14,13],[25,18,14,16],[25,22,14,20,"WeakMap"],[25,29,14,27],[25,30,14,28],[25,31,14,29],[26,2,15,0],[26,6,15,4,"fireObserverCallback"],[26,26,15,24],[26,29,15,27],[26,38,15,27,"fireObserverCallback"],[26,39,15,37,"entry"],[26,44,15,42],[26,46,15,44],[27,4,16,4],[27,8,16,8,"_a"],[27,10,16,10],[28,4,17,4],[28,5,17,5,"_a"],[28,7,17,7],[28,10,17,10,"observerCallbacks"],[28,27,17,27],[28,28,17,28,"get"],[28,31,17,31],[28,32,17,32,"entry"],[28,37,17,37],[28,38,17,38,"target"],[28,44,17,44],[28,45,17,45],[28,51,17,51],[28,55,17,55],[28,59,17,59,"_a"],[28,61,17,61],[28,66,17,66],[28,71,17,71],[28,72,17,72],[28,75,17,75],[28,80,17,80],[28,81,17,81],[28,84,17,84,"_a"],[28,86,17,86],[28,87,17,87,"entry"],[28,92,17,92],[28,93,17,93],[29,2,18,0],[29,3,18,1],[30,2,19,0],[30,6,19,4,"fireAllObserverCallbacks"],[30,30,19,28],[30,33,19,31],[30,42,19,31,"fireAllObserverCallbacks"],[30,43,19,41,"entries"],[30,50,19,48],[30,52,19,50],[31,4,20,4,"entries"],[31,11,20,11],[31,12,20,12,"forEach"],[31,19,20,19],[31,20,20,20,"fireObserverCallback"],[31,40,20,40],[31,41,20,41],[32,2,21,0],[32,3,21,1],[33,2,22,0],[33,11,22,9,"initIntersectionObserver"],[33,35,22,33,"initIntersectionObserver"],[33,36,22,34,"_a"],[33,38,22,36],[33,40,22,38],[34,4,23,4],[34,8,23,8,"root"],[34,12,23,12],[34,15,23,15,"_a"],[34,17,23,17],[34,18,23,18,"root"],[34,22,23,22],[35,6,23,24,"options"],[35,13,23,31],[35,16,23,34],[35,20,23,34,"__rest"],[35,26,23,40],[35,27,23,40,"__rest"],[35,33,23,40],[35,35,23,41,"_a"],[35,37,23,43],[35,39,23,45],[35,40,23,46],[35,46,23,52],[35,47,23,53],[35,48,23,54],[36,4,24,4],[36,8,24,8,"lookupRoot"],[36,18,24,18],[36,21,24,21,"root"],[36,25,24,25],[36,29,24,29,"document"],[36,37,24,37],[37,4,25,4],[38,0,26,0],[39,0,27,0],[40,4,28,4],[40,8,28,8],[40,9,28,9,"observers"],[40,18,28,18],[40,19,28,19,"has"],[40,22,28,22],[40,23,28,23,"lookupRoot"],[40,33,28,33],[40,34,28,34],[40,36,28,36],[41,6,29,8,"observers"],[41,15,29,17],[41,16,29,18,"set"],[41,19,29,21],[41,20,29,22,"lookupRoot"],[41,30,29,32],[41,32,29,34],[41,33,29,35],[41,34,29,36],[41,35,29,37],[42,4,30,4],[43,4,31,4],[43,8,31,8,"rootObservers"],[43,21,31,21],[43,24,31,24,"observers"],[43,33,31,33],[43,34,31,34,"get"],[43,37,31,37],[43,38,31,38,"lookupRoot"],[43,48,31,48],[43,49,31,49],[44,4,32,4],[44,8,32,8,"key"],[44,11,32,11],[44,14,32,14,"JSON"],[44,18,32,18],[44,19,32,19,"stringify"],[44,28,32,28],[44,29,32,29,"options"],[44,36,32,36],[44,37,32,37],[45,4,33,4],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,4,37,4],[49,8,37,8],[49,9,37,9,"rootObservers"],[49,22,37,22],[49,23,37,23,"key"],[49,26,37,26],[49,27,37,27],[49,29,37,29],[50,6,38,8,"rootObservers"],[50,19,38,21],[50,20,38,22,"key"],[50,23,38,25],[50,24,38,26],[50,27,38,29],[50,31,38,33,"IntersectionObserver"],[50,51,38,53],[50,52,38,54,"fireAllObserverCallbacks"],[50,76,38,78],[50,78,38,80],[50,82,38,80,"__assign"],[50,88,38,88],[50,89,38,88,"__assign"],[50,97,38,88],[50,99,38,89],[51,8,38,91,"root"],[51,12,38,95],[51,14,38,97,"root"],[52,6,38,102],[52,7,38,103],[52,9,38,105,"options"],[52,16,38,112],[52,17,38,113],[52,18,38,114],[53,4,39,4],[54,4,40,4],[54,11,40,11,"rootObservers"],[54,24,40,24],[54,25,40,25,"key"],[54,28,40,28],[54,29,40,29],[55,2,41,0],[56,2,42,0],[56,11,42,9,"observeIntersection"],[56,30,42,28,"observeIntersection"],[56,31,42,29,"element"],[56,38,42,36],[56,40,42,38,"options"],[56,47,42,45],[56,49,42,47,"callback"],[56,57,42,55],[56,59,42,57],[57,4,43,4],[57,8,43,8,"rootInteresectionObserver"],[57,33,43,33],[57,36,43,36,"initIntersectionObserver"],[57,60,43,60],[57,61,43,61,"options"],[57,68,43,68],[57,69,43,69],[58,4,44,4,"observerCallbacks"],[58,21,44,21],[58,22,44,22,"set"],[58,25,44,25],[58,26,44,26,"element"],[58,33,44,33],[58,35,44,35,"callback"],[58,43,44,43],[58,44,44,44],[59,4,45,4,"rootInteresectionObserver"],[59,29,45,29],[59,30,45,30,"observe"],[59,37,45,37],[59,38,45,38,"element"],[59,45,45,45],[59,46,45,46],[60,4,46,4],[60,11,46,11],[60,23,46,23],[61,6,47,8,"observerCallbacks"],[61,23,47,25],[61,24,47,26,"delete"],[61,30,47,32],[61,31,47,33,"element"],[61,38,47,40],[61,39,47,41],[62,6,48,8,"rootInteresectionObserver"],[62,31,48,33],[62,32,48,34,"unobserve"],[62,41,48,43],[62,42,48,44,"element"],[62,49,48,51],[62,50,48,52],[63,4,49,4],[63,5,49,5],[64,2,50,0],[65,0,50,1],[65,3]],"functionMap":{"names":["<global>","fireObserverCallback","fireAllObserverCallbacks","initIntersectionObserver","observeIntersection","<anonymous>"],"mappings":"AAA;2BCc;CDG;+BEC;CFE;AGC;CHmB;AIC;WCI;KDG;CJC"},"hasCjsExports":false},"type":"js/module"}]}