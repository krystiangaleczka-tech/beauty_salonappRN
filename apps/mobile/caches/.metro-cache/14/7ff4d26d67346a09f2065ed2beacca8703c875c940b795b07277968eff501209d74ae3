{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"clamp\", {\n    enumerable: true,\n    get: function () {\n      return clamp;\n    }\n  });\n  Object.defineProperty(exports, \"colorRegex\", {\n    enumerable: true,\n    get: function () {\n      return colorRegex;\n    }\n  });\n  Object.defineProperty(exports, \"floatRegex\", {\n    enumerable: true,\n    get: function () {\n      return floatRegex;\n    }\n  });\n  Object.defineProperty(exports, \"isString\", {\n    enumerable: true,\n    get: function () {\n      return isString;\n    }\n  });\n  Object.defineProperty(exports, \"sanitize\", {\n    enumerable: true,\n    get: function () {\n      return sanitize;\n    }\n  });\n  Object.defineProperty(exports, \"singleColorRegex\", {\n    enumerable: true,\n    get: function () {\n      return singleColorRegex;\n    }\n  });\n  const clamp = (min, max) => v => Math.max(Math.min(v, max), min);\n  const sanitize = v => v % 1 ? Number(v.toFixed(5)) : v;\n  const floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\n  const colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2,3}\\s*\\/*\\s*[\\d\\.]+%?\\))/gi;\n  const singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2,3}\\s*\\/*\\s*[\\d\\.]+%?\\))$/i;\n  function isString(v) {\n    return typeof v === 'string';\n  }\n});","lineCount":51,"map":[[7,2,10,0,"Object"],[7,8,10,0],[7,9,10,0,"defineProperty"],[7,23,10,0],[7,24,10,0,"exports"],[7,31,10,0],[8,4,10,0,"enumerable"],[8,14,10,0],[9,4,10,0,"get"],[9,7,10,0],[9,18,10,0,"get"],[9,19,10,0],[10,6,10,0],[10,13,10,9,"clamp"],[10,18,10,14],[11,4,10,14],[12,2,10,14],[13,2,10,0,"Object"],[13,8,10,0],[13,9,10,0,"defineProperty"],[13,23,10,0],[13,24,10,0,"exports"],[13,31,10,0],[14,4,10,0,"enumerable"],[14,14,10,0],[15,4,10,0,"get"],[15,7,10,0],[15,18,10,0,"get"],[15,19,10,0],[16,6,10,0],[16,13,10,16,"colorRegex"],[16,23,10,26],[17,4,10,26],[18,2,10,26],[19,2,10,0,"Object"],[19,8,10,0],[19,9,10,0,"defineProperty"],[19,23,10,0],[19,24,10,0,"exports"],[19,31,10,0],[20,4,10,0,"enumerable"],[20,14,10,0],[21,4,10,0,"get"],[21,7,10,0],[21,18,10,0,"get"],[21,19,10,0],[22,6,10,0],[22,13,10,28,"floatRegex"],[22,23,10,38],[23,4,10,38],[24,2,10,38],[25,2,10,0,"Object"],[25,8,10,0],[25,9,10,0,"defineProperty"],[25,23,10,0],[25,24,10,0,"exports"],[25,31,10,0],[26,4,10,0,"enumerable"],[26,14,10,0],[27,4,10,0,"get"],[27,7,10,0],[27,18,10,0,"get"],[27,19,10,0],[28,6,10,0],[28,13,10,40,"isString"],[28,21,10,48],[29,4,10,48],[30,2,10,48],[31,2,10,0,"Object"],[31,8,10,0],[31,9,10,0,"defineProperty"],[31,23,10,0],[31,24,10,0,"exports"],[31,31,10,0],[32,4,10,0,"enumerable"],[32,14,10,0],[33,4,10,0,"get"],[33,7,10,0],[33,18,10,0,"get"],[33,19,10,0],[34,6,10,0],[34,13,10,50,"sanitize"],[34,21,10,58],[35,4,10,58],[36,2,10,58],[37,2,10,0,"Object"],[37,8,10,0],[37,9,10,0,"defineProperty"],[37,23,10,0],[37,24,10,0,"exports"],[37,31,10,0],[38,4,10,0,"enumerable"],[38,14,10,0],[39,4,10,0,"get"],[39,7,10,0],[39,18,10,0,"get"],[39,19,10,0],[40,6,10,0],[40,13,10,60,"singleColorRegex"],[40,29,10,76],[41,4,10,76],[42,2,10,76],[43,2,1,0],[43,8,1,6,"clamp"],[43,13,1,11],[43,16,1,14,"clamp"],[43,17,1,15,"min"],[43,20,1,18],[43,22,1,20,"max"],[43,25,1,23],[43,30,1,29,"v"],[43,31,1,30],[43,35,1,35,"Math"],[43,39,1,39],[43,40,1,40,"max"],[43,43,1,43],[43,44,1,44,"Math"],[43,48,1,48],[43,49,1,49,"min"],[43,52,1,52],[43,53,1,53,"v"],[43,54,1,54],[43,56,1,56,"max"],[43,59,1,59],[43,60,1,60],[43,62,1,62,"min"],[43,65,1,65],[43,66,1,66],[44,2,2,0],[44,8,2,6,"sanitize"],[44,16,2,14],[44,19,2,18,"v"],[44,20,2,19],[44,24,2,25,"v"],[44,25,2,26],[44,28,2,29],[44,29,2,30],[44,32,2,33,"Number"],[44,38,2,39],[44,39,2,40,"v"],[44,40,2,41],[44,41,2,42,"toFixed"],[44,48,2,49],[44,49,2,50],[44,50,2,51],[44,51,2,52],[44,52,2,53],[44,55,2,56,"v"],[44,56,2,58],[45,2,3,0],[45,8,3,6,"floatRegex"],[45,18,3,16],[45,21,3,19],[45,43,3,41],[46,2,4,0],[46,8,4,6,"colorRegex"],[46,18,4,16],[46,21,4,19],[46,132,4,130],[47,2,5,0],[47,8,5,6,"singleColorRegex"],[47,24,5,22],[47,27,5,25],[47,126,5,124],[48,2,6,0],[48,11,6,9,"isString"],[48,19,6,17,"isString"],[48,20,6,18,"v"],[48,21,6,19],[48,23,6,21],[49,4,7,4],[49,11,7,11],[49,18,7,18,"v"],[49,19,7,19],[49,24,7,24],[49,32,7,32],[50,2,8,0],[51,0,8,1],[51,3]],"functionMap":{"names":["<global>","clamp","<anonymous>","sanitize","isString"],"mappings":"AAA,cC,cC,sCF;iBGC,yCH;AII;CJE"},"hasCjsExports":false},"type":"js/module"}]}