{"dependencies":[{"name":"./_baseIsTypedArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":23,"index":23},"end":{"line":1,"column":53,"index":53}}],"key":"/coJe6hu7KTtVD3rcv7wngnZSbg=","exportNames":["*"]}},{"name":"./_baseUnary","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":16,"index":71},"end":{"line":2,"column":39,"index":94}}],"key":"ywQc4zU2CdaWdS8kRJr8zZDyT5E=","exportNames":["*"]}},{"name":"./_nodeUtil","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":15,"index":111},"end":{"line":3,"column":37,"index":133}}],"key":"4wWfFn2dUBc3j8SAApqhUcekO5A=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseIsTypedArray = require(_dependencyMap[0], \"./_baseIsTypedArray\"),\n    baseUnary = require(_dependencyMap[1], \"./_baseUnary\"),\n    nodeUtil = require(_dependencyMap[2], \"./_nodeUtil\");\n\n  /* Node.js helper references. */\n  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /**\n   * Checks if `value` is classified as a typed array.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n   * @example\n   *\n   * _.isTypedArray(new Uint8Array);\n   * // => true\n   *\n   * _.isTypedArray([]);\n   * // => false\n   */\n  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n  module.exports = isTypedArray;\n});","lineCount":28,"map":[[2,2,1,0],[2,6,1,4,"baseIsTypedArray"],[2,22,1,20],[2,25,1,23,"require"],[2,32,1,30],[2,33,1,30,"_dependencyMap"],[2,47,1,30],[2,73,1,52],[2,74,1,53],[3,4,2,4,"baseUnary"],[3,13,2,13],[3,16,2,16,"require"],[3,23,2,23],[3,24,2,23,"_dependencyMap"],[3,38,2,23],[3,57,2,38],[3,58,2,39],[4,4,3,4,"nodeUtil"],[4,12,3,12],[4,15,3,15,"require"],[4,22,3,22],[4,23,3,22,"_dependencyMap"],[4,37,3,22],[4,55,3,36],[4,56,3,37],[6,2,5,0],[7,2,6,0],[7,6,6,4,"nodeIsTypedArray"],[7,22,6,20],[7,25,6,23,"nodeUtil"],[7,33,6,31],[7,37,6,35,"nodeUtil"],[7,45,6,43],[7,46,6,44,"isTypedArray"],[7,58,6,56],[9,2,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,2,25,0],[26,6,25,4,"isTypedArray"],[26,18,25,16],[26,21,25,19,"nodeIsTypedArray"],[26,37,25,35],[26,40,25,38,"baseUnary"],[26,49,25,47],[26,50,25,48,"nodeIsTypedArray"],[26,66,25,64],[26,67,25,65],[26,70,25,68,"baseIsTypedArray"],[26,86,25,84],[27,2,27,0,"module"],[27,8,27,6],[27,9,27,7,"exports"],[27,16,27,14],[27,19,27,17,"isTypedArray"],[27,31,27,29],[28,0,27,30],[28,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"}},"type":"js/module"}]}