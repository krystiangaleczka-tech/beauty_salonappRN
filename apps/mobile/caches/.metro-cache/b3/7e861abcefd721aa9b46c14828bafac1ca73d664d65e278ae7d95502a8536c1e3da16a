{"dependencies":[{"name":"popmotion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":59,"index":59}}],"key":"9R4e9vFYMhq+Tk7xvkZO6aYjkW8=","exportNames":["*"],"imports":1}},{"name":"style-value-types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":60},"end":{"line":2,"column":48,"index":108}}],"key":"amhWSRCUxLBa3Njmww3P7iM/NQE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"mixValues\", {\n    enumerable: true,\n    get: function () {\n      return mixValues;\n    }\n  });\n  var _popmotion = require(_dependencyMap[0], \"popmotion\");\n  var _styleValueTypes = require(_dependencyMap[1], \"style-value-types\");\n  var borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\n  var numBorders = borders.length;\n  var asNumber = function (value) {\n    return typeof value === \"string\" ? parseFloat(value) : value;\n  };\n  var isPx = function (value) {\n    return typeof value === \"number\" || _styleValueTypes.px.test(value);\n  };\n  function mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n      target.opacity = (0, _popmotion.mix)(0,\n      // (follow?.opacity as number) ?? 0,\n      // TODO Reinstate this if only child\n      (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n      target.opacityExit = (0, _popmotion.mix)((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    } else if (isOnlyMember) {\n      target.opacity = (0, _popmotion.mix)((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (var i = 0; i < numBorders; i++) {\n      var borderLabel = \"border\".concat(borders[i], \"Radius\");\n      var followRadius = getRadius(follow, borderLabel);\n      var leadRadius = getRadius(lead, borderLabel);\n      if (followRadius === undefined && leadRadius === undefined) continue;\n      followRadius || (followRadius = 0);\n      leadRadius || (leadRadius = 0);\n      var canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);\n      if (canMix) {\n        target[borderLabel] = Math.max((0, _popmotion.mix)(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n        if (_styleValueTypes.percent.test(leadRadius) || _styleValueTypes.percent.test(followRadius)) {\n          target[borderLabel] += \"%\";\n        }\n      } else {\n        target[borderLabel] = leadRadius;\n      }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n      target.rotate = (0, _popmotion.mix)(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n  }\n  function getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n  }\n  // /**\n  //  * We only want to mix the background color if there's a follow element\n  //  * that we're not crossfading opacity between. For instance with switch\n  //  * AnimateSharedLayout animations, this helps the illusion of a continuous\n  //  * element being animated but also cuts down on the number of paints triggered\n  //  * for elements where opacity is doing that work for us.\n  //  */\n  // if (\n  //     !hasFollowElement &&\n  //     latestLeadValues.backgroundColor &&\n  //     latestFollowValues.backgroundColor\n  // ) {\n  //     /**\n  //      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n  //      * We could probably create a mixer that runs at the start of the animation but\n  //      * the idea behind the crossfader is that it runs dynamically between two potentially\n  //      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n  //      */\n  //     leadState.backgroundColor = followState.backgroundColor = mixColor(\n  //         latestFollowValues.backgroundColor as string,\n  //         latestLeadValues.backgroundColor as string\n  //     )(p)\n  // }\n  var easeCrossfadeIn = compress(0, 0.5, _popmotion.circOut);\n  var easeCrossfadeOut = compress(0.5, 0.95, _popmotion.linear);\n  function compress(min, max, easing) {\n    return function (p) {\n      // Could replace ifs with clamp\n      if (p < min) return 0;\n      if (p > max) return 1;\n      return easing((0, _popmotion.progress)(min, max, p));\n    };\n  }\n});","lineCount":98,"map":[[7,2,95,0,"Object"],[7,8,95,0],[7,9,95,0,"defineProperty"],[7,23,95,0],[7,24,95,0,"exports"],[7,31,95,0],[8,4,95,0,"enumerable"],[8,14,95,0],[9,4,95,0,"get"],[9,7,95,0],[9,18,95,0,"get"],[9,19,95,0],[10,6,95,0],[10,13,95,9,"mixValues"],[10,22,95,18],[11,4,95,18],[12,2,95,18],[13,2,1,0],[13,6,1,0,"_popmotion"],[13,16,1,0],[13,19,1,0,"require"],[13,26,1,0],[13,27,1,0,"_dependencyMap"],[13,41,1,0],[14,2,2,0],[14,6,2,0,"_styleValueTypes"],[14,22,2,0],[14,25,2,0,"require"],[14,32,2,0],[14,33,2,0,"_dependencyMap"],[14,47,2,0],[15,2,4,0],[15,6,4,4,"borders"],[15,13,4,11],[15,16,4,14],[15,17,4,15],[15,26,4,24],[15,28,4,26],[15,38,4,36],[15,40,4,38],[15,52,4,50],[15,54,4,52],[15,67,4,65],[15,68,4,66],[16,2,5,0],[16,6,5,4,"numBorders"],[16,16,5,14],[16,19,5,17,"borders"],[16,26,5,24],[16,27,5,25,"length"],[16,33,5,31],[17,2,6,0],[17,6,6,4,"asNumber"],[17,14,6,12],[17,17,6,15],[17,26,6,15,"asNumber"],[17,27,6,25,"value"],[17,32,6,30],[17,34,6,32],[18,4,7,4],[18,11,7,11],[18,18,7,18,"value"],[18,23,7,23],[18,28,7,28],[18,36,7,36],[18,39,7,39,"parseFloat"],[18,49,7,49],[18,50,7,50,"value"],[18,55,7,55],[18,56,7,56],[18,59,7,59,"value"],[18,64,7,64],[19,2,8,0],[19,3,8,1],[20,2,9,0],[20,6,9,4,"isPx"],[20,10,9,8],[20,13,9,11],[20,22,9,11,"isPx"],[20,23,9,21,"value"],[20,28,9,26],[20,30,9,28],[21,4,10,4],[21,11,10,11],[21,18,10,18,"value"],[21,23,10,23],[21,28,10,28],[21,36,10,36],[21,40,10,40,"px"],[21,56,10,42],[21,57,10,42,"px"],[21,59,10,42],[21,60,10,43,"test"],[21,64,10,47],[21,65,10,48,"value"],[21,70,10,53],[21,71,10,54],[22,2,11,0],[22,3,11,1],[23,2,12,0],[23,11,12,9,"mixValues"],[23,20,12,18,"mixValues"],[23,21,12,19,"target"],[23,27,12,25],[23,29,12,27,"follow"],[23,35,12,33],[23,37,12,35,"lead"],[23,41,12,39],[23,43,12,41,"progress"],[23,51,12,49],[23,53,12,51,"shouldCrossfadeOpacity"],[23,75,12,73],[23,77,12,75,"isOnlyMember"],[23,89,12,87],[23,91,12,89],[24,4,13,4],[24,8,13,8,"_a"],[24,10,13,10],[24,12,13,12,"_b"],[24,14,13,14],[24,16,13,16,"_c"],[24,18,13,18],[24,20,13,20,"_d"],[24,22,13,22],[25,4,14,4],[25,8,14,8,"shouldCrossfadeOpacity"],[25,30,14,30],[25,32,14,32],[26,6,15,8,"target"],[26,12,15,14],[26,13,15,15,"opacity"],[26,20,15,22],[26,23,15,25],[26,27,15,25,"mix"],[26,37,15,28],[26,38,15,28,"mix"],[26,41,15,28],[26,43,15,29],[26,44,15,30],[27,6,16,8],[28,6,17,8],[29,6,18,8],[29,7,18,9,"_a"],[29,9,18,11],[29,12,18,14,"lead"],[29,16,18,18],[29,17,18,19,"opacity"],[29,24,18,26],[29,30,18,32],[29,34,18,36],[29,38,18,40,"_a"],[29,40,18,42],[29,45,18,47],[29,50,18,52],[29,51,18,53],[29,54,18,56,"_a"],[29,56,18,58],[29,59,18,61],[29,60,18,62],[29,62,18,64,"easeCrossfadeIn"],[29,77,18,79],[29,78,18,80,"progress"],[29,86,18,88],[29,87,18,89],[29,88,18,90],[30,6,19,8,"target"],[30,12,19,14],[30,13,19,15,"opacityExit"],[30,24,19,26],[30,27,19,29],[30,31,19,29,"mix"],[30,41,19,32],[30,42,19,32,"mix"],[30,45,19,32],[30,47,19,33],[30,48,19,34,"_b"],[30,50,19,36],[30,53,19,39,"follow"],[30,59,19,45],[30,60,19,46,"opacity"],[30,67,19,53],[30,73,19,59],[30,77,19,63],[30,81,19,67,"_b"],[30,83,19,69],[30,88,19,74],[30,93,19,79],[30,94,19,80],[30,97,19,83,"_b"],[30,99,19,85],[30,102,19,88],[30,103,19,89],[30,105,19,91],[30,106,19,92],[30,108,19,94,"easeCrossfadeOut"],[30,124,19,110],[30,125,19,111,"progress"],[30,133,19,119],[30,134,19,120],[30,135,19,121],[31,4,20,4],[31,5,20,5],[31,11,21,9],[31,15,21,13,"isOnlyMember"],[31,27,21,25],[31,29,21,27],[32,6,22,8,"target"],[32,12,22,14],[32,13,22,15,"opacity"],[32,20,22,22],[32,23,22,25],[32,27,22,25,"mix"],[32,37,22,28],[32,38,22,28,"mix"],[32,41,22,28],[32,43,22,29],[32,44,22,30,"_c"],[32,46,22,32],[32,49,22,35,"follow"],[32,55,22,41],[32,56,22,42,"opacity"],[32,63,22,49],[32,69,22,55],[32,73,22,59],[32,77,22,63,"_c"],[32,79,22,65],[32,84,22,70],[32,89,22,75],[32,90,22,76],[32,93,22,79,"_c"],[32,95,22,81],[32,98,22,84],[32,99,22,85],[32,101,22,87],[32,102,22,88,"_d"],[32,104,22,90],[32,107,22,93,"lead"],[32,111,22,97],[32,112,22,98,"opacity"],[32,119,22,105],[32,125,22,111],[32,129,22,115],[32,133,22,119,"_d"],[32,135,22,121],[32,140,22,126],[32,145,22,131],[32,146,22,132],[32,149,22,135,"_d"],[32,151,22,137],[32,154,22,140],[32,155,22,141],[32,157,22,143,"progress"],[32,165,22,151],[32,166,22,152],[33,4,23,4],[34,4,24,4],[35,0,25,0],[36,0,26,0],[37,4,27,4],[37,9,27,9],[37,13,27,13,"i"],[37,14,27,14],[37,17,27,17],[37,18,27,18],[37,20,27,20,"i"],[37,21,27,21],[37,24,27,24,"numBorders"],[37,34,27,34],[37,36,27,36,"i"],[37,37,27,37],[37,39,27,39],[37,41,27,41],[38,6,28,8],[38,10,28,12,"borderLabel"],[38,21,28,23],[38,24,28,26],[38,32,28,34],[38,33,28,35,"concat"],[38,39,28,41],[38,40,28,42,"borders"],[38,47,28,49],[38,48,28,50,"i"],[38,49,28,51],[38,50,28,52],[38,52,28,54],[38,60,28,62],[38,61,28,63],[39,6,29,8],[39,10,29,12,"followRadius"],[39,22,29,24],[39,25,29,27,"getRadius"],[39,34,29,36],[39,35,29,37,"follow"],[39,41,29,43],[39,43,29,45,"borderLabel"],[39,54,29,56],[39,55,29,57],[40,6,30,8],[40,10,30,12,"leadRadius"],[40,20,30,22],[40,23,30,25,"getRadius"],[40,32,30,34],[40,33,30,35,"lead"],[40,37,30,39],[40,39,30,41,"borderLabel"],[40,50,30,52],[40,51,30,53],[41,6,31,8],[41,10,31,12,"followRadius"],[41,22,31,24],[41,27,31,29,"undefined"],[41,36,31,38],[41,40,31,42,"leadRadius"],[41,50,31,52],[41,55,31,57,"undefined"],[41,64,31,66],[41,66,32,12],[42,6,33,8,"followRadius"],[42,18,33,20],[42,23,33,25,"followRadius"],[42,35,33,37],[42,38,33,40],[42,39,33,41],[42,40,33,42],[43,6,34,8,"leadRadius"],[43,16,34,18],[43,21,34,23,"leadRadius"],[43,31,34,33],[43,34,34,36],[43,35,34,37],[43,36,34,38],[44,6,35,8],[44,10,35,12,"canMix"],[44,16,35,18],[44,19,35,21,"followRadius"],[44,31,35,33],[44,36,35,38],[44,37,35,39],[44,41,36,12,"leadRadius"],[44,51,36,22],[44,56,36,27],[44,57,36,28],[44,61,37,12,"isPx"],[44,65,37,16],[44,66,37,17,"followRadius"],[44,78,37,29],[44,79,37,30],[44,84,37,35,"isPx"],[44,88,37,39],[44,89,37,40,"leadRadius"],[44,99,37,50],[44,100,37,51],[45,6,38,8],[45,10,38,12,"canMix"],[45,16,38,18],[45,18,38,20],[46,8,39,12,"target"],[46,14,39,18],[46,15,39,19,"borderLabel"],[46,26,39,30],[46,27,39,31],[46,30,39,34,"Math"],[46,34,39,38],[46,35,39,39,"max"],[46,38,39,42],[46,39,39,43],[46,43,39,43,"mix"],[46,53,39,46],[46,54,39,46,"mix"],[46,57,39,46],[46,59,39,47,"asNumber"],[46,67,39,55],[46,68,39,56,"followRadius"],[46,80,39,68],[46,81,39,69],[46,83,39,71,"asNumber"],[46,91,39,79],[46,92,39,80,"leadRadius"],[46,102,39,90],[46,103,39,91],[46,105,39,93,"progress"],[46,113,39,101],[46,114,39,102],[46,116,39,104],[46,117,39,105],[46,118,39,106],[47,8,40,12],[47,12,40,16,"percent"],[47,28,40,23],[47,29,40,23,"percent"],[47,36,40,23],[47,37,40,24,"test"],[47,41,40,28],[47,42,40,29,"leadRadius"],[47,52,40,39],[47,53,40,40],[47,57,40,44,"percent"],[47,73,40,51],[47,74,40,51,"percent"],[47,81,40,51],[47,82,40,52,"test"],[47,86,40,56],[47,87,40,57,"followRadius"],[47,99,40,69],[47,100,40,70],[47,102,40,72],[48,10,41,16,"target"],[48,16,41,22],[48,17,41,23,"borderLabel"],[48,28,41,34],[48,29,41,35],[48,33,41,39],[48,36,41,42],[49,8,42,12],[50,6,43,8],[50,7,43,9],[50,13,44,13],[51,8,45,12,"target"],[51,14,45,18],[51,15,45,19,"borderLabel"],[51,26,45,30],[51,27,45,31],[51,30,45,34,"leadRadius"],[51,40,45,44],[52,6,46,8],[53,4,47,4],[54,4,48,4],[55,0,49,0],[56,0,50,0],[57,4,51,4],[57,8,51,8,"follow"],[57,14,51,14],[57,15,51,15,"rotate"],[57,21,51,21],[57,25,51,25,"lead"],[57,29,51,29],[57,30,51,30,"rotate"],[57,36,51,36],[57,38,51,38],[58,6,52,8,"target"],[58,12,52,14],[58,13,52,15,"rotate"],[58,19,52,21],[58,22,52,24],[58,26,52,24,"mix"],[58,36,52,27],[58,37,52,27,"mix"],[58,40,52,27],[58,42,52,28,"follow"],[58,48,52,34],[58,49,52,35,"rotate"],[58,55,52,41],[58,59,52,45],[58,60,52,46],[58,62,52,48,"lead"],[58,66,52,52],[58,67,52,53,"rotate"],[58,73,52,59],[58,77,52,63],[58,78,52,64],[58,80,52,66,"progress"],[58,88,52,74],[58,89,52,75],[59,4,53,4],[60,2,54,0],[61,2,55,0],[61,11,55,9,"getRadius"],[61,20,55,18,"getRadius"],[61,21,55,19,"values"],[61,27,55,25],[61,29,55,27,"radiusName"],[61,39,55,37],[61,41,55,39],[62,4,56,4],[62,8,56,8,"_a"],[62,10,56,10],[63,4,57,4],[63,11,57,11],[63,12,57,12,"_a"],[63,14,57,14],[63,17,57,17,"values"],[63,23,57,23],[63,24,57,24,"radiusName"],[63,34,57,34],[63,35,57,35],[63,41,57,41],[63,45,57,45],[63,49,57,49,"_a"],[63,51,57,51],[63,56,57,56],[63,61,57,61],[63,62,57,62],[63,65,57,65,"_a"],[63,67,57,67],[63,70,57,70,"values"],[63,76,57,76],[63,77,57,77,"borderRadius"],[63,89,57,89],[64,2,58,0],[65,2,59,0],[66,2,60,0],[67,2,61,0],[68,2,62,0],[69,2,63,0],[70,2,64,0],[71,2,65,0],[72,2,66,0],[73,2,67,0],[74,2,68,0],[75,2,69,0],[76,2,70,0],[77,2,71,0],[78,2,72,0],[79,2,73,0],[80,2,74,0],[81,2,75,0],[82,2,76,0],[83,2,77,0],[84,2,78,0],[85,2,79,0],[86,2,80,0],[87,2,81,0],[88,2,82,0],[88,6,82,4,"easeCrossfadeIn"],[88,21,82,19],[88,24,82,22,"compress"],[88,32,82,30],[88,33,82,31],[88,34,82,32],[88,36,82,34],[88,39,82,37],[88,41,82,39,"circOut"],[88,51,82,46],[88,52,82,46,"circOut"],[88,59,82,46],[88,60,82,47],[89,2,83,0],[89,6,83,4,"easeCrossfadeOut"],[89,22,83,20],[89,25,83,23,"compress"],[89,33,83,31],[89,34,83,32],[89,37,83,35],[89,39,83,37],[89,43,83,41],[89,45,83,43,"linear"],[89,55,83,49],[89,56,83,49,"linear"],[89,62,83,49],[89,63,83,50],[90,2,84,0],[90,11,84,9,"compress"],[90,19,84,17,"compress"],[90,20,84,18,"min"],[90,23,84,21],[90,25,84,23,"max"],[90,28,84,26],[90,30,84,28,"easing"],[90,36,84,34],[90,38,84,36],[91,4,85,4],[91,11,85,11],[91,21,85,21,"p"],[91,22,85,22],[91,24,85,24],[92,6,86,8],[93,6,87,8],[93,10,87,12,"p"],[93,11,87,13],[93,14,87,16,"min"],[93,17,87,19],[93,19,88,12],[93,26,88,19],[93,27,88,20],[94,6,89,8],[94,10,89,12,"p"],[94,11,89,13],[94,14,89,16,"max"],[94,17,89,19],[94,19,90,12],[94,26,90,19],[94,27,90,20],[95,6,91,8],[95,13,91,15,"easing"],[95,19,91,21],[95,20,91,22],[95,24,91,22,"progress"],[95,34,91,30],[95,35,91,30,"progress"],[95,43,91,30],[95,45,91,31,"min"],[95,48,91,34],[95,50,91,36,"max"],[95,53,91,39],[95,55,91,41,"p"],[95,56,91,42],[95,57,91,43],[95,58,91,44],[96,4,92,4],[96,5,92,5],[97,2,93,0],[98,0,93,1],[98,3]],"functionMap":{"names":["<global>","asNumber","isPx","mixValues","getRadius","compress","<anonymous>"],"mappings":"AAA;eCK;CDE;WEC;CFE;AGC;CH0C;AIC;CJG;AK0B;WCC;KDO;CLC"},"hasCjsExports":false},"type":"js/module"}]}