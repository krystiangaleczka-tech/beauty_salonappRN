{"dependencies":[{"name":"./LayoutManager","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":22,"index":898},"end":{"line":19,"column":48,"index":924}}],"key":"zvYNKl5We8eXKq0On0iqzaQXh50=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = function (d, b) {\n      extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GridLayoutManager = void 0;\n  var LayoutManager_1 = require(_dependencyMap[0], \"./LayoutManager\");\n  var GridLayoutManager = /** @class */function (_super) {\n    __extends(GridLayoutManager, _super);\n    function GridLayoutManager(layoutProvider, renderWindowSize, getSpan, maxSpan, acceptableRelayoutDelta, isHorizontal, cachedLayouts) {\n      var _this = _super.call(this, layoutProvider, renderWindowSize, isHorizontal, cachedLayouts) || this;\n      _this._getSpan = getSpan;\n      _this._isGridHorizontal = isHorizontal;\n      _this._renderWindowSize = renderWindowSize;\n      if (acceptableRelayoutDelta < 0) {\n        throw new Error(\"acceptableRelayoutDelta cannot be less than 0\");\n      } else {\n        _this._acceptableRelayoutDelta = acceptableRelayoutDelta;\n      }\n      if (maxSpan <= 0) {\n        throw new Error(\"Max Column Span cannot be less than or equal to 0\");\n      } else {\n        _this._maxSpan = maxSpan;\n      }\n      return _this;\n    }\n    GridLayoutManager.prototype.overrideLayout = function (index, dim) {\n      // we are doing this because - when we provide decimal dimensions for a\n      // certain cell - the onlayout returns a different dimension in certain high end devices.\n      // This causes the layouting to behave weirdly as the new dimension might not adhere to the spans and the cells arrange themselves differently\n      // So, whenever we have layouts for a certain index, we explicitly override the dimension to those very layout values\n      // and call super so as to set the overridden flag as true\n      var layout = this.getLayouts()[index];\n      var heightDiff = Math.abs(dim.height - layout.height);\n      var widthDiff = Math.abs(dim.width - layout.width);\n      if (layout) {\n        if (this._isGridHorizontal) {\n          if (heightDiff < this._acceptableRelayoutDelta) {\n            if (widthDiff === 0) {\n              return false;\n            }\n            dim.height = layout.height;\n          }\n        } else {\n          if (widthDiff < this._acceptableRelayoutDelta) {\n            if (heightDiff === 0) {\n              return false;\n            }\n            dim.width = layout.width;\n          }\n        }\n      }\n      return _super.prototype.overrideLayout.call(this, index, dim);\n    };\n    GridLayoutManager.prototype.getStyleOverridesForIndex = function (index) {\n      var columnSpanForIndex = this._getSpan(index);\n      return this._isGridHorizontal ? {\n        height: this._renderWindowSize.height / this._maxSpan * columnSpanForIndex\n      } : {\n        width: this._renderWindowSize.width / this._maxSpan * columnSpanForIndex\n      };\n    };\n    return GridLayoutManager;\n  }(LayoutManager_1.WrapGridLayoutManager);\n  exports.GridLayoutManager = GridLayoutManager;\n});","lineCount":87,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__extends"],[4,15,2,13],[4,18,2,17],[4,22,2,21],[4,26,2,25],[4,30,2,29],[4,31,2,30,"__extends"],[4,40,2,39],[4,44,2,45],[4,56,2,57],[5,4,3,4],[5,8,3,8,"extendStatics"],[5,21,3,21],[5,24,3,24],[5,33,3,24,"extendStatics"],[5,34,3,34,"d"],[5,35,3,35],[5,37,3,37,"b"],[5,38,3,38],[5,40,3,40],[6,6,4,8,"extendStatics"],[6,19,4,21],[6,22,4,24,"Object"],[6,28,4,30],[6,29,4,31,"setPrototypeOf"],[6,43,4,45],[6,47,5,13],[7,8,5,15,"__proto__"],[7,17,5,24],[7,19,5,26],[8,6,5,29],[8,7,5,30],[8,19,5,42,"Array"],[8,24,5,47],[8,28,5,51],[8,38,5,61,"d"],[8,39,5,62],[8,41,5,64,"b"],[8,42,5,65],[8,44,5,67],[9,8,5,69,"d"],[9,9,5,70],[9,10,5,71,"__proto__"],[9,19,5,80],[9,22,5,83,"b"],[9,23,5,84],[10,6,5,86],[10,7,5,88],[10,11,6,12],[10,21,6,22,"d"],[10,22,6,23],[10,24,6,25,"b"],[10,25,6,26],[10,27,6,28],[11,8,6,30],[11,13,6,35],[11,17,6,39,"p"],[11,18,6,40],[11,22,6,44,"b"],[11,23,6,45],[11,25,6,47],[11,29,6,51,"Object"],[11,35,6,57],[11,36,6,58,"prototype"],[11,45,6,67],[11,46,6,68,"hasOwnProperty"],[11,60,6,82],[11,61,6,83,"call"],[11,65,6,87],[11,66,6,88,"b"],[11,67,6,89],[11,69,6,91,"p"],[11,70,6,92],[11,71,6,93],[11,73,6,95,"d"],[11,74,6,96],[11,75,6,97,"p"],[11,76,6,98],[11,77,6,99],[11,80,6,102,"b"],[11,81,6,103],[11,82,6,104,"p"],[11,83,6,105],[11,84,6,106],[12,6,6,108],[12,7,6,109],[13,6,7,8],[13,13,7,15,"extendStatics"],[13,26,7,28],[13,27,7,29,"d"],[13,28,7,30],[13,30,7,32,"b"],[13,31,7,33],[13,32,7,34],[14,4,8,4],[14,5,8,5],[15,4,9,4],[15,11,9,11],[15,21,9,21,"d"],[15,22,9,22],[15,24,9,24,"b"],[15,25,9,25],[15,27,9,27],[16,6,10,8],[16,10,10,12],[16,17,10,19,"b"],[16,18,10,20],[16,23,10,25],[16,33,10,35],[16,37,10,39,"b"],[16,38,10,40],[16,43,10,45],[16,47,10,49],[16,49,11,12],[16,55,11,18],[16,59,11,22,"TypeError"],[16,68,11,31],[16,69,11,32],[16,91,11,54],[16,94,11,57,"String"],[16,100,11,63],[16,101,11,64,"b"],[16,102,11,65],[16,103,11,66],[16,106,11,69],[16,137,11,100],[16,138,11,101],[17,6,12,8,"extendStatics"],[17,19,12,21],[17,20,12,22,"d"],[17,21,12,23],[17,23,12,25,"b"],[17,24,12,26],[17,25,12,27],[18,6,13,8],[18,15,13,17,"__"],[18,17,13,19,"__"],[18,18,13,19],[18,20,13,22],[19,8,13,24],[19,12,13,28],[19,13,13,29,"constructor"],[19,24,13,40],[19,27,13,43,"d"],[19,28,13,44],[20,6,13,46],[21,6,14,8,"d"],[21,7,14,9],[21,8,14,10,"prototype"],[21,17,14,19],[21,20,14,22,"b"],[21,21,14,23],[21,26,14,28],[21,30,14,32],[21,33,14,35,"Object"],[21,39,14,41],[21,40,14,42,"create"],[21,46,14,48],[21,47,14,49,"b"],[21,48,14,50],[21,49,14,51],[21,53,14,55,"__"],[21,55,14,57],[21,56,14,58,"prototype"],[21,65,14,67],[21,68,14,70,"b"],[21,69,14,71],[21,70,14,72,"prototype"],[21,79,14,81],[21,81,14,83],[21,85,14,87,"__"],[21,87,14,89],[21,88,14,90],[21,89,14,91],[21,90,14,92],[22,4,15,4],[22,5,15,5],[23,2,16,0],[23,3,16,1],[23,4,16,3],[23,5,16,4],[24,2,17,0,"Object"],[24,8,17,6],[24,9,17,7,"defineProperty"],[24,23,17,21],[24,24,17,22,"exports"],[24,31,17,29],[24,33,17,31],[24,45,17,43],[24,47,17,45],[25,4,17,47,"value"],[25,9,17,52],[25,11,17,54],[26,2,17,59],[26,3,17,60],[26,4,17,61],[27,2,18,0,"exports"],[27,9,18,7],[27,10,18,8,"GridLayoutManager"],[27,27,18,25],[27,30,18,28],[27,35,18,33],[27,36,18,34],[28,2,19,0],[28,6,19,4,"LayoutManager_1"],[28,21,19,19],[28,24,19,22,"require"],[28,31,19,29],[28,32,19,29,"_dependencyMap"],[28,46,19,29],[28,68,19,47],[28,69,19,48],[29,2,20,0],[29,6,20,4,"GridLayoutManager"],[29,23,20,21],[29,26,20,24],[29,39,20,39],[29,49,20,49,"_super"],[29,55,20,55],[29,57,20,57],[30,4,21,4,"__extends"],[30,13,21,13],[30,14,21,14,"GridLayoutManager"],[30,31,21,31],[30,33,21,33,"_super"],[30,39,21,39],[30,40,21,40],[31,4,22,4],[31,13,22,13,"GridLayoutManager"],[31,30,22,30,"GridLayoutManager"],[31,31,22,31,"layoutProvider"],[31,45,22,45],[31,47,22,47,"renderWindowSize"],[31,63,22,63],[31,65,22,65,"getSpan"],[31,72,22,72],[31,74,22,74,"maxSpan"],[31,81,22,81],[31,83,22,83,"acceptableRelayoutDelta"],[31,106,22,106],[31,108,22,108,"isHorizontal"],[31,120,22,120],[31,122,22,122,"cachedLayouts"],[31,135,22,135],[31,137,22,137],[32,6,23,8],[32,10,23,12,"_this"],[32,15,23,17],[32,18,23,20,"_super"],[32,24,23,26],[32,25,23,27,"call"],[32,29,23,31],[32,30,23,32],[32,34,23,36],[32,36,23,38,"layoutProvider"],[32,50,23,52],[32,52,23,54,"renderWindowSize"],[32,68,23,70],[32,70,23,72,"isHorizontal"],[32,82,23,84],[32,84,23,86,"cachedLayouts"],[32,97,23,99],[32,98,23,100],[32,102,23,104],[32,106,23,108],[33,6,24,8,"_this"],[33,11,24,13],[33,12,24,14,"_getSpan"],[33,20,24,22],[33,23,24,25,"getSpan"],[33,30,24,32],[34,6,25,8,"_this"],[34,11,25,13],[34,12,25,14,"_isGridHorizontal"],[34,29,25,31],[34,32,25,34,"isHorizontal"],[34,44,25,46],[35,6,26,8,"_this"],[35,11,26,13],[35,12,26,14,"_renderWindowSize"],[35,29,26,31],[35,32,26,34,"renderWindowSize"],[35,48,26,50],[36,6,27,8],[36,10,27,12,"acceptableRelayoutDelta"],[36,33,27,35],[36,36,27,38],[36,37,27,39],[36,39,27,41],[37,8,28,12],[37,14,28,18],[37,18,28,22,"Error"],[37,23,28,27],[37,24,28,28],[37,71,28,75],[37,72,28,76],[38,6,29,8],[38,7,29,9],[38,13,30,13],[39,8,31,12,"_this"],[39,13,31,17],[39,14,31,18,"_acceptableRelayoutDelta"],[39,38,31,42],[39,41,31,45,"acceptableRelayoutDelta"],[39,64,31,68],[40,6,32,8],[41,6,33,8],[41,10,33,12,"maxSpan"],[41,17,33,19],[41,21,33,23],[41,22,33,24],[41,24,33,26],[42,8,34,12],[42,14,34,18],[42,18,34,22,"Error"],[42,23,34,27],[42,24,34,28],[42,75,34,79],[42,76,34,80],[43,6,35,8],[43,7,35,9],[43,13,36,13],[44,8,37,12,"_this"],[44,13,37,17],[44,14,37,18,"_maxSpan"],[44,22,37,26],[44,25,37,29,"maxSpan"],[44,32,37,36],[45,6,38,8],[46,6,39,8],[46,13,39,15,"_this"],[46,18,39,20],[47,4,40,4],[48,4,41,4,"GridLayoutManager"],[48,21,41,21],[48,22,41,22,"prototype"],[48,31,41,31],[48,32,41,32,"overrideLayout"],[48,46,41,46],[48,49,41,49],[48,59,41,59,"index"],[48,64,41,64],[48,66,41,66,"dim"],[48,69,41,69],[48,71,41,71],[49,6,42,8],[50,6,43,8],[51,6,44,8],[52,6,45,8],[53,6,46,8],[54,6,47,8],[54,10,47,12,"layout"],[54,16,47,18],[54,19,47,21],[54,23,47,25],[54,24,47,26,"getLayouts"],[54,34,47,36],[54,35,47,37],[54,36,47,38],[54,37,47,39,"index"],[54,42,47,44],[54,43,47,45],[55,6,48,8],[55,10,48,12,"heightDiff"],[55,20,48,22],[55,23,48,25,"Math"],[55,27,48,29],[55,28,48,30,"abs"],[55,31,48,33],[55,32,48,34,"dim"],[55,35,48,37],[55,36,48,38,"height"],[55,42,48,44],[55,45,48,47,"layout"],[55,51,48,53],[55,52,48,54,"height"],[55,58,48,60],[55,59,48,61],[56,6,49,8],[56,10,49,12,"widthDiff"],[56,19,49,21],[56,22,49,24,"Math"],[56,26,49,28],[56,27,49,29,"abs"],[56,30,49,32],[56,31,49,33,"dim"],[56,34,49,36],[56,35,49,37,"width"],[56,40,49,42],[56,43,49,45,"layout"],[56,49,49,51],[56,50,49,52,"width"],[56,55,49,57],[56,56,49,58],[57,6,50,8],[57,10,50,12,"layout"],[57,16,50,18],[57,18,50,20],[58,8,51,12],[58,12,51,16],[58,16,51,20],[58,17,51,21,"_isGridHorizontal"],[58,34,51,38],[58,36,51,40],[59,10,52,16],[59,14,52,20,"heightDiff"],[59,24,52,30],[59,27,52,33],[59,31,52,37],[59,32,52,38,"_acceptableRelayoutDelta"],[59,56,52,62],[59,58,52,64],[60,12,53,20],[60,16,53,24,"widthDiff"],[60,25,53,33],[60,30,53,38],[60,31,53,39],[60,33,53,41],[61,14,54,24],[61,21,54,31],[61,26,54,36],[62,12,55,20],[63,12,56,20,"dim"],[63,15,56,23],[63,16,56,24,"height"],[63,22,56,30],[63,25,56,33,"layout"],[63,31,56,39],[63,32,56,40,"height"],[63,38,56,46],[64,10,57,16],[65,8,58,12],[65,9,58,13],[65,15,59,17],[66,10,60,16],[66,14,60,20,"widthDiff"],[66,23,60,29],[66,26,60,32],[66,30,60,36],[66,31,60,37,"_acceptableRelayoutDelta"],[66,55,60,61],[66,57,60,63],[67,12,61,20],[67,16,61,24,"heightDiff"],[67,26,61,34],[67,31,61,39],[67,32,61,40],[67,34,61,42],[68,14,62,24],[68,21,62,31],[68,26,62,36],[69,12,63,20],[70,12,64,20,"dim"],[70,15,64,23],[70,16,64,24,"width"],[70,21,64,29],[70,24,64,32,"layout"],[70,30,64,38],[70,31,64,39,"width"],[70,36,64,44],[71,10,65,16],[72,8,66,12],[73,6,67,8],[74,6,68,8],[74,13,68,15,"_super"],[74,19,68,21],[74,20,68,22,"prototype"],[74,29,68,31],[74,30,68,32,"overrideLayout"],[74,44,68,46],[74,45,68,47,"call"],[74,49,68,51],[74,50,68,52],[74,54,68,56],[74,56,68,58,"index"],[74,61,68,63],[74,63,68,65,"dim"],[74,66,68,68],[74,67,68,69],[75,4,69,4],[75,5,69,5],[76,4,70,4,"GridLayoutManager"],[76,21,70,21],[76,22,70,22,"prototype"],[76,31,70,31],[76,32,70,32,"getStyleOverridesForIndex"],[76,57,70,57],[76,60,70,60],[76,70,70,70,"index"],[76,75,70,75],[76,77,70,77],[77,6,71,8],[77,10,71,12,"columnSpanForIndex"],[77,28,71,30],[77,31,71,33],[77,35,71,37],[77,36,71,38,"_getSpan"],[77,44,71,46],[77,45,71,47,"index"],[77,50,71,52],[77,51,71,53],[78,6,72,8],[78,13,72,15],[78,17,72,19],[78,18,72,20,"_isGridHorizontal"],[78,35,72,37],[78,38,73,14],[79,8,74,16,"height"],[79,14,74,22],[79,16,74,25],[79,20,74,29],[79,21,74,30,"_renderWindowSize"],[79,38,74,47],[79,39,74,48,"height"],[79,45,74,54],[79,48,74,57],[79,52,74,61],[79,53,74,62,"_maxSpan"],[79,61,74,70],[79,64,74,74,"columnSpanForIndex"],[80,6,75,12],[80,7,75,13],[80,10,76,14],[81,8,77,16,"width"],[81,13,77,21],[81,15,77,24],[81,19,77,28],[81,20,77,29,"_renderWindowSize"],[81,37,77,46],[81,38,77,47,"width"],[81,43,77,52],[81,46,77,55],[81,50,77,59],[81,51,77,60,"_maxSpan"],[81,59,77,68],[81,62,77,72,"columnSpanForIndex"],[82,6,78,12],[82,7,78,13],[83,4,79,4],[83,5,79,5],[84,4,80,4],[84,11,80,11,"GridLayoutManager"],[84,28,80,28],[85,2,81,0],[85,3,81,1],[85,4,81,2,"LayoutManager_1"],[85,19,81,17],[85,20,81,18,"WrapGridLayoutManager"],[85,41,81,39],[85,42,81,41],[86,2,82,0,"exports"],[86,9,82,7],[86,10,82,8,"GridLayoutManager"],[86,27,82,25],[86,30,82,28,"GridLayoutManager"],[86,47,82,45],[87,0,82,46],[87,3]],"functionMap":{"names":["<global>","<anonymous>","extendStatics","__","GridLayoutManager","prototype.overrideLayout","prototype.getStyleOverridesForIndex"],"mappings":"AAA;6CCC;wBCC;mDDE,oCC;YDC,iGC;KDE;QEK,uCF;CDG;uCCI;IGE;KHkB;iDIC;KJ4B;4DKC;KLS;CDE"},"hasCjsExports":true},"type":"js/module"}]}