{"dependencies":[{"name":"../utils/resolve-elements.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"Mu9PFplvmYWvHcgPv1FR15skvmU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"inView\", {\n    enumerable: true,\n    get: function () {\n      return inView;\n    }\n  });\n  var _utilsResolveElementsEsJs = require(_dependencyMap[0], \"../utils/resolve-elements.es.js\");\n  const thresholds = {\n    any: 0,\n    all: 1\n  };\n  function inView(elementOrSelector, onStart, {\n    root,\n    margin: rootMargin,\n    amount = \"any\"\n  } = {}) {\n    /**\n     * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n     * Default triggering of onStart is tricky - it could be used for starting/stopping\n     * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n     * provide a fallback callback option.\n     */\n    if (typeof IntersectionObserver === \"undefined\") {\n      return () => {};\n    }\n    const elements = (0, _utilsResolveElementsEsJs.resolveElements)(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = entries => {\n      entries.forEach(entry => {\n        const onEnd = activeIntersections.get(entry.target);\n        /**\n         * If there's no change to the intersection, we don't need to\n         * do anything here.\n         */\n        if (entry.isIntersecting === Boolean(onEnd)) return;\n        if (entry.isIntersecting) {\n          const newOnEnd = onStart(entry);\n          if (typeof newOnEnd === \"function\") {\n            activeIntersections.set(entry.target, newOnEnd);\n          } else {\n            observer.unobserve(entry.target);\n          }\n        } else if (onEnd) {\n          onEnd(entry);\n          activeIntersections.delete(entry.target);\n        }\n      });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n      root,\n      rootMargin,\n      threshold: typeof amount === \"number\" ? amount : thresholds[amount]\n    });\n    elements.forEach(element => observer.observe(element));\n    return () => observer.disconnect();\n  }\n});","lineCount":63,"map":[[7,2,52,0,"Object"],[7,8,52,0],[7,9,52,0,"defineProperty"],[7,23,52,0],[7,24,52,0,"exports"],[7,31,52,0],[8,4,52,0,"enumerable"],[8,14,52,0],[9,4,52,0,"get"],[9,7,52,0],[9,18,52,0,"get"],[9,19,52,0],[10,6,52,0],[10,13,52,9,"inView"],[10,19,52,15],[11,4,52,15],[12,2,52,15],[13,2,1,0],[13,6,1,0,"_utilsResolveElementsEsJs"],[13,31,1,0],[13,34,1,0,"require"],[13,41,1,0],[13,42,1,0,"_dependencyMap"],[13,56,1,0],[14,2,3,0],[14,8,3,6,"thresholds"],[14,18,3,16],[14,21,3,19],[15,4,4,4,"any"],[15,7,4,7],[15,9,4,9],[15,10,4,10],[16,4,5,4,"all"],[16,7,5,7],[16,9,5,9],[17,2,6,0],[17,3,6,1],[18,2,7,0],[18,11,7,9,"inView"],[18,17,7,15,"inView"],[18,18,7,16,"elementOrSelector"],[18,35,7,33],[18,37,7,35,"onStart"],[18,44,7,42],[18,46,7,44],[19,4,7,46,"root"],[19,8,7,50],[20,4,7,52,"margin"],[20,10,7,58],[20,12,7,60,"rootMargin"],[20,22,7,70],[21,4,7,72,"amount"],[21,10,7,78],[21,13,7,81],[22,2,7,87],[22,3,7,88],[22,6,7,91],[22,7,7,92],[22,8,7,93],[22,10,7,95],[23,4,8,4],[24,0,9,0],[25,0,10,0],[26,0,11,0],[27,0,12,0],[28,0,13,0],[29,4,14,4],[29,8,14,8],[29,15,14,15,"IntersectionObserver"],[29,35,14,35],[29,40,14,40],[29,51,14,51],[29,53,14,53],[30,6,15,8],[30,13,15,15],[30,19,15,21],[30,20,15,23],[30,21,15,24],[31,4,16,4],[32,4,17,4],[32,10,17,10,"elements"],[32,18,17,18],[32,21,17,21],[32,25,17,21,"resolveElements"],[32,50,17,36],[32,51,17,36,"resolveElements"],[32,66,17,36],[32,68,17,37,"elementOrSelector"],[32,85,17,54],[32,86,17,55],[33,4,18,4],[33,10,18,10,"activeIntersections"],[33,29,18,29],[33,32,18,32],[33,36,18,36,"WeakMap"],[33,43,18,43],[33,44,18,44],[33,45,18,45],[34,4,19,4],[34,10,19,10,"onIntersectionChange"],[34,30,19,30],[34,33,19,34,"entries"],[34,40,19,41],[34,44,19,46],[35,6,20,8,"entries"],[35,13,20,15],[35,14,20,16,"forEach"],[35,21,20,23],[35,22,20,25,"entry"],[35,27,20,30],[35,31,20,35],[36,8,21,12],[36,14,21,18,"onEnd"],[36,19,21,23],[36,22,21,26,"activeIntersections"],[36,41,21,45],[36,42,21,46,"get"],[36,45,21,49],[36,46,21,50,"entry"],[36,51,21,55],[36,52,21,56,"target"],[36,58,21,62],[36,59,21,63],[37,8,22,12],[38,0,23,0],[39,0,24,0],[40,0,25,0],[41,8,26,12],[41,12,26,16,"entry"],[41,17,26,21],[41,18,26,22,"isIntersecting"],[41,32,26,36],[41,37,26,41,"Boolean"],[41,44,26,48],[41,45,26,49,"onEnd"],[41,50,26,54],[41,51,26,55],[41,53,27,16],[42,8,28,12],[42,12,28,16,"entry"],[42,17,28,21],[42,18,28,22,"isIntersecting"],[42,32,28,36],[42,34,28,38],[43,10,29,16],[43,16,29,22,"newOnEnd"],[43,24,29,30],[43,27,29,33,"onStart"],[43,34,29,40],[43,35,29,41,"entry"],[43,40,29,46],[43,41,29,47],[44,10,30,16],[44,14,30,20],[44,21,30,27,"newOnEnd"],[44,29,30,35],[44,34,30,40],[44,44,30,50],[44,46,30,52],[45,12,31,20,"activeIntersections"],[45,31,31,39],[45,32,31,40,"set"],[45,35,31,43],[45,36,31,44,"entry"],[45,41,31,49],[45,42,31,50,"target"],[45,48,31,56],[45,50,31,58,"newOnEnd"],[45,58,31,66],[45,59,31,67],[46,10,32,16],[46,11,32,17],[46,17,33,21],[47,12,34,20,"observer"],[47,20,34,28],[47,21,34,29,"unobserve"],[47,30,34,38],[47,31,34,39,"entry"],[47,36,34,44],[47,37,34,45,"target"],[47,43,34,51],[47,44,34,52],[48,10,35,16],[49,8,36,12],[49,9,36,13],[49,15,37,17],[49,19,37,21,"onEnd"],[49,24,37,26],[49,26,37,28],[50,10,38,16,"onEnd"],[50,15,38,21],[50,16,38,22,"entry"],[50,21,38,27],[50,22,38,28],[51,10,39,16,"activeIntersections"],[51,29,39,35],[51,30,39,36,"delete"],[51,36,39,42],[51,37,39,43,"entry"],[51,42,39,48],[51,43,39,49,"target"],[51,49,39,55],[51,50,39,56],[52,8,40,12],[53,6,41,8],[53,7,41,9],[53,8,41,10],[54,4,42,4],[54,5,42,5],[55,4,43,4],[55,10,43,10,"observer"],[55,18,43,18],[55,21,43,21],[55,25,43,25,"IntersectionObserver"],[55,45,43,45],[55,46,43,46,"onIntersectionChange"],[55,66,43,66],[55,68,43,68],[56,6,44,8,"root"],[56,10,44,12],[57,6,45,8,"rootMargin"],[57,16,45,18],[58,6,46,8,"threshold"],[58,15,46,17],[58,17,46,19],[58,24,46,26,"amount"],[58,30,46,32],[58,35,46,37],[58,43,46,45],[58,46,46,48,"amount"],[58,52,46,54],[58,55,46,57,"thresholds"],[58,65,46,67],[58,66,46,68,"amount"],[58,72,46,74],[59,4,47,4],[59,5,47,5],[59,6,47,6],[60,4,48,4,"elements"],[60,12,48,12],[60,13,48,13,"forEach"],[60,20,48,20],[60,21,48,22,"element"],[60,28,48,29],[60,32,48,34,"observer"],[60,40,48,42],[60,41,48,43,"observe"],[60,48,48,50],[60,49,48,51,"element"],[60,56,48,58],[60,57,48,59],[60,58,48,60],[61,4,49,4],[61,11,49,11],[61,17,49,17,"observer"],[61,25,49,25],[61,26,49,26,"disconnect"],[61,36,49,36],[61,37,49,37],[61,38,49,38],[62,2,50,0],[63,0,50,1],[63,3]],"functionMap":{"names":["<global>","inView","<anonymous>","onIntersectionChange","entries.forEach$argument_0","elements.forEach$argument_0"],"mappings":"AAA;ACM;eCQ,SD;iCEI;wBCC;SDqB;KFC;qBIM,sCJ;WCC,2BD;CDC"},"hasCjsExports":false},"type":"js/module"}]}