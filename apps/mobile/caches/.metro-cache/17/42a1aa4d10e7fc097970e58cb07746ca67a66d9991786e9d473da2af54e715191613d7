{"dependencies":[{"name":"./use-transform.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"XOL/B4xTLfZdDAS5JwWWeGgDtYg=","exportNames":["*"],"imports":1}},{"name":"hey-listen","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":48,"index":100}}],"key":"5p342VF2FjgsoIiIlnJV4kmYYFQ=","exportNames":["*"],"imports":1}},{"name":"./use-motion-value.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":101},"end":{"line":3,"column":56,"index":157}}],"key":"r3TCCJQhNId62V1YZiSwQIe2USc=","exportNames":["*"],"imports":1}},{"name":"../context/MotionContext/index.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":158},"end":{"line":4,"column":77,"index":235}}],"key":"qIY48vBCH7SFyo4/T12srWoGmUs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"invertScale\", {\n    enumerable: true,\n    get: function () {\n      return invertScale;\n    }\n  });\n  Object.defineProperty(exports, \"useInvertedScale\", {\n    enumerable: true,\n    get: function () {\n      return useInvertedScale;\n    }\n  });\n  var _useTransformMjs = require(_dependencyMap[0], \"./use-transform.mjs\");\n  var _heyListen = require(_dependencyMap[1], \"hey-listen\");\n  var _useMotionValueMjs = require(_dependencyMap[2], \"./use-motion-value.mjs\");\n  var _contextMotionContextIndexMjs = require(_dependencyMap[3], \"../context/MotionContext/index.mjs\");\n  // Keep things reasonable and avoid scale: Infinity. In practise we might need\n  // to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n  // to simply hide content at unreasonable scales.\n  var maxScale = 100000;\n  var invertScale = function (scale) {\n    return scale > 0.001 ? 1 / scale : maxScale;\n  };\n  var hasWarned = false;\n  /**\n   * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n   * of their respective parent scales.\n   *\n   * This is useful for undoing the distortion of content when scaling a parent component.\n   *\n   * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n   * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n   * of those instead.\n   *\n   * ```jsx\n   * const MyComponent = () => {\n   *   const { scaleX, scaleY } = useInvertedScale()\n   *   return <motion.div style={{ scaleX, scaleY }} />\n   * }\n   * ```\n   *\n   * @deprecated\n   */\n  function useInvertedScale(scale) {\n    var parentScaleX = (0, _useMotionValueMjs.useMotionValue)(1);\n    var parentScaleY = (0, _useMotionValueMjs.useMotionValue)(1);\n    var visualElement = (0, _contextMotionContextIndexMjs.useVisualElementContext)();\n    (0, _heyListen.invariant)(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n    (0, _heyListen.warning)(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n    hasWarned = true;\n    if (scale) {\n      parentScaleX = scale.scaleX || parentScaleX;\n      parentScaleY = scale.scaleY || parentScaleY;\n    } else if (visualElement) {\n      parentScaleX = visualElement.getValue(\"scaleX\", 1);\n      parentScaleY = visualElement.getValue(\"scaleY\", 1);\n    }\n    var scaleX = (0, _useTransformMjs.useTransform)(parentScaleX, invertScale);\n    var scaleY = (0, _useTransformMjs.useTransform)(parentScaleY, invertScale);\n    return {\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n});","lineCount":71,"map":[[7,2,53,0,"Object"],[7,8,53,0],[7,9,53,0,"defineProperty"],[7,23,53,0],[7,24,53,0,"exports"],[7,31,53,0],[8,4,53,0,"enumerable"],[8,14,53,0],[9,4,53,0,"get"],[9,7,53,0],[9,18,53,0,"get"],[9,19,53,0],[10,6,53,0],[10,13,53,9,"invertScale"],[10,24,53,20],[11,4,53,20],[12,2,53,20],[13,2,53,0,"Object"],[13,8,53,0],[13,9,53,0,"defineProperty"],[13,23,53,0],[13,24,53,0,"exports"],[13,31,53,0],[14,4,53,0,"enumerable"],[14,14,53,0],[15,4,53,0,"get"],[15,7,53,0],[15,18,53,0,"get"],[15,19,53,0],[16,6,53,0],[16,13,53,22,"useInvertedScale"],[16,29,53,38],[17,4,53,38],[18,2,53,38],[19,2,1,0],[19,6,1,0,"_useTransformMjs"],[19,22,1,0],[19,25,1,0,"require"],[19,32,1,0],[19,33,1,0,"_dependencyMap"],[19,47,1,0],[20,2,2,0],[20,6,2,0,"_heyListen"],[20,16,2,0],[20,19,2,0,"require"],[20,26,2,0],[20,27,2,0,"_dependencyMap"],[20,41,2,0],[21,2,3,0],[21,6,3,0,"_useMotionValueMjs"],[21,24,3,0],[21,27,3,0,"require"],[21,34,3,0],[21,35,3,0,"_dependencyMap"],[21,49,3,0],[22,2,4,0],[22,6,4,0,"_contextMotionContextIndexMjs"],[22,35,4,0],[22,38,4,0,"require"],[22,45,4,0],[22,46,4,0,"_dependencyMap"],[22,60,4,0],[23,2,6,0],[24,2,7,0],[25,2,8,0],[26,2,9,0],[26,6,9,4,"maxScale"],[26,14,9,12],[26,17,9,15],[26,23,9,21],[27,2,10,0],[27,6,10,4,"invertScale"],[27,17,10,15],[27,20,10,18],[27,29,10,18,"invertScale"],[27,30,10,28,"scale"],[27,35,10,33],[27,37,10,35],[28,4,11,4],[28,11,11,11,"scale"],[28,16,11,16],[28,19,11,19],[28,24,11,24],[28,27,11,27],[28,28,11,28],[28,31,11,31,"scale"],[28,36,11,36],[28,39,11,39,"maxScale"],[28,47,11,47],[29,2,12,0],[29,3,12,1],[30,2,13,0],[30,6,13,4,"hasWarned"],[30,15,13,13],[30,18,13,16],[30,23,13,21],[31,2,14,0],[32,0,15,0],[33,0,16,0],[34,0,17,0],[35,0,18,0],[36,0,19,0],[37,0,20,0],[38,0,21,0],[39,0,22,0],[40,0,23,0],[41,0,24,0],[42,0,25,0],[43,0,26,0],[44,0,27,0],[45,0,28,0],[46,0,29,0],[47,0,30,0],[48,0,31,0],[49,0,32,0],[50,2,33,0],[50,11,33,9,"useInvertedScale"],[50,27,33,25,"useInvertedScale"],[50,28,33,26,"scale"],[50,33,33,31],[50,35,33,33],[51,4,34,4],[51,8,34,8,"parentScaleX"],[51,20,34,20],[51,23,34,23],[51,27,34,23,"useMotionValue"],[51,45,34,37],[51,46,34,37,"useMotionValue"],[51,60,34,37],[51,62,34,38],[51,63,34,39],[51,64,34,40],[52,4,35,4],[52,8,35,8,"parentScaleY"],[52,20,35,20],[52,23,35,23],[52,27,35,23,"useMotionValue"],[52,45,35,37],[52,46,35,37,"useMotionValue"],[52,60,35,37],[52,62,35,38],[52,63,35,39],[52,64,35,40],[53,4,36,4],[53,8,36,8,"visualElement"],[53,21,36,21],[53,24,36,24],[53,28,36,24,"useVisualElementContext"],[53,57,36,47],[53,58,36,47,"useVisualElementContext"],[53,81,36,47],[53,83,36,48],[53,84,36,49],[54,4,37,4],[54,8,37,4,"invariant"],[54,18,37,13],[54,19,37,13,"invariant"],[54,28,37,13],[54,30,37,14],[54,31,37,15],[54,33,37,17,"scale"],[54,38,37,22],[54,42,37,26,"visualElement"],[54,55,37,39],[54,56,37,40],[54,58,37,42],[54,166,37,150],[54,167,37,151],[55,4,38,4],[55,8,38,4,"warning"],[55,18,38,11],[55,19,38,11,"warning"],[55,26,38,11],[55,28,38,12,"hasWarned"],[55,37,38,21],[55,39,38,23],[55,128,38,112],[55,129,38,113],[56,4,39,4,"hasWarned"],[56,13,39,13],[56,16,39,16],[56,20,39,20],[57,4,40,4],[57,8,40,8,"scale"],[57,13,40,13],[57,15,40,15],[58,6,41,8,"parentScaleX"],[58,18,41,20],[58,21,41,23,"scale"],[58,26,41,28],[58,27,41,29,"scaleX"],[58,33,41,35],[58,37,41,39,"parentScaleX"],[58,49,41,51],[59,6,42,8,"parentScaleY"],[59,18,42,20],[59,21,42,23,"scale"],[59,26,42,28],[59,27,42,29,"scaleY"],[59,33,42,35],[59,37,42,39,"parentScaleY"],[59,49,42,51],[60,4,43,4],[60,5,43,5],[60,11,44,9],[60,15,44,13,"visualElement"],[60,28,44,26],[60,30,44,28],[61,6,45,8,"parentScaleX"],[61,18,45,20],[61,21,45,23,"visualElement"],[61,34,45,36],[61,35,45,37,"getValue"],[61,43,45,45],[61,44,45,46],[61,52,45,54],[61,54,45,56],[61,55,45,57],[61,56,45,58],[62,6,46,8,"parentScaleY"],[62,18,46,20],[62,21,46,23,"visualElement"],[62,34,46,36],[62,35,46,37,"getValue"],[62,43,46,45],[62,44,46,46],[62,52,46,54],[62,54,46,56],[62,55,46,57],[62,56,46,58],[63,4,47,4],[64,4,48,4],[64,8,48,8,"scaleX"],[64,14,48,14],[64,17,48,17],[64,21,48,17,"useTransform"],[64,37,48,29],[64,38,48,29,"useTransform"],[64,50,48,29],[64,52,48,30,"parentScaleX"],[64,64,48,42],[64,66,48,44,"invertScale"],[64,77,48,55],[64,78,48,56],[65,4,49,4],[65,8,49,8,"scaleY"],[65,14,49,14],[65,17,49,17],[65,21,49,17,"useTransform"],[65,37,49,29],[65,38,49,29,"useTransform"],[65,50,49,29],[65,52,49,30,"parentScaleY"],[65,64,49,42],[65,66,49,44,"invertScale"],[65,77,49,55],[65,78,49,56],[66,4,50,4],[66,11,50,11],[67,6,50,13,"scaleX"],[67,12,50,19],[67,14,50,21,"scaleX"],[67,20,50,27],[68,6,50,29,"scaleY"],[68,12,50,35],[68,14,50,37,"scaleY"],[69,4,50,44],[69,5,50,45],[70,2,51,0],[71,0,51,1],[71,3]],"functionMap":{"names":["<global>","invertScale","useInvertedScale"],"mappings":"AAA;kBCS;CDE;AEqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}