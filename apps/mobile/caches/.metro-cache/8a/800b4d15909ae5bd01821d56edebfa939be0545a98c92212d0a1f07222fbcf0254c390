{"dependencies":[{"name":"style-value-types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"amhWSRCUxLBa3Njmww3P7iM/NQE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"buildSVGPath\", {\n    enumerable: true,\n    get: function () {\n      return buildSVGPath;\n    }\n  });\n  var _styleValueTypes = require(_dependencyMap[0], \"style-value-types\");\n  var dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\"\n  };\n  var camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\"\n  };\n  /**\n   * Build SVG path properties. Uses the path's measured length to convert\n   * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n   * and stroke-dasharray attributes.\n   *\n   * This function is mutative to reduce per-frame GC.\n   */\n  function buildSVGPath(attrs, length, spacing, offset, useDashCase) {\n    if (spacing === void 0) {\n      spacing = 1;\n    }\n    if (offset === void 0) {\n      offset = 0;\n    }\n    if (useDashCase === void 0) {\n      useDashCase = true;\n    }\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    var keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = _styleValueTypes.px.transform(-offset);\n    // Build the dash array\n    var pathLength = _styleValueTypes.px.transform(length);\n    var pathSpacing = _styleValueTypes.px.transform(spacing);\n    attrs[keys.array] = \"\".concat(pathLength, \" \").concat(pathSpacing);\n  }\n});","lineCount":51,"map":[[7,2,35,0,"Object"],[7,8,35,0],[7,9,35,0,"defineProperty"],[7,23,35,0],[7,24,35,0,"exports"],[7,31,35,0],[8,4,35,0,"enumerable"],[8,14,35,0],[9,4,35,0,"get"],[9,7,35,0],[9,18,35,0,"get"],[9,19,35,0],[10,6,35,0],[10,13,35,9,"buildSVGPath"],[10,25,35,21],[11,4,35,21],[12,2,35,21],[13,2,1,0],[13,6,1,0,"_styleValueTypes"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,3,0],[14,6,3,4,"dashKeys"],[14,14,3,12],[14,17,3,15],[15,4,4,4,"offset"],[15,10,4,10],[15,12,4,12],[15,31,4,31],[16,4,5,4,"array"],[16,9,5,9],[16,11,5,11],[17,2,6,0],[17,3,6,1],[18,2,7,0],[18,6,7,4,"camelKeys"],[18,15,7,13],[18,18,7,16],[19,4,8,4,"offset"],[19,10,8,10],[19,12,8,12],[19,30,8,30],[20,4,9,4,"array"],[20,9,9,9],[20,11,9,11],[21,2,10,0],[21,3,10,1],[22,2,11,0],[23,0,12,0],[24,0,13,0],[25,0,14,0],[26,0,15,0],[27,0,16,0],[28,0,17,0],[29,2,18,0],[29,11,18,9,"buildSVGPath"],[29,23,18,21,"buildSVGPath"],[29,24,18,22,"attrs"],[29,29,18,27],[29,31,18,29,"length"],[29,37,18,35],[29,39,18,37,"spacing"],[29,46,18,44],[29,48,18,46,"offset"],[29,54,18,52],[29,56,18,54,"useDashCase"],[29,67,18,65],[29,69,18,67],[30,4,19,4],[30,8,19,8,"spacing"],[30,15,19,15],[30,20,19,20],[30,25,19,25],[30,26,19,26],[30,28,19,28],[31,6,19,30,"spacing"],[31,13,19,37],[31,16,19,40],[31,17,19,41],[32,4,19,43],[33,4,20,4],[33,8,20,8,"offset"],[33,14,20,14],[33,19,20,19],[33,24,20,24],[33,25,20,25],[33,27,20,27],[34,6,20,29,"offset"],[34,12,20,35],[34,15,20,38],[34,16,20,39],[35,4,20,41],[36,4,21,4],[36,8,21,8,"useDashCase"],[36,19,21,19],[36,24,21,24],[36,29,21,29],[36,30,21,30],[36,32,21,32],[37,6,21,34,"useDashCase"],[37,17,21,45],[37,20,21,48],[37,24,21,52],[38,4,21,54],[39,4,22,4],[40,4,23,4,"attrs"],[40,9,23,9],[40,10,23,10,"pathLength"],[40,20,23,20],[40,23,23,23],[40,24,23,24],[41,4,24,4],[42,4,25,4],[43,4,26,4],[43,8,26,8,"keys"],[43,12,26,12],[43,15,26,15,"useDashCase"],[43,26,26,26],[43,29,26,29,"dashKeys"],[43,37,26,37],[43,40,26,40,"camelKeys"],[43,49,26,49],[44,4,27,4],[45,4,28,4,"attrs"],[45,9,28,9],[45,10,28,10,"keys"],[45,14,28,14],[45,15,28,15,"offset"],[45,21,28,21],[45,22,28,22],[45,25,28,25,"px"],[45,41,28,27],[45,42,28,27,"px"],[45,44,28,27],[45,45,28,28,"transform"],[45,54,28,37],[45,55,28,38],[45,56,28,39,"offset"],[45,62,28,45],[45,63,28,46],[46,4,29,4],[47,4,30,4],[47,8,30,8,"pathLength"],[47,18,30,18],[47,21,30,21,"px"],[47,37,30,23],[47,38,30,23,"px"],[47,40,30,23],[47,41,30,24,"transform"],[47,50,30,33],[47,51,30,34,"length"],[47,57,30,40],[47,58,30,41],[48,4,31,4],[48,8,31,8,"pathSpacing"],[48,19,31,19],[48,22,31,22,"px"],[48,38,31,24],[48,39,31,24,"px"],[48,41,31,24],[48,42,31,25,"transform"],[48,51,31,34],[48,52,31,35,"spacing"],[48,59,31,42],[48,60,31,43],[49,4,32,4,"attrs"],[49,9,32,9],[49,10,32,10,"keys"],[49,14,32,14],[49,15,32,15,"array"],[49,20,32,20],[49,21,32,21],[49,24,32,24],[49,26,32,26],[49,27,32,27,"concat"],[49,33,32,33],[49,34,32,34,"pathLength"],[49,44,32,44],[49,46,32,46],[49,49,32,49],[49,50,32,50],[49,51,32,51,"concat"],[49,57,32,57],[49,58,32,58,"pathSpacing"],[49,69,32,69],[49,70,32,70],[50,2,33,0],[51,0,33,1],[51,3]],"functionMap":{"names":["<global>","buildSVGPath"],"mappings":"AAA;ACiB;CDe"},"hasCjsExports":false},"type":"js/module"}]}