{"dependencies":[{"name":"./_baseRange","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":16,"index":16},"end":{"line":1,"column":39,"index":39}}],"key":"WCh4Tl1iTaYLDuFJhpsYpicRAeQ=","exportNames":["*"]}},{"name":"./_isIterateeCall","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":21,"index":62},"end":{"line":2,"column":49,"index":90}}],"key":"pXuobraUZw5gVpdfHmD32ivSsgo=","exportNames":["*"]}},{"name":"./toFinite","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":15,"index":107},"end":{"line":3,"column":36,"index":128}}],"key":"JlM04S5mZI/armp0DIV+Z9UNRAY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseRange = require(_dependencyMap[0], \"./_baseRange\"),\n    isIterateeCall = require(_dependencyMap[1], \"./_isIterateeCall\"),\n    toFinite = require(_dependencyMap[2], \"./toFinite\");\n\n  /**\n   * Creates a `_.range` or `_.rangeRight` function.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new range function.\n   */\n  function createRange(fromRight) {\n    return function (start, end, step) {\n      if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      // Ensure the sign of `-0` is preserved.\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      step = step === undefined ? start < end ? 1 : -1 : toFinite(step);\n      return baseRange(start, end, step, fromRight);\n    };\n  }\n  module.exports = createRange;\n});","lineCount":31,"map":[[2,2,1,0],[2,6,1,4,"baseRange"],[2,15,1,13],[2,18,1,16,"require"],[2,25,1,23],[2,26,1,23,"_dependencyMap"],[2,40,1,23],[2,59,1,38],[2,60,1,39],[3,4,2,4,"isIterateeCall"],[3,18,2,18],[3,21,2,21,"require"],[3,28,2,28],[3,29,2,28,"_dependencyMap"],[3,43,2,28],[3,67,2,48],[3,68,2,49],[4,4,3,4,"toFinite"],[4,12,3,12],[4,15,3,15,"require"],[4,22,3,22],[4,23,3,22,"_dependencyMap"],[4,37,3,22],[4,54,3,35],[4,55,3,36],[6,2,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,2,12,0],[13,11,12,9,"createRange"],[13,22,12,20,"createRange"],[13,23,12,21,"fromRight"],[13,32,12,30],[13,34,12,32],[14,4,13,2],[14,11,13,9],[14,21,13,18,"start"],[14,26,13,23],[14,28,13,25,"end"],[14,31,13,28],[14,33,13,30,"step"],[14,37,13,34],[14,39,13,36],[15,6,14,4],[15,10,14,8,"step"],[15,14,14,12],[15,18,14,16],[15,25,14,23,"step"],[15,29,14,27],[15,33,14,31],[15,41,14,39],[15,45,14,43,"isIterateeCall"],[15,59,14,57],[15,60,14,58,"start"],[15,65,14,63],[15,67,14,65,"end"],[15,70,14,68],[15,72,14,70,"step"],[15,76,14,74],[15,77,14,75],[15,79,14,77],[16,8,15,6,"end"],[16,11,15,9],[16,14,15,12,"step"],[16,18,15,16],[16,21,15,19,"undefined"],[16,30,15,28],[17,6,16,4],[18,6,17,4],[19,6,18,4,"start"],[19,11,18,9],[19,14,18,12,"toFinite"],[19,22,18,20],[19,23,18,21,"start"],[19,28,18,26],[19,29,18,27],[20,6,19,4],[20,10,19,8,"end"],[20,13,19,11],[20,18,19,16,"undefined"],[20,27,19,25],[20,29,19,27],[21,8,20,6,"end"],[21,11,20,9],[21,14,20,12,"start"],[21,19,20,17],[22,8,21,6,"start"],[22,13,21,11],[22,16,21,14],[22,17,21,15],[23,6,22,4],[23,7,22,5],[23,13,22,11],[24,8,23,6,"end"],[24,11,23,9],[24,14,23,12,"toFinite"],[24,22,23,20],[24,23,23,21,"end"],[24,26,23,24],[24,27,23,25],[25,6,24,4],[26,6,25,4,"step"],[26,10,25,8],[26,13,25,11,"step"],[26,17,25,15],[26,22,25,20,"undefined"],[26,31,25,29],[26,34,25,33,"start"],[26,39,25,38],[26,42,25,41,"end"],[26,45,25,44],[26,48,25,47],[26,49,25,48],[26,52,25,51],[26,53,25,52],[26,54,25,53],[26,57,25,57,"toFinite"],[26,65,25,65],[26,66,25,66,"step"],[26,70,25,70],[26,71,25,71],[27,6,26,4],[27,13,26,11,"baseRange"],[27,22,26,20],[27,23,26,21,"start"],[27,28,26,26],[27,30,26,28,"end"],[27,33,26,31],[27,35,26,33,"step"],[27,39,26,37],[27,41,26,39,"fromRight"],[27,50,26,48],[27,51,26,49],[28,4,27,2],[28,5,27,3],[29,2,28,0],[30,2,30,0,"module"],[30,8,30,6],[30,9,30,7,"exports"],[30,16,30,14],[30,19,30,17,"createRange"],[30,30,30,28],[31,0,30,29],[31,3]],"functionMap":{"names":["<global>","createRange","<anonymous>"],"mappings":"AAA;ACW;SCC;GDc;CDC"}},"type":"js/module"}]}