{"dependencies":[{"name":"hey-listen","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"5p342VF2FjgsoIiIlnJV4kmYYFQ=","exportNames":["*"],"imports":1}},{"name":"../../utils/clamp.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":38},"end":{"line":2,"column":46,"index":84}}],"key":"4lYq4niBZLcSZeimalNrPfhmC9E=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"calcAngularFreq\", {\n    enumerable: true,\n    get: function () {\n      return calcAngularFreq;\n    }\n  });\n  Object.defineProperty(exports, \"findSpring\", {\n    enumerable: true,\n    get: function () {\n      return findSpring;\n    }\n  });\n  Object.defineProperty(exports, \"maxDamping\", {\n    enumerable: true,\n    get: function () {\n      return maxDamping;\n    }\n  });\n  Object.defineProperty(exports, \"maxDuration\", {\n    enumerable: true,\n    get: function () {\n      return maxDuration;\n    }\n  });\n  Object.defineProperty(exports, \"minDamping\", {\n    enumerable: true,\n    get: function () {\n      return minDamping;\n    }\n  });\n  Object.defineProperty(exports, \"minDuration\", {\n    enumerable: true,\n    get: function () {\n      return minDuration;\n    }\n  });\n  var _heyListen = require(_dependencyMap[0], \"hey-listen\");\n  var _utilsClampMjs = require(_dependencyMap[1], \"../../utils/clamp.mjs\");\n  const safeMin = 0.001;\n  const minDuration = 0.01;\n  const maxDuration = 10.0;\n  const minDamping = 0.05;\n  const maxDamping = 1;\n  function findSpring({\n    duration = 800,\n    bounce = 0.25,\n    velocity = 0,\n    mass = 1\n  }) {\n    let envelope;\n    let derivative;\n    (0, _heyListen.warning)(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    dampingRatio = (0, _utilsClampMjs.clamp)(minDamping, maxDamping, dampingRatio);\n    duration = (0, _utilsClampMjs.clamp)(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n      envelope = undampedFreq => {\n        const exponentialDecay = undampedFreq * dampingRatio;\n        const delta = exponentialDecay * duration;\n        const a = exponentialDecay - velocity;\n        const b = calcAngularFreq(undampedFreq, dampingRatio);\n        const c = Math.exp(-delta);\n        return safeMin - a / b * c;\n      };\n      derivative = undampedFreq => {\n        const exponentialDecay = undampedFreq * dampingRatio;\n        const delta = exponentialDecay * duration;\n        const d = delta * velocity + velocity;\n        const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n        const f = Math.exp(-delta);\n        const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n        const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n        return factor * ((d - e) * f) / g;\n      };\n    } else {\n      envelope = undampedFreq => {\n        const a = Math.exp(-undampedFreq * duration);\n        const b = (undampedFreq - velocity) * duration + 1;\n        return -safeMin + a * b;\n      };\n      derivative = undampedFreq => {\n        const a = Math.exp(-undampedFreq * duration);\n        const b = (velocity - undampedFreq) * (duration * duration);\n        return a * b;\n      };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n      return {\n        stiffness: 100,\n        damping: 10,\n        duration\n      };\n    } else {\n      const stiffness = Math.pow(undampedFreq, 2) * mass;\n      return {\n        stiffness,\n        damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n        duration\n      };\n    }\n  }\n  const rootIterations = 12;\n  function approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n      result = result - envelope(result) / derivative(result);\n    }\n    return result;\n  }\n  function calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n  }\n});","lineCount":122,"map":[[7,2,79,0,"Object"],[7,8,79,0],[7,9,79,0,"defineProperty"],[7,23,79,0],[7,24,79,0,"exports"],[7,31,79,0],[8,4,79,0,"enumerable"],[8,14,79,0],[9,4,79,0,"get"],[9,7,79,0],[9,18,79,0,"get"],[9,19,79,0],[10,6,79,0],[10,13,79,9,"calcAngularFreq"],[10,28,79,24],[11,4,79,24],[12,2,79,24],[13,2,79,0,"Object"],[13,8,79,0],[13,9,79,0,"defineProperty"],[13,23,79,0],[13,24,79,0,"exports"],[13,31,79,0],[14,4,79,0,"enumerable"],[14,14,79,0],[15,4,79,0,"get"],[15,7,79,0],[15,18,79,0,"get"],[15,19,79,0],[16,6,79,0],[16,13,79,26,"findSpring"],[16,23,79,36],[17,4,79,36],[18,2,79,36],[19,2,79,0,"Object"],[19,8,79,0],[19,9,79,0,"defineProperty"],[19,23,79,0],[19,24,79,0,"exports"],[19,31,79,0],[20,4,79,0,"enumerable"],[20,14,79,0],[21,4,79,0,"get"],[21,7,79,0],[21,18,79,0,"get"],[21,19,79,0],[22,6,79,0],[22,13,79,38,"maxDamping"],[22,23,79,48],[23,4,79,48],[24,2,79,48],[25,2,79,0,"Object"],[25,8,79,0],[25,9,79,0,"defineProperty"],[25,23,79,0],[25,24,79,0,"exports"],[25,31,79,0],[26,4,79,0,"enumerable"],[26,14,79,0],[27,4,79,0,"get"],[27,7,79,0],[27,18,79,0,"get"],[27,19,79,0],[28,6,79,0],[28,13,79,50,"maxDuration"],[28,24,79,61],[29,4,79,61],[30,2,79,61],[31,2,79,0,"Object"],[31,8,79,0],[31,9,79,0,"defineProperty"],[31,23,79,0],[31,24,79,0,"exports"],[31,31,79,0],[32,4,79,0,"enumerable"],[32,14,79,0],[33,4,79,0,"get"],[33,7,79,0],[33,18,79,0,"get"],[33,19,79,0],[34,6,79,0],[34,13,79,63,"minDamping"],[34,23,79,73],[35,4,79,73],[36,2,79,73],[37,2,79,0,"Object"],[37,8,79,0],[37,9,79,0,"defineProperty"],[37,23,79,0],[37,24,79,0,"exports"],[37,31,79,0],[38,4,79,0,"enumerable"],[38,14,79,0],[39,4,79,0,"get"],[39,7,79,0],[39,18,79,0,"get"],[39,19,79,0],[40,6,79,0],[40,13,79,75,"minDuration"],[40,24,79,86],[41,4,79,86],[42,2,79,86],[43,2,1,0],[43,6,1,0,"_heyListen"],[43,16,1,0],[43,19,1,0,"require"],[43,26,1,0],[43,27,1,0,"_dependencyMap"],[43,41,1,0],[44,2,2,0],[44,6,2,0,"_utilsClampMjs"],[44,20,2,0],[44,23,2,0,"require"],[44,30,2,0],[44,31,2,0,"_dependencyMap"],[44,45,2,0],[45,2,4,0],[45,8,4,6,"safeMin"],[45,15,4,13],[45,18,4,16],[45,23,4,21],[46,2,5,0],[46,8,5,6,"minDuration"],[46,19,5,17],[46,22,5,20],[46,26,5,24],[47,2,6,0],[47,8,6,6,"maxDuration"],[47,19,6,17],[47,22,6,20],[47,26,6,24],[48,2,7,0],[48,8,7,6,"minDamping"],[48,18,7,16],[48,21,7,19],[48,25,7,23],[49,2,8,0],[49,8,8,6,"maxDamping"],[49,18,8,16],[49,21,8,19],[49,22,8,20],[50,2,9,0],[50,11,9,9,"findSpring"],[50,21,9,19,"findSpring"],[50,22,9,20],[51,4,9,22,"duration"],[51,12,9,30],[51,15,9,33],[51,18,9,36],[52,4,9,38,"bounce"],[52,10,9,44],[52,13,9,47],[52,17,9,51],[53,4,9,53,"velocity"],[53,12,9,61],[53,15,9,64],[53,16,9,65],[54,4,9,67,"mass"],[54,8,9,71],[54,11,9,74],[55,2,9,77],[55,3,9,78],[55,5,9,80],[56,4,10,4],[56,8,10,8,"envelope"],[56,16,10,16],[57,4,11,4],[57,8,11,8,"derivative"],[57,18,11,18],[58,4,12,4],[58,8,12,4,"warning"],[58,18,12,11],[58,19,12,11,"warning"],[58,26,12,11],[58,28,12,12,"duration"],[58,36,12,20],[58,40,12,24,"maxDuration"],[58,51,12,35],[58,54,12,38],[58,58,12,42],[58,60,12,44],[58,104,12,88],[58,105,12,89],[59,4,13,4],[59,8,13,8,"dampingRatio"],[59,20,13,20],[59,23,13,23],[59,24,13,24],[59,27,13,27,"bounce"],[59,33,13,33],[60,4,14,4,"dampingRatio"],[60,16,14,16],[60,19,14,19],[60,23,14,19,"clamp"],[60,37,14,24],[60,38,14,24,"clamp"],[60,43,14,24],[60,45,14,25,"minDamping"],[60,55,14,35],[60,57,14,37,"maxDamping"],[60,67,14,47],[60,69,14,49,"dampingRatio"],[60,81,14,61],[60,82,14,62],[61,4,15,4,"duration"],[61,12,15,12],[61,15,15,15],[61,19,15,15,"clamp"],[61,33,15,20],[61,34,15,20,"clamp"],[61,39,15,20],[61,41,15,21,"minDuration"],[61,52,15,32],[61,54,15,34,"maxDuration"],[61,65,15,45],[61,67,15,47,"duration"],[61,75,15,55],[61,78,15,58],[61,82,15,62],[61,83,15,63],[62,4,16,4],[62,8,16,8,"dampingRatio"],[62,20,16,20],[62,23,16,23],[62,24,16,24],[62,26,16,26],[63,6,17,8,"envelope"],[63,14,17,16],[63,17,17,20,"undampedFreq"],[63,29,17,32],[63,33,17,37],[64,8,18,12],[64,14,18,18,"exponentialDecay"],[64,30,18,34],[64,33,18,37,"undampedFreq"],[64,45,18,49],[64,48,18,52,"dampingRatio"],[64,60,18,64],[65,8,19,12],[65,14,19,18,"delta"],[65,19,19,23],[65,22,19,26,"exponentialDecay"],[65,38,19,42],[65,41,19,45,"duration"],[65,49,19,53],[66,8,20,12],[66,14,20,18,"a"],[66,15,20,19],[66,18,20,22,"exponentialDecay"],[66,34,20,38],[66,37,20,41,"velocity"],[66,45,20,49],[67,8,21,12],[67,14,21,18,"b"],[67,15,21,19],[67,18,21,22,"calcAngularFreq"],[67,33,21,37],[67,34,21,38,"undampedFreq"],[67,46,21,50],[67,48,21,52,"dampingRatio"],[67,60,21,64],[67,61,21,65],[68,8,22,12],[68,14,22,18,"c"],[68,15,22,19],[68,18,22,22,"Math"],[68,22,22,26],[68,23,22,27,"exp"],[68,26,22,30],[68,27,22,31],[68,28,22,32,"delta"],[68,33,22,37],[68,34,22,38],[69,8,23,12],[69,15,23,19,"safeMin"],[69,22,23,26],[69,25,23,30,"a"],[69,26,23,31],[69,29,23,34,"b"],[69,30,23,35],[69,33,23,39,"c"],[69,34,23,40],[70,6,24,8],[70,7,24,9],[71,6,25,8,"derivative"],[71,16,25,18],[71,19,25,22,"undampedFreq"],[71,31,25,34],[71,35,25,39],[72,8,26,12],[72,14,26,18,"exponentialDecay"],[72,30,26,34],[72,33,26,37,"undampedFreq"],[72,45,26,49],[72,48,26,52,"dampingRatio"],[72,60,26,64],[73,8,27,12],[73,14,27,18,"delta"],[73,19,27,23],[73,22,27,26,"exponentialDecay"],[73,38,27,42],[73,41,27,45,"duration"],[73,49,27,53],[74,8,28,12],[74,14,28,18,"d"],[74,15,28,19],[74,18,28,22,"delta"],[74,23,28,27],[74,26,28,30,"velocity"],[74,34,28,38],[74,37,28,41,"velocity"],[74,45,28,49],[75,8,29,12],[75,14,29,18,"e"],[75,15,29,19],[75,18,29,22,"Math"],[75,22,29,26],[75,23,29,27,"pow"],[75,26,29,30],[75,27,29,31,"dampingRatio"],[75,39,29,43],[75,41,29,45],[75,42,29,46],[75,43,29,47],[75,46,29,50,"Math"],[75,50,29,54],[75,51,29,55,"pow"],[75,54,29,58],[75,55,29,59,"undampedFreq"],[75,67,29,71],[75,69,29,73],[75,70,29,74],[75,71,29,75],[75,74,29,78,"duration"],[75,82,29,86],[76,8,30,12],[76,14,30,18,"f"],[76,15,30,19],[76,18,30,22,"Math"],[76,22,30,26],[76,23,30,27,"exp"],[76,26,30,30],[76,27,30,31],[76,28,30,32,"delta"],[76,33,30,37],[76,34,30,38],[77,8,31,12],[77,14,31,18,"g"],[77,15,31,19],[77,18,31,22,"calcAngularFreq"],[77,33,31,37],[77,34,31,38,"Math"],[77,38,31,42],[77,39,31,43,"pow"],[77,42,31,46],[77,43,31,47,"undampedFreq"],[77,55,31,59],[77,57,31,61],[77,58,31,62],[77,59,31,63],[77,61,31,65,"dampingRatio"],[77,73,31,77],[77,74,31,78],[78,8,32,12],[78,14,32,18,"factor"],[78,20,32,24],[78,23,32,27],[78,24,32,28,"envelope"],[78,32,32,36],[78,33,32,37,"undampedFreq"],[78,45,32,49],[78,46,32,50],[78,49,32,53,"safeMin"],[78,56,32,60],[78,59,32,63],[78,60,32,64],[78,63,32,67],[78,64,32,68],[78,65,32,69],[78,68,32,72],[78,69,32,73],[79,8,33,12],[79,15,33,20,"factor"],[79,21,33,26],[79,25,33,30],[79,26,33,31,"d"],[79,27,33,32],[79,30,33,35,"e"],[79,31,33,36],[79,35,33,40,"f"],[79,36,33,41],[79,37,33,42],[79,40,33,46,"g"],[79,41,33,47],[80,6,34,8],[80,7,34,9],[81,4,35,4],[81,5,35,5],[81,11,36,9],[82,6,37,8,"envelope"],[82,14,37,16],[82,17,37,20,"undampedFreq"],[82,29,37,32],[82,33,37,37],[83,8,38,12],[83,14,38,18,"a"],[83,15,38,19],[83,18,38,22,"Math"],[83,22,38,26],[83,23,38,27,"exp"],[83,26,38,30],[83,27,38,31],[83,28,38,32,"undampedFreq"],[83,40,38,44],[83,43,38,47,"duration"],[83,51,38,55],[83,52,38,56],[84,8,39,12],[84,14,39,18,"b"],[84,15,39,19],[84,18,39,22],[84,19,39,23,"undampedFreq"],[84,31,39,35],[84,34,39,38,"velocity"],[84,42,39,46],[84,46,39,50,"duration"],[84,54,39,58],[84,57,39,61],[84,58,39,62],[85,8,40,12],[85,15,40,19],[85,16,40,20,"safeMin"],[85,23,40,27],[85,26,40,30,"a"],[85,27,40,31],[85,30,40,34,"b"],[85,31,40,35],[86,6,41,8],[86,7,41,9],[87,6,42,8,"derivative"],[87,16,42,18],[87,19,42,22,"undampedFreq"],[87,31,42,34],[87,35,42,39],[88,8,43,12],[88,14,43,18,"a"],[88,15,43,19],[88,18,43,22,"Math"],[88,22,43,26],[88,23,43,27,"exp"],[88,26,43,30],[88,27,43,31],[88,28,43,32,"undampedFreq"],[88,40,43,44],[88,43,43,47,"duration"],[88,51,43,55],[88,52,43,56],[89,8,44,12],[89,14,44,18,"b"],[89,15,44,19],[89,18,44,22],[89,19,44,23,"velocity"],[89,27,44,31],[89,30,44,34,"undampedFreq"],[89,42,44,46],[89,47,44,51,"duration"],[89,55,44,59],[89,58,44,62,"duration"],[89,66,44,70],[89,67,44,71],[90,8,45,12],[90,15,45,19,"a"],[90,16,45,20],[90,19,45,23,"b"],[90,20,45,24],[91,6,46,8],[91,7,46,9],[92,4,47,4],[93,4,48,4],[93,10,48,10,"initialGuess"],[93,22,48,22],[93,25,48,25],[93,26,48,26],[93,29,48,29,"duration"],[93,37,48,37],[94,4,49,4],[94,10,49,10,"undampedFreq"],[94,22,49,22],[94,25,49,25,"approximateRoot"],[94,40,49,40],[94,41,49,41,"envelope"],[94,49,49,49],[94,51,49,51,"derivative"],[94,61,49,61],[94,63,49,63,"initialGuess"],[94,75,49,75],[94,76,49,76],[95,4,50,4,"duration"],[95,12,50,12],[95,15,50,15,"duration"],[95,23,50,23],[95,26,50,26],[95,30,50,30],[96,4,51,4],[96,8,51,8,"isNaN"],[96,13,51,13],[96,14,51,14,"undampedFreq"],[96,26,51,26],[96,27,51,27],[96,29,51,29],[97,6,52,8],[97,13,52,15],[98,8,53,12,"stiffness"],[98,17,53,21],[98,19,53,23],[98,22,53,26],[99,8,54,12,"damping"],[99,15,54,19],[99,17,54,21],[99,19,54,23],[100,8,55,12,"duration"],[101,6,56,8],[101,7,56,9],[102,4,57,4],[102,5,57,5],[102,11,58,9],[103,6,59,8],[103,12,59,14,"stiffness"],[103,21,59,23],[103,24,59,26,"Math"],[103,28,59,30],[103,29,59,31,"pow"],[103,32,59,34],[103,33,59,35,"undampedFreq"],[103,45,59,47],[103,47,59,49],[103,48,59,50],[103,49,59,51],[103,52,59,54,"mass"],[103,56,59,58],[104,6,60,8],[104,13,60,15],[105,8,61,12,"stiffness"],[105,17,61,21],[106,8,62,12,"damping"],[106,15,62,19],[106,17,62,21,"dampingRatio"],[106,29,62,33],[106,32,62,36],[106,33,62,37],[106,36,62,40,"Math"],[106,40,62,44],[106,41,62,45,"sqrt"],[106,45,62,49],[106,46,62,50,"mass"],[106,50,62,54],[106,53,62,57,"stiffness"],[106,62,62,66],[106,63,62,67],[107,8,63,12,"duration"],[108,6,64,8],[108,7,64,9],[109,4,65,4],[110,2,66,0],[111,2,67,0],[111,8,67,6,"rootIterations"],[111,22,67,20],[111,25,67,23],[111,27,67,25],[112,2,68,0],[112,11,68,9,"approximateRoot"],[112,26,68,24,"approximateRoot"],[112,27,68,25,"envelope"],[112,35,68,33],[112,37,68,35,"derivative"],[112,47,68,45],[112,49,68,47,"initialGuess"],[112,61,68,59],[112,63,68,61],[113,4,69,4],[113,8,69,8,"result"],[113,14,69,14],[113,17,69,17,"initialGuess"],[113,29,69,29],[114,4,70,4],[114,9,70,9],[114,13,70,13,"i"],[114,14,70,14],[114,17,70,17],[114,18,70,18],[114,20,70,20,"i"],[114,21,70,21],[114,24,70,24,"rootIterations"],[114,38,70,38],[114,40,70,40,"i"],[114,41,70,41],[114,43,70,43],[114,45,70,45],[115,6,71,8,"result"],[115,12,71,14],[115,15,71,17,"result"],[115,21,71,23],[115,24,71,26,"envelope"],[115,32,71,34],[115,33,71,35,"result"],[115,39,71,41],[115,40,71,42],[115,43,71,45,"derivative"],[115,53,71,55],[115,54,71,56,"result"],[115,60,71,62],[115,61,71,63],[116,4,72,4],[117,4,73,4],[117,11,73,11,"result"],[117,17,73,17],[118,2,74,0],[119,2,75,0],[119,11,75,9,"calcAngularFreq"],[119,26,75,24,"calcAngularFreq"],[119,27,75,25,"undampedFreq"],[119,39,75,37],[119,41,75,39,"dampingRatio"],[119,53,75,51],[119,55,75,53],[120,4,76,4],[120,11,76,11,"undampedFreq"],[120,23,76,23],[120,26,76,26,"Math"],[120,30,76,30],[120,31,76,31,"sqrt"],[120,35,76,35],[120,36,76,36],[120,37,76,37],[120,40,76,40,"dampingRatio"],[120,52,76,52],[120,55,76,55,"dampingRatio"],[120,67,76,67],[120,68,76,68],[121,2,77,0],[122,0,77,1],[122,3]],"functionMap":{"names":["<global>","findSpring","envelope","derivative","approximateRoot","calcAngularFreq"],"mappings":"AAA;ACQ;mBCQ;SDO;qBEC;SFS;mBCG;SDI;qBEC;SFI;CDoB;AIE;CJM;AKC;CLE"},"hasCjsExports":false},"type":"js/module"}]}