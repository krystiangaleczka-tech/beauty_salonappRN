{"dependencies":[{"name":"./error-constructors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"Hdbc9HZ5o50YpsoivQck/aX3RwE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"addKnownErrorConstructor\", {\n    enumerable: true,\n    get: function () {\n      return _errorConstructorsJs.addKnownErrorConstructor;\n    }\n  });\n  Object.defineProperty(exports, \"NonError\", {\n    enumerable: true,\n    get: function () {\n      return NonError;\n    }\n  });\n  exports.serializeError = serializeError;\n  exports.deserializeError = deserializeError;\n  exports.isErrorLike = isErrorLike;\n  var _errorConstructorsJs = require(_dependencyMap[0], \"./error-constructors.js\");\n  class NonError extends Error {\n    name = 'NonError';\n    constructor(message) {\n      super(NonError._prepareSuperMessage(message));\n    }\n    static _prepareSuperMessage(message) {\n      try {\n        return JSON.stringify(message);\n      } catch {\n        return String(message);\n      }\n    }\n  }\n  const errorProperties = [{\n    property: 'name',\n    enumerable: false\n  }, {\n    property: 'message',\n    enumerable: false\n  }, {\n    property: 'stack',\n    enumerable: false\n  }, {\n    property: 'code',\n    enumerable: true\n  }, {\n    property: 'cause',\n    enumerable: false\n  }, {\n    property: 'errors',\n    enumerable: false\n  }];\n  const toJsonWasCalled = new WeakSet();\n  const toJSON = from => {\n    toJsonWasCalled.add(from);\n    const json = from.toJSON();\n    toJsonWasCalled.delete(from);\n    return json;\n  };\n  const newError = name => {\n    const ErrorConstructor = _errorConstructorsJs.errorConstructors.get(name) ?? Error;\n    return ErrorConstructor === AggregateError ? new ErrorConstructor([]) : new ErrorConstructor();\n  };\n\n  // eslint-disable-next-line complexity\n  const destroyCircular = ({\n    from,\n    seen,\n    to,\n    forceEnumerable,\n    maxDepth,\n    depth,\n    useToJSON,\n    serialize\n  }) => {\n    if (!to) {\n      if (Array.isArray(from)) {\n        to = [];\n      } else if (!serialize && isErrorLike(from)) {\n        to = newError(from.name);\n      } else {\n        to = {};\n      }\n    }\n    seen.push(from);\n    if (depth >= maxDepth) {\n      return to;\n    }\n    if (useToJSON && typeof from.toJSON === 'function' && !toJsonWasCalled.has(from)) {\n      return toJSON(from);\n    }\n    const continueDestroyCircular = value => destroyCircular({\n      from: value,\n      seen: [...seen],\n      forceEnumerable,\n      maxDepth,\n      depth,\n      useToJSON,\n      serialize\n    });\n    for (const [key, value] of Object.entries(from)) {\n      if (value && value instanceof Uint8Array && value.constructor.name === 'Buffer') {\n        to[key] = '[object Buffer]';\n        continue;\n      }\n\n      // TODO: Use `stream.isReadable()` when targeting Node.js 18.\n      if (value !== null && typeof value === 'object' && typeof value.pipe === 'function') {\n        to[key] = '[object Stream]';\n        continue;\n      }\n      if (typeof value === 'function') {\n        continue;\n      }\n      if (!value || typeof value !== 'object') {\n        // Gracefully handle non-configurable errors like `DOMException`.\n        try {\n          to[key] = value;\n        } catch {}\n        continue;\n      }\n      if (!seen.includes(from[key])) {\n        depth++;\n        to[key] = continueDestroyCircular(from[key]);\n        continue;\n      }\n      to[key] = '[Circular]';\n    }\n    if (serialize || to instanceof Error) {\n      for (const {\n        property,\n        enumerable\n      } of errorProperties) {\n        if (from[property] !== undefined && from[property] !== null) {\n          Object.defineProperty(to, property, {\n            value: isErrorLike(from[property]) || Array.isArray(from[property]) ? continueDestroyCircular(from[property]) : from[property],\n            enumerable: forceEnumerable ? true : enumerable,\n            configurable: true,\n            writable: true\n          });\n        }\n      }\n    }\n    return to;\n  };\n  function serializeError(value, options = {}) {\n    const {\n      maxDepth = Number.POSITIVE_INFINITY,\n      useToJSON = true\n    } = options;\n    if (typeof value === 'object' && value !== null) {\n      return destroyCircular({\n        from: value,\n        seen: [],\n        forceEnumerable: true,\n        maxDepth,\n        depth: 0,\n        useToJSON,\n        serialize: true\n      });\n    }\n\n    // People sometimes throw things besides Error objectsâ€¦\n    if (typeof value === 'function') {\n      // `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n      // We intentionally use `||` because `.name` is an empty string for anonymous functions.\n      return `[Function: ${value.name || 'anonymous'}]`;\n    }\n    return value;\n  }\n  function deserializeError(value, options = {}) {\n    const {\n      maxDepth = Number.POSITIVE_INFINITY\n    } = options;\n    if (value instanceof Error) {\n      return value;\n    }\n    if (isMinimumViableSerializedError(value)) {\n      return destroyCircular({\n        from: value,\n        seen: [],\n        to: newError(value.name),\n        maxDepth,\n        depth: 0,\n        serialize: false\n      });\n    }\n    return new NonError(value);\n  }\n  function isErrorLike(value) {\n    return Boolean(value) && typeof value === 'object' && typeof value.name === 'string' && typeof value.message === 'string' && typeof value.stack === 'string';\n  }\n\n  // Used as a weak check for immediately-passed objects, whereas `isErrorLike` is used for nested values to avoid bad detection\n  function isMinimumViableSerializedError(value) {\n    return Boolean(value) && typeof value === 'object' && typeof value.message === 'string' && !Array.isArray(value);\n  }\n});","lineCount":200,"map":[[7,2,221,0,"Object"],[7,8,221,0],[7,9,221,0,"defineProperty"],[7,23,221,0],[7,24,221,0,"exports"],[7,31,221,0],[8,4,221,0,"enumerable"],[8,14,221,0],[9,4,221,0,"get"],[9,7,221,0],[9,18,221,0,"get"],[9,19,221,0],[10,6,221,0],[10,13,221,0,"_errorConstructorsJs"],[10,33,221,0],[10,34,221,0,"addKnownErrorConstructor"],[10,58,221,0],[11,4,221,0],[12,2,221,0],[13,2,3,0,"Object"],[13,8,3,0],[13,9,3,0,"defineProperty"],[13,23,3,0],[13,24,3,0,"exports"],[13,31,3,0],[14,4,3,0,"enumerable"],[14,14,3,0],[15,4,3,0,"get"],[15,7,3,0],[15,18,3,0,"get"],[15,19,3,0],[16,6,3,0],[16,13,3,0,"NonError"],[16,21,3,0],[17,4,3,0],[18,2,3,0],[19,2,156,0,"exports"],[19,9,156,0],[19,10,156,0,"serializeError"],[19,24,156,0],[19,27,156,0,"serializeError"],[19,41,156,0],[20,2,184,0,"exports"],[20,9,184,0],[20,10,184,0,"deserializeError"],[20,26,184,0],[20,29,184,0,"deserializeError"],[20,45,184,0],[21,2,205,0,"exports"],[21,9,205,0],[21,10,205,0,"isErrorLike"],[21,21,205,0],[21,24,205,0,"isErrorLike"],[21,35,205,0],[22,2,1,0],[22,6,1,0,"_errorConstructorsJs"],[22,26,1,0],[22,29,1,0,"require"],[22,36,1,0],[22,37,1,0,"_dependencyMap"],[22,51,1,0],[23,2,3,7],[23,8,3,13,"NonError"],[23,16,3,21],[23,25,3,30,"Error"],[23,30,3,35],[23,31,3,36],[24,4,4,1,"name"],[24,8,4,5],[24,11,4,8],[24,21,4,18],[25,4,6,1,"constructor"],[25,15,6,12,"constructor"],[25,16,6,13,"message"],[25,23,6,20],[25,25,6,22],[26,6,7,2],[26,11,7,7],[26,12,7,8,"NonError"],[26,20,7,16],[26,21,7,17,"_prepareSuperMessage"],[26,41,7,37],[26,42,7,38,"message"],[26,49,7,45],[26,50,7,46],[26,51,7,47],[27,4,8,1],[28,4,10,1],[28,11,10,8,"_prepareSuperMessage"],[28,31,10,28,"_prepareSuperMessage"],[28,32,10,29,"message"],[28,39,10,36],[28,41,10,38],[29,6,11,2],[29,10,11,6],[30,8,12,3],[30,15,12,10,"JSON"],[30,19,12,14],[30,20,12,15,"stringify"],[30,29,12,24],[30,30,12,25,"message"],[30,37,12,32],[30,38,12,33],[31,6,13,2],[31,7,13,3],[31,8,13,4],[31,14,13,10],[32,8,14,3],[32,15,14,10,"String"],[32,21,14,16],[32,22,14,17,"message"],[32,29,14,24],[32,30,14,25],[33,6,15,2],[34,4,16,1],[35,2,17,0],[36,2,19,0],[36,8,19,6,"errorProperties"],[36,23,19,21],[36,26,19,24],[36,27,20,1],[37,4,21,2,"property"],[37,12,21,10],[37,14,21,12],[37,20,21,18],[38,4,22,2,"enumerable"],[38,14,22,12],[38,16,22,14],[39,2,23,1],[39,3,23,2],[39,5,24,1],[40,4,25,2,"property"],[40,12,25,10],[40,14,25,12],[40,23,25,21],[41,4,26,2,"enumerable"],[41,14,26,12],[41,16,26,14],[42,2,27,1],[42,3,27,2],[42,5,28,1],[43,4,29,2,"property"],[43,12,29,10],[43,14,29,12],[43,21,29,19],[44,4,30,2,"enumerable"],[44,14,30,12],[44,16,30,14],[45,2,31,1],[45,3,31,2],[45,5,32,1],[46,4,33,2,"property"],[46,12,33,10],[46,14,33,12],[46,20,33,18],[47,4,34,2,"enumerable"],[47,14,34,12],[47,16,34,14],[48,2,35,1],[48,3,35,2],[48,5,36,1],[49,4,37,2,"property"],[49,12,37,10],[49,14,37,12],[49,21,37,19],[50,4,38,2,"enumerable"],[50,14,38,12],[50,16,38,14],[51,2,39,1],[51,3,39,2],[51,5,40,1],[52,4,41,2,"property"],[52,12,41,10],[52,14,41,12],[52,22,41,20],[53,4,42,2,"enumerable"],[53,14,42,12],[53,16,42,14],[54,2,43,1],[54,3,43,2],[54,4,44,1],[55,2,46,0],[55,8,46,6,"toJsonWasCalled"],[55,23,46,21],[55,26,46,24],[55,30,46,28,"WeakSet"],[55,37,46,35],[55,38,46,36],[55,39,46,37],[56,2,48,0],[56,8,48,6,"toJSON"],[56,14,48,12],[56,17,48,15,"from"],[56,21,48,19],[56,25,48,23],[57,4,49,1,"toJsonWasCalled"],[57,19,49,16],[57,20,49,17,"add"],[57,23,49,20],[57,24,49,21,"from"],[57,28,49,25],[57,29,49,26],[58,4,50,1],[58,10,50,7,"json"],[58,14,50,11],[58,17,50,14,"from"],[58,21,50,18],[58,22,50,19,"toJSON"],[58,28,50,25],[58,29,50,26],[58,30,50,27],[59,4,51,1,"toJsonWasCalled"],[59,19,51,16],[59,20,51,17,"delete"],[59,26,51,23],[59,27,51,24,"from"],[59,31,51,28],[59,32,51,29],[60,4,52,1],[60,11,52,8,"json"],[60,15,52,12],[61,2,53,0],[61,3,53,1],[62,2,55,0],[62,8,55,6,"newError"],[62,16,55,14],[62,19,55,17,"name"],[62,23,55,21],[62,27,55,25],[63,4,56,1],[63,10,56,7,"ErrorConstructor"],[63,26,56,23],[63,29,56,26,"errorConstructors"],[63,49,56,43],[63,50,56,43,"errorConstructors"],[63,67,56,43],[63,68,56,44,"get"],[63,71,56,47],[63,72,56,48,"name"],[63,76,56,52],[63,77,56,53],[63,81,56,57,"Error"],[63,86,56,62],[64,4,57,1],[64,11,57,8,"ErrorConstructor"],[64,27,57,24],[64,32,57,29,"AggregateError"],[64,46,57,43],[64,49,58,4],[64,53,58,8,"ErrorConstructor"],[64,69,58,24],[64,70,58,25],[64,72,58,27],[64,73,58,28],[64,76,59,4],[64,80,59,8,"ErrorConstructor"],[64,96,59,24],[64,97,59,25],[64,98,59,26],[65,2,60,0],[65,3,60,1],[67,2,62,0],[68,2,63,0],[68,8,63,6,"destroyCircular"],[68,23,63,21],[68,26,63,24,"destroyCircular"],[68,27,63,25],[69,4,64,1,"from"],[69,8,64,5],[70,4,65,1,"seen"],[70,8,65,5],[71,4,66,1,"to"],[71,6,66,3],[72,4,67,1,"forceEnumerable"],[72,19,67,16],[73,4,68,1,"maxDepth"],[73,12,68,9],[74,4,69,1,"depth"],[74,9,69,6],[75,4,70,1,"useToJSON"],[75,13,70,10],[76,4,71,1,"serialize"],[77,2,72,0],[77,3,72,1],[77,8,72,6],[78,4,73,1],[78,8,73,5],[78,9,73,6,"to"],[78,11,73,8],[78,13,73,10],[79,6,74,2],[79,10,74,6,"Array"],[79,15,74,11],[79,16,74,12,"isArray"],[79,23,74,19],[79,24,74,20,"from"],[79,28,74,24],[79,29,74,25],[79,31,74,27],[80,8,75,3,"to"],[80,10,75,5],[80,13,75,8],[80,15,75,10],[81,6,76,2],[81,7,76,3],[81,13,76,9],[81,17,76,13],[81,18,76,14,"serialize"],[81,27,76,23],[81,31,76,27,"isErrorLike"],[81,42,76,38],[81,43,76,39,"from"],[81,47,76,43],[81,48,76,44],[81,50,76,46],[82,8,77,3,"to"],[82,10,77,5],[82,13,77,8,"newError"],[82,21,77,16],[82,22,77,17,"from"],[82,26,77,21],[82,27,77,22,"name"],[82,31,77,26],[82,32,77,27],[83,6,78,2],[83,7,78,3],[83,13,78,9],[84,8,79,3,"to"],[84,10,79,5],[84,13,79,8],[84,14,79,9],[84,15,79,10],[85,6,80,2],[86,4,81,1],[87,4,83,1,"seen"],[87,8,83,5],[87,9,83,6,"push"],[87,13,83,10],[87,14,83,11,"from"],[87,18,83,15],[87,19,83,16],[88,4,85,1],[88,8,85,5,"depth"],[88,13,85,10],[88,17,85,14,"maxDepth"],[88,25,85,22],[88,27,85,24],[89,6,86,2],[89,13,86,9,"to"],[89,15,86,11],[90,4,87,1],[91,4,89,1],[91,8,89,5,"useToJSON"],[91,17,89,14],[91,21,89,18],[91,28,89,25,"from"],[91,32,89,29],[91,33,89,30,"toJSON"],[91,39,89,36],[91,44,89,41],[91,54,89,51],[91,58,89,55],[91,59,89,56,"toJsonWasCalled"],[91,74,89,71],[91,75,89,72,"has"],[91,78,89,75],[91,79,89,76,"from"],[91,83,89,80],[91,84,89,81],[91,86,89,83],[92,6,90,2],[92,13,90,9,"toJSON"],[92,19,90,15],[92,20,90,16,"from"],[92,24,90,20],[92,25,90,21],[93,4,91,1],[94,4,93,1],[94,10,93,7,"continueDestroyCircular"],[94,33,93,30],[94,36,93,33,"value"],[94,41,93,38],[94,45,93,42,"destroyCircular"],[94,60,93,57],[94,61,93,58],[95,6,94,2,"from"],[95,10,94,6],[95,12,94,8,"value"],[95,17,94,13],[96,6,95,2,"seen"],[96,10,95,6],[96,12,95,8],[96,13,95,9],[96,16,95,12,"seen"],[96,20,95,16],[96,21,95,17],[97,6,96,2,"forceEnumerable"],[97,21,96,17],[98,6,97,2,"maxDepth"],[98,14,97,10],[99,6,98,2,"depth"],[99,11,98,7],[100,6,99,2,"useToJSON"],[100,15,99,11],[101,6,100,2,"serialize"],[102,4,101,1],[102,5,101,2],[102,6,101,3],[103,4,103,1],[103,9,103,6],[103,15,103,12],[103,16,103,13,"key"],[103,19,103,16],[103,21,103,18,"value"],[103,26,103,23],[103,27,103,24],[103,31,103,28,"Object"],[103,37,103,34],[103,38,103,35,"entries"],[103,45,103,42],[103,46,103,43,"from"],[103,50,103,47],[103,51,103,48],[103,53,103,50],[104,6,104,2],[104,10,104,6,"value"],[104,15,104,11],[104,19,104,15,"value"],[104,24,104,20],[104,36,104,32,"Uint8Array"],[104,46,104,42],[104,50,104,46,"value"],[104,55,104,51],[104,56,104,52,"constructor"],[104,67,104,63],[104,68,104,64,"name"],[104,72,104,68],[104,77,104,73],[104,85,104,81],[104,87,104,83],[105,8,105,3,"to"],[105,10,105,5],[105,11,105,6,"key"],[105,14,105,9],[105,15,105,10],[105,18,105,13],[105,35,105,30],[106,8,106,3],[107,6,107,2],[109,6,109,2],[110,6,110,2],[110,10,110,6,"value"],[110,15,110,11],[110,20,110,16],[110,24,110,20],[110,28,110,24],[110,35,110,31,"value"],[110,40,110,36],[110,45,110,41],[110,53,110,49],[110,57,110,53],[110,64,110,60,"value"],[110,69,110,65],[110,70,110,66,"pipe"],[110,74,110,70],[110,79,110,75],[110,89,110,85],[110,91,110,87],[111,8,111,3,"to"],[111,10,111,5],[111,11,111,6,"key"],[111,14,111,9],[111,15,111,10],[111,18,111,13],[111,35,111,30],[112,8,112,3],[113,6,113,2],[114,6,115,2],[114,10,115,6],[114,17,115,13,"value"],[114,22,115,18],[114,27,115,23],[114,37,115,33],[114,39,115,35],[115,8,116,3],[116,6,117,2],[117,6,119,2],[117,10,119,6],[117,11,119,7,"value"],[117,16,119,12],[117,20,119,16],[117,27,119,23,"value"],[117,32,119,28],[117,37,119,33],[117,45,119,41],[117,47,119,43],[118,8,120,3],[119,8,121,3],[119,12,121,7],[120,10,122,4,"to"],[120,12,122,6],[120,13,122,7,"key"],[120,16,122,10],[120,17,122,11],[120,20,122,14,"value"],[120,25,122,19],[121,8,123,3],[121,9,123,4],[121,10,123,5],[121,16,123,11],[121,17,123,12],[122,8,125,3],[123,6,126,2],[124,6,128,2],[124,10,128,6],[124,11,128,7,"seen"],[124,15,128,11],[124,16,128,12,"includes"],[124,24,128,20],[124,25,128,21,"from"],[124,29,128,25],[124,30,128,26,"key"],[124,33,128,29],[124,34,128,30],[124,35,128,31],[124,37,128,33],[125,8,129,3,"depth"],[125,13,129,8],[125,15,129,10],[126,8,130,3,"to"],[126,10,130,5],[126,11,130,6,"key"],[126,14,130,9],[126,15,130,10],[126,18,130,13,"continueDestroyCircular"],[126,41,130,36],[126,42,130,37,"from"],[126,46,130,41],[126,47,130,42,"key"],[126,50,130,45],[126,51,130,46],[126,52,130,47],[127,8,132,3],[128,6,133,2],[129,6,135,2,"to"],[129,8,135,4],[129,9,135,5,"key"],[129,12,135,8],[129,13,135,9],[129,16,135,12],[129,28,135,24],[130,4,136,1],[131,4,138,1],[131,8,138,5,"serialize"],[131,17,138,14],[131,21,138,18,"to"],[131,23,138,20],[131,35,138,32,"Error"],[131,40,138,37],[131,42,138,39],[132,6,139,2],[132,11,139,7],[132,17,139,13],[133,8,139,14,"property"],[133,16,139,22],[134,8,139,24,"enumerable"],[135,6,139,34],[135,7,139,35],[135,11,139,39,"errorProperties"],[135,26,139,54],[135,28,139,56],[136,8,140,3],[136,12,140,7,"from"],[136,16,140,11],[136,17,140,12,"property"],[136,25,140,20],[136,26,140,21],[136,31,140,26,"undefined"],[136,40,140,35],[136,44,140,39,"from"],[136,48,140,43],[136,49,140,44,"property"],[136,57,140,52],[136,58,140,53],[136,63,140,58],[136,67,140,62],[136,69,140,64],[137,10,141,4,"Object"],[137,16,141,10],[137,17,141,11,"defineProperty"],[137,31,141,25],[137,32,141,26,"to"],[137,34,141,28],[137,36,141,30,"property"],[137,44,141,38],[137,46,141,40],[138,12,142,5,"value"],[138,17,142,10],[138,19,142,12,"isErrorLike"],[138,30,142,23],[138,31,142,24,"from"],[138,35,142,28],[138,36,142,29,"property"],[138,44,142,37],[138,45,142,38],[138,46,142,39],[138,50,142,43,"Array"],[138,55,142,48],[138,56,142,49,"isArray"],[138,63,142,56],[138,64,142,57,"from"],[138,68,142,61],[138,69,142,62,"property"],[138,77,142,70],[138,78,142,71],[138,79,142,72],[138,82,143,8,"continueDestroyCircular"],[138,105,143,31],[138,106,143,32,"from"],[138,110,143,36],[138,111,143,37,"property"],[138,119,143,45],[138,120,143,46],[138,121,143,47],[138,124,144,8,"from"],[138,128,144,12],[138,129,144,13,"property"],[138,137,144,21],[138,138,144,22],[139,12,145,5,"enumerable"],[139,22,145,15],[139,24,145,17,"forceEnumerable"],[139,39,145,32],[139,42,145,35],[139,46,145,39],[139,49,145,42,"enumerable"],[139,59,145,52],[140,12,146,5,"configurable"],[140,24,146,17],[140,26,146,19],[140,30,146,23],[141,12,147,5,"writable"],[141,20,147,13],[141,22,147,15],[142,10,148,4],[142,11,148,5],[142,12,148,6],[143,8,149,3],[144,6,150,2],[145,4,151,1],[146,4,153,1],[146,11,153,8,"to"],[146,13,153,10],[147,2,154,0],[147,3,154,1],[148,2,156,7],[148,11,156,16,"serializeError"],[148,25,156,30,"serializeError"],[148,26,156,31,"value"],[148,31,156,36],[148,33,156,38,"options"],[148,40,156,45],[148,43,156,48],[148,44,156,49],[148,45,156,50],[148,47,156,52],[149,4,157,1],[149,10,157,7],[150,6,158,2,"maxDepth"],[150,14,158,10],[150,17,158,13,"Number"],[150,23,158,19],[150,24,158,20,"POSITIVE_INFINITY"],[150,41,158,37],[151,6,159,2,"useToJSON"],[151,15,159,11],[151,18,159,14],[152,4,160,1],[152,5,160,2],[152,8,160,5,"options"],[152,15,160,12],[153,4,162,1],[153,8,162,5],[153,15,162,12,"value"],[153,20,162,17],[153,25,162,22],[153,33,162,30],[153,37,162,34,"value"],[153,42,162,39],[153,47,162,44],[153,51,162,48],[153,53,162,50],[154,6,163,2],[154,13,163,9,"destroyCircular"],[154,28,163,24],[154,29,163,25],[155,8,164,3,"from"],[155,12,164,7],[155,14,164,9,"value"],[155,19,164,14],[156,8,165,3,"seen"],[156,12,165,7],[156,14,165,9],[156,16,165,11],[157,8,166,3,"forceEnumerable"],[157,23,166,18],[157,25,166,20],[157,29,166,24],[158,8,167,3,"maxDepth"],[158,16,167,11],[159,8,168,3,"depth"],[159,13,168,8],[159,15,168,10],[159,16,168,11],[160,8,169,3,"useToJSON"],[160,17,169,12],[161,8,170,3,"serialize"],[161,17,170,12],[161,19,170,14],[162,6,171,2],[162,7,171,3],[162,8,171,4],[163,4,172,1],[165,4,174,1],[166,4,175,1],[166,8,175,5],[166,15,175,12,"value"],[166,20,175,17],[166,25,175,22],[166,35,175,32],[166,37,175,34],[167,6,176,2],[168,6,177,2],[169,6,178,2],[169,13,178,9],[169,27,178,23,"value"],[169,32,178,28],[169,33,178,29,"name"],[169,37,178,33],[169,41,178,37],[169,52,178,48],[169,55,178,51],[170,4,179,1],[171,4,181,1],[171,11,181,8,"value"],[171,16,181,13],[172,2,182,0],[173,2,184,7],[173,11,184,16,"deserializeError"],[173,27,184,32,"deserializeError"],[173,28,184,33,"value"],[173,33,184,38],[173,35,184,40,"options"],[173,42,184,47],[173,45,184,50],[173,46,184,51],[173,47,184,52],[173,49,184,54],[174,4,185,1],[174,10,185,7],[175,6,185,8,"maxDepth"],[175,14,185,16],[175,17,185,19,"Number"],[175,23,185,25],[175,24,185,26,"POSITIVE_INFINITY"],[176,4,185,43],[176,5,185,44],[176,8,185,47,"options"],[176,15,185,54],[177,4,187,1],[177,8,187,5,"value"],[177,13,187,10],[177,25,187,22,"Error"],[177,30,187,27],[177,32,187,29],[178,6,188,2],[178,13,188,9,"value"],[178,18,188,14],[179,4,189,1],[180,4,191,1],[180,8,191,5,"isMinimumViableSerializedError"],[180,38,191,35],[180,39,191,36,"value"],[180,44,191,41],[180,45,191,42],[180,47,191,44],[181,6,192,2],[181,13,192,9,"destroyCircular"],[181,28,192,24],[181,29,192,25],[182,8,193,3,"from"],[182,12,193,7],[182,14,193,9,"value"],[182,19,193,14],[183,8,194,3,"seen"],[183,12,194,7],[183,14,194,9],[183,16,194,11],[184,8,195,3,"to"],[184,10,195,5],[184,12,195,7,"newError"],[184,20,195,15],[184,21,195,16,"value"],[184,26,195,21],[184,27,195,22,"name"],[184,31,195,26],[184,32,195,27],[185,8,196,3,"maxDepth"],[185,16,196,11],[186,8,197,3,"depth"],[186,13,197,8],[186,15,197,10],[186,16,197,11],[187,8,198,3,"serialize"],[187,17,198,12],[187,19,198,14],[188,6,199,2],[188,7,199,3],[188,8,199,4],[189,4,200,1],[190,4,202,1],[190,11,202,8],[190,15,202,12,"NonError"],[190,23,202,20],[190,24,202,21,"value"],[190,29,202,26],[190,30,202,27],[191,2,203,0],[192,2,205,7],[192,11,205,16,"isErrorLike"],[192,22,205,27,"isErrorLike"],[192,23,205,28,"value"],[192,28,205,33],[192,30,205,35],[193,4,206,1],[193,11,206,8,"Boolean"],[193,18,206,15],[193,19,206,16,"value"],[193,24,206,21],[193,25,206,22],[193,29,207,4],[193,36,207,11,"value"],[193,41,207,16],[193,46,207,21],[193,54,207,29],[193,58,208,4],[193,65,208,11,"value"],[193,70,208,16],[193,71,208,17,"name"],[193,75,208,21],[193,80,208,26],[193,88,208,34],[193,92,209,4],[193,99,209,11,"value"],[193,104,209,16],[193,105,209,17,"message"],[193,112,209,24],[193,117,209,29],[193,125,209,37],[193,129,210,4],[193,136,210,11,"value"],[193,141,210,16],[193,142,210,17,"stack"],[193,147,210,22],[193,152,210,27],[193,160,210,35],[194,2,211,0],[196,2,213,0],[197,2,214,0],[197,11,214,9,"isMinimumViableSerializedError"],[197,41,214,39,"isMinimumViableSerializedError"],[197,42,214,40,"value"],[197,47,214,45],[197,49,214,47],[198,4,215,1],[198,11,215,8,"Boolean"],[198,18,215,15],[198,19,215,16,"value"],[198,24,215,21],[198,25,215,22],[198,29,216,4],[198,36,216,11,"value"],[198,41,216,16],[198,46,216,21],[198,54,216,29],[198,58,217,4],[198,65,217,11,"value"],[198,70,217,16],[198,71,217,17,"message"],[198,78,217,24],[198,83,217,29],[198,91,217,37],[198,95,218,4],[198,96,218,5,"Array"],[198,101,218,10],[198,102,218,11,"isArray"],[198,109,218,18],[198,110,218,19,"value"],[198,115,218,24],[198,116,218,25],[199,2,219,0],[200,0,219,1],[200,3]],"functionMap":{"names":["<global>","NonError","NonError#constructor","NonError._prepareSuperMessage","toJSON","newError","destroyCircular","continueDestroyCircular","serializeError","deserializeError","isErrorLike","isMinimumViableSerializedError"],"mappings":"AAA;OCE;CCG;EDE;CEE;EFM;CDC;eI+B;CJK;iBKE;CLK;wBMG;iCC8B;GDQ;CNqD;OQE;CR0B;OSE;CTmB;OUE;CVM;AWG;CXK"},"hasCjsExports":false},"type":"js/module"}]}