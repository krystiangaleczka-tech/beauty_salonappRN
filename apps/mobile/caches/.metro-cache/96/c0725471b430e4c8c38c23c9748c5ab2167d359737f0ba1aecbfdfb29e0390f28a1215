{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./web/ImageRef","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":149},"end":{"line":4,"column":41,"index":190}}],"key":"DaLgxKDG0piIGP0khmDMhI0hUnM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _webImageRef = require(_dependencyMap[1], \"./web/ImageRef\");\n  var ImageRefWeb = _interopDefault(_webImageRef);\n  class ImageModule extends _expoModulesCore.NativeModule {\n    Image = ImageRefWeb.default;\n    async prefetch(urls, _, __) {\n      const urlsArray = Array.isArray(urls) ? urls : [urls];\n      return new Promise(resolve => {\n        let imagesLoaded = 0;\n        urlsArray.forEach(url => {\n          const img = new Image();\n          img.src = url;\n          img.onload = () => {\n            imagesLoaded++;\n            if (imagesLoaded === urlsArray.length) {\n              resolve(true);\n            }\n          };\n          img.onerror = () => resolve(false);\n        });\n      });\n    }\n    async clearMemoryCache() {\n      return false;\n    }\n    async clearDiskCache() {\n      return false;\n    }\n    async loadAsync(source) {\n      if (!source.uri) {\n        // TODO: Add support for sources without the uri, e.g. blurhash and thumbhash.\n        throw new Error('The image source must have the \"uri\" property defined');\n      }\n      const response = await fetch(source.uri, {\n        headers: source.headers\n      });\n      if (!response.ok) {\n        throw new Error(`Image request failed with the status code: ${response.status}`);\n      }\n      const blob = await response.blob();\n      const imageObjectUrl = URL.createObjectURL(blob);\n      const image = await loadImageElementAsync(imageObjectUrl);\n      return ImageRefWeb.default.init(imageObjectUrl, image.width, image.height, response.headers.get('Content-Type'));\n    }\n  }\n\n  /**\n   * Helper that resolves to an `<img />` element once it finishes loading the given source.\n   */\n  async function loadImageElementAsync(src) {\n    return new Promise((resolve, reject) => {\n      const image = document.createElement('img');\n      image.onload = () => resolve(image);\n      image.onerror = () => reject(new Error(`Unable to load the image from '${src}'`));\n      image.src = src;\n    });\n  }\n  var _default = (0, _expoModulesCore.registerWebModule)(ImageModule, 'ExpoImage');\n});","lineCount":76,"map":[[12,2,76,0,"Object"],[12,8,76,0],[12,9,76,0,"defineProperty"],[12,23,76,0],[12,24,76,0,"exports"],[12,31,76,0],[13,4,76,0,"enumerable"],[13,14,76,0],[14,4,76,0,"get"],[14,7,76,0],[14,18,76,0,"get"],[14,19,76,0],[15,6,76,0],[15,13,76,0,"_default"],[15,21,76,0],[16,4,76,0],[17,2,76,0],[18,2,1,0],[18,6,1,0,"_expoModulesCore"],[18,22,1,0],[18,25,1,0,"require"],[18,32,1,0],[18,33,1,0,"_dependencyMap"],[18,47,1,0],[19,2,4,0],[19,6,4,0,"_webImageRef"],[19,18,4,0],[19,21,4,0,"require"],[19,28,4,0],[19,29,4,0,"_dependencyMap"],[19,43,4,0],[20,2,4,0],[20,6,4,0,"ImageRefWeb"],[20,17,4,0],[20,20,4,0,"_interopDefault"],[20,35,4,0],[20,36,4,0,"_webImageRef"],[20,48,4,0],[21,2,6,0],[21,8,6,6,"ImageModule"],[21,19,6,17],[21,28,6,26,"NativeModule"],[21,44,6,38],[21,45,6,38,"NativeModule"],[21,57,6,38],[21,58,6,68],[22,4,7,2,"Image"],[22,9,7,7],[22,12,7,27,"ImageRefWeb"],[22,23,7,38],[22,24,7,38,"default"],[22,31,7,38],[23,4,9,2],[23,10,9,8,"prefetch"],[23,18,9,16,"prefetch"],[23,19,9,17,"urls"],[23,23,9,40],[23,25,9,42,"_"],[23,26,9,52],[23,28,9,54,"__"],[23,30,9,65],[23,32,9,85],[24,6,10,4],[24,12,10,10,"urlsArray"],[24,21,10,19],[24,24,10,22,"Array"],[24,29,10,27],[24,30,10,28,"isArray"],[24,37,10,35],[24,38,10,36,"urls"],[24,42,10,40],[24,43,10,41],[24,46,10,44,"urls"],[24,50,10,48],[24,53,10,51],[24,54,10,52,"urls"],[24,58,10,56],[24,59,10,57],[25,6,12,4],[25,13,12,11],[25,17,12,15,"Promise"],[25,24,12,22],[25,25,12,33,"resolve"],[25,32,12,40],[25,36,12,45],[26,8,13,6],[26,12,13,10,"imagesLoaded"],[26,24,13,22],[26,27,13,25],[26,28,13,26],[27,8,15,6,"urlsArray"],[27,17,15,15],[27,18,15,16,"forEach"],[27,25,15,23],[27,26,15,25,"url"],[27,29,15,28],[27,33,15,33],[28,10,16,8],[28,16,16,14,"img"],[28,19,16,17],[28,22,16,20],[28,26,16,24,"Image"],[28,31,16,29],[28,32,16,30],[28,33,16,31],[29,10,17,8,"img"],[29,13,17,11],[29,14,17,12,"src"],[29,17,17,15],[29,20,17,18,"url"],[29,23,17,21],[30,10,18,8,"img"],[30,13,18,11],[30,14,18,12,"onload"],[30,20,18,18],[30,23,18,21],[30,29,18,27],[31,12,19,10,"imagesLoaded"],[31,24,19,22],[31,26,19,24],[32,12,21,10],[32,16,21,14,"imagesLoaded"],[32,28,21,26],[32,33,21,31,"urlsArray"],[32,42,21,40],[32,43,21,41,"length"],[32,49,21,47],[32,51,21,49],[33,14,22,12,"resolve"],[33,21,22,19],[33,22,22,20],[33,26,22,24],[33,27,22,25],[34,12,23,10],[35,10,24,8],[35,11,24,9],[36,10,25,8,"img"],[36,13,25,11],[36,14,25,12,"onerror"],[36,21,25,19],[36,24,25,22],[36,30,25,28,"resolve"],[36,37,25,35],[36,38,25,36],[36,43,25,41],[36,44,25,42],[37,8,26,6],[37,9,26,7],[37,10,26,8],[38,6,27,4],[38,7,27,5],[38,8,27,6],[39,4,28,2],[40,4,30,2],[40,10,30,8,"clearMemoryCache"],[40,26,30,24,"clearMemoryCache"],[40,27,30,24],[40,29,30,45],[41,6,31,4],[41,13,31,11],[41,18,31,16],[42,4,32,2],[43,4,34,2],[43,10,34,8,"clearDiskCache"],[43,24,34,22,"clearDiskCache"],[43,25,34,22],[43,27,34,43],[44,6,35,4],[44,13,35,11],[44,18,35,16],[45,4,36,2],[46,4,38,2],[46,10,38,8,"loadAsync"],[46,19,38,17,"loadAsync"],[46,20,38,18,"source"],[46,26,38,37],[46,28,38,58],[47,6,39,4],[47,10,39,8],[47,11,39,9,"source"],[47,17,39,15],[47,18,39,16,"uri"],[47,21,39,19],[47,23,39,21],[48,8,40,6],[49,8,41,6],[49,14,41,12],[49,18,41,16,"Error"],[49,23,41,21],[49,24,41,22],[49,79,41,77],[49,80,41,78],[50,6,42,4],[51,6,43,4],[51,12,43,10,"response"],[51,20,43,18],[51,23,43,21],[51,29,43,27,"fetch"],[51,34,43,32],[51,35,43,33,"source"],[51,41,43,39],[51,42,43,40,"uri"],[51,45,43,43],[51,47,43,45],[52,8,44,6,"headers"],[52,15,44,13],[52,17,44,15,"source"],[52,23,44,21],[52,24,44,22,"headers"],[53,6,45,4],[53,7,45,5],[53,8,45,6],[54,6,47,4],[54,10,47,8],[54,11,47,9,"response"],[54,19,47,17],[54,20,47,18,"ok"],[54,22,47,20],[54,24,47,22],[55,8,48,6],[55,14,48,12],[55,18,48,16,"Error"],[55,23,48,21],[55,24,48,22],[55,70,48,68,"response"],[55,78,48,76],[55,79,48,77,"status"],[55,85,48,83],[55,87,48,85],[55,88,48,86],[56,6,49,4],[57,6,50,4],[57,12,50,10,"blob"],[57,16,50,14],[57,19,50,17],[57,25,50,23,"response"],[57,33,50,31],[57,34,50,32,"blob"],[57,38,50,36],[57,39,50,37],[57,40,50,38],[58,6,51,4],[58,12,51,10,"imageObjectUrl"],[58,26,51,24],[58,29,51,27,"URL"],[58,32,51,30],[58,33,51,31,"createObjectURL"],[58,48,51,46],[58,49,51,47,"blob"],[58,53,51,51],[58,54,51,52],[59,6,52,4],[59,12,52,10,"image"],[59,17,52,15],[59,20,52,18],[59,26,52,24,"loadImageElementAsync"],[59,47,52,45],[59,48,52,46,"imageObjectUrl"],[59,62,52,60],[59,63,52,61],[60,6,54,4],[60,13,54,11,"ImageRefWeb"],[60,24,54,22],[60,25,54,22,"default"],[60,32,54,22],[60,33,54,23,"init"],[60,37,54,27],[60,38,55,6,"imageObjectUrl"],[60,52,55,20],[60,54,56,6,"image"],[60,59,56,11],[60,60,56,12,"width"],[60,65,56,17],[60,67,57,6,"image"],[60,72,57,11],[60,73,57,12,"height"],[60,79,57,18],[60,81,58,6,"response"],[60,89,58,14],[60,90,58,15,"headers"],[60,97,58,22],[60,98,58,23,"get"],[60,101,58,26],[60,102,58,27],[60,116,58,41],[60,117,59,4],[60,118,59,5],[61,4,60,2],[62,2,61,0],[64,2,63,0],[65,0,64,0],[66,0,65,0],[67,2,66,0],[67,17,66,15,"loadImageElementAsync"],[67,38,66,36,"loadImageElementAsync"],[67,39,66,37,"src"],[67,42,66,48],[67,44,66,77],[68,4,67,2],[68,11,67,9],[68,15,67,13,"Promise"],[68,22,67,20],[68,23,67,21],[68,24,67,22,"resolve"],[68,31,67,29],[68,33,67,31,"reject"],[68,39,67,37],[68,44,67,42],[69,6,68,4],[69,12,68,10,"image"],[69,17,68,15],[69,20,68,18,"document"],[69,28,68,26],[69,29,68,27,"createElement"],[69,42,68,40],[69,43,68,41],[69,48,68,46],[69,49,68,47],[70,6,70,4,"image"],[70,11,70,9],[70,12,70,10,"onload"],[70,18,70,16],[70,21,70,19],[70,27,70,25,"resolve"],[70,34,70,32],[70,35,70,33,"image"],[70,40,70,38],[70,41,70,39],[71,6,71,4,"image"],[71,11,71,9],[71,12,71,10,"onerror"],[71,19,71,17],[71,22,71,20],[71,28,71,26,"reject"],[71,34,71,32],[71,35,71,33],[71,39,71,37,"Error"],[71,44,71,42],[71,45,71,43],[71,79,71,77,"src"],[71,82,71,80],[71,85,71,83],[71,86,71,84],[71,87,71,85],[72,6,72,4,"image"],[72,11,72,9],[72,12,72,10,"src"],[72,15,72,13],[72,18,72,16,"src"],[72,21,72,19],[73,4,73,2],[73,5,73,3],[73,6,73,4],[74,2,74,0],[75,2,76,0],[75,6,76,0,"_default"],[75,14,76,0],[75,17,76,15],[75,21,76,15,"registerWebModule"],[75,37,76,32],[75,38,76,32,"registerWebModule"],[75,55,76,32],[75,57,76,33,"ImageModule"],[75,68,76,44],[75,70,76,46],[75,81,76,57],[75,82,76,58],[76,0,76,59],[76,3]],"functionMap":{"names":["<global>","ImageModule","prefetch","Promise$argument_0","urlsArray.forEach$argument_0","img.onload","img.onerror","clearMemoryCache","clearDiskCache","loadAsync","loadImageElementAsync","image.onload","image.onerror"],"mappings":"AAA;ACK;ECG;gCCG;wBCG;qBCG;SDM;sBEC,oBF;ODC;KDC;GDC;EME;GNE;EOE;GPE;EQE;GRsB;CDC;AUK;qBPC;mBQG,oBR;oBSC,iET;GOE;CVC"},"hasCjsExports":false},"type":"js/module"}]}