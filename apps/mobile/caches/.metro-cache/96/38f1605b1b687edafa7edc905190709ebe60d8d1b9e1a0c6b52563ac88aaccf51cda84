{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"calcInset\", {\n    enumerable: true,\n    get: function () {\n      return calcInset;\n    }\n  });\n  function calcInset(element, container) {\n    let inset = {\n      x: 0,\n      y: 0\n    };\n    let current = element;\n    while (current && current !== container) {\n      if (current instanceof HTMLElement) {\n        inset.x += current.offsetLeft;\n        inset.y += current.offsetTop;\n        current = current.offsetParent;\n      } else if (current instanceof SVGGraphicsElement && \"getBBox\" in current) {\n        const {\n          top,\n          left\n        } = current.getBBox();\n        inset.x += left;\n        inset.y += top;\n        /**\n         * Assign the next parent element as the <svg /> tag.\n         */\n        while (current && current.tagName !== \"svg\") {\n          current = current.parentNode;\n        }\n      }\n    }\n    return inset;\n  }\n});","lineCount":41,"map":[[7,2,25,0,"Object"],[7,8,25,0],[7,9,25,0,"defineProperty"],[7,23,25,0],[7,24,25,0,"exports"],[7,31,25,0],[8,4,25,0,"enumerable"],[8,14,25,0],[9,4,25,0,"get"],[9,7,25,0],[9,18,25,0,"get"],[9,19,25,0],[10,6,25,0],[10,13,25,9,"calcInset"],[10,22,25,18],[11,4,25,18],[12,2,25,18],[13,2,1,0],[13,11,1,9,"calcInset"],[13,20,1,18,"calcInset"],[13,21,1,19,"element"],[13,28,1,26],[13,30,1,28,"container"],[13,39,1,37],[13,41,1,39],[14,4,2,4],[14,8,2,8,"inset"],[14,13,2,13],[14,16,2,16],[15,6,2,18,"x"],[15,7,2,19],[15,9,2,21],[15,10,2,22],[16,6,2,24,"y"],[16,7,2,25],[16,9,2,27],[17,4,2,29],[17,5,2,30],[18,4,3,4],[18,8,3,8,"current"],[18,15,3,15],[18,18,3,18,"element"],[18,25,3,25],[19,4,4,4],[19,11,4,11,"current"],[19,18,4,18],[19,22,4,22,"current"],[19,29,4,29],[19,34,4,34,"container"],[19,43,4,43],[19,45,4,45],[20,6,5,8],[20,10,5,12,"current"],[20,17,5,19],[20,29,5,31,"HTMLElement"],[20,40,5,42],[20,42,5,44],[21,8,6,12,"inset"],[21,13,6,17],[21,14,6,18,"x"],[21,15,6,19],[21,19,6,23,"current"],[21,26,6,30],[21,27,6,31,"offsetLeft"],[21,37,6,41],[22,8,7,12,"inset"],[22,13,7,17],[22,14,7,18,"y"],[22,15,7,19],[22,19,7,23,"current"],[22,26,7,30],[22,27,7,31,"offsetTop"],[22,36,7,40],[23,8,8,12,"current"],[23,15,8,19],[23,18,8,22,"current"],[23,25,8,29],[23,26,8,30,"offsetParent"],[23,38,8,42],[24,6,9,8],[24,7,9,9],[24,13,10,13],[24,17,10,17,"current"],[24,24,10,24],[24,36,10,36,"SVGGraphicsElement"],[24,54,10,54],[24,58,10,58],[24,67,10,67],[24,71,10,71,"current"],[24,78,10,78],[24,80,10,80],[25,8,11,12],[25,14,11,18],[26,10,11,20,"top"],[26,13,11,23],[27,10,11,25,"left"],[28,8,11,30],[28,9,11,31],[28,12,11,34,"current"],[28,19,11,41],[28,20,11,42,"getBBox"],[28,27,11,49],[28,28,11,50],[28,29,11,51],[29,8,12,12,"inset"],[29,13,12,17],[29,14,12,18,"x"],[29,15,12,19],[29,19,12,23,"left"],[29,23,12,27],[30,8,13,12,"inset"],[30,13,13,17],[30,14,13,18,"y"],[30,15,13,19],[30,19,13,23,"top"],[30,22,13,26],[31,8,14,12],[32,0,15,0],[33,0,16,0],[34,8,17,12],[34,15,17,19,"current"],[34,22,17,26],[34,26,17,30,"current"],[34,33,17,37],[34,34,17,38,"tagName"],[34,41,17,45],[34,46,17,50],[34,51,17,55],[34,53,17,57],[35,10,18,16,"current"],[35,17,18,23],[35,20,18,26,"current"],[35,27,18,33],[35,28,18,34,"parentNode"],[35,38,18,44],[36,8,19,12],[37,6,20,8],[38,4,21,4],[39,4,22,4],[39,11,22,11,"inset"],[39,16,22,16],[40,2,23,0],[41,0,23,1],[41,3]],"functionMap":{"names":["calcInset","<global>"],"mappings":"AAA;CCsB"},"hasCjsExports":false},"type":"js/module"}]}