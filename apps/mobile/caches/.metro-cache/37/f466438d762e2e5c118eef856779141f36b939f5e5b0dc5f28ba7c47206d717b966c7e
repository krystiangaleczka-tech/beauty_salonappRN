{"dependencies":[{"name":"./isFunction","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":17,"index":17},"end":{"line":1,"column":40,"index":40}}],"key":"djfTNUaAkScABTQz0Vayyn9m6tA=","exportNames":["*"]}},{"name":"./_isMasked","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":15,"index":57},"end":{"line":2,"column":37,"index":79}}],"key":"eF+22jXzGcioCvCuXsrnuxMYmaA=","exportNames":["*"]}},{"name":"./isObject","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":15,"index":96},"end":{"line":3,"column":36,"index":117}}],"key":"ULGe22t1tNTY+9UXe96RIr0REUU=","exportNames":["*"]}},{"name":"./_toSource","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":134},"end":{"line":4,"column":37,"index":156}}],"key":"VqqtLs58Q/VXOIhfJ2vQNW0YIjk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var isFunction = require(_dependencyMap[0], \"./isFunction\"),\n    isMasked = require(_dependencyMap[1], \"./_isMasked\"),\n    isObject = require(_dependencyMap[2], \"./isObject\"),\n    toSource = require(_dependencyMap[3], \"./_toSource\");\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used for built-in method references. */\n  var funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n  /** Used to resolve the decompiled source of functions. */\n  var funcToString = funcProto.toString;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to detect if a method is native. */\n  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n\n  /**\n   * The base implementation of `_.isNative` without bad shim checks.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a native function,\n   *  else `false`.\n   */\n  function baseIsNative(value) {\n    if (!isObject(value) || isMasked(value)) {\n      return false;\n    }\n    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n    return pattern.test(toSource(value));\n  }\n  module.exports = baseIsNative;\n});","lineCount":45,"map":[[2,2,1,0],[2,6,1,4,"isFunction"],[2,16,1,14],[2,19,1,17,"require"],[2,26,1,24],[2,27,1,24,"_dependencyMap"],[2,41,1,24],[2,60,1,39],[2,61,1,40],[3,4,2,4,"isMasked"],[3,12,2,12],[3,15,2,15,"require"],[3,22,2,22],[3,23,2,22,"_dependencyMap"],[3,37,2,22],[3,55,2,36],[3,56,2,37],[4,4,3,4,"isObject"],[4,12,3,12],[4,15,3,15,"require"],[4,22,3,22],[4,23,3,22,"_dependencyMap"],[4,37,3,22],[4,54,3,35],[4,55,3,36],[5,4,4,4,"toSource"],[5,12,4,12],[5,15,4,15,"require"],[5,22,4,22],[5,23,4,22,"_dependencyMap"],[5,37,4,22],[5,55,4,36],[5,56,4,37],[7,2,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,2,10,0],[11,6,10,4,"reRegExpChar"],[11,18,10,16],[11,21,10,19],[11,42,10,40],[13,2,12,0],[14,2,13,0],[14,6,13,4,"reIsHostCtor"],[14,18,13,16],[14,21,13,19],[14,50,13,48],[16,2,15,0],[17,2,16,0],[17,6,16,4,"funcProto"],[17,15,16,13],[17,18,16,16,"Function"],[17,26,16,24],[17,27,16,25,"prototype"],[17,36,16,34],[18,4,17,4,"objectProto"],[18,15,17,15],[18,18,17,18,"Object"],[18,24,17,24],[18,25,17,25,"prototype"],[18,34,17,34],[20,2,19,0],[21,2,20,0],[21,6,20,4,"funcToString"],[21,18,20,16],[21,21,20,19,"funcProto"],[21,30,20,28],[21,31,20,29,"toString"],[21,39,20,37],[23,2,22,0],[24,2,23,0],[24,6,23,4,"hasOwnProperty"],[24,20,23,18],[24,23,23,21,"objectProto"],[24,34,23,32],[24,35,23,33,"hasOwnProperty"],[24,49,23,47],[26,2,25,0],[27,2,26,0],[27,6,26,4,"reIsNative"],[27,16,26,14],[27,19,26,17,"RegExp"],[27,25,26,23],[27,26,26,24],[27,29,26,27],[27,32,27,2,"funcToString"],[27,44,27,14],[27,45,27,15,"call"],[27,49,27,19],[27,50,27,20,"hasOwnProperty"],[27,64,27,34],[27,65,27,35],[27,66,27,36,"replace"],[27,73,27,43],[27,74,27,44,"reRegExpChar"],[27,86,27,56],[27,88,27,58],[27,94,27,64],[27,95,27,65],[27,96,28,3,"replace"],[27,103,28,10],[27,104,28,11],[27,160,28,67],[27,162,28,69],[27,169,28,76],[27,170,28,77],[27,173,28,80],[27,176,29,0],[27,177,29,1],[29,2,31,0],[30,0,32,0],[31,0,33,0],[32,0,34,0],[33,0,35,0],[34,0,36,0],[35,0,37,0],[36,0,38,0],[37,2,39,0],[37,11,39,9,"baseIsNative"],[37,23,39,21,"baseIsNative"],[37,24,39,22,"value"],[37,29,39,27],[37,31,39,29],[38,4,40,2],[38,8,40,6],[38,9,40,7,"isObject"],[38,17,40,15],[38,18,40,16,"value"],[38,23,40,21],[38,24,40,22],[38,28,40,26,"isMasked"],[38,36,40,34],[38,37,40,35,"value"],[38,42,40,40],[38,43,40,41],[38,45,40,43],[39,6,41,4],[39,13,41,11],[39,18,41,16],[40,4,42,2],[41,4,43,2],[41,8,43,6,"pattern"],[41,15,43,13],[41,18,43,16,"isFunction"],[41,28,43,26],[41,29,43,27,"value"],[41,34,43,32],[41,35,43,33],[41,38,43,36,"reIsNative"],[41,48,43,46],[41,51,43,49,"reIsHostCtor"],[41,63,43,61],[42,4,44,2],[42,11,44,9,"pattern"],[42,18,44,16],[42,19,44,17,"test"],[42,23,44,21],[42,24,44,22,"toSource"],[42,32,44,30],[42,33,44,31,"value"],[42,38,44,36],[42,39,44,37],[42,40,44,38],[43,2,45,0],[44,2,47,0,"module"],[44,8,47,6],[44,9,47,7,"exports"],[44,16,47,14],[44,19,47,17,"baseIsNative"],[44,31,47,29],[45,0,47,30],[45,3]],"functionMap":{"names":["<global>","baseIsNative"],"mappings":"AAA;ACsC;CDM"}},"type":"js/module"}]}