{"dependencies":[{"name":"./_baseIsEqual","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":18,"index":18},"end":{"line":1,"column":43,"index":43}}],"key":"aObeIdo9XaBBS9OvFjgNCqpOwao=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseIsEqual = require(_dependencyMap[0], \"./_baseIsEqual\");\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are compared by strict equality, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n  module.exports = isEqual;\n});","lineCount":36,"map":[[2,2,1,0],[2,6,1,4,"baseIsEqual"],[2,17,1,15],[2,20,1,18,"require"],[2,27,1,25],[2,28,1,25,"_dependencyMap"],[2,42,1,25],[2,63,1,42],[2,64,1,43],[4,2,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,2,31,0],[32,11,31,9,"isEqual"],[32,18,31,16,"isEqual"],[32,19,31,17,"value"],[32,24,31,22],[32,26,31,24,"other"],[32,31,31,29],[32,33,31,31],[33,4,32,2],[33,11,32,9,"baseIsEqual"],[33,22,32,20],[33,23,32,21,"value"],[33,28,32,26],[33,30,32,28,"other"],[33,35,32,33],[33,36,32,34],[34,2,33,0],[35,2,35,0,"module"],[35,8,35,6],[35,9,35,7,"exports"],[35,16,35,14],[35,19,35,17,"isEqual"],[35,26,35,24],[36,0,35,25],[36,3]],"functionMap":{"names":["<global>","isEqual"],"mappings":"AAA;AC8B;CDE"}},"type":"js/module"}]}