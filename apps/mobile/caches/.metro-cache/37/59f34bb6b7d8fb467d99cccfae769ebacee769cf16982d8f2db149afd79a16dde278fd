{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":31,"index":78}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../../utils/process.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":163},"end":{"line":4,"column":46,"index":209}}],"key":"abBjZ0FH49dch0dvMzzpyEImoOI=","exportNames":["*"],"imports":1}},{"name":"../../utils/use-force-update.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":210},"end":{"line":5,"column":66,"index":276}}],"key":"JU7w2o6jYofMrydhPZMjK1F6DAw=","exportNames":["*"],"imports":1}},{"name":"../../utils/use-is-mounted.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":277},"end":{"line":6,"column":62,"index":339}}],"key":"SoHVQ670gpNqj/+fgYQ6BQHWQzA=","exportNames":["*"],"imports":1}},{"name":"./PresenceChild.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":340},"end":{"line":7,"column":52,"index":392}}],"key":"8GAaAFux7ifgkmcLtQc14yj5Iiw=","exportNames":["*"],"imports":1}},{"name":"../../context/LayoutGroupContext.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":393},"end":{"line":8,"column":74,"index":467}}],"key":"q+arfiL9FpjMQ+MsHhrM4YHCjH8=","exportNames":["*"],"imports":1}},{"name":"../../utils/use-isomorphic-effect.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":468},"end":{"line":9,"column":82,"index":550}}],"key":"gjd+U/dZU1+5jyfkmLuH/Rt7Mg4=","exportNames":["*"],"imports":1}},{"name":"../../utils/use-unmount-effect.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":551},"end":{"line":10,"column":70,"index":621}}],"key":"cFjexTye6wdyCnU70bE+uOU1gv8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"AnimatePresence\", {\n    enumerable: true,\n    get: function () {\n      return AnimatePresence;\n    }\n  });\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _utilsProcessMjs = require(_dependencyMap[2], \"../../utils/process.mjs\");\n  var _utilsUseForceUpdateMjs = require(_dependencyMap[3], \"../../utils/use-force-update.mjs\");\n  var _utilsUseIsMountedMjs = require(_dependencyMap[4], \"../../utils/use-is-mounted.mjs\");\n  var _PresenceChildMjs = require(_dependencyMap[5], \"./PresenceChild.mjs\");\n  var _contextLayoutGroupContextMjs = require(_dependencyMap[6], \"../../context/LayoutGroupContext.mjs\");\n  var _utilsUseIsomorphicEffectMjs = require(_dependencyMap[7], \"../../utils/use-isomorphic-effect.mjs\");\n  var _utilsUseUnmountEffectMjs = require(_dependencyMap[8], \"../../utils/use-unmount-effect.mjs\");\n  var getChildKey = function (child) {\n    return child.key || \"\";\n  };\n  function updateChildLookup(children, allChildren) {\n    children.forEach(function (child) {\n      var key = getChildKey(child);\n      allChildren.set(key, child);\n    });\n  }\n  function onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    _react.Children.forEach(children, function (child) {\n      if (/*#__PURE__*/(0, _react.isValidElement)(child)) filtered.push(child);\n    });\n    return filtered;\n  }\n  /**\n   * `AnimatePresence` enables the animation of components that have been removed from the tree.\n   *\n   * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n   *\n   * Any `motion` components that have an `exit` property defined will animate out when removed from\n   * the tree.\n   *\n   * ```jsx\n   * import { motion, AnimatePresence } from 'framer-motion'\n   *\n   * export const Items = ({ items }) => (\n   *   <AnimatePresence>\n   *     {items.map(item => (\n   *       <motion.div\n   *         key={item.id}\n   *         initial={{ opacity: 0 }}\n   *         animate={{ opacity: 1 }}\n   *         exit={{ opacity: 0 }}\n   *       />\n   *     ))}\n   *   </AnimatePresence>\n   * )\n   * ```\n   *\n   * You can sequence exit animations throughout a tree using variants.\n   *\n   * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n   * once all `motion` components have finished animating out. Likewise, any components using\n   * `usePresence` all need to call `safeToRemove`.\n   *\n   * @public\n   */\n  var AnimatePresence = function (_a) {\n    var children = _a.children,\n      custom = _a.custom,\n      _b = _a.initial,\n      initial = _b === void 0 ? true : _b,\n      onExitComplete = _a.onExitComplete,\n      exitBeforeEnter = _a.exitBeforeEnter,\n      _c = _a.presenceAffectsLayout,\n      presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var _d = (0, _tslib.__read)((0, _utilsUseForceUpdateMjs.useForceUpdate)(), 1),\n      forceRender = _d[0];\n    var forceRenderLayoutGroup = (0, _react.useContext)(_contextLayoutGroupContextMjs.LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup) forceRender = forceRenderLayoutGroup;\n    var isMounted = (0, _utilsUseIsMountedMjs.useIsMounted)();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    var childrenToRender = filteredChildren;\n    var exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = (0, _react.useRef)(childrenToRender);\n    // A lookup table to quickly reference components by key\n    var allChildren = (0, _react.useRef)(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    var isInitialRender = (0, _react.useRef)(true);\n    (0, _utilsUseIsomorphicEffectMjs.useIsomorphicLayoutEffect)(function () {\n      isInitialRender.current = false;\n      updateChildLookup(filteredChildren, allChildren);\n      presentChildren.current = childrenToRender;\n    });\n    (0, _utilsUseUnmountEffectMjs.useUnmountEffect)(function () {\n      isInitialRender.current = true;\n      allChildren.clear();\n      exiting.clear();\n    });\n    if (isInitialRender.current) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, childrenToRender.map(function (child) {\n        return /*#__PURE__*/React.createElement(_PresenceChildMjs.PresenceChild, {\n          key: getChildKey(child),\n          isPresent: true,\n          initial: initial ? undefined : false,\n          presenceAffectsLayout: presenceAffectsLayout\n        }, child);\n      }));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = (0, _tslib.__spreadArray)([], (0, _tslib.__read)(childrenToRender), false);\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n      var key = presentKeys[i];\n      if (targetKeys.indexOf(key) === -1) {\n        exiting.add(key);\n      }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n      childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n      // If this component is actually entering again, early return\n      if (targetKeys.indexOf(key) !== -1) return;\n      var child = allChildren.get(key);\n      if (!child) return;\n      var insertionIndex = presentKeys.indexOf(key);\n      var onExit = function () {\n        allChildren.delete(key);\n        exiting.delete(key);\n        // Remove this child from the present children\n        var removeIndex = presentChildren.current.findIndex(function (presentChild) {\n          return presentChild.key === key;\n        });\n        presentChildren.current.splice(removeIndex, 1);\n        // Defer re-rendering until all exiting children have indeed left\n        if (!exiting.size) {\n          presentChildren.current = filteredChildren;\n          if (isMounted.current === false) return;\n          forceRender();\n          onExitComplete && onExitComplete();\n        }\n      };\n      childrenToRender.splice(insertionIndex, 0, /*#__PURE__*/React.createElement(_PresenceChildMjs.PresenceChild, {\n        key: getChildKey(child),\n        isPresent: false,\n        onExitComplete: onExit,\n        custom: custom,\n        presenceAffectsLayout: presenceAffectsLayout\n      }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n      var key = child.key;\n      return exiting.has(key) ? child : (/*#__PURE__*/React.createElement(_PresenceChildMjs.PresenceChild, {\n        key: getChildKey(child),\n        isPresent: true,\n        presenceAffectsLayout: presenceAffectsLayout\n      }, child));\n    });\n    if (_utilsProcessMjs.env !== \"production\" && exitBeforeEnter && childrenToRender.length > 1) {\n      console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function (child) {\n      return /*#__PURE__*/(0, _react.cloneElement)(child);\n    }));\n  };\n});","lineCount":204,"map":[[22,2,157,0,"Object"],[22,8,157,0],[22,9,157,0,"defineProperty"],[22,23,157,0],[22,24,157,0,"exports"],[22,31,157,0],[23,4,157,0,"enumerable"],[23,14,157,0],[24,4,157,0,"get"],[24,7,157,0],[24,18,157,0,"get"],[24,19,157,0],[25,6,157,0],[25,13,157,9,"AnimatePresence"],[25,28,157,24],[26,4,157,24],[27,2,157,24],[28,2,1,0],[28,6,1,0,"_tslib"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_react"],[29,12,2,0],[29,15,2,0,"require"],[29,22,2,0],[29,23,2,0,"_dependencyMap"],[29,37,2,0],[30,2,2,0],[30,6,2,0,"React"],[30,11,2,0],[30,14,2,0,"_interopNamespace"],[30,31,2,0],[30,32,2,0,"_react"],[30,38,2,0],[31,2,4,0],[31,6,4,0,"_utilsProcessMjs"],[31,22,4,0],[31,25,4,0,"require"],[31,32,4,0],[31,33,4,0,"_dependencyMap"],[31,47,4,0],[32,2,5,0],[32,6,5,0,"_utilsUseForceUpdateMjs"],[32,29,5,0],[32,32,5,0,"require"],[32,39,5,0],[32,40,5,0,"_dependencyMap"],[32,54,5,0],[33,2,6,0],[33,6,6,0,"_utilsUseIsMountedMjs"],[33,27,6,0],[33,30,6,0,"require"],[33,37,6,0],[33,38,6,0,"_dependencyMap"],[33,52,6,0],[34,2,7,0],[34,6,7,0,"_PresenceChildMjs"],[34,23,7,0],[34,26,7,0,"require"],[34,33,7,0],[34,34,7,0,"_dependencyMap"],[34,48,7,0],[35,2,8,0],[35,6,8,0,"_contextLayoutGroupContextMjs"],[35,35,8,0],[35,38,8,0,"require"],[35,45,8,0],[35,46,8,0,"_dependencyMap"],[35,60,8,0],[36,2,9,0],[36,6,9,0,"_utilsUseIsomorphicEffectMjs"],[36,34,9,0],[36,37,9,0,"require"],[36,44,9,0],[36,45,9,0,"_dependencyMap"],[36,59,9,0],[37,2,10,0],[37,6,10,0,"_utilsUseUnmountEffectMjs"],[37,31,10,0],[37,34,10,0,"require"],[37,41,10,0],[37,42,10,0,"_dependencyMap"],[37,56,10,0],[38,2,12,0],[38,6,12,4,"getChildKey"],[38,17,12,15],[38,20,12,18],[38,29,12,18,"getChildKey"],[38,30,12,28,"child"],[38,35,12,33],[38,37,12,35],[39,4,12,37],[39,11,12,44,"child"],[39,16,12,49],[39,17,12,50,"key"],[39,20,12,53],[39,24,12,57],[39,26,12,59],[40,2,12,61],[40,3,12,62],[41,2,13,0],[41,11,13,9,"updateChildLookup"],[41,28,13,26,"updateChildLookup"],[41,29,13,27,"children"],[41,37,13,35],[41,39,13,37,"allChildren"],[41,50,13,48],[41,52,13,50],[42,4,14,4,"children"],[42,12,14,12],[42,13,14,13,"forEach"],[42,20,14,20],[42,21,14,21],[42,31,14,31,"child"],[42,36,14,36],[42,38,14,38],[43,6,15,8],[43,10,15,12,"key"],[43,13,15,15],[43,16,15,18,"getChildKey"],[43,27,15,29],[43,28,15,30,"child"],[43,33,15,35],[43,34,15,36],[44,6,16,8,"allChildren"],[44,17,16,19],[44,18,16,20,"set"],[44,21,16,23],[44,22,16,24,"key"],[44,25,16,27],[44,27,16,29,"child"],[44,32,16,34],[44,33,16,35],[45,4,17,4],[45,5,17,5],[45,6,17,6],[46,2,18,0],[47,2,19,0],[47,11,19,9,"onlyElements"],[47,23,19,21,"onlyElements"],[47,24,19,22,"children"],[47,32,19,30],[47,34,19,32],[48,4,20,4],[48,8,20,8,"filtered"],[48,16,20,16],[48,19,20,19],[48,21,20,21],[49,4,21,4],[50,4,22,4,"Children"],[50,10,22,12],[50,11,22,12,"Children"],[50,19,22,12],[50,20,22,13,"forEach"],[50,27,22,20],[50,28,22,21,"children"],[50,36,22,29],[50,38,22,31],[50,48,22,41,"child"],[50,53,22,46],[50,55,22,48],[51,6,23,8],[51,23,23,12],[51,27,23,12,"isValidElement"],[51,33,23,26],[51,34,23,26,"isValidElement"],[51,48,23,26],[51,50,23,27,"child"],[51,55,23,32],[51,56,23,33],[51,58,24,12,"filtered"],[51,66,24,20],[51,67,24,21,"push"],[51,71,24,25],[51,72,24,26,"child"],[51,77,24,31],[51,78,24,32],[52,4,25,4],[52,5,25,5],[52,6,25,6],[53,4,26,4],[53,11,26,11,"filtered"],[53,19,26,19],[54,2,27,0],[55,2,28,0],[56,0,29,0],[57,0,30,0],[58,0,31,0],[59,0,32,0],[60,0,33,0],[61,0,34,0],[62,0,35,0],[63,0,36,0],[64,0,37,0],[65,0,38,0],[66,0,39,0],[67,0,40,0],[68,0,41,0],[69,0,42,0],[70,0,43,0],[71,0,44,0],[72,0,45,0],[73,0,46,0],[74,0,47,0],[75,0,48,0],[76,0,49,0],[77,0,50,0],[78,0,51,0],[79,0,52,0],[80,0,53,0],[81,0,54,0],[82,0,55,0],[83,0,56,0],[84,0,57,0],[85,0,58,0],[86,0,59,0],[87,0,60,0],[88,2,61,0],[88,6,61,4,"AnimatePresence"],[88,21,61,19],[88,24,61,22],[88,33,61,22,"AnimatePresence"],[88,34,61,32,"_a"],[88,36,61,34],[88,38,61,36],[89,4,62,4],[89,8,62,8,"children"],[89,16,62,16],[89,19,62,19,"_a"],[89,21,62,21],[89,22,62,22,"children"],[89,30,62,30],[90,6,62,32,"custom"],[90,12,62,38],[90,15,62,41,"_a"],[90,17,62,43],[90,18,62,44,"custom"],[90,24,62,50],[91,6,62,52,"_b"],[91,8,62,54],[91,11,62,57,"_a"],[91,13,62,59],[91,14,62,60,"initial"],[91,21,62,67],[92,6,62,69,"initial"],[92,13,62,76],[92,16,62,79,"_b"],[92,18,62,81],[92,23,62,86],[92,28,62,91],[92,29,62,92],[92,32,62,95],[92,36,62,99],[92,39,62,102,"_b"],[92,41,62,104],[93,6,62,106,"onExitComplete"],[93,20,62,120],[93,23,62,123,"_a"],[93,25,62,125],[93,26,62,126,"onExitComplete"],[93,40,62,140],[94,6,62,142,"exitBeforeEnter"],[94,21,62,157],[94,24,62,160,"_a"],[94,26,62,162],[94,27,62,163,"exitBeforeEnter"],[94,42,62,178],[95,6,62,180,"_c"],[95,8,62,182],[95,11,62,185,"_a"],[95,13,62,187],[95,14,62,188,"presenceAffectsLayout"],[95,35,62,209],[96,6,62,211,"presenceAffectsLayout"],[96,27,62,232],[96,30,62,235,"_c"],[96,32,62,237],[96,37,62,242],[96,42,62,247],[96,43,62,248],[96,46,62,251],[96,50,62,255],[96,53,62,258,"_c"],[96,55,62,260],[97,4,63,4],[98,4,64,4],[99,4,65,4],[99,8,65,8,"_d"],[99,10,65,10],[99,13,65,13],[99,17,65,13,"__read"],[99,23,65,19],[99,24,65,19,"__read"],[99,30,65,19],[99,32,65,20],[99,36,65,20,"useForceUpdate"],[99,59,65,34],[99,60,65,34,"useForceUpdate"],[99,74,65,34],[99,76,65,35],[99,77,65,36],[99,79,65,38],[99,80,65,39],[99,81,65,40],[100,6,65,42,"forceRender"],[100,17,65,53],[100,20,65,56,"_d"],[100,22,65,58],[100,23,65,59],[100,24,65,60],[100,25,65,61],[101,4,66,4],[101,8,66,8,"forceRenderLayoutGroup"],[101,30,66,30],[101,33,66,33],[101,37,66,33,"useContext"],[101,43,66,43],[101,44,66,43,"useContext"],[101,54,66,43],[101,56,66,44,"LayoutGroupContext"],[101,85,66,62],[101,86,66,62,"LayoutGroupContext"],[101,104,66,62],[101,105,66,63],[101,106,66,64,"forceRender"],[101,117,66,75],[102,4,67,4],[102,8,67,8,"forceRenderLayoutGroup"],[102,30,67,30],[102,32,68,8,"forceRender"],[102,43,68,19],[102,46,68,22,"forceRenderLayoutGroup"],[102,68,68,44],[103,4,69,4],[103,8,69,8,"isMounted"],[103,17,69,17],[103,20,69,20],[103,24,69,20,"useIsMounted"],[103,45,69,32],[103,46,69,32,"useIsMounted"],[103,58,69,32],[103,60,69,33],[103,61,69,34],[104,4,70,4],[105,4,71,4],[105,8,71,8,"filteredChildren"],[105,24,71,24],[105,27,71,27,"onlyElements"],[105,39,71,39],[105,40,71,40,"children"],[105,48,71,48],[105,49,71,49],[106,4,72,4],[106,8,72,8,"childrenToRender"],[106,24,72,24],[106,27,72,27,"filteredChildren"],[106,43,72,43],[107,4,73,4],[107,8,73,8,"exiting"],[107,15,73,15],[107,18,73,18],[107,22,73,22,"Set"],[107,25,73,25],[107,26,73,26],[107,27,73,27],[108,4,74,4],[109,4,75,4],[110,4,76,4],[110,8,76,8,"presentChildren"],[110,23,76,23],[110,26,76,26],[110,30,76,26,"useRef"],[110,36,76,32],[110,37,76,32,"useRef"],[110,43,76,32],[110,45,76,33,"childrenToRender"],[110,61,76,49],[110,62,76,50],[111,4,77,4],[112,4,78,4],[112,8,78,8,"allChildren"],[112,19,78,19],[112,22,78,22],[112,26,78,22,"useRef"],[112,32,78,28],[112,33,78,28,"useRef"],[112,39,78,28],[112,41,78,29],[112,45,78,33,"Map"],[112,48,78,36],[112,49,78,37],[112,50,78,38],[112,51,78,39],[112,52,78,40,"current"],[112,59,78,47],[113,4,79,4],[114,4,80,4],[115,4,81,4],[115,8,81,8,"isInitialRender"],[115,23,81,23],[115,26,81,26],[115,30,81,26,"useRef"],[115,36,81,32],[115,37,81,32,"useRef"],[115,43,81,32],[115,45,81,33],[115,49,81,37],[115,50,81,38],[116,4,82,4],[116,8,82,4,"useIsomorphicLayoutEffect"],[116,36,82,29],[116,37,82,29,"useIsomorphicLayoutEffect"],[116,62,82,29],[116,64,82,30],[116,76,82,42],[117,6,83,8,"isInitialRender"],[117,21,83,23],[117,22,83,24,"current"],[117,29,83,31],[117,32,83,34],[117,37,83,39],[118,6,84,8,"updateChildLookup"],[118,23,84,25],[118,24,84,26,"filteredChildren"],[118,40,84,42],[118,42,84,44,"allChildren"],[118,53,84,55],[118,54,84,56],[119,6,85,8,"presentChildren"],[119,21,85,23],[119,22,85,24,"current"],[119,29,85,31],[119,32,85,34,"childrenToRender"],[119,48,85,50],[120,4,86,4],[120,5,86,5],[120,6,86,6],[121,4,87,4],[121,8,87,4,"useUnmountEffect"],[121,33,87,20],[121,34,87,20,"useUnmountEffect"],[121,50,87,20],[121,52,87,21],[121,64,87,33],[122,6,88,8,"isInitialRender"],[122,21,88,23],[122,22,88,24,"current"],[122,29,88,31],[122,32,88,34],[122,36,88,38],[123,6,89,8,"allChildren"],[123,17,89,19],[123,18,89,20,"clear"],[123,23,89,25],[123,24,89,26],[123,25,89,27],[124,6,90,8,"exiting"],[124,13,90,15],[124,14,90,16,"clear"],[124,19,90,21],[124,20,90,22],[124,21,90,23],[125,4,91,4],[125,5,91,5],[125,6,91,6],[126,4,92,4],[126,8,92,8,"isInitialRender"],[126,23,92,23],[126,24,92,24,"current"],[126,31,92,31],[126,33,92,33],[127,6,93,8],[127,26,93,16,"React"],[127,31,93,21],[127,32,93,22,"createElement"],[127,45,93,35],[127,46,93,36,"React"],[127,51,93,41],[127,52,93,42,"Fragment"],[127,60,93,50],[127,62,93,52],[127,66,93,56],[127,68,93,58,"childrenToRender"],[127,84,93,74],[127,85,93,75,"map"],[127,88,93,78],[127,89,93,79],[127,99,93,89,"child"],[127,104,93,94],[127,106,93,96],[128,8,93,98],[128,28,93,106,"React"],[128,33,93,111],[128,34,93,112,"createElement"],[128,47,93,125],[128,48,93,126,"PresenceChild"],[128,65,93,139],[128,66,93,139,"PresenceChild"],[128,79,93,139],[128,81,93,141],[129,10,93,143,"key"],[129,13,93,146],[129,15,93,148,"getChildKey"],[129,26,93,159],[129,27,93,160,"child"],[129,32,93,165],[129,33,93,166],[130,10,93,168,"isPresent"],[130,19,93,177],[130,21,93,179],[130,25,93,183],[131,10,93,185,"initial"],[131,17,93,192],[131,19,93,194,"initial"],[131,26,93,201],[131,29,93,204,"undefined"],[131,38,93,213],[131,41,93,216],[131,46,93,221],[132,10,93,223,"presenceAffectsLayout"],[132,31,93,244],[132,33,93,246,"presenceAffectsLayout"],[133,8,93,268],[133,9,93,269],[133,11,93,271,"child"],[133,16,93,276],[133,17,93,277],[134,6,93,280],[134,7,93,281],[134,8,93,282],[134,9,93,283],[135,4,94,4],[136,4,95,4],[137,4,96,4,"childrenToRender"],[137,20,96,20],[137,23,96,23],[137,27,96,23,"__spreadArray"],[137,33,96,36],[137,34,96,36,"__spreadArray"],[137,47,96,36],[137,49,96,37],[137,51,96,39],[137,53,96,41],[137,57,96,41,"__read"],[137,63,96,47],[137,64,96,47,"__read"],[137,70,96,47],[137,72,96,48,"childrenToRender"],[137,88,96,64],[137,89,96,65],[137,91,96,67],[137,96,96,72],[137,97,96,73],[138,4,97,4],[139,4,98,4],[140,4,99,4],[140,8,99,8,"presentKeys"],[140,19,99,19],[140,22,99,22,"presentChildren"],[140,37,99,37],[140,38,99,38,"current"],[140,45,99,45],[140,46,99,46,"map"],[140,49,99,49],[140,50,99,50,"getChildKey"],[140,61,99,61],[140,62,99,62],[141,4,100,4],[141,8,100,8,"targetKeys"],[141,18,100,18],[141,21,100,21,"filteredChildren"],[141,37,100,37],[141,38,100,38,"map"],[141,41,100,41],[141,42,100,42,"getChildKey"],[141,53,100,53],[141,54,100,54],[142,4,101,4],[143,4,102,4],[143,8,102,8,"numPresent"],[143,18,102,18],[143,21,102,21,"presentKeys"],[143,32,102,32],[143,33,102,33,"length"],[143,39,102,39],[144,4,103,4],[144,9,103,9],[144,13,103,13,"i"],[144,14,103,14],[144,17,103,17],[144,18,103,18],[144,20,103,20,"i"],[144,21,103,21],[144,24,103,24,"numPresent"],[144,34,103,34],[144,36,103,36,"i"],[144,37,103,37],[144,39,103,39],[144,41,103,41],[145,6,104,8],[145,10,104,12,"key"],[145,13,104,15],[145,16,104,18,"presentKeys"],[145,27,104,29],[145,28,104,30,"i"],[145,29,104,31],[145,30,104,32],[146,6,105,8],[146,10,105,12,"targetKeys"],[146,20,105,22],[146,21,105,23,"indexOf"],[146,28,105,30],[146,29,105,31,"key"],[146,32,105,34],[146,33,105,35],[146,38,105,40],[146,39,105,41],[146,40,105,42],[146,42,105,44],[147,8,106,12,"exiting"],[147,15,106,19],[147,16,106,20,"add"],[147,19,106,23],[147,20,106,24,"key"],[147,23,106,27],[147,24,106,28],[148,6,107,8],[149,4,108,4],[150,4,109,4],[151,4,110,4],[152,4,111,4],[152,8,111,8,"exitBeforeEnter"],[152,23,111,23],[152,27,111,27,"exiting"],[152,34,111,34],[152,35,111,35,"size"],[152,39,111,39],[152,41,111,41],[153,6,112,8,"childrenToRender"],[153,22,112,24],[153,25,112,27],[153,27,112,29],[154,4,113,4],[155,4,114,4],[156,4,115,4],[157,4,116,4,"exiting"],[157,11,116,11],[157,12,116,12,"forEach"],[157,19,116,19],[157,20,116,20],[157,30,116,30,"key"],[157,33,116,33],[157,35,116,35],[158,6,117,8],[159,6,118,8],[159,10,118,12,"targetKeys"],[159,20,118,22],[159,21,118,23,"indexOf"],[159,28,118,30],[159,29,118,31,"key"],[159,32,118,34],[159,33,118,35],[159,38,118,40],[159,39,118,41],[159,40,118,42],[159,42,119,12],[160,6,120,8],[160,10,120,12,"child"],[160,15,120,17],[160,18,120,20,"allChildren"],[160,29,120,31],[160,30,120,32,"get"],[160,33,120,35],[160,34,120,36,"key"],[160,37,120,39],[160,38,120,40],[161,6,121,8],[161,10,121,12],[161,11,121,13,"child"],[161,16,121,18],[161,18,122,12],[162,6,123,8],[162,10,123,12,"insertionIndex"],[162,24,123,26],[162,27,123,29,"presentKeys"],[162,38,123,40],[162,39,123,41,"indexOf"],[162,46,123,48],[162,47,123,49,"key"],[162,50,123,52],[162,51,123,53],[163,6,124,8],[163,10,124,12,"onExit"],[163,16,124,18],[163,19,124,21],[163,28,124,21,"onExit"],[163,29,124,21],[163,31,124,33],[164,8,125,12,"allChildren"],[164,19,125,23],[164,20,125,24,"delete"],[164,26,125,30],[164,27,125,31,"key"],[164,30,125,34],[164,31,125,35],[165,8,126,12,"exiting"],[165,15,126,19],[165,16,126,20,"delete"],[165,22,126,26],[165,23,126,27,"key"],[165,26,126,30],[165,27,126,31],[166,8,127,12],[167,8,128,12],[167,12,128,16,"removeIndex"],[167,23,128,27],[167,26,128,30,"presentChildren"],[167,41,128,45],[167,42,128,46,"current"],[167,49,128,53],[167,50,128,54,"findIndex"],[167,59,128,63],[167,60,128,64],[167,70,128,74,"presentChild"],[167,82,128,86],[167,84,128,88],[168,10,128,90],[168,17,128,97,"presentChild"],[168,29,128,109],[168,30,128,110,"key"],[168,33,128,113],[168,38,128,118,"key"],[168,41,128,121],[169,8,128,123],[169,9,128,124],[169,10,128,125],[170,8,129,12,"presentChildren"],[170,23,129,27],[170,24,129,28,"current"],[170,31,129,35],[170,32,129,36,"splice"],[170,38,129,42],[170,39,129,43,"removeIndex"],[170,50,129,54],[170,52,129,56],[170,53,129,57],[170,54,129,58],[171,8,130,12],[172,8,131,12],[172,12,131,16],[172,13,131,17,"exiting"],[172,20,131,24],[172,21,131,25,"size"],[172,25,131,29],[172,27,131,31],[173,10,132,16,"presentChildren"],[173,25,132,31],[173,26,132,32,"current"],[173,33,132,39],[173,36,132,42,"filteredChildren"],[173,52,132,58],[174,10,133,16],[174,14,133,20,"isMounted"],[174,23,133,29],[174,24,133,30,"current"],[174,31,133,37],[174,36,133,42],[174,41,133,47],[174,43,134,20],[175,10,135,16,"forceRender"],[175,21,135,27],[175,22,135,28],[175,23,135,29],[176,10,136,16,"onExitComplete"],[176,24,136,30],[176,28,136,34,"onExitComplete"],[176,42,136,48],[176,43,136,49],[176,44,136,50],[177,8,137,12],[178,6,138,8],[178,7,138,9],[179,6,139,8,"childrenToRender"],[179,22,139,24],[179,23,139,25,"splice"],[179,29,139,31],[179,30,139,32,"insertionIndex"],[179,44,139,46],[179,46,139,48],[179,47,139,49],[179,62,139,51,"React"],[179,67,139,56],[179,68,139,57,"createElement"],[179,81,139,70],[179,82,139,71,"PresenceChild"],[179,99,139,84],[179,100,139,84,"PresenceChild"],[179,113,139,84],[179,115,139,86],[180,8,139,88,"key"],[180,11,139,91],[180,13,139,93,"getChildKey"],[180,24,139,104],[180,25,139,105,"child"],[180,30,139,110],[180,31,139,111],[181,8,139,113,"isPresent"],[181,17,139,122],[181,19,139,124],[181,24,139,129],[182,8,139,131,"onExitComplete"],[182,22,139,145],[182,24,139,147,"onExit"],[182,30,139,153],[183,8,139,155,"custom"],[183,14,139,161],[183,16,139,163,"custom"],[183,22,139,169],[184,8,139,171,"presenceAffectsLayout"],[184,29,139,192],[184,31,139,194,"presenceAffectsLayout"],[185,6,139,216],[185,7,139,217],[185,9,139,219,"child"],[185,14,139,224],[185,15,139,225],[185,16,139,226],[186,4,140,4],[186,5,140,5],[186,6,140,6],[187,4,141,4],[188,4,142,4],[189,4,143,4,"childrenToRender"],[189,20,143,20],[189,23,143,23,"childrenToRender"],[189,39,143,39],[189,40,143,40,"map"],[189,43,143,43],[189,44,143,44],[189,54,143,54,"child"],[189,59,143,59],[189,61,143,61],[190,6,144,8],[190,10,144,12,"key"],[190,13,144,15],[190,16,144,18,"child"],[190,21,144,23],[190,22,144,24,"key"],[190,25,144,27],[191,6,145,8],[191,13,145,15,"exiting"],[191,20,145,22],[191,21,145,23,"has"],[191,24,145,26],[191,25,145,27,"key"],[191,28,145,30],[191,29,145,31],[191,32,145,35,"child"],[191,37,145,40],[191,54,145,45,"React"],[191,59,145,50],[191,60,145,51,"createElement"],[191,73,145,64],[191,74,145,65,"PresenceChild"],[191,91,145,78],[191,92,145,78,"PresenceChild"],[191,105,145,78],[191,107,145,80],[192,8,145,82,"key"],[192,11,145,85],[192,13,145,87,"getChildKey"],[192,24,145,98],[192,25,145,99,"child"],[192,30,145,104],[192,31,145,105],[193,8,145,107,"isPresent"],[193,17,145,116],[193,19,145,118],[193,23,145,122],[194,8,145,124,"presenceAffectsLayout"],[194,29,145,145],[194,31,145,147,"presenceAffectsLayout"],[195,6,145,169],[195,7,145,170],[195,9,145,172,"child"],[195,14,145,177],[195,15,145,178],[195,16,145,179],[196,4,146,4],[196,5,146,5],[196,6,146,6],[197,4,147,4],[197,8,147,8,"env"],[197,24,147,11],[197,25,147,11,"env"],[197,28,147,11],[197,33,147,16],[197,45,147,28],[197,49,148,8,"exitBeforeEnter"],[197,64,148,23],[197,68,149,8,"childrenToRender"],[197,84,149,24],[197,85,149,25,"length"],[197,91,149,31],[197,94,149,34],[197,95,149,35],[197,97,149,37],[198,6,150,8,"console"],[198,13,150,15],[198,14,150,16,"warn"],[198,18,150,20],[198,19,150,21],[198,176,150,178],[198,177,150,179],[199,4,151,4],[200,4,152,4],[200,24,152,12,"React"],[200,29,152,17],[200,30,152,18,"createElement"],[200,43,152,31],[200,44,152,32,"React"],[200,49,152,37],[200,50,152,38,"Fragment"],[200,58,152,46],[200,60,152,48],[200,64,152,52],[200,66,152,54,"exiting"],[200,73,152,61],[200,74,152,62,"size"],[200,78,152,66],[200,81,153,10,"childrenToRender"],[200,97,153,26],[200,100,154,10,"childrenToRender"],[200,116,154,26],[200,117,154,27,"map"],[200,120,154,30],[200,121,154,31],[200,131,154,41,"child"],[200,136,154,46],[200,138,154,48],[201,6,154,50],[201,26,154,57],[201,30,154,57,"cloneElement"],[201,36,154,69],[201,37,154,69,"cloneElement"],[201,49,154,69],[201,51,154,70,"child"],[201,56,154,75],[201,57,154,76],[202,4,154,78],[202,5,154,79],[202,6,154,80],[202,7,154,81],[203,2,155,0],[203,3,155,1],[204,0,155,2],[204,3]],"functionMap":{"names":["<global>","getChildKey","updateChildLookup","children.forEach$argument_0","onlyElements","Children.forEach$argument_1","AnimatePresence","useIsomorphicLayoutEffect$argument_0","useUnmountEffect$argument_0","childrenToRender.map$argument_0","exiting.forEach$argument_0","onExit","presentChildren.current.findIndex$argument_0"],"mappings":"AAA;kBCW,4CD;AEC;qBCC;KDG;CFC;AIC;+BCG;KDG;CJE;sBMkC;8BCqB;KDI;qBEC;KFI;+EGE,0MH;oBIuB;qBCQ;gECI,4DD;SDU;KJE;4CGG;KHG;+BGQ,gDH;CNC"},"hasCjsExports":false},"type":"js/module"}]}