{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}},{"name":"../utils/find-spring.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":71,"index":103}}],"key":"qg/2MaLhjZtOGqyMj9GUp+h+7fo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"spring\", {\n    enumerable: true,\n    get: function () {\n      return spring;\n    }\n  });\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _utilsFindSpringMjs = require(_dependencyMap[1], \"../utils/find-spring.mjs\");\n  var durationKeys = [\"duration\", \"bounce\"];\n  var physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\n  function isSpringType(options, keys) {\n    return keys.some(key => options[key] !== undefined);\n  }\n  function getSpringOptions(options) {\n    var springOptions = Object.assign({\n      velocity: 0.0,\n      stiffness: 100,\n      damping: 10,\n      mass: 1.0,\n      isResolvedFromDuration: false\n    }, options);\n    if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {\n      var derived = (0, _utilsFindSpringMjs.findSpring)(options);\n      springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), {\n        velocity: 0.0,\n        mass: 1.0\n      });\n      springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n  }\n  function spring(_a) {\n    var _a$from = _a.from,\n      from = _a$from === void 0 ? 0.0 : _a$from,\n      _a$to = _a.to,\n      to = _a$to === void 0 ? 1.0 : _a$to,\n      _a$restSpeed = _a.restSpeed,\n      restSpeed = _a$restSpeed === void 0 ? 2 : _a$restSpeed,\n      restDelta = _a.restDelta,\n      options = (0, _tslib.__rest)(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    var state = {\n      done: false,\n      value: from\n    };\n    var _getSpringOptions = getSpringOptions(options),\n      stiffness = _getSpringOptions.stiffness,\n      damping = _getSpringOptions.damping,\n      mass = _getSpringOptions.mass,\n      velocity = _getSpringOptions.velocity,\n      duration = _getSpringOptions.duration,\n      isResolvedFromDuration = _getSpringOptions.isResolvedFromDuration;\n    var resolveSpring = zero;\n    var resolveVelocity = zero;\n    function createSpring() {\n      var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n      var initialDelta = to - from;\n      var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n      var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n      if (restDelta === undefined) {\n        restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n      }\n      if (dampingRatio < 1) {\n        var angularFreq = (0, _utilsFindSpringMjs.calcAngularFreq)(undampedAngularFreq, dampingRatio);\n        resolveSpring = t => {\n          var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n          return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t) + initialDelta * Math.cos(angularFreq * t));\n        };\n        resolveVelocity = t => {\n          var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n          return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq + initialDelta * Math.cos(angularFreq * t)) - envelope * (Math.cos(angularFreq * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq * initialDelta * Math.sin(angularFreq * t));\n        };\n      } else if (dampingRatio === 1) {\n        resolveSpring = t => to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n      } else {\n        var dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = t => {\n          var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n          var freqForT = Math.min(dampedAngularFreq * t, 300);\n          return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;\n        };\n      }\n    }\n    createSpring();\n    return {\n      next: t => {\n        var current = resolveSpring(t);\n        if (!isResolvedFromDuration) {\n          var currentVelocity = resolveVelocity(t) * 1000;\n          var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n          var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n          state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n        } else {\n          state.done = t >= duration;\n        }\n        state.value = state.done ? to : current;\n        return state;\n      },\n      flipTarget: () => {\n        velocity = -velocity;\n        var _ref = [to, from];\n        from = _ref[0];\n        to = _ref[1];\n        createSpring();\n      }\n    };\n  }\n  spring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\n  var zero = _t => 0;\n});","lineCount":115,"map":[[7,2,119,0,"Object"],[7,8,119,0],[7,9,119,0,"defineProperty"],[7,23,119,0],[7,24,119,0,"exports"],[7,31,119,0],[8,4,119,0,"enumerable"],[8,14,119,0],[9,4,119,0,"get"],[9,7,119,0],[9,18,119,0,"get"],[9,19,119,0],[10,6,119,0],[10,13,119,9,"spring"],[10,19,119,15],[11,4,119,15],[12,2,119,15],[13,2,1,0],[13,6,1,0,"_tslib"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,2,0],[14,6,2,0,"_utilsFindSpringMjs"],[14,25,2,0],[14,28,2,0,"require"],[14,35,2,0],[14,36,2,0,"_dependencyMap"],[14,50,2,0],[15,2,4,0],[15,6,4,6,"durationKeys"],[15,18,4,18],[15,21,4,21],[15,22,4,22],[15,32,4,32],[15,34,4,34],[15,42,4,42],[15,43,4,43],[16,2,5,0],[16,6,5,6,"physicsKeys"],[16,17,5,17],[16,20,5,20],[16,21,5,21],[16,32,5,32],[16,34,5,34],[16,43,5,43],[16,45,5,45],[16,51,5,51],[16,52,5,52],[17,2,6,0],[17,11,6,9,"isSpringType"],[17,23,6,21,"isSpringType"],[17,24,6,22,"options"],[17,31,6,29],[17,33,6,31,"keys"],[17,37,6,35],[17,39,6,37],[18,4,7,4],[18,11,7,11,"keys"],[18,15,7,15],[18,16,7,16,"some"],[18,20,7,20],[18,21,7,22,"key"],[18,24,7,25],[18,28,7,30,"options"],[18,35,7,37],[18,36,7,38,"key"],[18,39,7,41],[18,40,7,42],[18,45,7,47,"undefined"],[18,54,7,56],[18,55,7,57],[19,2,8,0],[20,2,9,0],[20,11,9,9,"getSpringOptions"],[20,27,9,25,"getSpringOptions"],[20,28,9,26,"options"],[20,35,9,33],[20,37,9,35],[21,4,10,4],[21,8,10,8,"springOptions"],[21,21,10,21],[21,24,10,24,"Object"],[21,30,10,30],[21,31,10,31,"assign"],[21,37,10,37],[21,38,10,38],[22,6,10,40,"velocity"],[22,14,10,48],[22,16,10,50],[22,19,10,53],[23,6,10,55,"stiffness"],[23,15,10,64],[23,17,10,66],[23,20,10,69],[24,6,10,71,"damping"],[24,13,10,78],[24,15,10,80],[24,17,10,82],[25,6,10,84,"mass"],[25,10,10,88],[25,12,10,90],[25,15,10,93],[26,6,10,95,"isResolvedFromDuration"],[26,28,10,117],[26,30,10,119],[27,4,10,125],[27,5,10,126],[27,7,10,128,"options"],[27,14,10,135],[27,15,10,136],[28,4,11,4],[28,8,11,8],[28,9,11,9,"isSpringType"],[28,21,11,21],[28,22,11,22,"options"],[28,29,11,29],[28,31,11,31,"physicsKeys"],[28,42,11,42],[28,43,11,43],[28,47,12,8,"isSpringType"],[28,59,12,20],[28,60,12,21,"options"],[28,67,12,28],[28,69,12,30,"durationKeys"],[28,81,12,42],[28,82,12,43],[28,84,12,45],[29,6,13,8],[29,10,13,14,"derived"],[29,17,13,21],[29,20,13,24],[29,24,13,24,"findSpring"],[29,43,13,34],[29,44,13,34,"findSpring"],[29,54,13,34],[29,56,13,35,"options"],[29,63,13,42],[29,64,13,43],[30,6,14,8,"springOptions"],[30,19,14,21],[30,22,14,24,"Object"],[30,28,14,30],[30,29,14,31,"assign"],[30,35,14,37],[30,36,14,38,"Object"],[30,42,14,44],[30,43,14,45,"assign"],[30,49,14,51],[30,50,14,52,"Object"],[30,56,14,58],[30,57,14,59,"assign"],[30,63,14,65],[30,64,14,66],[30,65,14,67],[30,66,14,68],[30,68,14,70,"springOptions"],[30,81,14,83],[30,82,14,84],[30,84,14,86,"derived"],[30,91,14,93],[30,92,14,94],[30,94,14,96],[31,8,14,98,"velocity"],[31,16,14,106],[31,18,14,108],[31,21,14,111],[32,8,14,113,"mass"],[32,12,14,117],[32,14,14,119],[33,6,14,123],[33,7,14,124],[33,8,14,125],[34,6,15,8,"springOptions"],[34,19,15,21],[34,20,15,22,"isResolvedFromDuration"],[34,42,15,44],[34,45,15,47],[34,49,15,51],[35,4,16,4],[36,4,17,4],[36,11,17,11,"springOptions"],[36,24,17,24],[37,2,18,0],[38,2,19,0],[38,11,19,9,"spring"],[38,17,19,15,"spring"],[38,18,19,16,"_a"],[38,20,19,18],[38,22,19,20],[39,4,20,4],[39,8,20,4,"_a$from"],[39,15,20,4],[39,18,20,61,"_a"],[39,20,20,63],[39,21,20,10,"from"],[39,25,20,14],[40,6,20,10,"from"],[40,10,20,14],[40,13,20,14,"_a$from"],[40,20,20,14],[40,34,20,17],[40,37,20,20],[40,40,20,20,"_a$from"],[40,47,20,20],[41,6,20,20,"_a$to"],[41,11,20,20],[41,14,20,61,"_a"],[41,16,20,63],[41,17,20,22,"to"],[41,19,20,24],[42,6,20,22,"to"],[42,8,20,24],[42,11,20,24,"_a$to"],[42,16,20,24],[42,30,20,27],[42,33,20,30],[42,36,20,30,"_a$to"],[42,41,20,30],[43,6,20,30,"_a$restSpeed"],[43,18,20,30],[43,21,20,61,"_a"],[43,23,20,63],[43,24,20,32,"restSpeed"],[43,33,20,41],[44,6,20,32,"restSpeed"],[44,15,20,41],[44,18,20,41,"_a$restSpeed"],[44,30,20,41],[44,44,20,44],[44,45,20,45],[44,48,20,45,"_a$restSpeed"],[44,60,20,45],[45,6,20,47,"restDelta"],[45,15,20,56],[45,18,20,61,"_a"],[45,20,20,63],[45,21,20,47,"restDelta"],[45,30,20,56],[46,6,20,65,"options"],[46,13,20,72],[46,16,20,75],[46,20,20,75,"__rest"],[46,26,20,81],[46,27,20,81,"__rest"],[46,33,20,81],[46,35,20,82,"_a"],[46,37,20,84],[46,39,20,86],[46,40,20,87],[46,46,20,93],[46,48,20,95],[46,52,20,99],[46,54,20,101],[46,65,20,112],[46,67,20,114],[46,78,20,125],[46,79,20,126],[46,80,20,127],[47,4,21,4],[47,8,21,10,"state"],[47,13,21,15],[47,16,21,18],[48,6,21,20,"done"],[48,10,21,24],[48,12,21,26],[48,17,21,31],[49,6,21,33,"value"],[49,11,21,38],[49,13,21,40,"from"],[50,4,21,45],[50,5,21,46],[51,4,22,4],[51,8,22,4,"_getSpringOptions"],[51,25,22,4],[51,28,22,84,"getSpringOptions"],[51,44,22,100],[51,45,22,101,"options"],[51,52,22,108],[51,53,22,109],[52,6,22,10,"stiffness"],[52,15,22,19],[52,18,22,19,"_getSpringOptions"],[52,35,22,19],[52,36,22,10,"stiffness"],[52,45,22,19],[53,6,22,21,"damping"],[53,13,22,28],[53,16,22,28,"_getSpringOptions"],[53,33,22,28],[53,34,22,21,"damping"],[53,41,22,28],[54,6,22,30,"mass"],[54,10,22,34],[54,13,22,34,"_getSpringOptions"],[54,30,22,34],[54,31,22,30,"mass"],[54,35,22,34],[55,6,22,36,"velocity"],[55,14,22,44],[55,17,22,44,"_getSpringOptions"],[55,34,22,44],[55,35,22,36,"velocity"],[55,43,22,44],[56,6,22,46,"duration"],[56,14,22,54],[56,17,22,54,"_getSpringOptions"],[56,34,22,54],[56,35,22,46,"duration"],[56,43,22,54],[57,6,22,56,"isResolvedFromDuration"],[57,28,22,78],[57,31,22,78,"_getSpringOptions"],[57,48,22,78],[57,49,22,56,"isResolvedFromDuration"],[57,71,22,78],[58,4,23,4],[58,8,23,8,"resolveSpring"],[58,21,23,21],[58,24,23,24,"zero"],[58,28,23,28],[59,4,24,4],[59,8,24,8,"resolveVelocity"],[59,23,24,23],[59,26,24,26,"zero"],[59,30,24,30],[60,4,25,4],[60,13,25,13,"createSpring"],[60,25,25,25,"createSpring"],[60,26,25,25],[60,28,25,28],[61,6,26,8],[61,10,26,14,"initialVelocity"],[61,25,26,29],[61,28,26,32,"velocity"],[61,36,26,40],[61,39,26,43],[61,41,26,45,"velocity"],[61,49,26,53],[61,52,26,56],[61,56,26,60],[61,57,26,61],[61,60,26,64],[61,63,26,67],[62,6,27,8],[62,10,27,14,"initialDelta"],[62,22,27,26],[62,25,27,29,"to"],[62,27,27,31],[62,30,27,34,"from"],[62,34,27,38],[63,6,28,8],[63,10,28,14,"dampingRatio"],[63,22,28,26],[63,25,28,29,"damping"],[63,32,28,36],[63,36,28,40],[63,37,28,41],[63,40,28,44,"Math"],[63,44,28,48],[63,45,28,49,"sqrt"],[63,49,28,53],[63,50,28,54,"stiffness"],[63,59,28,63],[63,62,28,66,"mass"],[63,66,28,70],[63,67,28,71],[63,68,28,72],[64,6,29,8],[64,10,29,14,"undampedAngularFreq"],[64,29,29,33],[64,32,29,36,"Math"],[64,36,29,40],[64,37,29,41,"sqrt"],[64,41,29,45],[64,42,29,46,"stiffness"],[64,51,29,55],[64,54,29,58,"mass"],[64,58,29,62],[64,59,29,63],[64,62,29,66],[64,66,29,70],[65,6,30,8],[65,10,30,12,"restDelta"],[65,19,30,21],[65,24,30,26,"undefined"],[65,33,30,35],[65,35,30,37],[66,8,31,12,"restDelta"],[66,17,31,21],[66,20,31,24,"Math"],[66,24,31,28],[66,25,31,29,"min"],[66,28,31,32],[66,29,31,33,"Math"],[66,33,31,37],[66,34,31,38,"abs"],[66,37,31,41],[66,38,31,42,"to"],[66,40,31,44],[66,43,31,47,"from"],[66,47,31,51],[66,48,31,52],[66,51,31,55],[66,54,31,58],[66,56,31,60],[66,59,31,63],[66,60,31,64],[67,6,32,8],[68,6,33,8],[68,10,33,12,"dampingRatio"],[68,22,33,24],[68,25,33,27],[68,26,33,28],[68,28,33,30],[69,8,34,12],[69,12,34,18,"angularFreq"],[69,23,34,29],[69,26,34,32],[69,30,34,32,"calcAngularFreq"],[69,49,34,47],[69,50,34,47,"calcAngularFreq"],[69,65,34,47],[69,67,34,48,"undampedAngularFreq"],[69,86,34,67],[69,88,34,69,"dampingRatio"],[69,100,34,81],[69,101,34,82],[70,8,35,12,"resolveSpring"],[70,21,35,25],[70,24,35,29,"t"],[70,25,35,30],[70,29,35,35],[71,10,36,16],[71,14,36,22,"envelope"],[71,22,36,30],[71,25,36,33,"Math"],[71,29,36,37],[71,30,36,38,"exp"],[71,33,36,41],[71,34,36,42],[71,35,36,43,"dampingRatio"],[71,47,36,55],[71,50,36,58,"undampedAngularFreq"],[71,69,36,77],[71,72,36,80,"t"],[71,73,36,81],[71,74,36,82],[72,10,37,16],[72,17,37,24,"to"],[72,19,37,26],[72,22,38,20,"envelope"],[72,30,38,28],[72,34,39,26],[72,35,39,27,"initialVelocity"],[72,50,39,42],[72,53,40,28,"dampingRatio"],[72,65,40,40],[72,68,40,43,"undampedAngularFreq"],[72,87,40,62],[72,90,40,65,"initialDelta"],[72,102,40,77],[72,106,41,28,"angularFreq"],[72,117,41,39],[72,120,42,28,"Math"],[72,124,42,32],[72,125,42,33,"sin"],[72,128,42,36],[72,129,42,37,"angularFreq"],[72,140,42,48],[72,143,42,51,"t"],[72,144,42,52],[72,145,42,53],[72,148,43,28,"initialDelta"],[72,160,43,40],[72,163,43,43,"Math"],[72,167,43,47],[72,168,43,48,"cos"],[72,171,43,51],[72,172,43,52,"angularFreq"],[72,183,43,63],[72,186,43,66,"t"],[72,187,43,67],[72,188,43,68],[72,189,43,69],[73,8,44,12],[73,9,44,13],[74,8,45,12,"resolveVelocity"],[74,23,45,27],[74,26,45,31,"t"],[74,27,45,32],[74,31,45,37],[75,10,46,16],[75,14,46,22,"envelope"],[75,22,46,30],[75,25,46,33,"Math"],[75,29,46,37],[75,30,46,38,"exp"],[75,33,46,41],[75,34,46,42],[75,35,46,43,"dampingRatio"],[75,47,46,55],[75,50,46,58,"undampedAngularFreq"],[75,69,46,77],[75,72,46,80,"t"],[75,73,46,81],[75,74,46,82],[76,10,47,16],[76,17,47,24,"dampingRatio"],[76,29,47,36],[76,32,48,20,"undampedAngularFreq"],[76,51,48,39],[76,54,49,20,"envelope"],[76,62,49,28],[76,66,50,22,"Math"],[76,70,50,26],[76,71,50,27,"sin"],[76,74,50,30],[76,75,50,31,"angularFreq"],[76,86,50,42],[76,89,50,45,"t"],[76,90,50,46],[76,91,50,47],[76,95,51,25,"initialVelocity"],[76,110,51,40],[76,113,52,28,"dampingRatio"],[76,125,52,40],[76,128,53,32,"undampedAngularFreq"],[76,147,53,51],[76,150,54,32,"initialDelta"],[76,162,54,44],[76,163,54,45],[76,166,55,24,"angularFreq"],[76,177,55,35],[76,180,56,24,"initialDelta"],[76,192,56,36],[76,195,56,39,"Math"],[76,199,56,43],[76,200,56,44,"cos"],[76,203,56,47],[76,204,56,48,"angularFreq"],[76,215,56,59],[76,218,56,62,"t"],[76,219,56,63],[76,220,56,64],[76,221,56,65],[76,224,57,20,"envelope"],[76,232,57,28],[76,236,58,25,"Math"],[76,240,58,29],[76,241,58,30,"cos"],[76,244,58,33],[76,245,58,34,"angularFreq"],[76,256,58,45],[76,259,58,48,"t"],[76,260,58,49],[76,261,58,50],[76,265,59,29,"initialVelocity"],[76,280,59,44],[76,283,60,32,"dampingRatio"],[76,295,60,44],[76,298,61,36,"undampedAngularFreq"],[76,317,61,55],[76,320,62,36,"initialDelta"],[76,332,62,48],[76,333,62,49],[76,336,63,28,"angularFreq"],[76,347,63,39],[76,350,64,32,"initialDelta"],[76,362,64,44],[76,365,65,32,"Math"],[76,369,65,36],[76,370,65,37,"sin"],[76,373,65,40],[76,374,65,41,"angularFreq"],[76,385,65,52],[76,388,65,55,"t"],[76,389,65,56],[76,390,65,57],[76,391,65,58],[77,8,66,12],[77,9,66,13],[78,6,67,8],[78,7,67,9],[78,13,68,13],[78,17,68,17,"dampingRatio"],[78,29,68,29],[78,34,68,34],[78,35,68,35],[78,37,68,37],[79,8,69,12,"resolveSpring"],[79,21,69,25],[79,24,69,29,"t"],[79,25,69,30],[79,29,69,35,"to"],[79,31,69,37],[79,34,70,16,"Math"],[79,38,70,20],[79,39,70,21,"exp"],[79,42,70,24],[79,43,70,25],[79,44,70,26,"undampedAngularFreq"],[79,63,70,45],[79,66,70,48,"t"],[79,67,70,49],[79,68,70,50],[79,72,71,21,"initialDelta"],[79,84,71,33],[79,87,72,24],[79,88,72,25,"initialVelocity"],[79,103,72,40],[79,106,72,43,"undampedAngularFreq"],[79,125,72,62],[79,128,72,65,"initialDelta"],[79,140,72,77],[79,144,73,28,"t"],[79,145,73,29],[79,146,73,30],[80,6,74,8],[80,7,74,9],[80,13,75,13],[81,8,76,12],[81,12,76,18,"dampedAngularFreq"],[81,29,76,35],[81,32,76,38,"undampedAngularFreq"],[81,51,76,57],[81,54,76,60,"Math"],[81,58,76,64],[81,59,76,65,"sqrt"],[81,63,76,69],[81,64,76,70,"dampingRatio"],[81,76,76,82],[81,79,76,85,"dampingRatio"],[81,91,76,97],[81,94,76,100],[81,95,76,101],[81,96,76,102],[82,8,77,12,"resolveSpring"],[82,21,77,25],[82,24,77,29,"t"],[82,25,77,30],[82,29,77,35],[83,10,78,16],[83,14,78,22,"envelope"],[83,22,78,30],[83,25,78,33,"Math"],[83,29,78,37],[83,30,78,38,"exp"],[83,33,78,41],[83,34,78,42],[83,35,78,43,"dampingRatio"],[83,47,78,55],[83,50,78,58,"undampedAngularFreq"],[83,69,78,77],[83,72,78,80,"t"],[83,73,78,81],[83,74,78,82],[84,10,79,16],[84,14,79,22,"freqForT"],[84,22,79,30],[84,25,79,33,"Math"],[84,29,79,37],[84,30,79,38,"min"],[84,33,79,41],[84,34,79,42,"dampedAngularFreq"],[84,51,79,59],[84,54,79,62,"t"],[84,55,79,63],[84,57,79,65],[84,60,79,68],[84,61,79,69],[85,10,80,16],[85,17,80,24,"to"],[85,19,80,26],[85,22,81,21,"envelope"],[85,30,81,29],[85,34,82,25],[85,35,82,26,"initialVelocity"],[85,50,82,41],[85,53,83,28,"dampingRatio"],[85,65,83,40],[85,68,83,43,"undampedAngularFreq"],[85,87,83,62],[85,90,83,65,"initialDelta"],[85,102,83,77],[85,106,84,28,"Math"],[85,110,84,32],[85,111,84,33,"sinh"],[85,115,84,37],[85,116,84,38,"freqForT"],[85,124,84,46],[85,125,84,47],[85,128,85,28,"dampedAngularFreq"],[85,145,85,45],[85,148,86,32,"initialDelta"],[85,160,86,44],[85,163,87,32,"Math"],[85,167,87,36],[85,168,87,37,"cosh"],[85,172,87,41],[85,173,87,42,"freqForT"],[85,181,87,50],[85,182,87,51],[85,183,87,52],[85,186,88,24,"dampedAngularFreq"],[85,203,88,41],[86,8,89,12],[86,9,89,13],[87,6,90,8],[88,4,91,4],[89,4,92,4,"createSpring"],[89,16,92,16],[89,17,92,17],[89,18,92,18],[90,4,93,4],[90,11,93,11],[91,6,94,8,"next"],[91,10,94,12],[91,12,94,15,"t"],[91,13,94,16],[91,17,94,21],[92,8,95,12],[92,12,95,18,"current"],[92,19,95,25],[92,22,95,28,"resolveSpring"],[92,35,95,41],[92,36,95,42,"t"],[92,37,95,43],[92,38,95,44],[93,8,96,12],[93,12,96,16],[93,13,96,17,"isResolvedFromDuration"],[93,35,96,39],[93,37,96,41],[94,10,97,16],[94,14,97,22,"currentVelocity"],[94,29,97,37],[94,32,97,40,"resolveVelocity"],[94,47,97,55],[94,48,97,56,"t"],[94,49,97,57],[94,50,97,58],[94,53,97,61],[94,57,97,65],[95,10,98,16],[95,14,98,22,"isBelowVelocityThreshold"],[95,38,98,46],[95,41,98,49,"Math"],[95,45,98,53],[95,46,98,54,"abs"],[95,49,98,57],[95,50,98,58,"currentVelocity"],[95,65,98,73],[95,66,98,74],[95,70,98,78,"restSpeed"],[95,79,98,87],[96,10,99,16],[96,14,99,22,"isBelowDisplacementThreshold"],[96,42,99,50],[96,45,99,53,"Math"],[96,49,99,57],[96,50,99,58,"abs"],[96,53,99,61],[96,54,99,62,"to"],[96,56,99,64],[96,59,99,67,"current"],[96,66,99,74],[96,67,99,75],[96,71,99,79,"restDelta"],[96,80,99,88],[97,10,100,16,"state"],[97,15,100,21],[97,16,100,22,"done"],[97,20,100,26],[97,23,101,20,"isBelowVelocityThreshold"],[97,47,101,44],[97,51,101,48,"isBelowDisplacementThreshold"],[97,79,101,76],[98,8,102,12],[98,9,102,13],[98,15,103,17],[99,10,104,16,"state"],[99,15,104,21],[99,16,104,22,"done"],[99,20,104,26],[99,23,104,29,"t"],[99,24,104,30],[99,28,104,34,"duration"],[99,36,104,42],[100,8,105,12],[101,8,106,12,"state"],[101,13,106,17],[101,14,106,18,"value"],[101,19,106,23],[101,22,106,26,"state"],[101,27,106,31],[101,28,106,32,"done"],[101,32,106,36],[101,35,106,39,"to"],[101,37,106,41],[101,40,106,44,"current"],[101,47,106,51],[102,8,107,12],[102,15,107,19,"state"],[102,20,107,24],[103,6,108,8],[103,7,108,9],[104,6,109,8,"flipTarget"],[104,16,109,18],[104,18,109,20,"flipTarget"],[104,19,109,20],[104,24,109,26],[105,8,110,12,"velocity"],[105,16,110,20],[105,19,110,23],[105,20,110,24,"velocity"],[105,28,110,32],[106,8,110,33],[106,12,110,33,"_ref"],[106,16,110,33],[106,19,111,25],[106,20,111,26,"to"],[106,22,111,28],[106,24,111,30,"from"],[106,28,111,34],[106,29,111,35],[107,8,111,13,"from"],[107,12,111,17],[107,15,111,17,"_ref"],[107,19,111,17],[108,8,111,19,"to"],[108,10,111,21],[108,13,111,21,"_ref"],[108,17,111,21],[109,8,112,12,"createSpring"],[109,20,112,24],[109,21,112,25],[109,22,112,26],[110,6,113,8],[111,4,114,4],[111,5,114,5],[112,2,115,0],[113,2,116,0,"spring"],[113,8,116,6],[113,9,116,7,"needsInterpolation"],[113,27,116,25],[113,30,116,28],[113,31,116,29,"a"],[113,32,116,30],[113,34,116,32,"b"],[113,35,116,33],[113,40,116,38],[113,47,116,45,"a"],[113,48,116,46],[113,53,116,51],[113,61,116,59],[113,65,116,63],[113,72,116,70,"b"],[113,73,116,71],[113,78,116,76],[113,86,116,84],[114,2,117,0],[114,6,117,6,"zero"],[114,10,117,10],[114,13,117,14,"_t"],[114,15,117,16],[114,19,117,21],[114,20,117,22],[115,0,117,23],[115,3]],"functionMap":{"names":["<global>","isSpringType","keys.some$argument_0","getSpringOptions","spring","createSpring","resolveSpring","resolveVelocity","next","flipTarget","needsInterpolation","zero"],"mappings":"AAA;ACK;qBCC,mCD;CDC;AGC;CHS;AIC;ICM;4BCU;aDS;8BEC;aFqB;4BCG;8BDI;4BCI;aDY;KDE;cIG;SJc;oBKC;SLI;CJE;4BUC,wDV;aWC,SX"},"hasCjsExports":false},"type":"js/module"}]}