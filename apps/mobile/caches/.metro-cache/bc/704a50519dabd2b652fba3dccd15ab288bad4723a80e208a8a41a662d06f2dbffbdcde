{"dependencies":[{"name":"../../../utils/process.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"HZs0J5cud4zXBKd1/QC80f5X0Ho=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":42,"index":92}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../../../render/utils/types.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":93},"end":{"line":3,"column":64,"index":157}}],"key":"Cy2uRYBLtmunHikL1St478bLYH0=","exportNames":["*"],"imports":1}},{"name":"../../../utils/warn-once.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":158},"end":{"line":4,"column":56,"index":214}}],"key":"uvYIr7265TTn/HNGunufNJBkqbk=","exportNames":["*"],"imports":1}},{"name":"./observers.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":54,"index":269}}],"key":"yRmq9ZwyUQrATTClDnrKzyYqTK0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useViewport\", {\n    enumerable: true,\n    get: function () {\n      return useViewport;\n    }\n  });\n  var _utilsProcessMjs = require(_dependencyMap[0], \"../../../utils/process.mjs\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _renderUtilsTypesMjs = require(_dependencyMap[2], \"../../../render/utils/types.mjs\");\n  var _utilsWarnOnceMjs = require(_dependencyMap[3], \"../../../utils/warn-once.mjs\");\n  var _observersMjs = require(_dependencyMap[4], \"./observers.mjs\");\n  function useViewport(_a) {\n    var visualElement = _a.visualElement,\n      whileInView = _a.whileInView,\n      onViewportEnter = _a.onViewportEnter,\n      onViewportLeave = _a.onViewportLeave,\n      _b = _a.viewport,\n      viewport = _b === void 0 ? {} : _b;\n    var state = (0, _react.useRef)({\n      hasEnteredView: false,\n      isInView: false\n    });\n    var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView) shouldObserve = false;\n    var useObserver = typeof IntersectionObserver === \"undefined\" ? useMissingIntersectionObserver : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n  }\n  var thresholdNames = {\n    some: 0,\n    all: 1\n  };\n  function useIntersectionObserver(shouldObserve, state, visualElement, _a) {\n    var root = _a.root,\n      rootMargin = _a.margin,\n      _b = _a.amount,\n      amount = _b === void 0 ? \"some\" : _b,\n      once = _a.once;\n    (0, _react.useEffect)(function () {\n      if (!shouldObserve) return;\n      var options = {\n        root: root === null || root === void 0 ? void 0 : root.current,\n        rootMargin: rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholdNames[amount]\n      };\n      var intersectionCallback = function (entry) {\n        var _a;\n        var isIntersecting = entry.isIntersecting;\n        /**\n         * If there's been no change in the viewport state, early return.\n         */\n        if (state.isInView === isIntersecting) return;\n        state.isInView = isIntersecting;\n        /**\n         * Handle hasEnteredView. If this is only meant to run once, and\n         * element isn't visible, early return. Otherwise set hasEnteredView to true.\n         */\n        if (once && !isIntersecting && state.hasEnteredView) {\n          return;\n        } else if (isIntersecting) {\n          state.hasEnteredView = true;\n        }\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(_renderUtilsTypesMjs.AnimationType.InView, isIntersecting);\n        /**\n         * Use the latest committed props rather than the ones in scope\n         * when this observer is created\n         */\n        var props = visualElement.getProps();\n        var callback = isIntersecting ? props.onViewportEnter : props.onViewportLeave;\n        callback === null || callback === void 0 ? void 0 : callback(entry);\n      };\n      return (0, _observersMjs.observeIntersection)(visualElement.getInstance(), options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n  }\n  /**\n   * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n   * on mount. This way, the page will be in the state the author expects users\n   * to see it in for everyone.\n   */\n  function useMissingIntersectionObserver(shouldObserve, state, visualElement, _a) {\n    var _b = _a.fallback,\n      fallback = _b === void 0 ? true : _b;\n    (0, _react.useEffect)(function () {\n      if (!shouldObserve || !fallback) return;\n      if (_utilsProcessMjs.env !== \"production\") {\n        (0, _utilsWarnOnceMjs.warnOnce)(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n      }\n      /**\n       * Fire this in an rAF because, at this point, the animation state\n       * won't have flushed for the first time and there's certain logic in\n       * there that behaves differently on the initial animation.\n       *\n       * This hook should be quite rarely called so setting this in an rAF\n       * is preferred to changing the behaviour of the animation state.\n       */\n      requestAnimationFrame(function () {\n        var _a;\n        state.hasEnteredView = true;\n        var onViewportEnter = visualElement.getProps().onViewportEnter;\n        onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(_renderUtilsTypesMjs.AnimationType.InView, true);\n      });\n    }, [shouldObserve]);\n  }\n});","lineCount":110,"map":[[7,2,99,0,"Object"],[7,8,99,0],[7,9,99,0,"defineProperty"],[7,23,99,0],[7,24,99,0,"exports"],[7,31,99,0],[8,4,99,0,"enumerable"],[8,14,99,0],[9,4,99,0,"get"],[9,7,99,0],[9,18,99,0,"get"],[9,19,99,0],[10,6,99,0],[10,13,99,9,"useViewport"],[10,24,99,20],[11,4,99,20],[12,2,99,20],[13,2,1,0],[13,6,1,0,"_utilsProcessMjs"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_react"],[14,12,2,0],[14,15,2,0,"require"],[14,22,2,0],[14,23,2,0,"_dependencyMap"],[14,37,2,0],[15,2,3,0],[15,6,3,0,"_renderUtilsTypesMjs"],[15,26,3,0],[15,29,3,0,"require"],[15,36,3,0],[15,37,3,0,"_dependencyMap"],[15,51,3,0],[16,2,4,0],[16,6,4,0,"_utilsWarnOnceMjs"],[16,23,4,0],[16,26,4,0,"require"],[16,33,4,0],[16,34,4,0,"_dependencyMap"],[16,48,4,0],[17,2,5,0],[17,6,5,0,"_observersMjs"],[17,19,5,0],[17,22,5,0,"require"],[17,29,5,0],[17,30,5,0,"_dependencyMap"],[17,44,5,0],[18,2,7,0],[18,11,7,9,"useViewport"],[18,22,7,20,"useViewport"],[18,23,7,21,"_a"],[18,25,7,23],[18,27,7,25],[19,4,8,4],[19,8,8,8,"visualElement"],[19,21,8,21],[19,24,8,24,"_a"],[19,26,8,26],[19,27,8,27,"visualElement"],[19,40,8,40],[20,6,8,42,"whileInView"],[20,17,8,53],[20,20,8,56,"_a"],[20,22,8,58],[20,23,8,59,"whileInView"],[20,34,8,70],[21,6,8,72,"onViewportEnter"],[21,21,8,87],[21,24,8,90,"_a"],[21,26,8,92],[21,27,8,93,"onViewportEnter"],[21,42,8,108],[22,6,8,110,"onViewportLeave"],[22,21,8,125],[22,24,8,128,"_a"],[22,26,8,130],[22,27,8,131,"onViewportLeave"],[22,42,8,146],[23,6,8,148,"_b"],[23,8,8,150],[23,11,8,153,"_a"],[23,13,8,155],[23,14,8,156,"viewport"],[23,22,8,164],[24,6,8,166,"viewport"],[24,14,8,174],[24,17,8,177,"_b"],[24,19,8,179],[24,24,8,184],[24,29,8,189],[24,30,8,190],[24,33,8,193],[24,34,8,194],[24,35,8,195],[24,38,8,198,"_b"],[24,40,8,200],[25,4,9,4],[25,8,9,8,"state"],[25,13,9,13],[25,16,9,16],[25,20,9,16,"useRef"],[25,26,9,22],[25,27,9,22,"useRef"],[25,33,9,22],[25,35,9,23],[26,6,10,8,"hasEnteredView"],[26,20,10,22],[26,22,10,24],[26,27,10,29],[27,6,11,8,"isInView"],[27,14,11,16],[27,16,11,18],[28,4,12,4],[28,5,12,5],[28,6,12,6],[29,4,13,4],[29,8,13,8,"shouldObserve"],[29,21,13,21],[29,24,13,24,"Boolean"],[29,31,13,31],[29,32,13,32,"whileInView"],[29,43,13,43],[29,47,13,47,"onViewportEnter"],[29,62,13,62],[29,66,13,66,"onViewportLeave"],[29,81,13,81],[29,82,13,82],[30,4,14,4],[30,8,14,8,"viewport"],[30,16,14,16],[30,17,14,17,"once"],[30,21,14,21],[30,25,14,25,"state"],[30,30,14,30],[30,31,14,31,"current"],[30,38,14,38],[30,39,14,39,"hasEnteredView"],[30,53,14,53],[30,55,15,8,"shouldObserve"],[30,68,15,21],[30,71,15,24],[30,76,15,29],[31,4,16,4],[31,8,16,8,"useObserver"],[31,19,16,19],[31,22,16,22],[31,29,16,29,"IntersectionObserver"],[31,49,16,49],[31,54,16,54],[31,65,16,65],[31,68,17,10,"useMissingIntersectionObserver"],[31,98,17,40],[31,101,18,10,"useIntersectionObserver"],[31,124,18,33],[32,4,19,4,"useObserver"],[32,15,19,15],[32,16,19,16,"shouldObserve"],[32,29,19,29],[32,31,19,31,"state"],[32,36,19,36],[32,37,19,37,"current"],[32,44,19,44],[32,46,19,46,"visualElement"],[32,59,19,59],[32,61,19,61,"viewport"],[32,69,19,69],[32,70,19,70],[33,2,20,0],[34,2,21,0],[34,6,21,4,"thresholdNames"],[34,20,21,18],[34,23,21,21],[35,4,22,4,"some"],[35,8,22,8],[35,10,22,10],[35,11,22,11],[36,4,23,4,"all"],[36,7,23,7],[36,9,23,9],[37,2,24,0],[37,3,24,1],[38,2,25,0],[38,11,25,9,"useIntersectionObserver"],[38,34,25,32,"useIntersectionObserver"],[38,35,25,33,"shouldObserve"],[38,48,25,46],[38,50,25,48,"state"],[38,55,25,53],[38,57,25,55,"visualElement"],[38,70,25,68],[38,72,25,70,"_a"],[38,74,25,72],[38,76,25,74],[39,4,26,4],[39,8,26,8,"root"],[39,12,26,12],[39,15,26,15,"_a"],[39,17,26,17],[39,18,26,18,"root"],[39,22,26,22],[40,6,26,24,"rootMargin"],[40,16,26,34],[40,19,26,37,"_a"],[40,21,26,39],[40,22,26,40,"margin"],[40,28,26,46],[41,6,26,48,"_b"],[41,8,26,50],[41,11,26,53,"_a"],[41,13,26,55],[41,14,26,56,"amount"],[41,20,26,62],[42,6,26,64,"amount"],[42,12,26,70],[42,15,26,73,"_b"],[42,17,26,75],[42,22,26,80],[42,27,26,85],[42,28,26,86],[42,31,26,89],[42,37,26,95],[42,40,26,98,"_b"],[42,42,26,100],[43,6,26,102,"once"],[43,10,26,106],[43,13,26,109,"_a"],[43,15,26,111],[43,16,26,112,"once"],[43,20,26,116],[44,4,27,4],[44,8,27,4,"useEffect"],[44,14,27,13],[44,15,27,13,"useEffect"],[44,24,27,13],[44,26,27,14],[44,38,27,26],[45,6,28,8],[45,10,28,12],[45,11,28,13,"shouldObserve"],[45,24,28,26],[45,26,29,12],[46,6,30,8],[46,10,30,12,"options"],[46,17,30,19],[46,20,30,22],[47,8,31,12,"root"],[47,12,31,16],[47,14,31,18,"root"],[47,18,31,22],[47,23,31,27],[47,27,31,31],[47,31,31,35,"root"],[47,35,31,39],[47,40,31,44],[47,45,31,49],[47,46,31,50],[47,49,31,53],[47,54,31,58],[47,55,31,59],[47,58,31,62,"root"],[47,62,31,66],[47,63,31,67,"current"],[47,70,31,74],[48,8,32,12,"rootMargin"],[48,18,32,22],[48,20,32,24,"rootMargin"],[48,30,32,34],[49,8,33,12,"threshold"],[49,17,33,21],[49,19,33,23],[49,26,33,30,"amount"],[49,32,33,36],[49,37,33,41],[49,45,33,49],[49,48,33,52,"amount"],[49,54,33,58],[49,57,33,61,"thresholdNames"],[49,71,33,75],[49,72,33,76,"amount"],[49,78,33,82],[50,6,34,8],[50,7,34,9],[51,6,35,8],[51,10,35,12,"intersectionCallback"],[51,30,35,32],[51,33,35,35],[51,42,35,35,"intersectionCallback"],[51,43,35,45,"entry"],[51,48,35,50],[51,50,35,52],[52,8,36,12],[52,12,36,16,"_a"],[52,14,36,18],[53,8,37,12],[53,12,37,16,"isIntersecting"],[53,26,37,30],[53,29,37,33,"entry"],[53,34,37,38],[53,35,37,39,"isIntersecting"],[53,49,37,53],[54,8,38,12],[55,0,39,0],[56,0,40,0],[57,8,41,12],[57,12,41,16,"state"],[57,17,41,21],[57,18,41,22,"isInView"],[57,26,41,30],[57,31,41,35,"isIntersecting"],[57,45,41,49],[57,47,42,16],[58,8,43,12,"state"],[58,13,43,17],[58,14,43,18,"isInView"],[58,22,43,26],[58,25,43,29,"isIntersecting"],[58,39,43,43],[59,8,44,12],[60,0,45,0],[61,0,46,0],[62,0,47,0],[63,8,48,12],[63,12,48,16,"once"],[63,16,48,20],[63,20,48,24],[63,21,48,25,"isIntersecting"],[63,35,48,39],[63,39,48,43,"state"],[63,44,48,48],[63,45,48,49,"hasEnteredView"],[63,59,48,63],[63,61,48,65],[64,10,49,16],[65,8,50,12],[65,9,50,13],[65,15,51,17],[65,19,51,21,"isIntersecting"],[65,33,51,35],[65,35,51,37],[66,10,52,16,"state"],[66,15,52,21],[66,16,52,22,"hasEnteredView"],[66,30,52,36],[66,33,52,39],[66,37,52,43],[67,8,53,12],[68,8,54,12],[68,9,54,13,"_a"],[68,11,54,15],[68,14,54,18,"visualElement"],[68,27,54,31],[68,28,54,32,"animationState"],[68,42,54,46],[68,48,54,52],[68,52,54,56],[68,56,54,60,"_a"],[68,58,54,62],[68,63,54,67],[68,68,54,72],[68,69,54,73],[68,72,54,76],[68,77,54,81],[68,78,54,82],[68,81,54,85,"_a"],[68,83,54,87],[68,84,54,88,"setActive"],[68,93,54,97],[68,94,54,98,"AnimationType"],[68,114,54,111],[68,115,54,111,"AnimationType"],[68,128,54,111],[68,129,54,112,"InView"],[68,135,54,118],[68,137,54,120,"isIntersecting"],[68,151,54,134],[68,152,54,135],[69,8,55,12],[70,0,56,0],[71,0,57,0],[72,0,58,0],[73,8,59,12],[73,12,59,16,"props"],[73,17,59,21],[73,20,59,24,"visualElement"],[73,33,59,37],[73,34,59,38,"getProps"],[73,42,59,46],[73,43,59,47],[73,44,59,48],[74,8,60,12],[74,12,60,16,"callback"],[74,20,60,24],[74,23,60,27,"isIntersecting"],[74,37,60,41],[74,40,61,18,"props"],[74,45,61,23],[74,46,61,24,"onViewportEnter"],[74,61,61,39],[74,64,62,18,"props"],[74,69,62,23],[74,70,62,24,"onViewportLeave"],[74,85,62,39],[75,8,63,12,"callback"],[75,16,63,20],[75,21,63,25],[75,25,63,29],[75,29,63,33,"callback"],[75,37,63,41],[75,42,63,46],[75,47,63,51],[75,48,63,52],[75,51,63,55],[75,56,63,60],[75,57,63,61],[75,60,63,64,"callback"],[75,68,63,72],[75,69,63,73,"entry"],[75,74,63,78],[75,75,63,79],[76,6,64,8],[76,7,64,9],[77,6,65,8],[77,13,65,15],[77,17,65,15,"observeIntersection"],[77,30,65,34],[77,31,65,34,"observeIntersection"],[77,50,65,34],[77,52,65,35,"visualElement"],[77,65,65,48],[77,66,65,49,"getInstance"],[77,77,65,60],[77,78,65,61],[77,79,65,62],[77,81,65,64,"options"],[77,88,65,71],[77,90,65,73,"intersectionCallback"],[77,110,65,93],[77,111,65,94],[78,4,66,4],[78,5,66,5],[78,7,66,7],[78,8,66,8,"shouldObserve"],[78,21,66,21],[78,23,66,23,"root"],[78,27,66,27],[78,29,66,29,"rootMargin"],[78,39,66,39],[78,41,66,41,"amount"],[78,47,66,47],[78,48,66,48],[78,49,66,49],[79,2,67,0],[80,2,68,0],[81,0,69,0],[82,0,70,0],[83,0,71,0],[84,0,72,0],[85,2,73,0],[85,11,73,9,"useMissingIntersectionObserver"],[85,41,73,39,"useMissingIntersectionObserver"],[85,42,73,40,"shouldObserve"],[85,55,73,53],[85,57,73,55,"state"],[85,62,73,60],[85,64,73,62,"visualElement"],[85,77,73,75],[85,79,73,77,"_a"],[85,81,73,79],[85,83,73,81],[86,4,74,4],[86,8,74,8,"_b"],[86,10,74,10],[86,13,74,13,"_a"],[86,15,74,15],[86,16,74,16,"fallback"],[86,24,74,24],[87,6,74,26,"fallback"],[87,14,74,34],[87,17,74,37,"_b"],[87,19,74,39],[87,24,74,44],[87,29,74,49],[87,30,74,50],[87,33,74,53],[87,37,74,57],[87,40,74,60,"_b"],[87,42,74,62],[88,4,75,4],[88,8,75,4,"useEffect"],[88,14,75,13],[88,15,75,13,"useEffect"],[88,24,75,13],[88,26,75,14],[88,38,75,26],[89,6,76,8],[89,10,76,12],[89,11,76,13,"shouldObserve"],[89,24,76,26],[89,28,76,30],[89,29,76,31,"fallback"],[89,37,76,39],[89,39,77,12],[90,6,78,8],[90,10,78,12,"env"],[90,26,78,15],[90,27,78,15,"env"],[90,30,78,15],[90,35,78,20],[90,47,78,32],[90,49,78,34],[91,8,79,12],[91,12,79,12,"warnOnce"],[91,29,79,20],[91,30,79,20,"warnOnce"],[91,38,79,20],[91,40,79,21],[91,45,79,26],[91,47,79,28],[91,145,79,126],[91,146,79,127],[92,6,80,8],[93,6,81,8],[94,0,82,0],[95,0,83,0],[96,0,84,0],[97,0,85,0],[98,0,86,0],[99,0,87,0],[100,0,88,0],[101,6,89,8,"requestAnimationFrame"],[101,27,89,29],[101,28,89,30],[101,40,89,42],[102,8,90,12],[102,12,90,16,"_a"],[102,14,90,18],[103,8,91,12,"state"],[103,13,91,17],[103,14,91,18,"hasEnteredView"],[103,28,91,32],[103,31,91,35],[103,35,91,39],[104,8,92,12],[104,12,92,16,"onViewportEnter"],[104,27,92,31],[104,30,92,34,"visualElement"],[104,43,92,47],[104,44,92,48,"getProps"],[104,52,92,56],[104,53,92,57],[104,54,92,58],[104,55,92,59,"onViewportEnter"],[104,70,92,74],[105,8,93,12,"onViewportEnter"],[105,23,93,27],[105,28,93,32],[105,32,93,36],[105,36,93,40,"onViewportEnter"],[105,51,93,55],[105,56,93,60],[105,61,93,65],[105,62,93,66],[105,65,93,69],[105,70,93,74],[105,71,93,75],[105,74,93,78,"onViewportEnter"],[105,89,93,93],[105,90,93,94],[105,94,93,98],[105,95,93,99],[106,8,94,12],[106,9,94,13,"_a"],[106,11,94,15],[106,14,94,18,"visualElement"],[106,27,94,31],[106,28,94,32,"animationState"],[106,42,94,46],[106,48,94,52],[106,52,94,56],[106,56,94,60,"_a"],[106,58,94,62],[106,63,94,67],[106,68,94,72],[106,69,94,73],[106,72,94,76],[106,77,94,81],[106,78,94,82],[106,81,94,85,"_a"],[106,83,94,87],[106,84,94,88,"setActive"],[106,93,94,97],[106,94,94,98,"AnimationType"],[106,114,94,111],[106,115,94,111,"AnimationType"],[106,128,94,111],[106,129,94,112,"InView"],[106,135,94,118],[106,137,94,120],[106,141,94,124],[106,142,94,125],[107,6,95,8],[107,7,95,9],[107,8,95,10],[108,4,96,4],[108,5,96,5],[108,7,96,7],[108,8,96,8,"shouldObserve"],[108,21,96,21],[108,22,96,22],[108,23,96,23],[109,2,97,0],[110,0,97,1],[110,3]],"functionMap":{"names":["<global>","useViewport","useIntersectionObserver","useEffect$argument_0","intersectionCallback","useMissingIntersectionObserver","requestAnimationFrame$argument_0"],"mappings":"AAA;ACM;CDa;AEK;cCE;mCCQ;SD6B;KDE;CFC;AKM;cFE;8BGc;SHM;KEC;CLC"},"hasCjsExports":false},"type":"js/module"}]}