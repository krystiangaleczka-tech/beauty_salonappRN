{"dependencies":[{"name":"@motionone/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":12,"index":91},"end":{"line":5,"column":39,"index":118}}],"key":"FS/MZgsOo2zLy6PbOiduH8x3eaQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var utils = require(_dependencyMap[0], \"@motionone/utils\");\n  var namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1\n  };\n  function resolveEdge(edge, length) {\n    var inset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n      edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (utils.isString(edge)) {\n      var asNumber = parseFloat(edge);\n      if (edge.endsWith(\"px\")) {\n        delta = asNumber;\n      } else if (edge.endsWith(\"%\")) {\n        edge = asNumber / 100;\n      } else if (edge.endsWith(\"vw\")) {\n        delta = asNumber / 100 * document.documentElement.clientWidth;\n      } else if (edge.endsWith(\"vh\")) {\n        delta = asNumber / 100 * document.documentElement.clientHeight;\n      } else {\n        edge = asNumber;\n      }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (utils.isNumber(edge)) {\n      delta = length * edge;\n    }\n    return inset + delta;\n  }\n  exports.namedEdges = namedEdges;\n  exports.resolveEdge = resolveEdge;\n});","lineCount":50,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,3,47,"value"],[5,9,3,52],[5,11,3,54],[6,2,3,59],[6,3,3,60],[6,4,3,61],[7,2,5,0],[7,6,5,4,"utils"],[7,11,5,9],[7,14,5,12,"require"],[7,21,5,19],[7,22,5,19,"_dependencyMap"],[7,36,5,19],[7,59,5,38],[7,60,5,39],[8,2,7,0],[8,6,7,6,"namedEdges"],[8,16,7,16],[8,19,7,19],[9,4,8,4,"start"],[9,9,8,9],[9,11,8,11],[9,12,8,12],[10,4,9,4,"center"],[10,10,9,10],[10,12,9,12],[10,15,9,15],[11,4,10,4,"end"],[11,7,10,7],[11,9,10,9],[12,2,11,0],[12,3,11,1],[13,2,12,0],[13,11,12,9,"resolveEdge"],[13,22,12,20,"resolveEdge"],[13,23,12,21,"edge"],[13,27,12,25],[13,29,12,27,"length"],[13,35,12,33],[13,37,12,46],[14,4,12,46],[14,8,12,35,"inset"],[14,13,12,40],[14,16,12,40,"arguments"],[14,25,12,40],[14,26,12,40,"length"],[14,32,12,40],[14,40,12,40,"arguments"],[14,49,12,40],[14,57,12,40,"undefined"],[14,66,12,40],[14,69,12,40,"arguments"],[14,78,12,40],[14,84,12,43],[14,85,12,44],[15,4,13,4],[15,8,13,8,"delta"],[15,13,13,13],[15,16,13,16],[15,17,13,17],[16,4,14,4],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,4,18,4],[20,8,18,8,"namedEdges"],[20,18,18,18],[20,19,18,19,"edge"],[20,23,18,23],[20,24,18,24],[20,29,18,29,"undefined"],[20,38,18,38],[20,40,18,40],[21,6,19,8,"edge"],[21,10,19,12],[21,13,19,15,"namedEdges"],[21,23,19,25],[21,24,19,26,"edge"],[21,28,19,30],[21,29,19,31],[22,4,20,4],[23,4,21,4],[24,0,22,0],[25,0,23,0],[26,4,24,4],[26,8,24,8,"utils"],[26,13,24,13],[26,14,24,14,"isString"],[26,22,24,22],[26,23,24,23,"edge"],[26,27,24,27],[26,28,24,28],[26,30,24,30],[27,6,25,8],[27,10,25,14,"asNumber"],[27,18,25,22],[27,21,25,25,"parseFloat"],[27,31,25,35],[27,32,25,36,"edge"],[27,36,25,40],[27,37,25,41],[28,6,26,8],[28,10,26,12,"edge"],[28,14,26,16],[28,15,26,17,"endsWith"],[28,23,26,25],[28,24,26,26],[28,28,26,30],[28,29,26,31],[28,31,26,33],[29,8,27,12,"delta"],[29,13,27,17],[29,16,27,20,"asNumber"],[29,24,27,28],[30,6,28,8],[30,7,28,9],[30,13,29,13],[30,17,29,17,"edge"],[30,21,29,21],[30,22,29,22,"endsWith"],[30,30,29,30],[30,31,29,31],[30,34,29,34],[30,35,29,35],[30,37,29,37],[31,8,30,12,"edge"],[31,12,30,16],[31,15,30,19,"asNumber"],[31,23,30,27],[31,26,30,30],[31,29,30,33],[32,6,31,8],[32,7,31,9],[32,13,32,13],[32,17,32,17,"edge"],[32,21,32,21],[32,22,32,22,"endsWith"],[32,30,32,30],[32,31,32,31],[32,35,32,35],[32,36,32,36],[32,38,32,38],[33,8,33,12,"delta"],[33,13,33,17],[33,16,33,21,"asNumber"],[33,24,33,29],[33,27,33,32],[33,30,33,35],[33,33,33,39,"document"],[33,41,33,47],[33,42,33,48,"documentElement"],[33,57,33,63],[33,58,33,64,"clientWidth"],[33,69,33,75],[34,6,34,8],[34,7,34,9],[34,13,35,13],[34,17,35,17,"edge"],[34,21,35,21],[34,22,35,22,"endsWith"],[34,30,35,30],[34,31,35,31],[34,35,35,35],[34,36,35,36],[34,38,35,38],[35,8,36,12,"delta"],[35,13,36,17],[35,16,36,21,"asNumber"],[35,24,36,29],[35,27,36,32],[35,30,36,35],[35,33,36,39,"document"],[35,41,36,47],[35,42,36,48,"documentElement"],[35,57,36,63],[35,58,36,64,"clientHeight"],[35,70,36,76],[36,6,37,8],[36,7,37,9],[36,13,38,13],[37,8,39,12,"edge"],[37,12,39,16],[37,15,39,19,"asNumber"],[37,23,39,27],[38,6,40,8],[39,4,41,4],[40,4,42,4],[41,0,43,0],[42,0,44,0],[43,4,45,4],[43,8,45,8,"utils"],[43,13,45,13],[43,14,45,14,"isNumber"],[43,22,45,22],[43,23,45,23,"edge"],[43,27,45,27],[43,28,45,28],[43,30,45,30],[44,6,46,8,"delta"],[44,11,46,13],[44,14,46,16,"length"],[44,20,46,22],[44,23,46,25,"edge"],[44,27,46,29],[45,4,47,4],[46,4,48,4],[46,11,48,11,"inset"],[46,16,48,16],[46,19,48,19,"delta"],[46,24,48,24],[47,2,49,0],[48,2,51,0,"exports"],[48,9,51,7],[48,10,51,8,"namedEdges"],[48,20,51,18],[48,23,51,21,"namedEdges"],[48,33,51,31],[49,2,52,0,"exports"],[49,9,52,7],[49,10,52,8,"resolveEdge"],[49,21,52,19],[49,24,52,22,"resolveEdge"],[49,35,52,33],[50,0,52,34],[50,3]],"functionMap":{"names":["<global>","resolveEdge"],"mappings":"AAA;ACW;CDqC"},"hasCjsExports":true},"type":"js/module"}]}