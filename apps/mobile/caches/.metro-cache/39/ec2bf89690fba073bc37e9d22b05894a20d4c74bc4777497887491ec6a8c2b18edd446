{"dependencies":[{"name":"./_cloneArrayBuffer.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"KnM+zFrIm1wVlL+DS/KdjOyTMf8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _cloneArrayBufferJs = require(_dependencyMap[0], \"./_cloneArrayBuffer.js\");\n  var cloneArrayBuffer = _interopDefault(_cloneArrayBufferJs);\n  /**\n   * Creates a clone of `typedArray`.\n   *\n   * @private\n   * @param {Object} typedArray The typed array to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Object} Returns the cloned typed array.\n   */\n  function cloneTypedArray(typedArray, isDeep) {\n    var buffer = isDeep ? (0, cloneArrayBuffer.default)(typedArray.buffer) : typedArray.buffer;\n    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n  }\n  var _default = cloneTypedArray;\n});","lineCount":33,"map":[[12,2,16,0,"Object"],[12,8,16,0],[12,9,16,0,"defineProperty"],[12,23,16,0],[12,24,16,0,"exports"],[12,31,16,0],[13,4,16,0,"enumerable"],[13,14,16,0],[14,4,16,0,"get"],[14,7,16,0],[14,18,16,0,"get"],[14,19,16,0],[15,6,16,0],[15,13,16,0,"_default"],[15,21,16,0],[16,4,16,0],[17,2,16,0],[18,2,1,0],[18,6,1,0,"_cloneArrayBufferJs"],[18,25,1,0],[18,28,1,0,"require"],[18,35,1,0],[18,36,1,0,"_dependencyMap"],[18,50,1,0],[19,2,1,0],[19,6,1,0,"cloneArrayBuffer"],[19,22,1,0],[19,25,1,0,"_interopDefault"],[19,40,1,0],[19,41,1,0,"_cloneArrayBufferJs"],[19,60,1,0],[20,2,3,0],[21,0,4,0],[22,0,5,0],[23,0,6,0],[24,0,7,0],[25,0,8,0],[26,0,9,0],[27,0,10,0],[28,2,11,0],[28,11,11,9,"cloneTypedArray"],[28,26,11,24,"cloneTypedArray"],[28,27,11,25,"typedArray"],[28,37,11,35],[28,39,11,37,"isDeep"],[28,45,11,43],[28,47,11,45],[29,4,12,2],[29,8,12,6,"buffer"],[29,14,12,12],[29,17,12,15,"isDeep"],[29,23,12,21],[29,26,12,24],[29,30,12,24,"cloneArrayBuffer"],[29,46,12,40],[29,47,12,40,"default"],[29,54,12,40],[29,56,12,41,"typedArray"],[29,66,12,51],[29,67,12,52,"buffer"],[29,73,12,58],[29,74,12,59],[29,77,12,62,"typedArray"],[29,87,12,72],[29,88,12,73,"buffer"],[29,94,12,79],[30,4,13,2],[30,11,13,9],[30,15,13,13,"typedArray"],[30,25,13,23],[30,26,13,24,"constructor"],[30,37,13,35],[30,38,13,36,"buffer"],[30,44,13,42],[30,46,13,44,"typedArray"],[30,56,13,54],[30,57,13,55,"byteOffset"],[30,67,13,65],[30,69,13,67,"typedArray"],[30,79,13,77],[30,80,13,78,"length"],[30,86,13,84],[30,87,13,85],[31,2,14,0],[32,2,16,0],[32,6,16,0,"_default"],[32,14,16,0],[32,17,16,15,"cloneTypedArray"],[32,32,16,30],[33,0,16,31],[33,3]],"functionMap":{"names":["<global>","cloneTypedArray"],"mappings":"AAA;ACU;CDG"},"hasCjsExports":false},"type":"js/module"}]}