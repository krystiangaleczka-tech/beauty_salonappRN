{"dependencies":[{"name":"./css-variables-conversion.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":69,"index":69}}],"key":"OOF/nAe/JTZE3fZ/6E2+xCDyKDc=","exportNames":["*"],"imports":1}},{"name":"./unit-conversion.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":70},"end":{"line":2,"column":55,"index":125}}],"key":"vz/MfnjxU6qKIlWf6GeVEq4Lmig=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"parseDomVariant\", {\n    enumerable: true,\n    get: function () {\n      return parseDomVariant;\n    }\n  });\n  var _cssVariablesConversionMjs = require(_dependencyMap[0], \"./css-variables-conversion.mjs\");\n  var _unitConversionMjs = require(_dependencyMap[1], \"./unit-conversion.mjs\");\n  /**\n   * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n   * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n   */\n  var parseDomVariant = function (visualElement, target, origin, transitionEnd) {\n    var resolved = (0, _cssVariablesConversionMjs.resolveCSSVariables)(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return (0, _unitConversionMjs.unitConversion)(visualElement, target, origin, transitionEnd);\n  };\n});","lineCount":25,"map":[[7,2,15,0,"Object"],[7,8,15,0],[7,9,15,0,"defineProperty"],[7,23,15,0],[7,24,15,0,"exports"],[7,31,15,0],[8,4,15,0,"enumerable"],[8,14,15,0],[9,4,15,0,"get"],[9,7,15,0],[9,18,15,0,"get"],[9,19,15,0],[10,6,15,0],[10,13,15,9,"parseDomVariant"],[10,28,15,24],[11,4,15,24],[12,2,15,24],[13,2,1,0],[13,6,1,0,"_cssVariablesConversionMjs"],[13,32,1,0],[13,35,1,0,"require"],[13,42,1,0],[13,43,1,0,"_dependencyMap"],[13,57,1,0],[14,2,2,0],[14,6,2,0,"_unitConversionMjs"],[14,24,2,0],[14,27,2,0,"require"],[14,34,2,0],[14,35,2,0,"_dependencyMap"],[14,49,2,0],[15,2,4,0],[16,0,5,0],[17,0,6,0],[18,0,7,0],[19,2,8,0],[19,6,8,4,"parseDomVariant"],[19,21,8,19],[19,24,8,22],[19,33,8,22,"parseDomVariant"],[19,34,8,32,"visualElement"],[19,47,8,45],[19,49,8,47,"target"],[19,55,8,53],[19,57,8,55,"origin"],[19,63,8,61],[19,65,8,63,"transitionEnd"],[19,78,8,76],[19,80,8,78],[20,4,9,4],[20,8,9,8,"resolved"],[20,16,9,16],[20,19,9,19],[20,23,9,19,"resolveCSSVariables"],[20,49,9,38],[20,50,9,38,"resolveCSSVariables"],[20,69,9,38],[20,71,9,39,"visualElement"],[20,84,9,52],[20,86,9,54,"target"],[20,92,9,60],[20,94,9,62,"transitionEnd"],[20,107,9,75],[20,108,9,76],[21,4,10,4,"target"],[21,10,10,10],[21,13,10,13,"resolved"],[21,21,10,21],[21,22,10,22,"target"],[21,28,10,28],[22,4,11,4,"transitionEnd"],[22,17,11,17],[22,20,11,20,"resolved"],[22,28,11,28],[22,29,11,29,"transitionEnd"],[22,42,11,42],[23,4,12,4],[23,11,12,11],[23,15,12,11,"unitConversion"],[23,33,12,25],[23,34,12,25,"unitConversion"],[23,48,12,25],[23,50,12,26,"visualElement"],[23,63,12,39],[23,65,12,41,"target"],[23,71,12,47],[23,73,12,49,"origin"],[23,79,12,55],[23,81,12,57,"transitionEnd"],[23,94,12,70],[23,95,12,71],[24,2,13,0],[24,3,13,1],[25,0,13,2],[25,3]],"functionMap":{"names":["<global>","parseDomVariant"],"mappings":"AAA;sBCO;CDK"},"hasCjsExports":false},"type":"js/module"}]}