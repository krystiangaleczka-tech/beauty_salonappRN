{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"checkIfControllingVariants\", {\n    enumerable: true,\n    get: function () {\n      return checkIfControllingVariants;\n    }\n  });\n  Object.defineProperty(exports, \"checkIfVariantNode\", {\n    enumerable: true,\n    get: function () {\n      return checkIfVariantNode;\n    }\n  });\n  Object.defineProperty(exports, \"isVariantLabel\", {\n    enumerable: true,\n    get: function () {\n      return isVariantLabel;\n    }\n  });\n  Object.defineProperty(exports, \"isVariantLabels\", {\n    enumerable: true,\n    get: function () {\n      return isVariantLabels;\n    }\n  });\n  Object.defineProperty(exports, \"resolveVariant\", {\n    enumerable: true,\n    get: function () {\n      return resolveVariant;\n    }\n  });\n  Object.defineProperty(exports, \"resolveVariantFromProps\", {\n    enumerable: true,\n    get: function () {\n      return resolveVariantFromProps;\n    }\n  });\n  /**\n   * Decides if the supplied variable is an array of variant labels\n   */\n  function isVariantLabels(v) {\n    return Array.isArray(v);\n  }\n  /**\n   * Decides if the supplied variable is variant label\n   */\n  function isVariantLabel(v) {\n    return typeof v === \"string\" || isVariantLabels(v);\n  }\n  /**\n   * Creates an object containing the latest state of every MotionValue on a VisualElement\n   */\n  function getCurrent(visualElement) {\n    var current = {};\n    visualElement.forEachValue(function (value, key) {\n      return current[key] = value.get();\n    });\n    return current;\n  }\n  /**\n   * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n   */\n  function getVelocity(visualElement) {\n    var velocity = {};\n    visualElement.forEachValue(function (value, key) {\n      return velocity[key] = value.getVelocity();\n    });\n    return velocity;\n  }\n  function resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n    var _a;\n    if (currentValues === void 0) {\n      currentValues = {};\n    }\n    if (currentVelocity === void 0) {\n      currentVelocity = {};\n    }\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n      definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n      definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n      definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n  }\n  function resolveVariant(visualElement, definition, custom) {\n    var props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n  }\n  function checkIfControllingVariants(props) {\n    var _a;\n    return typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);\n  }\n  function checkIfVariantNode(props) {\n    return Boolean(checkIfControllingVariants(props) || props.variants);\n  }\n});","lineCount":117,"map":[[7,2,75,0,"Object"],[7,8,75,0],[7,9,75,0,"defineProperty"],[7,23,75,0],[7,24,75,0,"exports"],[7,31,75,0],[8,4,75,0,"enumerable"],[8,14,75,0],[9,4,75,0,"get"],[9,7,75,0],[9,18,75,0,"get"],[9,19,75,0],[10,6,75,0],[10,13,75,9,"checkIfControllingVariants"],[10,39,75,35],[11,4,75,35],[12,2,75,35],[13,2,75,0,"Object"],[13,8,75,0],[13,9,75,0,"defineProperty"],[13,23,75,0],[13,24,75,0,"exports"],[13,31,75,0],[14,4,75,0,"enumerable"],[14,14,75,0],[15,4,75,0,"get"],[15,7,75,0],[15,18,75,0,"get"],[15,19,75,0],[16,6,75,0],[16,13,75,37,"checkIfVariantNode"],[16,31,75,55],[17,4,75,55],[18,2,75,55],[19,2,75,0,"Object"],[19,8,75,0],[19,9,75,0,"defineProperty"],[19,23,75,0],[19,24,75,0,"exports"],[19,31,75,0],[20,4,75,0,"enumerable"],[20,14,75,0],[21,4,75,0,"get"],[21,7,75,0],[21,18,75,0,"get"],[21,19,75,0],[22,6,75,0],[22,13,75,57,"isVariantLabel"],[22,27,75,71],[23,4,75,71],[24,2,75,71],[25,2,75,0,"Object"],[25,8,75,0],[25,9,75,0,"defineProperty"],[25,23,75,0],[25,24,75,0,"exports"],[25,31,75,0],[26,4,75,0,"enumerable"],[26,14,75,0],[27,4,75,0,"get"],[27,7,75,0],[27,18,75,0,"get"],[27,19,75,0],[28,6,75,0],[28,13,75,73,"isVariantLabels"],[28,28,75,88],[29,4,75,88],[30,2,75,88],[31,2,75,0,"Object"],[31,8,75,0],[31,9,75,0,"defineProperty"],[31,23,75,0],[31,24,75,0,"exports"],[31,31,75,0],[32,4,75,0,"enumerable"],[32,14,75,0],[33,4,75,0,"get"],[33,7,75,0],[33,18,75,0,"get"],[33,19,75,0],[34,6,75,0],[34,13,75,90,"resolveVariant"],[34,27,75,104],[35,4,75,104],[36,2,75,104],[37,2,75,0,"Object"],[37,8,75,0],[37,9,75,0,"defineProperty"],[37,23,75,0],[37,24,75,0,"exports"],[37,31,75,0],[38,4,75,0,"enumerable"],[38,14,75,0],[39,4,75,0,"get"],[39,7,75,0],[39,18,75,0,"get"],[39,19,75,0],[40,6,75,0],[40,13,75,106,"resolveVariantFromProps"],[40,36,75,129],[41,4,75,129],[42,2,75,129],[43,2,1,0],[44,0,2,0],[45,0,3,0],[46,2,4,0],[46,11,4,9,"isVariantLabels"],[46,26,4,24,"isVariantLabels"],[46,27,4,25,"v"],[46,28,4,26],[46,30,4,28],[47,4,5,4],[47,11,5,11,"Array"],[47,16,5,16],[47,17,5,17,"isArray"],[47,24,5,24],[47,25,5,25,"v"],[47,26,5,26],[47,27,5,27],[48,2,6,0],[49,2,7,0],[50,0,8,0],[51,0,9,0],[52,2,10,0],[52,11,10,9,"isVariantLabel"],[52,25,10,23,"isVariantLabel"],[52,26,10,24,"v"],[52,27,10,25],[52,29,10,27],[53,4,11,4],[53,11,11,11],[53,18,11,18,"v"],[53,19,11,19],[53,24,11,24],[53,32,11,32],[53,36,11,36,"isVariantLabels"],[53,51,11,51],[53,52,11,52,"v"],[53,53,11,53],[53,54,11,54],[54,2,12,0],[55,2,13,0],[56,0,14,0],[57,0,15,0],[58,2,16,0],[58,11,16,9,"getCurrent"],[58,21,16,19,"getCurrent"],[58,22,16,20,"visualElement"],[58,35,16,33],[58,37,16,35],[59,4,17,4],[59,8,17,8,"current"],[59,15,17,15],[59,18,17,18],[59,19,17,19],[59,20,17,20],[60,4,18,4,"visualElement"],[60,17,18,17],[60,18,18,18,"forEachValue"],[60,30,18,30],[60,31,18,31],[60,41,18,41,"value"],[60,46,18,46],[60,48,18,48,"key"],[60,51,18,51],[60,53,18,53],[61,6,18,55],[61,13,18,63,"current"],[61,20,18,70],[61,21,18,71,"key"],[61,24,18,74],[61,25,18,75],[61,28,18,78,"value"],[61,33,18,83],[61,34,18,84,"get"],[61,37,18,87],[61,38,18,88],[61,39,18,89],[62,4,18,92],[62,5,18,93],[62,6,18,94],[63,4,19,4],[63,11,19,11,"current"],[63,18,19,18],[64,2,20,0],[65,2,21,0],[66,0,22,0],[67,0,23,0],[68,2,24,0],[68,11,24,9,"getVelocity"],[68,22,24,20,"getVelocity"],[68,23,24,21,"visualElement"],[68,36,24,34],[68,38,24,36],[69,4,25,4],[69,8,25,8,"velocity"],[69,16,25,16],[69,19,25,19],[69,20,25,20],[69,21,25,21],[70,4,26,4,"visualElement"],[70,17,26,17],[70,18,26,18,"forEachValue"],[70,30,26,30],[70,31,26,31],[70,41,26,41,"value"],[70,46,26,46],[70,48,26,48,"key"],[70,51,26,51],[70,53,26,53],[71,6,26,55],[71,13,26,63,"velocity"],[71,21,26,71],[71,22,26,72,"key"],[71,25,26,75],[71,26,26,76],[71,29,26,79,"value"],[71,34,26,84],[71,35,26,85,"getVelocity"],[71,46,26,96],[71,47,26,97],[71,48,26,98],[72,4,26,101],[72,5,26,102],[72,6,26,103],[73,4,27,4],[73,11,27,11,"velocity"],[73,19,27,19],[74,2,28,0],[75,2,29,0],[75,11,29,9,"resolveVariantFromProps"],[75,34,29,32,"resolveVariantFromProps"],[75,35,29,33,"props"],[75,40,29,38],[75,42,29,40,"definition"],[75,52,29,50],[75,54,29,52,"custom"],[75,60,29,58],[75,62,29,60,"currentValues"],[75,75,29,73],[75,77,29,75,"currentVelocity"],[75,92,29,90],[75,94,29,92],[76,4,30,4],[76,8,30,8,"_a"],[76,10,30,10],[77,4,31,4],[77,8,31,8,"currentValues"],[77,21,31,21],[77,26,31,26],[77,31,31,31],[77,32,31,32],[77,34,31,34],[78,6,31,36,"currentValues"],[78,19,31,49],[78,22,31,52],[78,23,31,53],[78,24,31,54],[79,4,31,56],[80,4,32,4],[80,8,32,8,"currentVelocity"],[80,23,32,23],[80,28,32,28],[80,33,32,33],[80,34,32,34],[80,36,32,36],[81,6,32,38,"currentVelocity"],[81,21,32,53],[81,24,32,56],[81,25,32,57],[81,26,32,58],[82,4,32,60],[83,4,33,4],[84,0,34,0],[85,0,35,0],[86,4,36,4],[86,8,36,8],[86,15,36,15,"definition"],[86,25,36,25],[86,30,36,30],[86,40,36,40],[86,42,36,42],[87,6,37,8,"definition"],[87,16,37,18],[87,19,37,21,"definition"],[87,29,37,31],[87,30,37,32,"custom"],[87,36,37,38],[87,41,37,43],[87,45,37,47],[87,49,37,51,"custom"],[87,55,37,57],[87,60,37,62],[87,65,37,67],[87,66,37,68],[87,69,37,71,"custom"],[87,75,37,77],[87,78,37,80,"props"],[87,83,37,85],[87,84,37,86,"custom"],[87,90,37,92],[87,92,37,94,"currentValues"],[87,105,37,107],[87,107,37,109,"currentVelocity"],[87,122,37,124],[87,123,37,125],[88,4,38,4],[89,4,39,4],[90,0,40,0],[91,0,41,0],[92,0,42,0],[93,4,43,4],[93,8,43,8],[93,15,43,15,"definition"],[93,25,43,25],[93,30,43,30],[93,38,43,38],[93,40,43,40],[94,6,44,8,"definition"],[94,16,44,18],[94,19,44,21],[94,20,44,22,"_a"],[94,22,44,24],[94,25,44,27,"props"],[94,30,44,32],[94,31,44,33,"variants"],[94,39,44,41],[94,45,44,47],[94,49,44,51],[94,53,44,55,"_a"],[94,55,44,57],[94,60,44,62],[94,65,44,67],[94,66,44,68],[94,69,44,71],[94,74,44,76],[94,75,44,77],[94,78,44,80,"_a"],[94,80,44,82],[94,81,44,83,"definition"],[94,91,44,93],[94,92,44,94],[95,4,45,4],[96,4,46,4],[97,0,47,0],[98,0,48,0],[99,0,49,0],[100,0,50,0],[101,4,51,4],[101,8,51,8],[101,15,51,15,"definition"],[101,25,51,25],[101,30,51,30],[101,40,51,40],[101,42,51,42],[102,6,52,8,"definition"],[102,16,52,18],[102,19,52,21,"definition"],[102,29,52,31],[102,30,52,32,"custom"],[102,36,52,38],[102,41,52,43],[102,45,52,47],[102,49,52,51,"custom"],[102,55,52,57],[102,60,52,62],[102,65,52,67],[102,66,52,68],[102,69,52,71,"custom"],[102,75,52,77],[102,78,52,80,"props"],[102,83,52,85],[102,84,52,86,"custom"],[102,90,52,92],[102,92,52,94,"currentValues"],[102,105,52,107],[102,107,52,109,"currentVelocity"],[102,122,52,124],[102,123,52,125],[103,4,53,4],[104,4,54,4],[104,11,54,11,"definition"],[104,21,54,21],[105,2,55,0],[106,2,56,0],[106,11,56,9,"resolveVariant"],[106,25,56,23,"resolveVariant"],[106,26,56,24,"visualElement"],[106,39,56,37],[106,41,56,39,"definition"],[106,51,56,49],[106,53,56,51,"custom"],[106,59,56,57],[106,61,56,59],[107,4,57,4],[107,8,57,8,"props"],[107,13,57,13],[107,16,57,16,"visualElement"],[107,29,57,29],[107,30,57,30,"getProps"],[107,38,57,38],[107,39,57,39],[107,40,57,40],[108,4,58,4],[108,11,58,11,"resolveVariantFromProps"],[108,34,58,34],[108,35,58,35,"props"],[108,40,58,40],[108,42,58,42,"definition"],[108,52,58,52],[108,54,58,54,"custom"],[108,60,58,60],[108,65,58,65],[108,69,58,69],[108,73,58,73,"custom"],[108,79,58,79],[108,84,58,84],[108,89,58,89],[108,90,58,90],[108,93,58,93,"custom"],[108,99,58,99],[108,102,58,102,"props"],[108,107,58,107],[108,108,58,108,"custom"],[108,114,58,114],[108,116,58,116,"getCurrent"],[108,126,58,126],[108,127,58,127,"visualElement"],[108,140,58,140],[108,141,58,141],[108,143,58,143,"getVelocity"],[108,154,58,154],[108,155,58,155,"visualElement"],[108,168,58,168],[108,169,58,169],[108,170,58,170],[109,2,59,0],[110,2,60,0],[110,11,60,9,"checkIfControllingVariants"],[110,37,60,35,"checkIfControllingVariants"],[110,38,60,36,"props"],[110,43,60,41],[110,45,60,43],[111,4,61,4],[111,8,61,8,"_a"],[111,10,61,10],[112,4,62,4],[112,11,62,12],[112,19,62,20],[112,20,62,21,"_a"],[112,22,62,23],[112,25,62,26,"props"],[112,30,62,31],[112,31,62,32,"animate"],[112,38,62,39],[112,44,62,45],[112,48,62,49],[112,52,62,53,"_a"],[112,54,62,55],[112,59,62,60],[112,64,62,65],[112,65,62,66],[112,68,62,69],[112,73,62,74],[112,74,62,75],[112,77,62,78,"_a"],[112,79,62,80],[112,80,62,81,"start"],[112,85,62,86],[112,86,62,87],[112,91,62,92],[112,101,62,102],[112,105,63,8,"isVariantLabel"],[112,119,63,22],[112,120,63,23,"props"],[112,125,63,28],[112,126,63,29,"initial"],[112,133,63,36],[112,134,63,37],[112,138,64,8,"isVariantLabel"],[112,152,64,22],[112,153,64,23,"props"],[112,158,64,28],[112,159,64,29,"animate"],[112,166,64,36],[112,167,64,37],[112,171,65,8,"isVariantLabel"],[112,185,65,22],[112,186,65,23,"props"],[112,191,65,28],[112,192,65,29,"whileHover"],[112,202,65,39],[112,203,65,40],[112,207,66,8,"isVariantLabel"],[112,221,66,22],[112,222,66,23,"props"],[112,227,66,28],[112,228,66,29,"whileDrag"],[112,237,66,38],[112,238,66,39],[112,242,67,8,"isVariantLabel"],[112,256,67,22],[112,257,67,23,"props"],[112,262,67,28],[112,263,67,29,"whileTap"],[112,271,67,37],[112,272,67,38],[112,276,68,8,"isVariantLabel"],[112,290,68,22],[112,291,68,23,"props"],[112,296,68,28],[112,297,68,29,"whileFocus"],[112,307,68,39],[112,308,68,40],[112,312,69,8,"isVariantLabel"],[112,326,69,22],[112,327,69,23,"props"],[112,332,69,28],[112,333,69,29,"exit"],[112,337,69,33],[112,338,69,34],[113,2,70,0],[114,2,71,0],[114,11,71,9,"checkIfVariantNode"],[114,29,71,27,"checkIfVariantNode"],[114,30,71,28,"props"],[114,35,71,33],[114,37,71,35],[115,4,72,4],[115,11,72,11,"Boolean"],[115,18,72,18],[115,19,72,19,"checkIfControllingVariants"],[115,45,72,45],[115,46,72,46,"props"],[115,51,72,51],[115,52,72,52],[115,56,72,56,"props"],[115,61,72,61],[115,62,72,62,"variants"],[115,70,72,70],[115,71,72,71],[116,2,73,0],[117,0,73,1],[117,3]],"functionMap":{"names":["<global>","isVariantLabels","isVariantLabel","getCurrent","visualElement.forEachValue$argument_0","getVelocity","resolveVariantFromProps","resolveVariant","checkIfControllingVariants","checkIfVariantNode"],"mappings":"AAA;ACG;CDE;AEI;CFE;AGI;+BCE,8DD;CHE;AKI;+BDE,uEC;CLE;AMC;CN0B;AOC;CPG;AQC;CRU;ASC;CTE"},"hasCjsExports":false},"type":"js/module"}]}