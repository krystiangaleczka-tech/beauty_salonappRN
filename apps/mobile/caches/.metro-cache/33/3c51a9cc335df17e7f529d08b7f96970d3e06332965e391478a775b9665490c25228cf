{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var safeIsNaN = Number.isNaN || function ponyfill(value) {\n    return typeof value === 'number' && value !== value;\n  };\n  function isEqual(first, second) {\n    if (first === second) {\n      return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n      return true;\n    }\n    return false;\n  }\n  function areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n      return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n      if (!isEqual(newInputs[i], lastInputs[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) {\n      isEqual = areInputsEqual;\n    }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n      var newArgs = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        newArgs[_i] = arguments[_i];\n      }\n      if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n        return lastResult;\n      }\n      lastResult = resultFn.apply(this, newArgs);\n      calledOnce = true;\n      lastThis = this;\n      lastArgs = newArgs;\n      return lastResult;\n    }\n    return memoized;\n  }\n  var _default = memoizeOne;\n});","lineCount":61,"map":[[7,2,49,0,"Object"],[7,8,49,0],[7,9,49,0,"defineProperty"],[7,23,49,0],[7,24,49,0,"exports"],[7,31,49,0],[8,4,49,0,"enumerable"],[8,14,49,0],[9,4,49,0,"get"],[9,7,49,0],[9,18,49,0,"get"],[9,19,49,0],[10,6,49,0],[10,13,49,0,"_default"],[10,21,49,0],[11,4,49,0],[12,2,49,0],[13,2,1,0],[13,6,1,4,"safeIsNaN"],[13,15,1,13],[13,18,1,16,"Number"],[13,24,1,22],[13,25,1,23,"isNaN"],[13,30,1,28],[13,34,2,4],[13,43,2,13,"ponyfill"],[13,51,2,21,"ponyfill"],[13,52,2,22,"value"],[13,57,2,27],[13,59,2,29],[14,4,3,8],[14,11,3,15],[14,18,3,22,"value"],[14,23,3,27],[14,28,3,32],[14,36,3,40],[14,40,3,44,"value"],[14,45,3,49],[14,50,3,54,"value"],[14,55,3,59],[15,2,4,4],[15,3,4,5],[16,2,5,0],[16,11,5,9,"isEqual"],[16,18,5,16,"isEqual"],[16,19,5,17,"first"],[16,24,5,22],[16,26,5,24,"second"],[16,32,5,30],[16,34,5,32],[17,4,6,4],[17,8,6,8,"first"],[17,13,6,13],[17,18,6,18,"second"],[17,24,6,24],[17,26,6,26],[18,6,7,8],[18,13,7,15],[18,17,7,19],[19,4,8,4],[20,4,9,4],[20,8,9,8,"safeIsNaN"],[20,17,9,17],[20,18,9,18,"first"],[20,23,9,23],[20,24,9,24],[20,28,9,28,"safeIsNaN"],[20,37,9,37],[20,38,9,38,"second"],[20,44,9,44],[20,45,9,45],[20,47,9,47],[21,6,10,8],[21,13,10,15],[21,17,10,19],[22,4,11,4],[23,4,12,4],[23,11,12,11],[23,16,12,16],[24,2,13,0],[25,2,14,0],[25,11,14,9,"areInputsEqual"],[25,25,14,23,"areInputsEqual"],[25,26,14,24,"newInputs"],[25,35,14,33],[25,37,14,35,"lastInputs"],[25,47,14,45],[25,49,14,47],[26,4,15,4],[26,8,15,8,"newInputs"],[26,17,15,17],[26,18,15,18,"length"],[26,24,15,24],[26,29,15,29,"lastInputs"],[26,39,15,39],[26,40,15,40,"length"],[26,46,15,46],[26,48,15,48],[27,6,16,8],[27,13,16,15],[27,18,16,20],[28,4,17,4],[29,4,18,4],[29,9,18,9],[29,13,18,13,"i"],[29,14,18,14],[29,17,18,17],[29,18,18,18],[29,20,18,20,"i"],[29,21,18,21],[29,24,18,24,"newInputs"],[29,33,18,33],[29,34,18,34,"length"],[29,40,18,40],[29,42,18,42,"i"],[29,43,18,43],[29,45,18,45],[29,47,18,47],[30,6,19,8],[30,10,19,12],[30,11,19,13,"isEqual"],[30,18,19,20],[30,19,19,21,"newInputs"],[30,28,19,30],[30,29,19,31,"i"],[30,30,19,32],[30,31,19,33],[30,33,19,35,"lastInputs"],[30,43,19,45],[30,44,19,46,"i"],[30,45,19,47],[30,46,19,48],[30,47,19,49],[30,49,19,51],[31,8,20,12],[31,15,20,19],[31,20,20,24],[32,6,21,8],[33,4,22,4],[34,4,23,4],[34,11,23,11],[34,15,23,15],[35,2,24,0],[36,2,26,0],[36,11,26,9,"memoizeOne"],[36,21,26,19,"memoizeOne"],[36,22,26,20,"resultFn"],[36,30,26,28],[36,32,26,30,"isEqual"],[36,39,26,37],[36,41,26,39],[37,4,27,4],[37,8,27,8,"isEqual"],[37,15,27,15],[37,20,27,20],[37,25,27,25],[37,26,27,26],[37,28,27,28],[38,6,27,30,"isEqual"],[38,13,27,37],[38,16,27,40,"areInputsEqual"],[38,30,27,54],[39,4,27,56],[40,4,28,4],[40,8,28,8,"lastThis"],[40,16,28,16],[41,4,29,4],[41,8,29,8,"lastArgs"],[41,16,29,16],[41,19,29,19],[41,21,29,21],[42,4,30,4],[42,8,30,8,"lastResult"],[42,18,30,18],[43,4,31,4],[43,8,31,8,"calledOnce"],[43,18,31,18],[43,21,31,21],[43,26,31,26],[44,4,32,4],[44,13,32,13,"memoized"],[44,21,32,21,"memoized"],[44,22,32,21],[44,24,32,24],[45,6,33,8],[45,10,33,12,"newArgs"],[45,17,33,19],[45,20,33,22],[45,22,33,24],[46,6,34,8],[46,11,34,13],[46,15,34,17,"_i"],[46,17,34,19],[46,20,34,22],[46,21,34,23],[46,23,34,25,"_i"],[46,25,34,27],[46,28,34,30,"arguments"],[46,37,34,39],[46,38,34,40,"length"],[46,44,34,46],[46,46,34,48,"_i"],[46,48,34,50],[46,50,34,52],[46,52,34,54],[47,8,35,12,"newArgs"],[47,15,35,19],[47,16,35,20,"_i"],[47,18,35,22],[47,19,35,23],[47,22,35,26,"arguments"],[47,31,35,35],[47,32,35,36,"_i"],[47,34,35,38],[47,35,35,39],[48,6,36,8],[49,6,37,8],[49,10,37,12,"calledOnce"],[49,20,37,22],[49,24,37,26,"lastThis"],[49,32,37,34],[49,37,37,39],[49,41,37,43],[49,45,37,47,"isEqual"],[49,52,37,54],[49,53,37,55,"newArgs"],[49,60,37,62],[49,62,37,64,"lastArgs"],[49,70,37,72],[49,71,37,73],[49,73,37,75],[50,8,38,12],[50,15,38,19,"lastResult"],[50,25,38,29],[51,6,39,8],[52,6,40,8,"lastResult"],[52,16,40,18],[52,19,40,21,"resultFn"],[52,27,40,29],[52,28,40,30,"apply"],[52,33,40,35],[52,34,40,36],[52,38,40,40],[52,40,40,42,"newArgs"],[52,47,40,49],[52,48,40,50],[53,6,41,8,"calledOnce"],[53,16,41,18],[53,19,41,21],[53,23,41,25],[54,6,42,8,"lastThis"],[54,14,42,16],[54,17,42,19],[54,21,42,23],[55,6,43,8,"lastArgs"],[55,14,43,16],[55,17,43,19,"newArgs"],[55,24,43,26],[56,6,44,8],[56,13,44,15,"lastResult"],[56,23,44,25],[57,4,45,4],[58,4,46,4],[58,11,46,11,"memoized"],[58,19,46,19],[59,2,47,0],[60,2,49,0],[60,6,49,0,"_default"],[60,14,49,0],[60,17,49,15,"memoizeOne"],[60,27,49,25],[61,0,49,26],[61,3]],"functionMap":{"names":["<global>","ponyfill","isEqual","areInputsEqual","memoizeOne","memoized"],"mappings":"AAA;ICC;KDE;AEC;CFQ;AGC;CHU;AIE;ICM;KDa;CJE"},"hasCjsExports":false},"type":"js/module"}]}