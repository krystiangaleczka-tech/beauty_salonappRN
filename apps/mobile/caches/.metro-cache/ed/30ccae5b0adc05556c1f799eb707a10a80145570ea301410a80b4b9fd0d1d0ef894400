{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _excluded = [\"state\"],\n    _excluded2 = [\"fetchStatus\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"defaultShouldDehydrateMutation\", {\n    enumerable: true,\n    get: function () {\n      return defaultShouldDehydrateMutation;\n    }\n  });\n  Object.defineProperty(exports, \"defaultShouldDehydrateQuery\", {\n    enumerable: true,\n    get: function () {\n      return defaultShouldDehydrateQuery;\n    }\n  });\n  Object.defineProperty(exports, \"dehydrate\", {\n    enumerable: true,\n    get: function () {\n      return dehydrate;\n    }\n  });\n  Object.defineProperty(exports, \"hydrate\", {\n    enumerable: true,\n    get: function () {\n      return hydrate;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutProperties = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutProperties\");\n  var _objectWithoutProperties = _interopDefault(_babelRuntimeHelpersObjectWithoutProperties);\n  // src/hydration.ts\n  function defaultTransformerFn(data) {\n    return data;\n  }\n  function dehydrateMutation(mutation) {\n    return {\n      mutationKey: mutation.options.mutationKey,\n      state: mutation.state,\n      ...(mutation.options.scope && {\n        scope: mutation.options.scope\n      }),\n      ...(mutation.meta && {\n        meta: mutation.meta\n      })\n    };\n  }\n  function dehydrateQuery(query, serializeData, shouldRedactErrors) {\n    return {\n      state: {\n        ...query.state,\n        ...(query.state.data !== void 0 && {\n          data: serializeData(query.state.data)\n        })\n      },\n      queryKey: query.queryKey,\n      queryHash: query.queryHash,\n      ...(query.state.status === \"pending\" && {\n        promise: query.promise?.then(serializeData).catch(error => {\n          if (!shouldRedactErrors(error)) {\n            return Promise.reject(error);\n          }\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(`A query that was dehydrated as pending ended up rejecting. [${query.queryHash}]: ${error}; The error will be redacted in production builds`);\n          }\n          return Promise.reject(new Error(\"redacted\"));\n        })\n      }),\n      ...(query.meta && {\n        meta: query.meta\n      })\n    };\n  }\n  function defaultShouldDehydrateMutation(mutation) {\n    return mutation.state.isPaused;\n  }\n  function defaultShouldDehydrateQuery(query) {\n    return query.state.status === \"success\";\n  }\n  function defaultShouldRedactErrors(_) {\n    return true;\n  }\n  function dehydrate(client) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var filterMutation = options.shouldDehydrateMutation ?? client.getDefaultOptions().dehydrate?.shouldDehydrateMutation ?? defaultShouldDehydrateMutation;\n    var mutations = client.getMutationCache().getAll().flatMap(mutation => filterMutation(mutation) ? [dehydrateMutation(mutation)] : []);\n    var filterQuery = options.shouldDehydrateQuery ?? client.getDefaultOptions().dehydrate?.shouldDehydrateQuery ?? defaultShouldDehydrateQuery;\n    var shouldRedactErrors = options.shouldRedactErrors ?? client.getDefaultOptions().dehydrate?.shouldRedactErrors ?? defaultShouldRedactErrors;\n    var serializeData = options.serializeData ?? client.getDefaultOptions().dehydrate?.serializeData ?? defaultTransformerFn;\n    var queries = client.getQueryCache().getAll().flatMap(query => filterQuery(query) ? [dehydrateQuery(query, serializeData, shouldRedactErrors)] : []);\n    return {\n      mutations,\n      queries\n    };\n  }\n  function hydrate(client, dehydratedState, options) {\n    if (typeof dehydratedState !== \"object\" || dehydratedState === null) {\n      return;\n    }\n    var mutationCache = client.getMutationCache();\n    var queryCache = client.getQueryCache();\n    var deserializeData = options?.defaultOptions?.deserializeData ?? client.getDefaultOptions().hydrate?.deserializeData ?? defaultTransformerFn;\n    var mutations = dehydratedState.mutations || [];\n    var queries = dehydratedState.queries || [];\n    mutations.forEach(_ref => {\n      var state = _ref.state,\n        mutationOptions = (0, _objectWithoutProperties.default)(_ref, _excluded);\n      mutationCache.build(client, {\n        ...client.getDefaultOptions().hydrate?.mutations,\n        ...options?.defaultOptions?.mutations,\n        ...mutationOptions\n      }, state);\n    });\n    queries.forEach(_ref2 => {\n      var queryKey = _ref2.queryKey,\n        state = _ref2.state,\n        queryHash = _ref2.queryHash,\n        meta = _ref2.meta,\n        promise = _ref2.promise;\n      var query = queryCache.get(queryHash);\n      var data = state.data === void 0 ? state.data : deserializeData(state.data);\n      if (query) {\n        if (query.state.dataUpdatedAt < state.dataUpdatedAt) {\n          var _ignored = state.fetchStatus,\n            serializedState = (0, _objectWithoutProperties.default)(state, _excluded2);\n          query.setState({\n            ...serializedState,\n            data\n          });\n        }\n      } else {\n        query = queryCache.build(client, {\n          ...client.getDefaultOptions().hydrate?.queries,\n          ...options?.defaultOptions?.queries,\n          queryKey,\n          queryHash,\n          meta\n        },\n        // Reset fetch status to idle to avoid\n        // query being stuck in fetching state upon hydration\n        {\n          ...state,\n          data,\n          fetchStatus: \"idle\"\n        });\n      }\n      if (promise) {\n        var initialPromise = Promise.resolve(promise).then(deserializeData);\n        void query.fetch(void 0, {\n          initialPromise\n        });\n      }\n    });\n  }\n});","lineCount":163,"map":[[14,2,117,0,"Object"],[14,8,117,0],[14,9,117,0,"defineProperty"],[14,23,117,0],[14,24,117,0,"exports"],[14,31,117,0],[15,4,117,0,"enumerable"],[15,14,117,0],[16,4,117,0,"get"],[16,7,117,0],[16,18,117,0,"get"],[16,19,117,0],[17,6,117,0],[17,13,118,2,"defaultShouldDehydrateMutation"],[17,43,118,32],[18,4,118,32],[19,2,118,32],[20,2,117,0,"Object"],[20,8,117,0],[20,9,117,0,"defineProperty"],[20,23,117,0],[20,24,117,0,"exports"],[20,31,117,0],[21,4,117,0,"enumerable"],[21,14,117,0],[22,4,117,0,"get"],[22,7,117,0],[22,18,117,0,"get"],[22,19,117,0],[23,6,117,0],[23,13,119,2,"defaultShouldDehydrateQuery"],[23,40,119,29],[24,4,119,29],[25,2,119,29],[26,2,117,0,"Object"],[26,8,117,0],[26,9,117,0,"defineProperty"],[26,23,117,0],[26,24,117,0,"exports"],[26,31,117,0],[27,4,117,0,"enumerable"],[27,14,117,0],[28,4,117,0,"get"],[28,7,117,0],[28,18,117,0,"get"],[28,19,117,0],[29,6,117,0],[29,13,120,2,"dehydrate"],[29,22,120,11],[30,4,120,11],[31,2,120,11],[32,2,117,0,"Object"],[32,8,117,0],[32,9,117,0,"defineProperty"],[32,23,117,0],[32,24,117,0,"exports"],[32,31,117,0],[33,4,117,0,"enumerable"],[33,14,117,0],[34,4,117,0,"get"],[34,7,117,0],[34,18,117,0,"get"],[34,19,117,0],[35,6,117,0],[35,13,121,2,"hydrate"],[35,20,121,9],[36,4,121,9],[37,2,121,9],[38,2,122,2],[38,6,122,2,"_babelRuntimeHelpersObjectWithoutProperties"],[38,49,122,2],[38,52,122,2,"require"],[38,59,122,2],[38,60,122,2,"_dependencyMap"],[38,74,122,2],[39,2,122,2],[39,6,122,2,"_objectWithoutProperties"],[39,30,122,2],[39,33,122,2,"_interopDefault"],[39,48,122,2],[39,49,122,2,"_babelRuntimeHelpersObjectWithoutProperties"],[39,92,122,2],[40,2,1,0],[41,2,2,0],[41,11,2,9,"defaultTransformerFn"],[41,31,2,29,"defaultTransformerFn"],[41,32,2,30,"data"],[41,36,2,34],[41,38,2,36],[42,4,3,2],[42,11,3,9,"data"],[42,15,3,13],[43,2,4,0],[44,2,5,0],[44,11,5,9,"dehydrateMutation"],[44,28,5,26,"dehydrateMutation"],[44,29,5,27,"mutation"],[44,37,5,35],[44,39,5,37],[45,4,6,2],[45,11,6,9],[46,6,7,4,"mutationKey"],[46,17,7,15],[46,19,7,17,"mutation"],[46,27,7,25],[46,28,7,26,"options"],[46,35,7,33],[46,36,7,34,"mutationKey"],[46,47,7,45],[47,6,8,4,"state"],[47,11,8,9],[47,13,8,11,"mutation"],[47,21,8,19],[47,22,8,20,"state"],[47,27,8,25],[48,6,9,4],[48,10,9,7,"mutation"],[48,18,9,15],[48,19,9,16,"options"],[48,26,9,23],[48,27,9,24,"scope"],[48,32,9,29],[48,36,9,33],[49,8,9,35,"scope"],[49,13,9,40],[49,15,9,42,"mutation"],[49,23,9,50],[49,24,9,51,"options"],[49,31,9,58],[49,32,9,59,"scope"],[50,6,9,65],[50,7,9,66],[51,6,10,4],[51,10,10,7,"mutation"],[51,18,10,15],[51,19,10,16,"meta"],[51,23,10,20],[51,27,10,24],[52,8,10,26,"meta"],[52,12,10,30],[52,14,10,32,"mutation"],[52,22,10,40],[52,23,10,41,"meta"],[53,6,10,46],[53,7,10,47],[54,4,11,2],[54,5,11,3],[55,2,12,0],[56,2,13,0],[56,11,13,9,"dehydrateQuery"],[56,25,13,23,"dehydrateQuery"],[56,26,13,24,"query"],[56,31,13,29],[56,33,13,31,"serializeData"],[56,46,13,44],[56,48,13,46,"shouldRedactErrors"],[56,66,13,64],[56,68,13,66],[57,4,14,2],[57,11,14,9],[58,6,15,4,"state"],[58,11,15,9],[58,13,15,11],[59,8,16,6],[59,11,16,9,"query"],[59,16,16,14],[59,17,16,15,"state"],[59,22,16,20],[60,8,17,6],[60,12,17,9,"query"],[60,17,17,14],[60,18,17,15,"state"],[60,23,17,20],[60,24,17,21,"data"],[60,28,17,25],[60,33,17,30],[60,38,17,35],[60,39,17,36],[60,43,17,40],[61,10,18,8,"data"],[61,14,18,12],[61,16,18,14,"serializeData"],[61,29,18,27],[61,30,18,28,"query"],[61,35,18,33],[61,36,18,34,"state"],[61,41,18,39],[61,42,18,40,"data"],[61,46,18,44],[62,8,19,6],[62,9,19,7],[63,6,20,4],[63,7,20,5],[64,6,21,4,"queryKey"],[64,14,21,12],[64,16,21,14,"query"],[64,21,21,19],[64,22,21,20,"queryKey"],[64,30,21,28],[65,6,22,4,"queryHash"],[65,15,22,13],[65,17,22,15,"query"],[65,22,22,20],[65,23,22,21,"queryHash"],[65,32,22,30],[66,6,23,4],[66,10,23,7,"query"],[66,15,23,12],[66,16,23,13,"state"],[66,21,23,18],[66,22,23,19,"status"],[66,28,23,25],[66,33,23,30],[66,42,23,39],[66,46,23,43],[67,8,24,6,"promise"],[67,15,24,13],[67,17,24,15,"query"],[67,22,24,20],[67,23,24,21,"promise"],[67,30,24,28],[67,32,24,30,"then"],[67,36,24,34],[67,37,24,35,"serializeData"],[67,50,24,48],[67,51,24,49],[67,52,24,50,"catch"],[67,57,24,55],[67,58,24,57,"error"],[67,63,24,62],[67,67,24,67],[68,10,25,8],[68,14,25,12],[68,15,25,13,"shouldRedactErrors"],[68,33,25,31],[68,34,25,32,"error"],[68,39,25,37],[68,40,25,38],[68,42,25,40],[69,12,26,10],[69,19,26,17,"Promise"],[69,26,26,24],[69,27,26,25,"reject"],[69,33,26,31],[69,34,26,32,"error"],[69,39,26,37],[69,40,26,38],[70,10,27,8],[71,10,28,8],[71,14,28,12,"process"],[71,21,28,19],[71,22,28,20,"env"],[71,25,28,23],[71,26,28,24,"NODE_ENV"],[71,34,28,32],[71,39,28,37],[71,51,28,49],[71,53,28,51],[72,12,29,10,"console"],[72,19,29,17],[72,20,29,18,"error"],[72,25,29,23],[72,26,30,12],[72,89,30,75,"query"],[72,94,30,80],[72,95,30,81,"queryHash"],[72,104,30,90],[72,110,30,96,"error"],[72,115,30,101],[72,166,31,10],[72,167,31,11],[73,10,32,8],[74,10,33,8],[74,17,33,15,"Promise"],[74,24,33,22],[74,25,33,23,"reject"],[74,31,33,29],[74,32,33,30],[74,36,33,34,"Error"],[74,41,33,39],[74,42,33,40],[74,52,33,50],[74,53,33,51],[74,54,33,52],[75,8,34,6],[75,9,34,7],[76,6,35,4],[76,7,35,5],[77,6,36,4],[77,10,36,7,"query"],[77,15,36,12],[77,16,36,13,"meta"],[77,20,36,17],[77,24,36,21],[78,8,36,23,"meta"],[78,12,36,27],[78,14,36,29,"query"],[78,19,36,34],[78,20,36,35,"meta"],[79,6,36,40],[79,7,36,41],[80,4,37,2],[80,5,37,3],[81,2,38,0],[82,2,39,0],[82,11,39,9,"defaultShouldDehydrateMutation"],[82,41,39,39,"defaultShouldDehydrateMutation"],[82,42,39,40,"mutation"],[82,50,39,48],[82,52,39,50],[83,4,40,2],[83,11,40,9,"mutation"],[83,19,40,17],[83,20,40,18,"state"],[83,25,40,23],[83,26,40,24,"isPaused"],[83,34,40,32],[84,2,41,0],[85,2,42,0],[85,11,42,9,"defaultShouldDehydrateQuery"],[85,38,42,36,"defaultShouldDehydrateQuery"],[85,39,42,37,"query"],[85,44,42,42],[85,46,42,44],[86,4,43,2],[86,11,43,9,"query"],[86,16,43,14],[86,17,43,15,"state"],[86,22,43,20],[86,23,43,21,"status"],[86,29,43,27],[86,34,43,32],[86,43,43,41],[87,2,44,0],[88,2,45,0],[88,11,45,9,"defaultShouldRedactErrors"],[88,36,45,34,"defaultShouldRedactErrors"],[88,37,45,35,"_"],[88,38,45,36],[88,40,45,38],[89,4,46,2],[89,11,46,9],[89,15,46,13],[90,2,47,0],[91,2,48,0],[91,11,48,9,"dehydrate"],[91,20,48,18,"dehydrate"],[91,21,48,19,"client"],[91,27,48,25],[91,29,48,41],[92,4,48,41],[92,8,48,27,"options"],[92,15,48,34],[92,18,48,34,"arguments"],[92,27,48,34],[92,28,48,34,"length"],[92,34,48,34],[92,42,48,34,"arguments"],[92,51,48,34],[92,59,48,34,"undefined"],[92,68,48,34],[92,71,48,34,"arguments"],[92,80,48,34],[92,86,48,37],[92,87,48,38],[92,88,48,39],[93,4,49,2],[93,8,49,8,"filterMutation"],[93,22,49,22],[93,25,49,25,"options"],[93,32,49,32],[93,33,49,33,"shouldDehydrateMutation"],[93,56,49,56],[93,60,49,60,"client"],[93,66,49,66],[93,67,49,67,"getDefaultOptions"],[93,84,49,84],[93,85,49,85],[93,86,49,86],[93,87,49,87,"dehydrate"],[93,96,49,96],[93,98,49,98,"shouldDehydrateMutation"],[93,121,49,121],[93,125,49,125,"defaultShouldDehydrateMutation"],[93,155,49,155],[94,4,50,2],[94,8,50,8,"mutations"],[94,17,50,17],[94,20,50,20,"client"],[94,26,50,26],[94,27,50,27,"getMutationCache"],[94,43,50,43],[94,44,50,44],[94,45,50,45],[94,46,50,46,"getAll"],[94,52,50,52],[94,53,50,53],[94,54,50,54],[94,55,50,55,"flatMap"],[94,62,50,62],[94,63,51,5,"mutation"],[94,71,51,13],[94,75,51,18,"filterMutation"],[94,89,51,32],[94,90,51,33,"mutation"],[94,98,51,41],[94,99,51,42],[94,102,51,45],[94,103,51,46,"dehydrateMutation"],[94,120,51,63],[94,121,51,64,"mutation"],[94,129,51,72],[94,130,51,73],[94,131,51,74],[94,134,51,77],[94,136,52,2],[94,137,52,3],[95,4,53,2],[95,8,53,8,"filterQuery"],[95,19,53,19],[95,22,53,22,"options"],[95,29,53,29],[95,30,53,30,"shouldDehydrateQuery"],[95,50,53,50],[95,54,53,54,"client"],[95,60,53,60],[95,61,53,61,"getDefaultOptions"],[95,78,53,78],[95,79,53,79],[95,80,53,80],[95,81,53,81,"dehydrate"],[95,90,53,90],[95,92,53,92,"shouldDehydrateQuery"],[95,112,53,112],[95,116,53,116,"defaultShouldDehydrateQuery"],[95,143,53,143],[96,4,54,2],[96,8,54,8,"shouldRedactErrors"],[96,26,54,26],[96,29,54,29,"options"],[96,36,54,36],[96,37,54,37,"shouldRedactErrors"],[96,55,54,55],[96,59,54,59,"client"],[96,65,54,65],[96,66,54,66,"getDefaultOptions"],[96,83,54,83],[96,84,54,84],[96,85,54,85],[96,86,54,86,"dehydrate"],[96,95,54,95],[96,97,54,97,"shouldRedactErrors"],[96,115,54,115],[96,119,54,119,"defaultShouldRedactErrors"],[96,144,54,144],[97,4,55,2],[97,8,55,8,"serializeData"],[97,21,55,21],[97,24,55,24,"options"],[97,31,55,31],[97,32,55,32,"serializeData"],[97,45,55,45],[97,49,55,49,"client"],[97,55,55,55],[97,56,55,56,"getDefaultOptions"],[97,73,55,73],[97,74,55,74],[97,75,55,75],[97,76,55,76,"dehydrate"],[97,85,55,85],[97,87,55,87,"serializeData"],[97,100,55,100],[97,104,55,104,"defaultTransformerFn"],[97,124,55,124],[98,4,56,2],[98,8,56,8,"queries"],[98,15,56,15],[98,18,56,18,"client"],[98,24,56,24],[98,25,56,25,"getQueryCache"],[98,38,56,38],[98,39,56,39],[98,40,56,40],[98,41,56,41,"getAll"],[98,47,56,47],[98,48,56,48],[98,49,56,49],[98,50,56,50,"flatMap"],[98,57,56,57],[98,58,57,5,"query"],[98,63,57,10],[98,67,57,15,"filterQuery"],[98,78,57,26],[98,79,57,27,"query"],[98,84,57,32],[98,85,57,33],[98,88,57,36],[98,89,57,37,"dehydrateQuery"],[98,103,57,51],[98,104,57,52,"query"],[98,109,57,57],[98,111,57,59,"serializeData"],[98,124,57,72],[98,126,57,74,"shouldRedactErrors"],[98,144,57,92],[98,145,57,93],[98,146,57,94],[98,149,57,97],[98,151,58,2],[98,152,58,3],[99,4,59,2],[99,11,59,9],[100,6,59,11,"mutations"],[100,15,59,20],[101,6,59,22,"queries"],[102,4,59,30],[102,5,59,31],[103,2,60,0],[104,2,61,0],[104,11,61,9,"hydrate"],[104,18,61,16,"hydrate"],[104,19,61,17,"client"],[104,25,61,23],[104,27,61,25,"dehydratedState"],[104,42,61,40],[104,44,61,42,"options"],[104,51,61,49],[104,53,61,51],[105,4,62,2],[105,8,62,6],[105,15,62,13,"dehydratedState"],[105,30,62,28],[105,35,62,33],[105,43,62,41],[105,47,62,45,"dehydratedState"],[105,62,62,60],[105,67,62,65],[105,71,62,69],[105,73,62,71],[106,6,63,4],[107,4,64,2],[108,4,65,2],[108,8,65,8,"mutationCache"],[108,21,65,21],[108,24,65,24,"client"],[108,30,65,30],[108,31,65,31,"getMutationCache"],[108,47,65,47],[108,48,65,48],[108,49,65,49],[109,4,66,2],[109,8,66,8,"queryCache"],[109,18,66,18],[109,21,66,21,"client"],[109,27,66,27],[109,28,66,28,"getQueryCache"],[109,41,66,41],[109,42,66,42],[109,43,66,43],[110,4,67,2],[110,8,67,8,"deserializeData"],[110,23,67,23],[110,26,67,26,"options"],[110,33,67,33],[110,35,67,35,"defaultOptions"],[110,49,67,49],[110,51,67,51,"deserializeData"],[110,66,67,66],[110,70,67,70,"client"],[110,76,67,76],[110,77,67,77,"getDefaultOptions"],[110,94,67,94],[110,95,67,95],[110,96,67,96],[110,97,67,97,"hydrate"],[110,104,67,104],[110,106,67,106,"deserializeData"],[110,121,67,121],[110,125,67,125,"defaultTransformerFn"],[110,145,67,145],[111,4,68,2],[111,8,68,8,"mutations"],[111,17,68,17],[111,20,68,20,"dehydratedState"],[111,35,68,35],[111,36,68,36,"mutations"],[111,45,68,45],[111,49,68,49],[111,51,68,51],[112,4,69,2],[112,8,69,8,"queries"],[112,15,69,15],[112,18,69,18,"dehydratedState"],[112,33,69,33],[112,34,69,34,"queries"],[112,41,69,41],[112,45,69,45],[112,47,69,47],[113,4,70,2,"mutations"],[113,13,70,11],[113,14,70,12,"forEach"],[113,21,70,19],[113,22,70,20,"_ref"],[113,26,70,20],[113,30,70,55],[114,6,70,55],[114,10,70,23,"state"],[114,15,70,28],[114,18,70,28,"_ref"],[114,22,70,28],[114,23,70,23,"state"],[114,28,70,28],[115,8,70,33,"mutationOptions"],[115,23,70,48],[115,30,70,48,"_objectWithoutProperties"],[115,54,70,48],[115,55,70,48,"default"],[115,62,70,48],[115,64,70,48,"_ref"],[115,68,70,48],[115,70,70,48,"_excluded"],[115,79,70,48],[116,6,71,4,"mutationCache"],[116,19,71,17],[116,20,71,18,"build"],[116,25,71,23],[116,26,72,6,"client"],[116,32,72,12],[116,34,73,6],[117,8,74,8],[117,11,74,11,"client"],[117,17,74,17],[117,18,74,18,"getDefaultOptions"],[117,35,74,35],[117,36,74,36],[117,37,74,37],[117,38,74,38,"hydrate"],[117,45,74,45],[117,47,74,47,"mutations"],[117,56,74,56],[118,8,75,8],[118,11,75,11,"options"],[118,18,75,18],[118,20,75,20,"defaultOptions"],[118,34,75,34],[118,36,75,36,"mutations"],[118,45,75,45],[119,8,76,8],[119,11,76,11,"mutationOptions"],[120,6,77,6],[120,7,77,7],[120,9,78,6,"state"],[120,14,79,4],[120,15,79,5],[121,4,80,2],[121,5,80,3],[121,6,80,4],[122,4,81,2,"queries"],[122,11,81,9],[122,12,81,10,"forEach"],[122,19,81,17],[122,20,81,18,"_ref2"],[122,25,81,18],[122,29,81,69],[123,6,81,69],[123,10,81,21,"queryKey"],[123,18,81,29],[123,21,81,29,"_ref2"],[123,26,81,29],[123,27,81,21,"queryKey"],[123,35,81,29],[124,8,81,31,"state"],[124,13,81,36],[124,16,81,36,"_ref2"],[124,21,81,36],[124,22,81,31,"state"],[124,27,81,36],[125,8,81,38,"queryHash"],[125,17,81,47],[125,20,81,47,"_ref2"],[125,25,81,47],[125,26,81,38,"queryHash"],[125,35,81,47],[126,8,81,49,"meta"],[126,12,81,53],[126,15,81,53,"_ref2"],[126,20,81,53],[126,21,81,49,"meta"],[126,25,81,53],[127,8,81,55,"promise"],[127,15,81,62],[127,18,81,62,"_ref2"],[127,23,81,62],[127,24,81,55,"promise"],[127,31,81,62],[128,6,82,4],[128,10,82,8,"query"],[128,15,82,13],[128,18,82,16,"queryCache"],[128,28,82,26],[128,29,82,27,"get"],[128,32,82,30],[128,33,82,31,"queryHash"],[128,42,82,40],[128,43,82,41],[129,6,83,4],[129,10,83,10,"data"],[129,14,83,14],[129,17,83,17,"state"],[129,22,83,22],[129,23,83,23,"data"],[129,27,83,27],[129,32,83,32],[129,37,83,37],[129,38,83,38],[129,41,83,41,"state"],[129,46,83,46],[129,47,83,47,"data"],[129,51,83,51],[129,54,83,54,"deserializeData"],[129,69,83,69],[129,70,83,70,"state"],[129,75,83,75],[129,76,83,76,"data"],[129,80,83,80],[129,81,83,81],[130,6,84,4],[130,10,84,8,"query"],[130,15,84,13],[130,17,84,15],[131,8,85,6],[131,12,85,10,"query"],[131,17,85,15],[131,18,85,16,"state"],[131,23,85,21],[131,24,85,22,"dataUpdatedAt"],[131,37,85,35],[131,40,85,38,"state"],[131,45,85,43],[131,46,85,44,"dataUpdatedAt"],[131,59,85,57],[131,61,85,59],[132,10,86,8],[132,14,86,29,"_ignored"],[132,22,86,37],[132,25,86,62,"state"],[132,30,86,67],[132,31,86,16,"fetchStatus"],[132,42,86,27],[133,12,86,42,"serializedState"],[133,27,86,57],[133,34,86,57,"_objectWithoutProperties"],[133,58,86,57],[133,59,86,57,"default"],[133,66,86,57],[133,68,86,62,"state"],[133,73,86,67],[133,75,86,67,"_excluded2"],[133,85,86,67],[134,10,87,8,"query"],[134,15,87,13],[134,16,87,14,"setState"],[134,24,87,22],[134,25,87,23],[135,12,88,10],[135,15,88,13,"serializedState"],[135,30,88,28],[136,12,89,10,"data"],[137,10,90,8],[137,11,90,9],[137,12,90,10],[138,8,91,6],[139,6,92,4],[139,7,92,5],[139,13,92,11],[140,8,93,6,"query"],[140,13,93,11],[140,16,93,14,"queryCache"],[140,26,93,24],[140,27,93,25,"build"],[140,32,93,30],[140,33,94,8,"client"],[140,39,94,14],[140,41,95,8],[141,10,96,10],[141,13,96,13,"client"],[141,19,96,19],[141,20,96,20,"getDefaultOptions"],[141,37,96,37],[141,38,96,38],[141,39,96,39],[141,40,96,40,"hydrate"],[141,47,96,47],[141,49,96,49,"queries"],[141,56,96,56],[142,10,97,10],[142,13,97,13,"options"],[142,20,97,20],[142,22,97,22,"defaultOptions"],[142,36,97,36],[142,38,97,38,"queries"],[142,45,97,45],[143,10,98,10,"queryKey"],[143,18,98,18],[144,10,99,10,"queryHash"],[144,19,99,19],[145,10,100,10,"meta"],[146,8,101,8],[146,9,101,9],[147,8,102,8],[148,8,103,8],[149,8,104,8],[150,10,105,10],[150,13,105,13,"state"],[150,18,105,18],[151,10,106,10,"data"],[151,14,106,14],[152,10,107,10,"fetchStatus"],[152,21,107,21],[152,23,107,23],[153,8,108,8],[153,9,109,6],[153,10,109,7],[154,6,110,4],[155,6,111,4],[155,10,111,8,"promise"],[155,17,111,15],[155,19,111,17],[156,8,112,6],[156,12,112,12,"initialPromise"],[156,26,112,26],[156,29,112,29,"Promise"],[156,36,112,36],[156,37,112,37,"resolve"],[156,44,112,44],[156,45,112,45,"promise"],[156,52,112,52],[156,53,112,53],[156,54,112,54,"then"],[156,58,112,58],[156,59,112,59,"deserializeData"],[156,74,112,74],[156,75,112,75],[157,8,113,6],[157,13,113,11,"query"],[157,18,113,16],[157,19,113,17,"fetch"],[157,24,113,22],[157,25,113,23],[157,30,113,28],[157,31,113,29],[157,33,113,31],[158,10,113,33,"initialPromise"],[159,8,113,48],[159,9,113,49],[159,10,113,50],[160,6,114,4],[161,4,115,2],[161,5,115,3],[161,6,115,4],[162,2,116,0],[163,0,116,1],[163,3]],"functionMap":{"names":["<global>","defaultTransformerFn","dehydrateMutation","dehydrateQuery","query.promise.then._catch$argument_0","defaultShouldDehydrateMutation","defaultShouldDehydrateQuery","defaultShouldRedactErrors","dehydrate","client.getMutationCache.getAll.flatMap$argument_0","client.getQueryCache.getAll.flatMap$argument_0","hydrate","mutations.forEach$argument_0","queries.forEach$argument_0"],"mappings":"AAA;ACC;CDE;AEC;CFO;AGC;wDCW;ODU;CHI;AKC;CLE;AMC;CNE;AOC;CPE;AQC;ICG,2ED;IEM,+FF;CRG;AWC;oBCS;GDU;kBEC;GFkC;CXC"},"hasCjsExports":false},"type":"js/module"}]}