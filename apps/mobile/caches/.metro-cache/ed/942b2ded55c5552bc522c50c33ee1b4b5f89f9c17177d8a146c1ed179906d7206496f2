{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.encode83 = exports.decode83 = void 0;\n  const digitCharacters = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '#', '$', '%', '*', '+', ',', '-', '.', ':', ';', '=', '?', '@', '[', ']', '^', '_', '{', '|', '}', '~'];\n  const decode83 = str => {\n    let value = 0;\n    for (let i = 0; i < str.length; i++) {\n      const c = str[i];\n      const digit = digitCharacters.indexOf(c);\n      value = value * 83 + digit;\n    }\n    return value;\n  };\n  exports.decode83 = decode83;\n  const encode83 = (n, length) => {\n    let result = '';\n    for (let i = 1; i <= length; i++) {\n      const digit = Math.floor(n) / Math.pow(83, length - i) % 83;\n      result += digitCharacters[Math.floor(digit)];\n    }\n    return result;\n  };\n  exports.encode83 = encode83;\n});","lineCount":26,"map":[[6,2,1,0],[6,8,1,6,"digitCharacters"],[6,23,1,21],[6,26,1,24],[6,27,2,2],[6,30,2,5],[6,32,3,2],[6,35,3,5],[6,37,4,2],[6,40,4,5],[6,42,5,2],[6,45,5,5],[6,47,6,2],[6,50,6,5],[6,52,7,2],[6,55,7,5],[6,57,8,2],[6,60,8,5],[6,62,9,2],[6,65,9,5],[6,67,10,2],[6,70,10,5],[6,72,11,2],[6,75,11,5],[6,77,12,2],[6,80,12,5],[6,82,13,2],[6,85,13,5],[6,87,14,2],[6,90,14,5],[6,92,15,2],[6,95,15,5],[6,97,16,2],[6,100,16,5],[6,102,17,2],[6,105,17,5],[6,107,18,2],[6,110,18,5],[6,112,19,2],[6,115,19,5],[6,117,20,2],[6,120,20,5],[6,122,21,2],[6,125,21,5],[6,127,22,2],[6,130,22,5],[6,132,23,2],[6,135,23,5],[6,137,24,2],[6,140,24,5],[6,142,25,2],[6,145,25,5],[6,147,26,2],[6,150,26,5],[6,152,27,2],[6,155,27,5],[6,157,28,2],[6,160,28,5],[6,162,29,2],[6,165,29,5],[6,167,30,2],[6,170,30,5],[6,172,31,2],[6,175,31,5],[6,177,32,2],[6,180,32,5],[6,182,33,2],[6,185,33,5],[6,187,34,2],[6,190,34,5],[6,192,35,2],[6,195,35,5],[6,197,36,2],[6,200,36,5],[6,202,37,2],[6,205,37,5],[6,207,38,2],[6,210,38,5],[6,212,39,2],[6,215,39,5],[6,217,40,2],[6,220,40,5],[6,222,41,2],[6,225,41,5],[6,227,42,2],[6,230,42,5],[6,232,43,2],[6,235,43,5],[6,237,44,2],[6,240,44,5],[6,242,45,2],[6,245,45,5],[6,247,46,2],[6,250,46,5],[6,252,47,2],[6,255,47,5],[6,257,48,2],[6,260,48,5],[6,262,49,2],[6,265,49,5],[6,267,50,2],[6,270,50,5],[6,272,51,2],[6,275,51,5],[6,277,52,2],[6,280,52,5],[6,282,53,2],[6,285,53,5],[6,287,54,2],[6,290,54,5],[6,292,55,2],[6,295,55,5],[6,297,56,2],[6,300,56,5],[6,302,57,2],[6,305,57,5],[6,307,58,2],[6,310,58,5],[6,312,59,2],[6,315,59,5],[6,317,60,2],[6,320,60,5],[6,322,61,2],[6,325,61,5],[6,327,62,2],[6,330,62,5],[6,332,63,2],[6,335,63,5],[6,337,64,2],[6,340,64,5],[6,342,65,2],[6,345,65,5],[6,347,66,2],[6,350,66,5],[6,352,67,2],[6,355,67,5],[6,357,68,2],[6,360,68,5],[6,362,69,2],[6,365,69,5],[6,367,70,2],[6,370,70,5],[6,372,71,2],[6,375,71,5],[6,377,72,2],[6,380,72,5],[6,382,73,2],[6,385,73,5],[6,387,74,2],[6,390,74,5],[6,392,75,2],[6,395,75,5],[6,397,76,2],[6,400,76,5],[6,402,77,2],[6,405,77,5],[6,407,78,2],[6,410,78,5],[6,412,79,2],[6,415,79,5],[6,417,80,2],[6,420,80,5],[6,422,81,2],[6,425,81,5],[6,427,82,2],[6,430,82,5],[6,432,83,2],[6,435,83,5],[6,437,84,2],[6,440,84,5],[6,441,85,1],[7,2,87,7],[7,8,87,13,"decode83"],[7,16,87,21],[7,19,87,25,"str"],[7,22,87,36],[7,26,87,41],[8,4,88,2],[8,8,88,6,"value"],[8,13,88,11],[8,16,88,14],[8,17,88,15],[9,4,89,2],[9,9,89,7],[9,13,89,11,"i"],[9,14,89,12],[9,17,89,15],[9,18,89,16],[9,20,89,18,"i"],[9,21,89,19],[9,24,89,22,"str"],[9,27,89,25],[9,28,89,26,"length"],[9,34,89,32],[9,36,89,34,"i"],[9,37,89,35],[9,39,89,37],[9,41,89,39],[10,6,90,4],[10,12,90,10,"c"],[10,13,90,11],[10,16,90,14,"str"],[10,19,90,17],[10,20,90,18,"i"],[10,21,90,19],[10,22,90,20],[11,6,91,4],[11,12,91,10,"digit"],[11,17,91,15],[11,20,91,18,"digitCharacters"],[11,35,91,33],[11,36,91,34,"indexOf"],[11,43,91,41],[11,44,91,42,"c"],[11,45,91,43],[11,46,91,44],[12,6,92,4,"value"],[12,11,92,9],[12,14,92,12,"value"],[12,19,92,17],[12,22,92,20],[12,24,92,22],[12,27,92,25,"digit"],[12,32,92,30],[13,4,93,2],[14,4,94,2],[14,11,94,9,"value"],[14,16,94,14],[15,2,95,0],[15,3,95,1],[16,2,95,2,"exports"],[16,9,95,2],[16,10,95,2,"decode83"],[16,18,95,2],[16,21,95,2,"decode83"],[16,29,95,2],[17,2,97,7],[17,8,97,13,"encode83"],[17,16,97,21],[17,19,97,24,"encode83"],[17,20,97,25,"n"],[17,21,97,34],[17,23,97,36,"length"],[17,29,97,50],[17,34,97,63],[18,4,98,2],[18,8,98,6,"result"],[18,14,98,12],[18,17,98,15],[18,19,98,17],[19,4,99,2],[19,9,99,7],[19,13,99,11,"i"],[19,14,99,12],[19,17,99,15],[19,18,99,16],[19,20,99,18,"i"],[19,21,99,19],[19,25,99,23,"length"],[19,31,99,29],[19,33,99,31,"i"],[19,34,99,32],[19,36,99,34],[19,38,99,36],[20,6,100,4],[20,12,100,10,"digit"],[20,17,100,15],[20,20,100,19,"Math"],[20,24,100,23],[20,25,100,24,"floor"],[20,30,100,29],[20,31,100,30,"n"],[20,32,100,31],[20,33,100,32],[20,36,100,35,"Math"],[20,40,100,39],[20,41,100,40,"pow"],[20,44,100,43],[20,45,100,44],[20,47,100,46],[20,49,100,48,"length"],[20,55,100,54],[20,58,100,57,"i"],[20,59,100,58],[20,60,100,59],[20,63,100,63],[20,65,100,65],[21,6,101,4,"result"],[21,12,101,10],[21,16,101,14,"digitCharacters"],[21,31,101,29],[21,32,101,30,"Math"],[21,36,101,34],[21,37,101,35,"floor"],[21,42,101,40],[21,43,101,41,"digit"],[21,48,101,46],[21,49,101,47],[21,50,101,48],[22,4,102,2],[23,4,103,2],[23,11,103,9,"result"],[23,17,103,15],[24,2,104,0],[24,3,104,1],[25,2,104,2,"exports"],[25,9,104,2],[25,10,104,2,"encode83"],[25,18,104,2],[25,21,104,2,"encode83"],[25,29,104,2],[26,0,104,2],[26,3]],"functionMap":{"names":["<global>","decode83","encode83"],"mappings":"AAA;wBCsF;CDQ;wBEE;CFO"}},"type":"js/module"}]}