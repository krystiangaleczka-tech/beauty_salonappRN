{"dependencies":[{"name":"./progress.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"TyfDVyblRnVmkO+wtO65I6pDk74=","exportNames":["*"],"imports":1}},{"name":"./mix.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":32,"index":75}}],"key":"cGMAaGaNdnZ8cex/ukVNiXblycw=","exportNames":["*"],"imports":1}},{"name":"./mix-color.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":43,"index":119}}],"key":"+Q/GkckNfwQ3OYm5YHzSXLBh0bY=","exportNames":["*"],"imports":1}},{"name":"./mix-complex.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":120},"end":{"line":4,"column":68,"index":188}}],"key":"m6uHKnmVKpvv6TYvMXGGvzSShGM=","exportNames":["*"],"imports":1}},{"name":"style-value-types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":189},"end":{"line":5,"column":42,"index":231}}],"key":"amhWSRCUxLBa3Njmww3P7iM/NQE=","exportNames":["*"],"imports":1}},{"name":"./clamp.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":232},"end":{"line":6,"column":36,"index":268}}],"key":"oDhVCvDD5591zlupyyFtBqbeTQE=","exportNames":["*"],"imports":1}},{"name":"./pipe.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":269},"end":{"line":7,"column":34,"index":303}}],"key":"+6nkibjaDnDRHp4ZFOkTmHtLS5k=","exportNames":["*"],"imports":1}},{"name":"hey-listen","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":304},"end":{"line":8,"column":39,"index":343}}],"key":"5p342VF2FjgsoIiIlnJV4kmYYFQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"interpolate\", {\n    enumerable: true,\n    get: function () {\n      return interpolate;\n    }\n  });\n  var _progressMjs = require(_dependencyMap[0], \"./progress.mjs\");\n  var _mixMjs = require(_dependencyMap[1], \"./mix.mjs\");\n  var _mixColorMjs = require(_dependencyMap[2], \"./mix-color.mjs\");\n  var _mixComplexMjs = require(_dependencyMap[3], \"./mix-complex.mjs\");\n  var _styleValueTypes = require(_dependencyMap[4], \"style-value-types\");\n  var _clampMjs = require(_dependencyMap[5], \"./clamp.mjs\");\n  var _pipeMjs = require(_dependencyMap[6], \"./pipe.mjs\");\n  var _heyListen = require(_dependencyMap[7], \"hey-listen\");\n  const mixNumber = (from, to) => p => (0, _mixMjs.mix)(from, to, p);\n  function detectMixerFactory(v) {\n    if (typeof v === 'number') {\n      return mixNumber;\n    } else if (typeof v === 'string') {\n      if (_styleValueTypes.color.test(v)) {\n        return _mixColorMjs.mixColor;\n      } else {\n        return _mixComplexMjs.mixComplex;\n      }\n    } else if (Array.isArray(v)) {\n      return _mixComplexMjs.mixArray;\n    } else if (typeof v === 'object') {\n      return _mixComplexMjs.mixObject;\n    }\n  }\n  function createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n      let mixer = mixerFactory(output[i], output[i + 1]);\n      if (ease) {\n        const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n        mixer = (0, _pipeMjs.pipe)(easingFunction, mixer);\n      }\n      mixers.push(mixer);\n    }\n    return mixers;\n  }\n  function fastInterpolate([from, to], [mixer]) {\n    return v => mixer((0, _progressMjs.progress)(from, to, v));\n  }\n  function slowInterpolate(input, mixers) {\n    const inputLength = input.length;\n    const lastInputIndex = inputLength - 1;\n    return v => {\n      let mixerIndex = 0;\n      let foundMixerIndex = false;\n      if (v <= input[0]) {\n        foundMixerIndex = true;\n      } else if (v >= input[lastInputIndex]) {\n        mixerIndex = lastInputIndex - 1;\n        foundMixerIndex = true;\n      }\n      if (!foundMixerIndex) {\n        let i = 1;\n        for (; i < inputLength; i++) {\n          if (input[i] > v || i === lastInputIndex) {\n            break;\n          }\n        }\n        mixerIndex = i - 1;\n      }\n      const progressInRange = (0, _progressMjs.progress)(input[mixerIndex], input[mixerIndex + 1], v);\n      return mixers[mixerIndex](progressInRange);\n    };\n  }\n  function interpolate(input, output, {\n    clamp: isClamp = true,\n    ease,\n    mixer\n  } = {}) {\n    const inputLength = input.length;\n    (0, _heyListen.invariant)(inputLength === output.length, 'Both input and output ranges must be the same length');\n    (0, _heyListen.invariant)(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n      input = [].concat(input);\n      output = [].concat(output);\n      input.reverse();\n      output.reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n    return isClamp ? v => interpolator((0, _clampMjs.clamp)(input[0], input[inputLength - 1], v)) : interpolator;\n  }\n});","lineCount":97,"map":[[7,2,92,0,"Object"],[7,8,92,0],[7,9,92,0,"defineProperty"],[7,23,92,0],[7,24,92,0,"exports"],[7,31,92,0],[8,4,92,0,"enumerable"],[8,14,92,0],[9,4,92,0,"get"],[9,7,92,0],[9,18,92,0,"get"],[9,19,92,0],[10,6,92,0],[10,13,92,9,"interpolate"],[10,24,92,20],[11,4,92,20],[12,2,92,20],[13,2,1,0],[13,6,1,0,"_progressMjs"],[13,18,1,0],[13,21,1,0,"require"],[13,28,1,0],[13,29,1,0,"_dependencyMap"],[13,43,1,0],[14,2,2,0],[14,6,2,0,"_mixMjs"],[14,13,2,0],[14,16,2,0,"require"],[14,23,2,0],[14,24,2,0,"_dependencyMap"],[14,38,2,0],[15,2,3,0],[15,6,3,0,"_mixColorMjs"],[15,18,3,0],[15,21,3,0,"require"],[15,28,3,0],[15,29,3,0,"_dependencyMap"],[15,43,3,0],[16,2,4,0],[16,6,4,0,"_mixComplexMjs"],[16,20,4,0],[16,23,4,0,"require"],[16,30,4,0],[16,31,4,0,"_dependencyMap"],[16,45,4,0],[17,2,5,0],[17,6,5,0,"_styleValueTypes"],[17,22,5,0],[17,25,5,0,"require"],[17,32,5,0],[17,33,5,0,"_dependencyMap"],[17,47,5,0],[18,2,6,0],[18,6,6,0,"_clampMjs"],[18,15,6,0],[18,18,6,0,"require"],[18,25,6,0],[18,26,6,0,"_dependencyMap"],[18,40,6,0],[19,2,7,0],[19,6,7,0,"_pipeMjs"],[19,14,7,0],[19,17,7,0,"require"],[19,24,7,0],[19,25,7,0,"_dependencyMap"],[19,39,7,0],[20,2,8,0],[20,6,8,0,"_heyListen"],[20,16,8,0],[20,19,8,0,"require"],[20,26,8,0],[20,27,8,0,"_dependencyMap"],[20,41,8,0],[21,2,10,0],[21,8,10,6,"mixNumber"],[21,17,10,15],[21,20,10,18,"mixNumber"],[21,21,10,19,"from"],[21,25,10,23],[21,27,10,25,"to"],[21,29,10,27],[21,34,10,33,"p"],[21,35,10,34],[21,39,10,39],[21,43,10,39,"mix"],[21,50,10,42],[21,51,10,42,"mix"],[21,54,10,42],[21,56,10,43,"from"],[21,60,10,47],[21,62,10,49,"to"],[21,64,10,51],[21,66,10,53,"p"],[21,67,10,54],[21,68,10,55],[22,2,11,0],[22,11,11,9,"detectMixerFactory"],[22,29,11,27,"detectMixerFactory"],[22,30,11,28,"v"],[22,31,11,29],[22,33,11,31],[23,4,12,4],[23,8,12,8],[23,15,12,15,"v"],[23,16,12,16],[23,21,12,21],[23,29,12,29],[23,31,12,31],[24,6,13,8],[24,13,13,15,"mixNumber"],[24,22,13,24],[25,4,14,4],[25,5,14,5],[25,11,15,9],[25,15,15,13],[25,22,15,20,"v"],[25,23,15,21],[25,28,15,26],[25,36,15,34],[25,38,15,36],[26,6,16,8],[26,10,16,12,"color"],[26,26,16,17],[26,27,16,17,"color"],[26,32,16,17],[26,33,16,18,"test"],[26,37,16,22],[26,38,16,23,"v"],[26,39,16,24],[26,40,16,25],[26,42,16,27],[27,8,17,12],[27,15,17,19,"mixColor"],[27,27,17,27],[27,28,17,27,"mixColor"],[27,36,17,27],[28,6,18,8],[28,7,18,9],[28,13,19,13],[29,8,20,12],[29,15,20,19,"mixComplex"],[29,29,20,29],[29,30,20,29,"mixComplex"],[29,40,20,29],[30,6,21,8],[31,4,22,4],[31,5,22,5],[31,11,23,9],[31,15,23,13,"Array"],[31,20,23,18],[31,21,23,19,"isArray"],[31,28,23,26],[31,29,23,27,"v"],[31,30,23,28],[31,31,23,29],[31,33,23,31],[32,6,24,8],[32,13,24,15,"mixArray"],[32,27,24,23],[32,28,24,23,"mixArray"],[32,36,24,23],[33,4,25,4],[33,5,25,5],[33,11,26,9],[33,15,26,13],[33,22,26,20,"v"],[33,23,26,21],[33,28,26,26],[33,36,26,34],[33,38,26,36],[34,6,27,8],[34,13,27,15,"mixObject"],[34,27,27,24],[34,28,27,24,"mixObject"],[34,37,27,24],[35,4,28,4],[36,2,29,0],[37,2,30,0],[37,11,30,9,"createMixers"],[37,23,30,21,"createMixers"],[37,24,30,22,"output"],[37,30,30,28],[37,32,30,30,"ease"],[37,36,30,34],[37,38,30,36,"customMixer"],[37,49,30,47],[37,51,30,49],[38,4,31,4],[38,10,31,10,"mixers"],[38,16,31,16],[38,19,31,19],[38,21,31,21],[39,4,32,4],[39,10,32,10,"mixerFactory"],[39,22,32,22],[39,25,32,25,"customMixer"],[39,36,32,36],[39,40,32,40,"detectMixerFactory"],[39,58,32,58],[39,59,32,59,"output"],[39,65,32,65],[39,66,32,66],[39,67,32,67],[39,68,32,68],[39,69,32,69],[40,4,33,4],[40,10,33,10,"numMixers"],[40,19,33,19],[40,22,33,22,"output"],[40,28,33,28],[40,29,33,29,"length"],[40,35,33,35],[40,38,33,38],[40,39,33,39],[41,4,34,4],[41,9,34,9],[41,13,34,13,"i"],[41,14,34,14],[41,17,34,17],[41,18,34,18],[41,20,34,20,"i"],[41,21,34,21],[41,24,34,24,"numMixers"],[41,33,34,33],[41,35,34,35,"i"],[41,36,34,36],[41,38,34,38],[41,40,34,40],[42,6,35,8],[42,10,35,12,"mixer"],[42,15,35,17],[42,18,35,20,"mixerFactory"],[42,30,35,32],[42,31,35,33,"output"],[42,37,35,39],[42,38,35,40,"i"],[42,39,35,41],[42,40,35,42],[42,42,35,44,"output"],[42,48,35,50],[42,49,35,51,"i"],[42,50,35,52],[42,53,35,55],[42,54,35,56],[42,55,35,57],[42,56,35,58],[43,6,36,8],[43,10,36,12,"ease"],[43,14,36,16],[43,16,36,18],[44,8,37,12],[44,14,37,18,"easingFunction"],[44,28,37,32],[44,31,37,35,"Array"],[44,36,37,40],[44,37,37,41,"isArray"],[44,44,37,48],[44,45,37,49,"ease"],[44,49,37,53],[44,50,37,54],[44,53,37,57,"ease"],[44,57,37,61],[44,58,37,62,"i"],[44,59,37,63],[44,60,37,64],[44,63,37,67,"ease"],[44,67,37,71],[45,8,38,12,"mixer"],[45,13,38,17],[45,16,38,20],[45,20,38,20,"pipe"],[45,28,38,24],[45,29,38,24,"pipe"],[45,33,38,24],[45,35,38,25,"easingFunction"],[45,49,38,39],[45,51,38,41,"mixer"],[45,56,38,46],[45,57,38,47],[46,6,39,8],[47,6,40,8,"mixers"],[47,12,40,14],[47,13,40,15,"push"],[47,17,40,19],[47,18,40,20,"mixer"],[47,23,40,25],[47,24,40,26],[48,4,41,4],[49,4,42,4],[49,11,42,11,"mixers"],[49,17,42,17],[50,2,43,0],[51,2,44,0],[51,11,44,9,"fastInterpolate"],[51,26,44,24,"fastInterpolate"],[51,27,44,25],[51,28,44,26,"from"],[51,32,44,30],[51,34,44,32,"to"],[51,36,44,34],[51,37,44,35],[51,39,44,37],[51,40,44,38,"mixer"],[51,45,44,43],[51,46,44,44],[51,48,44,46],[52,4,45,4],[52,11,45,12,"v"],[52,12,45,13],[52,16,45,18,"mixer"],[52,21,45,23],[52,22,45,24],[52,26,45,24,"progress"],[52,38,45,32],[52,39,45,32,"progress"],[52,47,45,32],[52,49,45,33,"from"],[52,53,45,37],[52,55,45,39,"to"],[52,57,45,41],[52,59,45,43,"v"],[52,60,45,44],[52,61,45,45],[52,62,45,46],[53,2,46,0],[54,2,47,0],[54,11,47,9,"slowInterpolate"],[54,26,47,24,"slowInterpolate"],[54,27,47,25,"input"],[54,32,47,30],[54,34,47,32,"mixers"],[54,40,47,38],[54,42,47,40],[55,4,48,4],[55,10,48,10,"inputLength"],[55,21,48,21],[55,24,48,24,"input"],[55,29,48,29],[55,30,48,30,"length"],[55,36,48,36],[56,4,49,4],[56,10,49,10,"lastInputIndex"],[56,24,49,24],[56,27,49,27,"inputLength"],[56,38,49,38],[56,41,49,41],[56,42,49,42],[57,4,50,4],[57,11,50,12,"v"],[57,12,50,13],[57,16,50,18],[58,6,51,8],[58,10,51,12,"mixerIndex"],[58,20,51,22],[58,23,51,25],[58,24,51,26],[59,6,52,8],[59,10,52,12,"foundMixerIndex"],[59,25,52,27],[59,28,52,30],[59,33,52,35],[60,6,53,8],[60,10,53,12,"v"],[60,11,53,13],[60,15,53,17,"input"],[60,20,53,22],[60,21,53,23],[60,22,53,24],[60,23,53,25],[60,25,53,27],[61,8,54,12,"foundMixerIndex"],[61,23,54,27],[61,26,54,30],[61,30,54,34],[62,6,55,8],[62,7,55,9],[62,13,56,13],[62,17,56,17,"v"],[62,18,56,18],[62,22,56,22,"input"],[62,27,56,27],[62,28,56,28,"lastInputIndex"],[62,42,56,42],[62,43,56,43],[62,45,56,45],[63,8,57,12,"mixerIndex"],[63,18,57,22],[63,21,57,25,"lastInputIndex"],[63,35,57,39],[63,38,57,42],[63,39,57,43],[64,8,58,12,"foundMixerIndex"],[64,23,58,27],[64,26,58,30],[64,30,58,34],[65,6,59,8],[66,6,60,8],[66,10,60,12],[66,11,60,13,"foundMixerIndex"],[66,26,60,28],[66,28,60,30],[67,8,61,12],[67,12,61,16,"i"],[67,13,61,17],[67,16,61,20],[67,17,61,21],[68,8,62,12],[68,15,62,19,"i"],[68,16,62,20],[68,19,62,23,"inputLength"],[68,30,62,34],[68,32,62,36,"i"],[68,33,62,37],[68,35,62,39],[68,37,62,41],[69,10,63,16],[69,14,63,20,"input"],[69,19,63,25],[69,20,63,26,"i"],[69,21,63,27],[69,22,63,28],[69,25,63,31,"v"],[69,26,63,32],[69,30,63,36,"i"],[69,31,63,37],[69,36,63,42,"lastInputIndex"],[69,50,63,56],[69,52,63,58],[70,12,64,20],[71,10,65,16],[72,8,66,12],[73,8,67,12,"mixerIndex"],[73,18,67,22],[73,21,67,25,"i"],[73,22,67,26],[73,25,67,29],[73,26,67,30],[74,6,68,8],[75,6,69,8],[75,12,69,14,"progressInRange"],[75,27,69,29],[75,30,69,32],[75,34,69,32,"progress"],[75,46,69,40],[75,47,69,40,"progress"],[75,55,69,40],[75,57,69,41,"input"],[75,62,69,46],[75,63,69,47,"mixerIndex"],[75,73,69,57],[75,74,69,58],[75,76,69,60,"input"],[75,81,69,65],[75,82,69,66,"mixerIndex"],[75,92,69,76],[75,95,69,79],[75,96,69,80],[75,97,69,81],[75,99,69,83,"v"],[75,100,69,84],[75,101,69,85],[76,6,70,8],[76,13,70,15,"mixers"],[76,19,70,21],[76,20,70,22,"mixerIndex"],[76,30,70,32],[76,31,70,33],[76,32,70,34,"progressInRange"],[76,47,70,49],[76,48,70,50],[77,4,71,4],[77,5,71,5],[78,2,72,0],[79,2,73,0],[79,11,73,9,"interpolate"],[79,22,73,20,"interpolate"],[79,23,73,21,"input"],[79,28,73,26],[79,30,73,28,"output"],[79,36,73,34],[79,38,73,36],[80,4,73,38,"clamp"],[80,9,73,43],[80,11,73,45,"isClamp"],[80,18,73,52],[80,21,73,55],[80,25,73,59],[81,4,73,61,"ease"],[81,8,73,65],[82,4,73,67,"mixer"],[83,2,73,73],[83,3,73,74],[83,6,73,77],[83,7,73,78],[83,8,73,79],[83,10,73,81],[84,4,74,4],[84,10,74,10,"inputLength"],[84,21,74,21],[84,24,74,24,"input"],[84,29,74,29],[84,30,74,30,"length"],[84,36,74,36],[85,4,75,4],[85,8,75,4,"invariant"],[85,18,75,13],[85,19,75,13,"invariant"],[85,28,75,13],[85,30,75,14,"inputLength"],[85,41,75,25],[85,46,75,30,"output"],[85,52,75,36],[85,53,75,37,"length"],[85,59,75,43],[85,61,75,45],[85,115,75,99],[85,116,75,100],[86,4,76,4],[86,8,76,4,"invariant"],[86,18,76,13],[86,19,76,13,"invariant"],[86,28,76,13],[86,30,76,14],[86,31,76,15,"ease"],[86,35,76,19],[86,39,76,23],[86,40,76,24,"Array"],[86,45,76,29],[86,46,76,30,"isArray"],[86,53,76,37],[86,54,76,38,"ease"],[86,58,76,42],[86,59,76,43],[86,63,76,47,"ease"],[86,67,76,51],[86,68,76,52,"length"],[86,74,76,58],[86,79,76,63,"inputLength"],[86,90,76,74],[86,93,76,77],[86,94,76,78],[86,96,76,80],[86,226,76,210],[86,227,76,211],[87,4,77,4],[87,8,77,8,"input"],[87,13,77,13],[87,14,77,14],[87,15,77,15],[87,16,77,16],[87,19,77,19,"input"],[87,24,77,24],[87,25,77,25,"inputLength"],[87,36,77,36],[87,39,77,39],[87,40,77,40],[87,41,77,41],[87,43,77,43],[88,6,78,8,"input"],[88,11,78,13],[88,14,78,16],[88,16,78,18],[88,17,78,19,"concat"],[88,23,78,25],[88,24,78,26,"input"],[88,29,78,31],[88,30,78,32],[89,6,79,8,"output"],[89,12,79,14],[89,15,79,17],[89,17,79,19],[89,18,79,20,"concat"],[89,24,79,26],[89,25,79,27,"output"],[89,31,79,33],[89,32,79,34],[90,6,80,8,"input"],[90,11,80,13],[90,12,80,14,"reverse"],[90,19,80,21],[90,20,80,22],[90,21,80,23],[91,6,81,8,"output"],[91,12,81,14],[91,13,81,15,"reverse"],[91,20,81,22],[91,21,81,23],[91,22,81,24],[92,4,82,4],[93,4,83,4],[93,10,83,10,"mixers"],[93,16,83,16],[93,19,83,19,"createMixers"],[93,31,83,31],[93,32,83,32,"output"],[93,38,83,38],[93,40,83,40,"ease"],[93,44,83,44],[93,46,83,46,"mixer"],[93,51,83,51],[93,52,83,52],[94,4,84,4],[94,10,84,10,"interpolator"],[94,22,84,22],[94,25,84,25,"inputLength"],[94,36,84,36],[94,41,84,41],[94,42,84,42],[94,45,85,10,"fastInterpolate"],[94,60,85,25],[94,61,85,26,"input"],[94,66,85,31],[94,68,85,33,"mixers"],[94,74,85,39],[94,75,85,40],[94,78,86,10,"slowInterpolate"],[94,93,86,25],[94,94,86,26,"input"],[94,99,86,31],[94,101,86,33,"mixers"],[94,107,86,39],[94,108,86,40],[95,4,87,4],[95,11,87,11,"isClamp"],[95,18,87,18],[95,21,88,11,"v"],[95,22,88,12],[95,26,88,17,"interpolator"],[95,38,88,29],[95,39,88,30],[95,43,88,30,"clamp"],[95,52,88,35],[95,53,88,35,"clamp"],[95,58,88,35],[95,60,88,36,"input"],[95,65,88,41],[95,66,88,42],[95,67,88,43],[95,68,88,44],[95,70,88,46,"input"],[95,75,88,51],[95,76,88,52,"inputLength"],[95,87,88,63],[95,90,88,66],[95,91,88,67],[95,92,88,68],[95,94,88,70,"v"],[95,95,88,71],[95,96,88,72],[95,97,88,73],[95,100,89,10,"interpolator"],[95,112,89,22],[96,2,90,0],[97,0,90,1],[97,3]],"functionMap":{"names":["<global>","mixNumber","<anonymous>","detectMixerFactory","createMixers","fastInterpolate","slowInterpolate","interpolate"],"mappings":"AAA;kBCS,cC,uBF;AGC;CHkB;AIC;CJa;AKC;WHC,mCG;CLC;AMC;WJG;KIqB;CNC;AOC;ULe,+DK;CPE"},"hasCjsExports":false},"type":"js/module"}]}