{"dependencies":[{"name":"./mix.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":10,"index":25},"end":{"line":3,"column":33,"index":48}}],"key":"N3NmCfecXprTHVfCZY/A8MThlzA=","exportNames":["*"],"imports":1}},{"name":"./noop.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":11,"index":61},"end":{"line":4,"column":35,"index":85}}],"key":"GfjQgUdsGsBci4+BSGo4M8kbb4E=","exportNames":["*"],"imports":1}},{"name":"./offset.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":100},"end":{"line":5,"column":39,"index":126}}],"key":"wQZt9MimJKS1IFurLJIz8eHCn0w=","exportNames":["*"],"imports":1}},{"name":"./progress.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":43,"index":171}}],"key":"msewOwpFIpB5ifAGDpZve/25gk8=","exportNames":["*"],"imports":1}},{"name":"./easing.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":186},"end":{"line":7,"column":39,"index":212}}],"key":"9hcfeb6rl9aWqo2XAWegvk6qaG4=","exportNames":["*"],"imports":1}},{"name":"./clamp.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":12,"index":226},"end":{"line":8,"column":37,"index":251}}],"key":"zZwGdJsKJSsm8K/qDrzqdLnCGcE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var mix = require(_dependencyMap[0], \"./mix.cjs.js\");\n  var noop = require(_dependencyMap[1], \"./noop.cjs.js\");\n  var offset = require(_dependencyMap[2], \"./offset.cjs.js\");\n  var progress = require(_dependencyMap[3], \"./progress.cjs.js\");\n  var easing = require(_dependencyMap[4], \"./easing.cjs.js\");\n  var clamp = require(_dependencyMap[5], \"./clamp.cjs.js\");\n  function interpolate(output) {\n    var input = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offset.defaultOffset(output.length);\n    var easing$1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop.noopReturn;\n    var length = output.length;\n    /**\n     * If the input length is lower than the output we\n     * fill the input to match. This currently assumes the input\n     * is an animation progress value so is a good candidate for\n     * moving outside the function.\n     */\n    var remainder = length - input.length;\n    remainder > 0 && offset.fillOffset(input, remainder);\n    return t => {\n      var i = 0;\n      for (; i < length - 2; i++) {\n        if (t < input[i + 1]) break;\n      }\n      var progressInRange = clamp.clamp(0, 1, progress.progress(input[i], input[i + 1], t));\n      var segmentEasing = easing.getEasingForSegment(easing$1, i);\n      progressInRange = segmentEasing(progressInRange);\n      return mix.mix(output[i], output[i + 1], progressInRange);\n    };\n  }\n  exports.interpolate = interpolate;\n});","lineCount":34,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"mix"],[4,9,3,7],[4,12,3,10,"require"],[4,19,3,17],[4,20,3,17,"_dependencyMap"],[4,34,3,17],[4,53,3,32],[4,54,3,33],[5,2,4,0],[5,6,4,4,"noop"],[5,10,4,8],[5,13,4,11,"require"],[5,20,4,18],[5,21,4,18,"_dependencyMap"],[5,35,4,18],[5,55,4,34],[5,56,4,35],[6,2,5,0],[6,6,5,4,"offset"],[6,12,5,10],[6,15,5,13,"require"],[6,22,5,20],[6,23,5,20,"_dependencyMap"],[6,37,5,20],[6,59,5,38],[6,60,5,39],[7,2,6,0],[7,6,6,4,"progress"],[7,14,6,12],[7,17,6,15,"require"],[7,24,6,22],[7,25,6,22,"_dependencyMap"],[7,39,6,22],[7,63,6,42],[7,64,6,43],[8,2,7,0],[8,6,7,4,"easing"],[8,12,7,10],[8,15,7,13,"require"],[8,22,7,20],[8,23,7,20,"_dependencyMap"],[8,37,7,20],[8,59,7,38],[8,60,7,39],[9,2,8,0],[9,6,8,4,"clamp"],[9,11,8,9],[9,14,8,12,"require"],[9,21,8,19],[9,22,8,19,"_dependencyMap"],[9,36,8,19],[9,57,8,36],[9,58,8,37],[10,2,10,0],[10,11,10,9,"interpolate"],[10,22,10,20,"interpolate"],[10,23,10,21,"output"],[10,29,10,27],[10,31,10,102],[11,4,10,102],[11,8,10,29,"input"],[11,13,10,34],[11,16,10,34,"arguments"],[11,25,10,34],[11,26,10,34,"length"],[11,32,10,34],[11,40,10,34,"arguments"],[11,49,10,34],[11,57,10,34,"undefined"],[11,66,10,34],[11,69,10,34,"arguments"],[11,78,10,34],[11,84,10,37,"offset"],[11,90,10,43],[11,91,10,44,"defaultOffset"],[11,104,10,57],[11,105,10,58,"output"],[11,111,10,64],[11,112,10,65,"length"],[11,118,10,71],[11,119,10,72],[12,4,10,72],[12,8,10,74,"easing$1"],[12,16,10,82],[12,19,10,82,"arguments"],[12,28,10,82],[12,29,10,82,"length"],[12,35,10,82],[12,43,10,82,"arguments"],[12,52,10,82],[12,60,10,82,"undefined"],[12,69,10,82],[12,72,10,82,"arguments"],[12,81,10,82],[12,87,10,85,"noop"],[12,91,10,89],[12,92,10,90,"noopReturn"],[12,102,10,100],[13,4,11,4],[13,8,11,10,"length"],[13,14,11,16],[13,17,11,19,"output"],[13,23,11,25],[13,24,11,26,"length"],[13,30,11,32],[14,4,12,4],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,4,18,4],[20,8,18,10,"remainder"],[20,17,18,19],[20,20,18,22,"length"],[20,26,18,28],[20,29,18,31,"input"],[20,34,18,36],[20,35,18,37,"length"],[20,41,18,43],[21,4,19,4,"remainder"],[21,13,19,13],[21,16,19,16],[21,17,19,17],[21,21,19,21,"offset"],[21,27,19,27],[21,28,19,28,"fillOffset"],[21,38,19,38],[21,39,19,39,"input"],[21,44,19,44],[21,46,19,46,"remainder"],[21,55,19,55],[21,56,19,56],[22,4,20,4],[22,11,20,12,"t"],[22,12,20,13],[22,16,20,18],[23,6,21,8],[23,10,21,12,"i"],[23,11,21,13],[23,14,21,16],[23,15,21,17],[24,6,22,8],[24,13,22,15,"i"],[24,14,22,16],[24,17,22,19,"length"],[24,23,22,25],[24,26,22,28],[24,27,22,29],[24,29,22,31,"i"],[24,30,22,32],[24,32,22,34],[24,34,22,36],[25,8,23,12],[25,12,23,16,"t"],[25,13,23,17],[25,16,23,20,"input"],[25,21,23,25],[25,22,23,26,"i"],[25,23,23,27],[25,26,23,30],[25,27,23,31],[25,28,23,32],[25,30,24,16],[26,6,25,8],[27,6,26,8],[27,10,26,12,"progressInRange"],[27,25,26,27],[27,28,26,30,"clamp"],[27,33,26,35],[27,34,26,36,"clamp"],[27,39,26,41],[27,40,26,42],[27,41,26,43],[27,43,26,45],[27,44,26,46],[27,46,26,48,"progress"],[27,54,26,56],[27,55,26,57,"progress"],[27,63,26,65],[27,64,26,66,"input"],[27,69,26,71],[27,70,26,72,"i"],[27,71,26,73],[27,72,26,74],[27,74,26,76,"input"],[27,79,26,81],[27,80,26,82,"i"],[27,81,26,83],[27,84,26,86],[27,85,26,87],[27,86,26,88],[27,88,26,90,"t"],[27,89,26,91],[27,90,26,92],[27,91,26,93],[28,6,27,8],[28,10,27,14,"segmentEasing"],[28,23,27,27],[28,26,27,30,"easing"],[28,32,27,36],[28,33,27,37,"getEasingForSegment"],[28,52,27,56],[28,53,27,57,"easing$1"],[28,61,27,65],[28,63,27,67,"i"],[28,64,27,68],[28,65,27,69],[29,6,28,8,"progressInRange"],[29,21,28,23],[29,24,28,26,"segmentEasing"],[29,37,28,39],[29,38,28,40,"progressInRange"],[29,53,28,55],[29,54,28,56],[30,6,29,8],[30,13,29,15,"mix"],[30,16,29,18],[30,17,29,19,"mix"],[30,20,29,22],[30,21,29,23,"output"],[30,27,29,29],[30,28,29,30,"i"],[30,29,29,31],[30,30,29,32],[30,32,29,34,"output"],[30,38,29,40],[30,39,29,41,"i"],[30,40,29,42],[30,43,29,45],[30,44,29,46],[30,45,29,47],[30,47,29,49,"progressInRange"],[30,62,29,64],[30,63,29,65],[31,4,30,4],[31,5,30,5],[32,2,31,0],[33,2,33,0,"exports"],[33,9,33,7],[33,10,33,8,"interpolate"],[33,21,33,19],[33,24,33,22,"interpolate"],[33,35,33,33],[34,0,33,34],[34,3]],"functionMap":{"names":["<global>","interpolate","<anonymous>"],"mappings":"AAA;ACS;WCU;KDU;CDC"},"hasCjsExports":true},"type":"js/module"}]}