{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  (function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.deepmerge = factory();\n  })(this, function () {\n    'use strict';\n\n    var isMergeableObject = function isMergeableObject(value) {\n      return isNonNullObject(value) && !isSpecial(value);\n    };\n    function isNonNullObject(value) {\n      return !!value && typeof value === 'object';\n    }\n    function isSpecial(value) {\n      var stringValue = Object.prototype.toString.call(value);\n      return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n    }\n\n    // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\n    var canUseSymbol = typeof Symbol === 'function' && Symbol.for;\n    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n    function isReactElement(value) {\n      return value.$$typeof === REACT_ELEMENT_TYPE;\n    }\n    function emptyTarget(val) {\n      return Array.isArray(val) ? [] : {};\n    }\n    function cloneUnlessOtherwiseSpecified(value, options) {\n      return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n    }\n    function defaultArrayMerge(target, source, options) {\n      return target.concat(source).map(function (element) {\n        return cloneUnlessOtherwiseSpecified(element, options);\n      });\n    }\n    function mergeObject(target, source, options) {\n      var destination = {};\n      if (options.isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n        });\n      }\n      Object.keys(source).forEach(function (key) {\n        if (!options.isMergeableObject(source[key]) || !target[key]) {\n          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n        } else {\n          destination[key] = deepmerge(target[key], source[key], options);\n        }\n      });\n      return destination;\n    }\n    function deepmerge(target, source, options) {\n      options = options || {};\n      options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n      options.isMergeableObject = options.isMergeableObject || isMergeableObject;\n      var sourceIsArray = Array.isArray(source);\n      var targetIsArray = Array.isArray(target);\n      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n      if (!sourceAndTargetTypesMatch) {\n        return cloneUnlessOtherwiseSpecified(source, options);\n      } else if (sourceIsArray) {\n        return options.arrayMerge(target, source, options);\n      } else {\n        return mergeObject(target, source, options);\n      }\n    }\n    deepmerge.all = function deepmergeAll(array, options) {\n      if (!Array.isArray(array)) {\n        throw new Error('first argument should be an array');\n      }\n      return array.reduce(function (prev, next) {\n        return deepmerge(prev, next, options);\n      }, {});\n    };\n    var deepmerge_1 = deepmerge;\n    return deepmerge_1;\n  });\n});","lineCount":77,"map":[[2,2,1,1],[2,13,1,11,"global"],[2,19,1,17],[2,21,1,19,"factory"],[2,28,1,26],[2,30,1,28],[3,4,2,1],[3,11,2,8,"exports"],[3,18,2,15],[3,23,2,20],[3,31,2,28],[3,35,2,32],[3,42,2,39,"module"],[3,48,2,45],[3,53,2,50],[3,64,2,61],[3,67,2,64,"module"],[3,73,2,70],[3,74,2,71,"exports"],[3,81,2,78],[3,84,2,81,"factory"],[3,91,2,88],[3,92,2,89],[3,93,2,90],[3,96,3,1],[3,103,3,8,"define"],[3,109,3,14],[3,114,3,19],[3,124,3,29],[3,128,3,33,"define"],[3,134,3,39],[3,135,3,40,"amd"],[3,138,3,43],[3,141,3,46,"define"],[3,147,3,52],[3,148,3,53,"factory"],[3,155,3,60],[3,156,3,61],[3,159,4,2,"global"],[3,165,4,8],[3,166,4,9,"deepmerge"],[3,175,4,18],[3,178,4,21,"factory"],[3,185,4,28],[3,186,4,29],[3,187,4,31],[4,2,5,0],[4,3,5,1],[4,5,5,2],[4,9,5,6],[4,11,5,9],[4,23,5,21],[5,4,5,23],[5,16,5,35],[7,4,7,0],[7,8,7,4,"isMergeableObject"],[7,25,7,21],[7,28,7,24],[7,37,7,33,"isMergeableObject"],[7,54,7,50,"isMergeableObject"],[7,55,7,51,"value"],[7,60,7,56],[7,62,7,58],[8,6,8,1],[8,13,8,8,"isNonNullObject"],[8,28,8,23],[8,29,8,24,"value"],[8,34,8,29],[8,35,8,30],[8,39,9,5],[8,40,9,6,"isSpecial"],[8,49,9,15],[8,50,9,16,"value"],[8,55,9,21],[8,56,9,22],[9,4,10,0],[9,5,10,1],[10,4,12,0],[10,13,12,9,"isNonNullObject"],[10,28,12,24,"isNonNullObject"],[10,29,12,25,"value"],[10,34,12,30],[10,36,12,32],[11,6,13,1],[11,13,13,8],[11,14,13,9],[11,15,13,10,"value"],[11,20,13,15],[11,24,13,19],[11,31,13,26,"value"],[11,36,13,31],[11,41,13,36],[11,49,13,44],[12,4,14,0],[13,4,16,0],[13,13,16,9,"isSpecial"],[13,22,16,18,"isSpecial"],[13,23,16,19,"value"],[13,28,16,24],[13,30,16,26],[14,6,17,1],[14,10,17,5,"stringValue"],[14,21,17,16],[14,24,17,19,"Object"],[14,30,17,25],[14,31,17,26,"prototype"],[14,40,17,35],[14,41,17,36,"toString"],[14,49,17,44],[14,50,17,45,"call"],[14,54,17,49],[14,55,17,50,"value"],[14,60,17,55],[14,61,17,56],[15,6,19,1],[15,13,19,8,"stringValue"],[15,24,19,19],[15,29,19,24],[15,46,19,41],[15,50,20,5,"stringValue"],[15,61,20,16],[15,66,20,21],[15,81,20,36],[15,85,21,5,"isReactElement"],[15,99,21,19],[15,100,21,20,"value"],[15,105,21,25],[15,106,21,26],[16,4,22,0],[18,4,24,0],[19,4,25,0],[19,8,25,4,"canUseSymbol"],[19,20,25,16],[19,23,25,19],[19,30,25,26,"Symbol"],[19,36,25,32],[19,41,25,37],[19,51,25,47],[19,55,25,51,"Symbol"],[19,61,25,57],[19,62,25,58,"for"],[19,65,25,61],[20,4,26,0],[20,8,26,4,"REACT_ELEMENT_TYPE"],[20,26,26,22],[20,29,26,25,"canUseSymbol"],[20,41,26,37],[20,44,26,40,"Symbol"],[20,50,26,46],[20,51,26,47,"for"],[20,54,26,50],[20,55,26,51],[20,70,26,66],[20,71,26,67],[20,74,26,70],[20,80,26,76],[21,4,28,0],[21,13,28,9,"isReactElement"],[21,27,28,23,"isReactElement"],[21,28,28,24,"value"],[21,33,28,29],[21,35,28,31],[22,6,29,1],[22,13,29,8,"value"],[22,18,29,13],[22,19,29,14,"$$typeof"],[22,27,29,22],[22,32,29,27,"REACT_ELEMENT_TYPE"],[22,50,29,45],[23,4,30,0],[24,4,32,0],[24,13,32,9,"emptyTarget"],[24,24,32,20,"emptyTarget"],[24,25,32,21,"val"],[24,28,32,24],[24,30,32,26],[25,6,33,1],[25,13,33,8,"Array"],[25,18,33,13],[25,19,33,14,"isArray"],[25,26,33,21],[25,27,33,22,"val"],[25,30,33,25],[25,31,33,26],[25,34,33,29],[25,36,33,31],[25,39,33,34],[25,40,33,35],[25,41,33,36],[26,4,34,0],[27,4,36,0],[27,13,36,9,"cloneUnlessOtherwiseSpecified"],[27,42,36,38,"cloneUnlessOtherwiseSpecified"],[27,43,36,39,"value"],[27,48,36,44],[27,50,36,46,"options"],[27,57,36,53],[27,59,36,55],[28,6,37,1],[28,13,37,9,"options"],[28,20,37,16],[28,21,37,17,"clone"],[28,26,37,22],[28,31,37,27],[28,36,37,32],[28,40,37,36,"options"],[28,47,37,43],[28,48,37,44,"isMergeableObject"],[28,65,37,61],[28,66,37,62,"value"],[28,71,37,67],[28,72,37,68],[28,75,38,4,"deepmerge"],[28,84,38,13],[28,85,38,14,"emptyTarget"],[28,96,38,25],[28,97,38,26,"value"],[28,102,38,31],[28,103,38,32],[28,105,38,34,"value"],[28,110,38,39],[28,112,38,41,"options"],[28,119,38,48],[28,120,38,49],[28,123,39,4,"value"],[28,128,39,9],[29,4,40,0],[30,4,42,0],[30,13,42,9,"defaultArrayMerge"],[30,30,42,26,"defaultArrayMerge"],[30,31,42,27,"target"],[30,37,42,33],[30,39,42,35,"source"],[30,45,42,41],[30,47,42,43,"options"],[30,54,42,50],[30,56,42,52],[31,6,43,1],[31,13,43,8,"target"],[31,19,43,14],[31,20,43,15,"concat"],[31,26,43,21],[31,27,43,22,"source"],[31,33,43,28],[31,34,43,29],[31,35,43,30,"map"],[31,38,43,33],[31,39,43,34],[31,49,43,43,"element"],[31,56,43,50],[31,58,43,52],[32,8,44,2],[32,15,44,9,"cloneUnlessOtherwiseSpecified"],[32,44,44,38],[32,45,44,39,"element"],[32,52,44,46],[32,54,44,48,"options"],[32,61,44,55],[32,62,44,56],[33,6,45,1],[33,7,45,2],[33,8,45,3],[34,4,46,0],[35,4,48,0],[35,13,48,9,"mergeObject"],[35,24,48,20,"mergeObject"],[35,25,48,21,"target"],[35,31,48,27],[35,33,48,29,"source"],[35,39,48,35],[35,41,48,37,"options"],[35,48,48,44],[35,50,48,46],[36,6,49,1],[36,10,49,5,"destination"],[36,21,49,16],[36,24,49,19],[36,25,49,20],[36,26,49,21],[37,6,50,1],[37,10,50,5,"options"],[37,17,50,12],[37,18,50,13,"isMergeableObject"],[37,35,50,30],[37,36,50,31,"target"],[37,42,50,37],[37,43,50,38],[37,45,50,40],[38,8,51,2,"Object"],[38,14,51,8],[38,15,51,9,"keys"],[38,19,51,13],[38,20,51,14,"target"],[38,26,51,20],[38,27,51,21],[38,28,51,22,"forEach"],[38,35,51,29],[38,36,51,30],[38,46,51,39,"key"],[38,49,51,42],[38,51,51,44],[39,10,52,3,"destination"],[39,21,52,14],[39,22,52,15,"key"],[39,25,52,18],[39,26,52,19],[39,29,52,22,"cloneUnlessOtherwiseSpecified"],[39,58,52,51],[39,59,52,52,"target"],[39,65,52,58],[39,66,52,59,"key"],[39,69,52,62],[39,70,52,63],[39,72,52,65,"options"],[39,79,52,72],[39,80,52,73],[40,8,53,2],[40,9,53,3],[40,10,53,4],[41,6,54,1],[42,6,55,1,"Object"],[42,12,55,7],[42,13,55,8,"keys"],[42,17,55,12],[42,18,55,13,"source"],[42,24,55,19],[42,25,55,20],[42,26,55,21,"forEach"],[42,33,55,28],[42,34,55,29],[42,44,55,38,"key"],[42,47,55,41],[42,49,55,43],[43,8,56,2],[43,12,56,6],[43,13,56,7,"options"],[43,20,56,14],[43,21,56,15,"isMergeableObject"],[43,38,56,32],[43,39,56,33,"source"],[43,45,56,39],[43,46,56,40,"key"],[43,49,56,43],[43,50,56,44],[43,51,56,45],[43,55,56,49],[43,56,56,50,"target"],[43,62,56,56],[43,63,56,57,"key"],[43,66,56,60],[43,67,56,61],[43,69,56,63],[44,10,57,3,"destination"],[44,21,57,14],[44,22,57,15,"key"],[44,25,57,18],[44,26,57,19],[44,29,57,22,"cloneUnlessOtherwiseSpecified"],[44,58,57,51],[44,59,57,52,"source"],[44,65,57,58],[44,66,57,59,"key"],[44,69,57,62],[44,70,57,63],[44,72,57,65,"options"],[44,79,57,72],[44,80,57,73],[45,8,58,2],[45,9,58,3],[45,15,58,9],[46,10,59,3,"destination"],[46,21,59,14],[46,22,59,15,"key"],[46,25,59,18],[46,26,59,19],[46,29,59,22,"deepmerge"],[46,38,59,31],[46,39,59,32,"target"],[46,45,59,38],[46,46,59,39,"key"],[46,49,59,42],[46,50,59,43],[46,52,59,45,"source"],[46,58,59,51],[46,59,59,52,"key"],[46,62,59,55],[46,63,59,56],[46,65,59,58,"options"],[46,72,59,65],[46,73,59,66],[47,8,60,2],[48,6,61,1],[48,7,61,2],[48,8,61,3],[49,6,62,1],[49,13,62,8,"destination"],[49,24,62,19],[50,4,63,0],[51,4,65,0],[51,13,65,9,"deepmerge"],[51,22,65,18,"deepmerge"],[51,23,65,19,"target"],[51,29,65,25],[51,31,65,27,"source"],[51,37,65,33],[51,39,65,35,"options"],[51,46,65,42],[51,48,65,44],[52,6,66,1,"options"],[52,13,66,8],[52,16,66,11,"options"],[52,23,66,18],[52,27,66,22],[52,28,66,23],[52,29,66,24],[53,6,67,1,"options"],[53,13,67,8],[53,14,67,9,"arrayMerge"],[53,24,67,19],[53,27,67,22,"options"],[53,34,67,29],[53,35,67,30,"arrayMerge"],[53,45,67,40],[53,49,67,44,"defaultArrayMerge"],[53,66,67,61],[54,6,68,1,"options"],[54,13,68,8],[54,14,68,9,"isMergeableObject"],[54,31,68,26],[54,34,68,29,"options"],[54,41,68,36],[54,42,68,37,"isMergeableObject"],[54,59,68,54],[54,63,68,58,"isMergeableObject"],[54,80,68,75],[55,6,70,1],[55,10,70,5,"sourceIsArray"],[55,23,70,18],[55,26,70,21,"Array"],[55,31,70,26],[55,32,70,27,"isArray"],[55,39,70,34],[55,40,70,35,"source"],[55,46,70,41],[55,47,70,42],[56,6,71,1],[56,10,71,5,"targetIsArray"],[56,23,71,18],[56,26,71,21,"Array"],[56,31,71,26],[56,32,71,27,"isArray"],[56,39,71,34],[56,40,71,35,"target"],[56,46,71,41],[56,47,71,42],[57,6,72,1],[57,10,72,5,"sourceAndTargetTypesMatch"],[57,35,72,30],[57,38,72,33,"sourceIsArray"],[57,51,72,46],[57,56,72,51,"targetIsArray"],[57,69,72,64],[58,6,74,1],[58,10,74,5],[58,11,74,6,"sourceAndTargetTypesMatch"],[58,36,74,31],[58,38,74,33],[59,8,75,2],[59,15,75,9,"cloneUnlessOtherwiseSpecified"],[59,44,75,38],[59,45,75,39,"source"],[59,51,75,45],[59,53,75,47,"options"],[59,60,75,54],[59,61,75,55],[60,6,76,1],[60,7,76,2],[60,13,76,8],[60,17,76,12,"sourceIsArray"],[60,30,76,25],[60,32,76,27],[61,8,77,2],[61,15,77,9,"options"],[61,22,77,16],[61,23,77,17,"arrayMerge"],[61,33,77,27],[61,34,77,28,"target"],[61,40,77,34],[61,42,77,36,"source"],[61,48,77,42],[61,50,77,44,"options"],[61,57,77,51],[61,58,77,52],[62,6,78,1],[62,7,78,2],[62,13,78,8],[63,8,79,2],[63,15,79,9,"mergeObject"],[63,26,79,20],[63,27,79,21,"target"],[63,33,79,27],[63,35,79,29,"source"],[63,41,79,35],[63,43,79,37,"options"],[63,50,79,44],[63,51,79,45],[64,6,80,1],[65,4,81,0],[66,4,83,0,"deepmerge"],[66,13,83,9],[66,14,83,10,"all"],[66,17,83,13],[66,20,83,16],[66,29,83,25,"deepmergeAll"],[66,41,83,37,"deepmergeAll"],[66,42,83,38,"array"],[66,47,83,43],[66,49,83,45,"options"],[66,56,83,52],[66,58,83,54],[67,6,84,1],[67,10,84,5],[67,11,84,6,"Array"],[67,16,84,11],[67,17,84,12,"isArray"],[67,24,84,19],[67,25,84,20,"array"],[67,30,84,25],[67,31,84,26],[67,33,84,28],[68,8,85,2],[68,14,85,8],[68,18,85,12,"Error"],[68,23,85,17],[68,24,85,18],[68,59,85,53],[68,60,85,54],[69,6,86,1],[70,6,88,1],[70,13,88,8,"array"],[70,18,88,13],[70,19,88,14,"reduce"],[70,25,88,20],[70,26,88,21],[70,36,88,30,"prev"],[70,40,88,34],[70,42,88,36,"next"],[70,46,88,40],[70,48,88,42],[71,8,89,2],[71,15,89,9,"deepmerge"],[71,24,89,18],[71,25,89,19,"prev"],[71,29,89,23],[71,31,89,25,"next"],[71,35,89,29],[71,37,89,31,"options"],[71,44,89,38],[71,45,89,39],[72,6,90,1],[72,7,90,2],[72,9,90,4],[72,10,90,5],[72,11,90,6],[72,12,90,7],[73,4,91,0],[73,5,91,1],[74,4,93,0],[74,8,93,4,"deepmerge_1"],[74,19,93,15],[74,22,93,18,"deepmerge"],[74,31,93,27],[75,4,95,0],[75,11,95,7,"deepmerge_1"],[75,22,95,18],[76,2,97,0],[76,3,97,2],[76,4,97,3],[77,0,97,5],[77,3]],"functionMap":{"names":["<global>","<anonymous>","isMergeableObject","isNonNullObject","isSpecial","isReactElement","emptyTarget","cloneUnlessOtherwiseSpecified","defaultArrayMerge","target.concat.map$argument_0","mergeObject","Object.keys.forEach$argument_0","deepmerge","deepmergeAll","array.reduce$argument_0"],"mappings":"AAA,CC;CDI,QC;wBCE;CDG;AEE;CFE;AGE;CHM;AIM;CJE;AKE;CLE;AME;CNI;AOE;kCCC;EDE;CPC;ASE;8BCG;GDE;6BCE;EDM;CTE;AWE;CXgB;gBYE;qBCK;EDE;CZC;CDM"},"hasCjsExports":true},"type":"js/module"}]}