{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n      length = array.length;\n    if (start < 0) {\n      start = -start > length ? 0 : length + start;\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : end - start >>> 0;\n    start >>>= 0;\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n  module.exports = baseSlice;\n});","lineCount":30,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,2,10,0],[11,11,10,9,"baseSlice"],[11,20,10,18,"baseSlice"],[11,21,10,19,"array"],[11,26,10,24],[11,28,10,26,"start"],[11,33,10,31],[11,35,10,33,"end"],[11,38,10,36],[11,40,10,38],[12,4,11,2],[12,8,11,6,"index"],[12,13,11,11],[12,16,11,14],[12,17,11,15],[12,18,11,16],[13,6,12,6,"length"],[13,12,12,12],[13,15,12,15,"array"],[13,20,12,20],[13,21,12,21,"length"],[13,27,12,27],[14,4,14,2],[14,8,14,6,"start"],[14,13,14,11],[14,16,14,14],[14,17,14,15],[14,19,14,17],[15,6,15,4,"start"],[15,11,15,9],[15,14,15,12],[15,15,15,13,"start"],[15,20,15,18],[15,23,15,21,"length"],[15,29,15,27],[15,32,15,30],[15,33,15,31],[15,36,15,35,"length"],[15,42,15,41],[15,45,15,44,"start"],[15,50,15,50],[16,4,16,2],[17,4,17,2,"end"],[17,7,17,5],[17,10,17,8,"end"],[17,13,17,11],[17,16,17,14,"length"],[17,22,17,20],[17,25,17,23,"length"],[17,31,17,29],[17,34,17,32,"end"],[17,37,17,35],[18,4,18,2],[18,8,18,6,"end"],[18,11,18,9],[18,14,18,12],[18,15,18,13],[18,17,18,15],[19,6,19,4,"end"],[19,9,19,7],[19,13,19,11,"length"],[19,19,19,17],[20,4,20,2],[21,4,21,2,"length"],[21,10,21,8],[21,13,21,11,"start"],[21,18,21,16],[21,21,21,19,"end"],[21,24,21,22],[21,27,21,25],[21,28,21,26],[21,31,21,31,"end"],[21,34,21,34],[21,37,21,37,"start"],[21,42,21,42],[21,47,21,48],[21,48,21,50],[22,4,22,2,"start"],[22,9,22,7],[22,15,22,13],[22,16,22,14],[23,4,24,2],[23,8,24,6,"result"],[23,14,24,12],[23,17,24,15,"Array"],[23,22,24,20],[23,23,24,21,"length"],[23,29,24,27],[23,30,24,28],[24,4,25,2],[24,11,25,9],[24,13,25,11,"index"],[24,18,25,16],[24,21,25,19,"length"],[24,27,25,25],[24,29,25,27],[25,6,26,4,"result"],[25,12,26,10],[25,13,26,11,"index"],[25,18,26,16],[25,19,26,17],[25,22,26,20,"array"],[25,27,26,25],[25,28,26,26,"index"],[25,33,26,31],[25,36,26,34,"start"],[25,41,26,39],[25,42,26,40],[26,4,27,2],[27,4,28,2],[27,11,28,9,"result"],[27,17,28,15],[28,2,29,0],[29,2,31,0,"module"],[29,8,31,6],[29,9,31,7,"exports"],[29,16,31,14],[29,19,31,17,"baseSlice"],[29,28,31,26],[30,0,31,27],[30,3]],"functionMap":{"names":["<global>","baseSlice"],"mappings":"AAA;ACS;CDmB"}},"type":"js/module"}]}