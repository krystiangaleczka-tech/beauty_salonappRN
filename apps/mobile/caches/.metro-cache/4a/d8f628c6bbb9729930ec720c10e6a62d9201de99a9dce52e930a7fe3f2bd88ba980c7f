{"dependencies":[{"name":"./isSymbol.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"IshjnjX/UoG16xm0Q3eBeELrzgg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _isSymbolJs = require(_dependencyMap[0], \"./isSymbol.js\");\n  var isSymbol = _interopDefault(_isSymbolJs);\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0;\n\n  /**\n   * Converts `value` to a string key if it's not a string or symbol.\n   *\n   * @private\n   * @param {*} value The value to inspect.\n   * @returns {string|symbol} Returns the key.\n   */\n  function toKey(value) {\n    if (typeof value == 'string' || (0, isSymbol.default)(value)) {\n      return value;\n    }\n    var result = value + '';\n    return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n  }\n  var _default = toKey;\n});","lineCount":38,"map":[[12,2,21,0,"Object"],[12,8,21,0],[12,9,21,0,"defineProperty"],[12,23,21,0],[12,24,21,0,"exports"],[12,31,21,0],[13,4,21,0,"enumerable"],[13,14,21,0],[14,4,21,0,"get"],[14,7,21,0],[14,18,21,0,"get"],[14,19,21,0],[15,6,21,0],[15,13,21,0,"_default"],[15,21,21,0],[16,4,21,0],[17,2,21,0],[18,2,1,0],[18,6,1,0,"_isSymbolJs"],[18,17,1,0],[18,20,1,0,"require"],[18,27,1,0],[18,28,1,0,"_dependencyMap"],[18,42,1,0],[19,2,1,0],[19,6,1,0,"isSymbol"],[19,14,1,0],[19,17,1,0,"_interopDefault"],[19,32,1,0],[19,33,1,0,"_isSymbolJs"],[19,44,1,0],[20,2,3,0],[21,2,4,0],[21,6,4,4,"INFINITY"],[21,14,4,12],[21,17,4,15],[21,18,4,16],[21,21,4,19],[21,22,4,20],[23,2,6,0],[24,0,7,0],[25,0,8,0],[26,0,9,0],[27,0,10,0],[28,0,11,0],[29,0,12,0],[30,2,13,0],[30,11,13,9,"toKey"],[30,16,13,14,"toKey"],[30,17,13,15,"value"],[30,22,13,20],[30,24,13,22],[31,4,14,2],[31,8,14,6],[31,15,14,13,"value"],[31,20,14,18],[31,24,14,22],[31,32,14,30],[31,36,14,34],[31,40,14,34,"isSymbol"],[31,48,14,42],[31,49,14,42,"default"],[31,56,14,42],[31,58,14,43,"value"],[31,63,14,48],[31,64,14,49],[31,66,14,51],[32,6,15,4],[32,13,15,11,"value"],[32,18,15,16],[33,4,16,2],[34,4,17,2],[34,8,17,6,"result"],[34,14,17,12],[34,17,17,16,"value"],[34,22,17,21],[34,25,17,24],[34,27,17,27],[35,4,18,2],[35,11,18,10,"result"],[35,17,18,16],[35,21,18,20],[35,24,18,23],[35,28,18,28],[35,29,18,29],[35,32,18,32,"value"],[35,37,18,37],[35,41,18,42],[35,42,18,43,"INFINITY"],[35,50,18,51],[35,53,18,55],[35,57,18,59],[35,60,18,62,"result"],[35,66,18,68],[36,2,19,0],[37,2,21,0],[37,6,21,0,"_default"],[37,14,21,0],[37,17,21,15,"toKey"],[37,22,21,20],[38,0,21,21],[38,3]],"functionMap":{"names":["<global>","toKey"],"mappings":"AAA;ACY;CDM"},"hasCjsExports":false},"type":"js/module"}]}