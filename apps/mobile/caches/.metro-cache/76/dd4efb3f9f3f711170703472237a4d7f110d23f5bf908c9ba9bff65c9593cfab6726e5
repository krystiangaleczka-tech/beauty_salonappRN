{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}},{"name":"hey-listen","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":39,"index":71}}],"key":"5p342VF2FjgsoIiIlnJV4kmYYFQ=","exportNames":["*"],"imports":1}},{"name":"@motionone/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":72},"end":{"line":3,"column":110,"index":182}}],"key":"+655Tbr0Dg/RFFwL7HMoKgGI11s=","exportNames":["*"],"imports":1}},{"name":"../utils/stagger.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":183},"end":{"line":4,"column":55,"index":238}}],"key":"d6ETnxXBTDXW0a+wDGHld0K90LM=","exportNames":["*"],"imports":1}},{"name":"../animate/animate-style.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":239},"end":{"line":5,"column":62,"index":301}}],"key":"MexUYWu/GIfjvitd/338QG+zoRA=","exportNames":["*"],"imports":1}},{"name":"../animate/utils/controls.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":302},"end":{"line":6,"column":63,"index":365}}],"key":"qdnZdiKz121cBG+ffT/8vFGhl3E=","exportNames":["*"],"imports":1}},{"name":"../animate/utils/keyframes.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":366},"end":{"line":7,"column":65,"index":431}}],"key":"bkAYbTolisWrXLk2MZfWr/NHQto=","exportNames":["*"],"imports":1}},{"name":"../animate/utils/options.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":432},"end":{"line":8,"column":60,"index":492}}],"key":"UF4OINJa151lrr+OQiR211t9JsI=","exportNames":["*"],"imports":1}},{"name":"../utils/resolve-elements.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":493},"end":{"line":9,"column":66,"index":559}}],"key":"Mu9PFplvmYWvHcgPv1FR15skvmU=","exportNames":["*"],"imports":1}},{"name":"../animate/utils/transforms.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":560},"end":{"line":10,"column":64,"index":624}}],"key":"JsZSKJEZsFkBnJ+9WN5BQWsNp3I=","exportNames":["*"],"imports":1}},{"name":"./utils/calc-time.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":625},"end":{"line":11,"column":55,"index":680}}],"key":"Z8DM1Km0yrnV1w0wMpqCOzFDLzU=","exportNames":["*"],"imports":1}},{"name":"./utils/edit.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":681},"end":{"line":12,"column":50,"index":731}}],"key":"Zt30EoWCY+DMEFves/CmPRKLmfk=","exportNames":["*"],"imports":1}},{"name":"./utils/sort.es.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":732},"end":{"line":13,"column":51,"index":783}}],"key":"uog/KANaxz6UYHIZG6HrPl4YFNA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"createAnimationsFromTimeline\", {\n    enumerable: true,\n    get: function () {\n      return createAnimationsFromTimeline;\n    }\n  });\n  Object.defineProperty(exports, \"timeline\", {\n    enumerable: true,\n    get: function () {\n      return timeline;\n    }\n  });\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _heyListen = require(_dependencyMap[1], \"hey-listen\");\n  var _motiononeUtils = require(_dependencyMap[2], \"@motionone/utils\");\n  var _utilsStaggerEsJs = require(_dependencyMap[3], \"../utils/stagger.es.js\");\n  var _animateAnimateStyleEsJs = require(_dependencyMap[4], \"../animate/animate-style.es.js\");\n  var _animateUtilsControlsEsJs = require(_dependencyMap[5], \"../animate/utils/controls.es.js\");\n  var _animateUtilsKeyframesEsJs = require(_dependencyMap[6], \"../animate/utils/keyframes.es.js\");\n  var _animateUtilsOptionsEsJs = require(_dependencyMap[7], \"../animate/utils/options.es.js\");\n  var _utilsResolveElementsEsJs = require(_dependencyMap[8], \"../utils/resolve-elements.es.js\");\n  var _animateUtilsTransformsEsJs = require(_dependencyMap[9], \"../animate/utils/transforms.es.js\");\n  var _utilsCalcTimeEsJs = require(_dependencyMap[10], \"./utils/calc-time.es.js\");\n  var _utilsEditEsJs = require(_dependencyMap[11], \"./utils/edit.es.js\");\n  var _utilsSortEsJs = require(_dependencyMap[12], \"./utils/sort.es.js\");\n  function timeline(definition, options = {}) {\n    var _a;\n    const animationDefinitions = createAnimationsFromTimeline(definition, options);\n    /**\n     * Create and start animations\n     */\n    const animationFactories = animationDefinitions.map(definition => (0, _animateAnimateStyleEsJs.animateStyle)(...definition)).filter(Boolean);\n    return (0, _animateUtilsControlsEsJs.withControls)(animationFactories, options,\n    // Get the duration from the first animation definition\n    (_a = animationDefinitions[0]) === null || _a === void 0 ? void 0 : _a[3].duration);\n  }\n  function createAnimationsFromTimeline(definition, _a = {}) {\n    var {\n        defaultOptions = {}\n      } = _a,\n      timelineOptions = (0, _tslib.__rest)(_a, [\"defaultOptions\"]);\n    const animationDefinitions = [];\n    const elementSequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the definition array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < definition.length; i++) {\n      const segment = definition[i];\n      /**\n       * If this is a timeline label, mark it and skip the rest of this iteration.\n       */\n      if ((0, _motiononeUtils.isString)(segment)) {\n        timeLabels.set(segment, currentTime);\n        continue;\n      } else if (!Array.isArray(segment)) {\n        timeLabels.set(segment.name, (0, _utilsCalcTimeEsJs.calcNextTime)(currentTime, segment.at, prevTime, timeLabels));\n        continue;\n      }\n      const [elementDefinition, keyframes, options = {}] = segment;\n      /**\n       * If a relative or absolute time value has been specified we need to resolve\n       * it in relation to the currentTime.\n       */\n      if (options.at !== undefined) {\n        currentTime = (0, _utilsCalcTimeEsJs.calcNextTime)(currentTime, options.at, prevTime, timeLabels);\n      }\n      /**\n       * Keep track of the maximum duration in this definition. This will be\n       * applied to currentTime once the definition has been parsed.\n       */\n      let maxDuration = 0;\n      /**\n       * Find all the elements specified in the definition and parse value\n       * keyframes from their timeline definitions.\n       */\n      const elements = (0, _utilsResolveElementsEsJs.resolveElements)(elementDefinition, elementCache);\n      const numElements = elements.length;\n      for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n        const element = elements[elementIndex];\n        const elementSequence = getElementSequence(element, elementSequences);\n        for (const key in keyframes) {\n          const valueSequence = getValueSequence(key, elementSequence);\n          let valueKeyframes = (0, _animateUtilsKeyframesEsJs.keyframesList)(keyframes[key]);\n          const valueOptions = (0, _animateUtilsOptionsEsJs.getOptions)(options, key);\n          let {\n            duration = defaultOptions.duration || _motiononeUtils.defaults.duration,\n            easing = defaultOptions.easing || _motiononeUtils.defaults.easing\n          } = valueOptions;\n          if ((0, _motiononeUtils.isEasingGenerator)(easing)) {\n            const valueIsTransform = (0, _animateUtilsTransformsEsJs.isTransform)(key);\n            (0, _heyListen.invariant)(valueKeyframes.length === 2 || !valueIsTransform, \"spring must be provided 2 keyframes within timeline\");\n            const custom = easing.createAnimation(valueKeyframes,\n            // TODO We currently only support explicit keyframes\n            // so this doesn't currently read from the DOM\n            () => \"0\", valueIsTransform);\n            easing = custom.easing;\n            if (custom.keyframes !== undefined) valueKeyframes = custom.keyframes;\n            if (custom.duration !== undefined) duration = custom.duration;\n          }\n          const delay = (0, _utilsStaggerEsJs.resolveOption)(options.delay, elementIndex, numElements) || 0;\n          const startTime = currentTime + delay;\n          const targetTime = startTime + duration;\n          /**\n           *\n           */\n          let {\n            offset = (0, _motiononeUtils.defaultOffset)(valueKeyframes.length)\n          } = valueOptions;\n          /**\n           * If there's only one offset of 0, fill in a second with length 1\n           *\n           * TODO: Ensure there's a test that covers this removal\n           */\n          if (offset.length === 1 && offset[0] === 0) {\n            offset[1] = 1;\n          }\n          /**\n           * Fill out if offset if fewer offsets than keyframes\n           */\n          const remainder = length - valueKeyframes.length;\n          remainder > 0 && (0, _motiononeUtils.fillOffset)(offset, remainder);\n          /**\n           * If only one value has been set, ie [1], push a null to the start of\n           * the keyframe array. This will let us mark a keyframe at this point\n           * that will later be hydrated with the previous value.\n           */\n          valueKeyframes.length === 1 && valueKeyframes.unshift(null);\n          /**\n           * Add keyframes, mapping offsets to absolute time.\n           */\n          (0, _utilsEditEsJs.addKeyframes)(valueSequence, valueKeyframes, easing, offset, startTime, targetTime);\n          maxDuration = Math.max(delay + duration, maxDuration);\n          totalDuration = Math.max(targetTime, totalDuration);\n        }\n      }\n      prevTime = currentTime;\n      currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    elementSequences.forEach((valueSequences, element) => {\n      for (const key in valueSequences) {\n        const valueSequence = valueSequences[key];\n        /**\n         * Arrange all the keyframes in ascending time order.\n         */\n        valueSequence.sort(_utilsSortEsJs.compareByTime);\n        const keyframes = [];\n        const valueOffset = [];\n        const valueEasing = [];\n        /**\n         * For each keyframe, translate absolute times into\n         * relative offsets based on the total duration of the timeline.\n         */\n        for (let i = 0; i < valueSequence.length; i++) {\n          const {\n            at,\n            value,\n            easing\n          } = valueSequence[i];\n          keyframes.push(value);\n          valueOffset.push((0, _motiononeUtils.progress)(0, totalDuration, at));\n          valueEasing.push(easing || _motiononeUtils.defaults.easing);\n        }\n        /**\n         * If the first keyframe doesn't land on offset: 0\n         * provide one by duplicating the initial keyframe. This ensures\n         * it snaps to the first keyframe when the animation starts.\n         */\n        if (valueOffset[0] !== 0) {\n          valueOffset.unshift(0);\n          keyframes.unshift(keyframes[0]);\n          valueEasing.unshift(\"linear\");\n        }\n        /**\n         * If the last keyframe doesn't land on offset: 1\n         * provide one with a null wildcard value. This will ensure it\n         * stays static until the end of the animation.\n         */\n        if (valueOffset[valueOffset.length - 1] !== 1) {\n          valueOffset.push(1);\n          keyframes.push(null);\n        }\n        animationDefinitions.push([element, key, keyframes, Object.assign(Object.assign(Object.assign({}, defaultOptions), {\n          duration: totalDuration,\n          easing: valueEasing,\n          offset: valueOffset\n        }), timelineOptions)]);\n      }\n    });\n    return animationDefinitions;\n  }\n  function getElementSequence(element, sequences) {\n    !sequences.has(element) && sequences.set(element, {});\n    return sequences.get(element);\n  }\n  function getValueSequence(name, sequences) {\n    if (!sequences[name]) sequences[name] = [];\n    return sequences[name];\n  }\n});","lineCount":215,"map":[[7,2,194,0,"Object"],[7,8,194,0],[7,9,194,0,"defineProperty"],[7,23,194,0],[7,24,194,0,"exports"],[7,31,194,0],[8,4,194,0,"enumerable"],[8,14,194,0],[9,4,194,0,"get"],[9,7,194,0],[9,18,194,0,"get"],[9,19,194,0],[10,6,194,0],[10,13,194,9,"createAnimationsFromTimeline"],[10,41,194,37],[11,4,194,37],[12,2,194,37],[13,2,194,0,"Object"],[13,8,194,0],[13,9,194,0,"defineProperty"],[13,23,194,0],[13,24,194,0,"exports"],[13,31,194,0],[14,4,194,0,"enumerable"],[14,14,194,0],[15,4,194,0,"get"],[15,7,194,0],[15,18,194,0,"get"],[15,19,194,0],[16,6,194,0],[16,13,194,39,"timeline"],[16,21,194,47],[17,4,194,47],[18,2,194,47],[19,2,1,0],[19,6,1,0,"_tslib"],[19,12,1,0],[19,15,1,0,"require"],[19,22,1,0],[19,23,1,0,"_dependencyMap"],[19,37,1,0],[20,2,2,0],[20,6,2,0,"_heyListen"],[20,16,2,0],[20,19,2,0,"require"],[20,26,2,0],[20,27,2,0,"_dependencyMap"],[20,41,2,0],[21,2,3,0],[21,6,3,0,"_motiononeUtils"],[21,21,3,0],[21,24,3,0,"require"],[21,31,3,0],[21,32,3,0,"_dependencyMap"],[21,46,3,0],[22,2,4,0],[22,6,4,0,"_utilsStaggerEsJs"],[22,23,4,0],[22,26,4,0,"require"],[22,33,4,0],[22,34,4,0,"_dependencyMap"],[22,48,4,0],[23,2,5,0],[23,6,5,0,"_animateAnimateStyleEsJs"],[23,30,5,0],[23,33,5,0,"require"],[23,40,5,0],[23,41,5,0,"_dependencyMap"],[23,55,5,0],[24,2,6,0],[24,6,6,0,"_animateUtilsControlsEsJs"],[24,31,6,0],[24,34,6,0,"require"],[24,41,6,0],[24,42,6,0,"_dependencyMap"],[24,56,6,0],[25,2,7,0],[25,6,7,0,"_animateUtilsKeyframesEsJs"],[25,32,7,0],[25,35,7,0,"require"],[25,42,7,0],[25,43,7,0,"_dependencyMap"],[25,57,7,0],[26,2,8,0],[26,6,8,0,"_animateUtilsOptionsEsJs"],[26,30,8,0],[26,33,8,0,"require"],[26,40,8,0],[26,41,8,0,"_dependencyMap"],[26,55,8,0],[27,2,9,0],[27,6,9,0,"_utilsResolveElementsEsJs"],[27,31,9,0],[27,34,9,0,"require"],[27,41,9,0],[27,42,9,0,"_dependencyMap"],[27,56,9,0],[28,2,10,0],[28,6,10,0,"_animateUtilsTransformsEsJs"],[28,33,10,0],[28,36,10,0,"require"],[28,43,10,0],[28,44,10,0,"_dependencyMap"],[28,58,10,0],[29,2,11,0],[29,6,11,0,"_utilsCalcTimeEsJs"],[29,24,11,0],[29,27,11,0,"require"],[29,34,11,0],[29,35,11,0,"_dependencyMap"],[29,49,11,0],[30,2,12,0],[30,6,12,0,"_utilsEditEsJs"],[30,20,12,0],[30,23,12,0,"require"],[30,30,12,0],[30,31,12,0,"_dependencyMap"],[30,45,12,0],[31,2,13,0],[31,6,13,0,"_utilsSortEsJs"],[31,20,13,0],[31,23,13,0,"require"],[31,30,13,0],[31,31,13,0,"_dependencyMap"],[31,45,13,0],[32,2,15,0],[32,11,15,9,"timeline"],[32,19,15,17,"timeline"],[32,20,15,18,"definition"],[32,30,15,28],[32,32,15,30,"options"],[32,39,15,37],[32,42,15,40],[32,43,15,41],[32,44,15,42],[32,46,15,44],[33,4,16,4],[33,8,16,8,"_a"],[33,10,16,10],[34,4,17,4],[34,10,17,10,"animationDefinitions"],[34,30,17,30],[34,33,17,33,"createAnimationsFromTimeline"],[34,61,17,61],[34,62,17,62,"definition"],[34,72,17,72],[34,74,17,74,"options"],[34,81,17,81],[34,82,17,82],[35,4,18,4],[36,0,19,0],[37,0,20,0],[38,4,21,4],[38,10,21,10,"animationFactories"],[38,28,21,28],[38,31,21,31,"animationDefinitions"],[38,51,21,51],[38,52,22,9,"map"],[38,55,22,12],[38,56,22,14,"definition"],[38,66,22,24],[38,70,22,29],[38,74,22,29,"animateStyle"],[38,98,22,41],[38,99,22,41,"animateStyle"],[38,111,22,41],[38,113,22,42],[38,116,22,45,"definition"],[38,126,22,55],[38,127,22,56],[38,128,22,57],[38,129,23,9,"filter"],[38,135,23,15],[38,136,23,16,"Boolean"],[38,143,23,23],[38,144,23,24],[39,4,24,4],[39,11,24,11],[39,15,24,11,"withControls"],[39,40,24,23],[39,41,24,23,"withControls"],[39,53,24,23],[39,55,24,24,"animationFactories"],[39,73,24,42],[39,75,24,44,"options"],[39,82,24,51],[40,4,25,4],[41,4,26,4],[41,5,26,5,"_a"],[41,7,26,7],[41,10,26,10,"animationDefinitions"],[41,30,26,30],[41,31,26,31],[41,32,26,32],[41,33,26,33],[41,39,26,39],[41,43,26,43],[41,47,26,47,"_a"],[41,49,26,49],[41,54,26,54],[41,59,26,59],[41,60,26,60],[41,63,26,63],[41,68,26,68],[41,69,26,69],[41,72,26,72,"_a"],[41,74,26,74],[41,75,26,75],[41,76,26,76],[41,77,26,77],[41,78,26,78,"duration"],[41,86,26,86],[41,87,26,87],[42,2,27,0],[43,2,28,0],[43,11,28,9,"createAnimationsFromTimeline"],[43,39,28,37,"createAnimationsFromTimeline"],[43,40,28,38,"definition"],[43,50,28,48],[43,52,28,50,"_a"],[43,54,28,52],[43,57,28,55],[43,58,28,56],[43,59,28,57],[43,61,28,59],[44,4,29,4],[44,8,29,8],[45,8,29,10,"defaultOptions"],[45,22,29,24],[45,25,29,27],[45,26,29,28],[46,6,29,30],[46,7,29,31],[46,10,29,34,"_a"],[46,12,29,36],[47,6,29,38,"timelineOptions"],[47,21,29,53],[47,24,29,56],[47,28,29,56,"__rest"],[47,34,29,62],[47,35,29,62,"__rest"],[47,41,29,62],[47,43,29,63,"_a"],[47,45,29,65],[47,47,29,67],[47,48,29,68],[47,64,29,84],[47,65,29,85],[47,66,29,86],[48,4,30,4],[48,10,30,10,"animationDefinitions"],[48,30,30,30],[48,33,30,33],[48,35,30,35],[49,4,31,4],[49,10,31,10,"elementSequences"],[49,26,31,26],[49,29,31,29],[49,33,31,33,"Map"],[49,36,31,36],[49,37,31,37],[49,38,31,38],[50,4,32,4],[50,10,32,10,"elementCache"],[50,22,32,22],[50,25,32,25],[50,26,32,26],[50,27,32,27],[51,4,33,4],[51,10,33,10,"timeLabels"],[51,20,33,20],[51,23,33,23],[51,27,33,27,"Map"],[51,30,33,30],[51,31,33,31],[51,32,33,32],[52,4,34,4],[52,8,34,8,"prevTime"],[52,16,34,16],[52,19,34,19],[52,20,34,20],[53,4,35,4],[53,8,35,8,"currentTime"],[53,19,35,19],[53,22,35,22],[53,23,35,23],[54,4,36,4],[54,8,36,8,"totalDuration"],[54,21,36,21],[54,24,36,24],[54,25,36,25],[55,4,37,4],[56,0,38,0],[57,0,39,0],[58,0,40,0],[59,0,41,0],[60,4,42,4],[60,9,42,9],[60,13,42,13,"i"],[60,14,42,14],[60,17,42,17],[60,18,42,18],[60,20,42,20,"i"],[60,21,42,21],[60,24,42,24,"definition"],[60,34,42,34],[60,35,42,35,"length"],[60,41,42,41],[60,43,42,43,"i"],[60,44,42,44],[60,46,42,46],[60,48,42,48],[61,6,43,8],[61,12,43,14,"segment"],[61,19,43,21],[61,22,43,24,"definition"],[61,32,43,34],[61,33,43,35,"i"],[61,34,43,36],[61,35,43,37],[62,6,44,8],[63,0,45,0],[64,0,46,0],[65,6,47,8],[65,10,47,12],[65,14,47,12,"isString"],[65,29,47,20],[65,30,47,20,"isString"],[65,38,47,20],[65,40,47,21,"segment"],[65,47,47,28],[65,48,47,29],[65,50,47,31],[66,8,48,12,"timeLabels"],[66,18,48,22],[66,19,48,23,"set"],[66,22,48,26],[66,23,48,27,"segment"],[66,30,48,34],[66,32,48,36,"currentTime"],[66,43,48,47],[66,44,48,48],[67,8,49,12],[68,6,50,8],[68,7,50,9],[68,13,51,13],[68,17,51,17],[68,18,51,18,"Array"],[68,23,51,23],[68,24,51,24,"isArray"],[68,31,51,31],[68,32,51,32,"segment"],[68,39,51,39],[68,40,51,40],[68,42,51,42],[69,8,52,12,"timeLabels"],[69,18,52,22],[69,19,52,23,"set"],[69,22,52,26],[69,23,52,27,"segment"],[69,30,52,34],[69,31,52,35,"name"],[69,35,52,39],[69,37,52,41],[69,41,52,41,"calcNextTime"],[69,59,52,53],[69,60,52,53,"calcNextTime"],[69,72,52,53],[69,74,52,54,"currentTime"],[69,85,52,65],[69,87,52,67,"segment"],[69,94,52,74],[69,95,52,75,"at"],[69,97,52,77],[69,99,52,79,"prevTime"],[69,107,52,87],[69,109,52,89,"timeLabels"],[69,119,52,99],[69,120,52,100],[69,121,52,101],[70,8,53,12],[71,6,54,8],[72,6,55,8],[72,12,55,14],[72,13,55,15,"elementDefinition"],[72,30,55,32],[72,32,55,34,"keyframes"],[72,41,55,43],[72,43,55,45,"options"],[72,50,55,52],[72,53,55,55],[72,54,55,56],[72,55,55,57],[72,56,55,58],[72,59,55,61,"segment"],[72,66,55,68],[73,6,56,8],[74,0,57,0],[75,0,58,0],[76,0,59,0],[77,6,60,8],[77,10,60,12,"options"],[77,17,60,19],[77,18,60,20,"at"],[77,20,60,22],[77,25,60,27,"undefined"],[77,34,60,36],[77,36,60,38],[78,8,61,12,"currentTime"],[78,19,61,23],[78,22,61,26],[78,26,61,26,"calcNextTime"],[78,44,61,38],[78,45,61,38,"calcNextTime"],[78,57,61,38],[78,59,61,39,"currentTime"],[78,70,61,50],[78,72,61,52,"options"],[78,79,61,59],[78,80,61,60,"at"],[78,82,61,62],[78,84,61,64,"prevTime"],[78,92,61,72],[78,94,61,74,"timeLabels"],[78,104,61,84],[78,105,61,85],[79,6,62,8],[80,6,63,8],[81,0,64,0],[82,0,65,0],[83,0,66,0],[84,6,67,8],[84,10,67,12,"maxDuration"],[84,21,67,23],[84,24,67,26],[84,25,67,27],[85,6,68,8],[86,0,69,0],[87,0,70,0],[88,0,71,0],[89,6,72,8],[89,12,72,14,"elements"],[89,20,72,22],[89,23,72,25],[89,27,72,25,"resolveElements"],[89,52,72,40],[89,53,72,40,"resolveElements"],[89,68,72,40],[89,70,72,41,"elementDefinition"],[89,87,72,58],[89,89,72,60,"elementCache"],[89,101,72,72],[89,102,72,73],[90,6,73,8],[90,12,73,14,"numElements"],[90,23,73,25],[90,26,73,28,"elements"],[90,34,73,36],[90,35,73,37,"length"],[90,41,73,43],[91,6,74,8],[91,11,74,13],[91,15,74,17,"elementIndex"],[91,27,74,29],[91,30,74,32],[91,31,74,33],[91,33,74,35,"elementIndex"],[91,45,74,47],[91,48,74,50,"numElements"],[91,59,74,61],[91,61,74,63,"elementIndex"],[91,73,74,75],[91,75,74,77],[91,77,74,79],[92,8,75,12],[92,14,75,18,"element"],[92,21,75,25],[92,24,75,28,"elements"],[92,32,75,36],[92,33,75,37,"elementIndex"],[92,45,75,49],[92,46,75,50],[93,8,76,12],[93,14,76,18,"elementSequence"],[93,29,76,33],[93,32,76,36,"getElementSequence"],[93,50,76,54],[93,51,76,55,"element"],[93,58,76,62],[93,60,76,64,"elementSequences"],[93,76,76,80],[93,77,76,81],[94,8,77,12],[94,13,77,17],[94,19,77,23,"key"],[94,22,77,26],[94,26,77,30,"keyframes"],[94,35,77,39],[94,37,77,41],[95,10,78,16],[95,16,78,22,"valueSequence"],[95,29,78,35],[95,32,78,38,"getValueSequence"],[95,48,78,54],[95,49,78,55,"key"],[95,52,78,58],[95,54,78,60,"elementSequence"],[95,69,78,75],[95,70,78,76],[96,10,79,16],[96,14,79,20,"valueKeyframes"],[96,28,79,34],[96,31,79,37],[96,35,79,37,"keyframesList"],[96,61,79,50],[96,62,79,50,"keyframesList"],[96,75,79,50],[96,77,79,51,"keyframes"],[96,86,79,60],[96,87,79,61,"key"],[96,90,79,64],[96,91,79,65],[96,92,79,66],[97,10,80,16],[97,16,80,22,"valueOptions"],[97,28,80,34],[97,31,80,37],[97,35,80,37,"getOptions"],[97,59,80,47],[97,60,80,47,"getOptions"],[97,70,80,47],[97,72,80,48,"options"],[97,79,80,55],[97,81,80,57,"key"],[97,84,80,60],[97,85,80,61],[98,10,81,16],[98,14,81,20],[99,12,81,22,"duration"],[99,20,81,30],[99,23,81,33,"defaultOptions"],[99,37,81,47],[99,38,81,48,"duration"],[99,46,81,56],[99,50,81,60,"defaults"],[99,65,81,68],[99,66,81,68,"defaults"],[99,74,81,68],[99,75,81,69,"duration"],[99,83,81,77],[100,12,81,79,"easing"],[100,18,81,85],[100,21,81,88,"defaultOptions"],[100,35,81,102],[100,36,81,103,"easing"],[100,42,81,109],[100,46,81,113,"defaults"],[100,61,81,121],[100,62,81,121,"defaults"],[100,70,81,121],[100,71,81,122,"easing"],[101,10,81,130],[101,11,81,131],[101,14,81,134,"valueOptions"],[101,26,81,146],[102,10,82,16],[102,14,82,20],[102,18,82,20,"isEasingGenerator"],[102,33,82,37],[102,34,82,37,"isEasingGenerator"],[102,51,82,37],[102,53,82,38,"easing"],[102,59,82,44],[102,60,82,45],[102,62,82,47],[103,12,83,20],[103,18,83,26,"valueIsTransform"],[103,34,83,42],[103,37,83,45],[103,41,83,45,"isTransform"],[103,68,83,56],[103,69,83,56,"isTransform"],[103,80,83,56],[103,82,83,57,"key"],[103,85,83,60],[103,86,83,61],[104,12,84,20],[104,16,84,20,"invariant"],[104,26,84,29],[104,27,84,29,"invariant"],[104,36,84,29],[104,38,84,30,"valueKeyframes"],[104,52,84,44],[104,53,84,45,"length"],[104,59,84,51],[104,64,84,56],[104,65,84,57],[104,69,84,61],[104,70,84,62,"valueIsTransform"],[104,86,84,78],[104,88,84,80],[104,141,84,133],[104,142,84,134],[105,12,85,20],[105,18,85,26,"custom"],[105,24,85,32],[105,27,85,35,"easing"],[105,33,85,41],[105,34,85,42,"createAnimation"],[105,49,85,57],[105,50,85,58,"valueKeyframes"],[105,64,85,72],[106,12,86,20],[107,12,87,20],[108,12,88,20],[108,18,88,26],[108,21,88,29],[108,23,88,31,"valueIsTransform"],[108,39,88,47],[108,40,88,48],[109,12,89,20,"easing"],[109,18,89,26],[109,21,89,29,"custom"],[109,27,89,35],[109,28,89,36,"easing"],[109,34,89,42],[110,12,90,20],[110,16,90,24,"custom"],[110,22,90,30],[110,23,90,31,"keyframes"],[110,32,90,40],[110,37,90,45,"undefined"],[110,46,90,54],[110,48,91,24,"valueKeyframes"],[110,62,91,38],[110,65,91,41,"custom"],[110,71,91,47],[110,72,91,48,"keyframes"],[110,81,91,57],[111,12,92,20],[111,16,92,24,"custom"],[111,22,92,30],[111,23,92,31,"duration"],[111,31,92,39],[111,36,92,44,"undefined"],[111,45,92,53],[111,47,93,24,"duration"],[111,55,93,32],[111,58,93,35,"custom"],[111,64,93,41],[111,65,93,42,"duration"],[111,73,93,50],[112,10,94,16],[113,10,95,16],[113,16,95,22,"delay"],[113,21,95,27],[113,24,95,30],[113,28,95,30,"resolveOption"],[113,45,95,43],[113,46,95,43,"resolveOption"],[113,59,95,43],[113,61,95,44,"options"],[113,68,95,51],[113,69,95,52,"delay"],[113,74,95,57],[113,76,95,59,"elementIndex"],[113,88,95,71],[113,90,95,73,"numElements"],[113,101,95,84],[113,102,95,85],[113,106,95,89],[113,107,95,90],[114,10,96,16],[114,16,96,22,"startTime"],[114,25,96,31],[114,28,96,34,"currentTime"],[114,39,96,45],[114,42,96,48,"delay"],[114,47,96,53],[115,10,97,16],[115,16,97,22,"targetTime"],[115,26,97,32],[115,29,97,35,"startTime"],[115,38,97,44],[115,41,97,47,"duration"],[115,49,97,55],[116,10,98,16],[117,0,99,0],[118,0,100,0],[119,10,101,16],[119,14,101,20],[120,12,101,22,"offset"],[120,18,101,28],[120,21,101,31],[120,25,101,31,"defaultOffset"],[120,40,101,44],[120,41,101,44,"defaultOffset"],[120,54,101,44],[120,56,101,45,"valueKeyframes"],[120,70,101,59],[120,71,101,60,"length"],[120,77,101,66],[121,10,101,68],[121,11,101,69],[121,14,101,72,"valueOptions"],[121,26,101,84],[122,10,102,16],[123,0,103,0],[124,0,104,0],[125,0,105,0],[126,0,106,0],[127,10,107,16],[127,14,107,20,"offset"],[127,20,107,26],[127,21,107,27,"length"],[127,27,107,33],[127,32,107,38],[127,33,107,39],[127,37,107,43,"offset"],[127,43,107,49],[127,44,107,50],[127,45,107,51],[127,46,107,52],[127,51,107,57],[127,52,107,58],[127,54,107,60],[128,12,108,20,"offset"],[128,18,108,26],[128,19,108,27],[128,20,108,28],[128,21,108,29],[128,24,108,32],[128,25,108,33],[129,10,109,16],[130,10,110,16],[131,0,111,0],[132,0,112,0],[133,10,113,16],[133,16,113,22,"remainder"],[133,25,113,31],[133,28,113,34,"length"],[133,34,113,40],[133,37,113,43,"valueKeyframes"],[133,51,113,57],[133,52,113,58,"length"],[133,58,113,64],[134,10,114,16,"remainder"],[134,19,114,25],[134,22,114,28],[134,23,114,29],[134,27,114,33],[134,31,114,33,"fillOffset"],[134,46,114,43],[134,47,114,43,"fillOffset"],[134,57,114,43],[134,59,114,44,"offset"],[134,65,114,50],[134,67,114,52,"remainder"],[134,76,114,61],[134,77,114,62],[135,10,115,16],[136,0,116,0],[137,0,117,0],[138,0,118,0],[139,0,119,0],[140,10,120,16,"valueKeyframes"],[140,24,120,30],[140,25,120,31,"length"],[140,31,120,37],[140,36,120,42],[140,37,120,43],[140,41,120,47,"valueKeyframes"],[140,55,120,61],[140,56,120,62,"unshift"],[140,63,120,69],[140,64,120,70],[140,68,120,74],[140,69,120,75],[141,10,121,16],[142,0,122,0],[143,0,123,0],[144,10,124,16],[144,14,124,16,"addKeyframes"],[144,28,124,28],[144,29,124,28,"addKeyframes"],[144,41,124,28],[144,43,124,29,"valueSequence"],[144,56,124,42],[144,58,124,44,"valueKeyframes"],[144,72,124,58],[144,74,124,60,"easing"],[144,80,124,66],[144,82,124,68,"offset"],[144,88,124,74],[144,90,124,76,"startTime"],[144,99,124,85],[144,101,124,87,"targetTime"],[144,111,124,97],[144,112,124,98],[145,10,125,16,"maxDuration"],[145,21,125,27],[145,24,125,30,"Math"],[145,28,125,34],[145,29,125,35,"max"],[145,32,125,38],[145,33,125,39,"delay"],[145,38,125,44],[145,41,125,47,"duration"],[145,49,125,55],[145,51,125,57,"maxDuration"],[145,62,125,68],[145,63,125,69],[146,10,126,16,"totalDuration"],[146,23,126,29],[146,26,126,32,"Math"],[146,30,126,36],[146,31,126,37,"max"],[146,34,126,40],[146,35,126,41,"targetTime"],[146,45,126,51],[146,47,126,53,"totalDuration"],[146,60,126,66],[146,61,126,67],[147,8,127,12],[148,6,128,8],[149,6,129,8,"prevTime"],[149,14,129,16],[149,17,129,19,"currentTime"],[149,28,129,30],[150,6,130,8,"currentTime"],[150,17,130,19],[150,21,130,23,"maxDuration"],[150,32,130,34],[151,4,131,4],[152,4,132,4],[153,0,133,0],[154,0,134,0],[155,4,135,4,"elementSequences"],[155,20,135,20],[155,21,135,21,"forEach"],[155,28,135,28],[155,29,135,29],[155,30,135,30,"valueSequences"],[155,44,135,44],[155,46,135,46,"element"],[155,53,135,53],[155,58,135,58],[156,6,136,8],[156,11,136,13],[156,17,136,19,"key"],[156,20,136,22],[156,24,136,26,"valueSequences"],[156,38,136,40],[156,40,136,42],[157,8,137,12],[157,14,137,18,"valueSequence"],[157,27,137,31],[157,30,137,34,"valueSequences"],[157,44,137,48],[157,45,137,49,"key"],[157,48,137,52],[157,49,137,53],[158,8,138,12],[159,0,139,0],[160,0,140,0],[161,8,141,12,"valueSequence"],[161,21,141,25],[161,22,141,26,"sort"],[161,26,141,30],[161,27,141,31,"compareByTime"],[161,41,141,44],[161,42,141,44,"compareByTime"],[161,55,141,44],[161,56,141,45],[162,8,142,12],[162,14,142,18,"keyframes"],[162,23,142,27],[162,26,142,30],[162,28,142,32],[163,8,143,12],[163,14,143,18,"valueOffset"],[163,25,143,29],[163,28,143,32],[163,30,143,34],[164,8,144,12],[164,14,144,18,"valueEasing"],[164,25,144,29],[164,28,144,32],[164,30,144,34],[165,8,145,12],[166,0,146,0],[167,0,147,0],[168,0,148,0],[169,8,149,12],[169,13,149,17],[169,17,149,21,"i"],[169,18,149,22],[169,21,149,25],[169,22,149,26],[169,24,149,28,"i"],[169,25,149,29],[169,28,149,32,"valueSequence"],[169,41,149,45],[169,42,149,46,"length"],[169,48,149,52],[169,50,149,54,"i"],[169,51,149,55],[169,53,149,57],[169,55,149,59],[170,10,150,16],[170,16,150,22],[171,12,150,24,"at"],[171,14,150,26],[172,12,150,28,"value"],[172,17,150,33],[173,12,150,35,"easing"],[174,10,150,42],[174,11,150,43],[174,14,150,46,"valueSequence"],[174,27,150,59],[174,28,150,60,"i"],[174,29,150,61],[174,30,150,62],[175,10,151,16,"keyframes"],[175,19,151,25],[175,20,151,26,"push"],[175,24,151,30],[175,25,151,31,"value"],[175,30,151,36],[175,31,151,37],[176,10,152,16,"valueOffset"],[176,21,152,27],[176,22,152,28,"push"],[176,26,152,32],[176,27,152,33],[176,31,152,33,"progress"],[176,46,152,41],[176,47,152,41,"progress"],[176,55,152,41],[176,57,152,42],[176,58,152,43],[176,60,152,45,"totalDuration"],[176,73,152,58],[176,75,152,60,"at"],[176,77,152,62],[176,78,152,63],[176,79,152,64],[177,10,153,16,"valueEasing"],[177,21,153,27],[177,22,153,28,"push"],[177,26,153,32],[177,27,153,33,"easing"],[177,33,153,39],[177,37,153,43,"defaults"],[177,52,153,51],[177,53,153,51,"defaults"],[177,61,153,51],[177,62,153,52,"easing"],[177,68,153,58],[177,69,153,59],[178,8,154,12],[179,8,155,12],[180,0,156,0],[181,0,157,0],[182,0,158,0],[183,0,159,0],[184,8,160,12],[184,12,160,16,"valueOffset"],[184,23,160,27],[184,24,160,28],[184,25,160,29],[184,26,160,30],[184,31,160,35],[184,32,160,36],[184,34,160,38],[185,10,161,16,"valueOffset"],[185,21,161,27],[185,22,161,28,"unshift"],[185,29,161,35],[185,30,161,36],[185,31,161,37],[185,32,161,38],[186,10,162,16,"keyframes"],[186,19,162,25],[186,20,162,26,"unshift"],[186,27,162,33],[186,28,162,34,"keyframes"],[186,37,162,43],[186,38,162,44],[186,39,162,45],[186,40,162,46],[186,41,162,47],[187,10,163,16,"valueEasing"],[187,21,163,27],[187,22,163,28,"unshift"],[187,29,163,35],[187,30,163,36],[187,38,163,44],[187,39,163,45],[188,8,164,12],[189,8,165,12],[190,0,166,0],[191,0,167,0],[192,0,168,0],[193,0,169,0],[194,8,170,12],[194,12,170,16,"valueOffset"],[194,23,170,27],[194,24,170,28,"valueOffset"],[194,35,170,39],[194,36,170,40,"length"],[194,42,170,46],[194,45,170,49],[194,46,170,50],[194,47,170,51],[194,52,170,56],[194,53,170,57],[194,55,170,59],[195,10,171,16,"valueOffset"],[195,21,171,27],[195,22,171,28,"push"],[195,26,171,32],[195,27,171,33],[195,28,171,34],[195,29,171,35],[196,10,172,16,"keyframes"],[196,19,172,25],[196,20,172,26,"push"],[196,24,172,30],[196,25,172,31],[196,29,172,35],[196,30,172,36],[197,8,173,12],[198,8,174,12,"animationDefinitions"],[198,28,174,32],[198,29,174,33,"push"],[198,33,174,37],[198,34,174,38],[198,35,175,16,"element"],[198,42,175,23],[198,44,176,16,"key"],[198,47,176,19],[198,49,177,16,"keyframes"],[198,58,177,25],[198,60,178,16,"Object"],[198,66,178,22],[198,67,178,23,"assign"],[198,73,178,29],[198,74,178,30,"Object"],[198,80,178,36],[198,81,178,37,"assign"],[198,87,178,43],[198,88,178,44,"Object"],[198,94,178,50],[198,95,178,51,"assign"],[198,101,178,57],[198,102,178,58],[198,103,178,59],[198,104,178,60],[198,106,178,62,"defaultOptions"],[198,120,178,76],[198,121,178,77],[198,123,178,79],[199,10,178,81,"duration"],[199,18,178,89],[199,20,178,91,"totalDuration"],[199,33,178,104],[200,10,178,106,"easing"],[200,16,178,112],[200,18,178,114,"valueEasing"],[200,29,178,125],[201,10,178,127,"offset"],[201,16,178,133],[201,18,178,135,"valueOffset"],[202,8,178,147],[202,9,178,148],[202,10,178,149],[202,12,178,151,"timelineOptions"],[202,27,178,166],[202,28,178,167],[202,29,179,13],[202,30,179,14],[203,6,180,8],[204,4,181,4],[204,5,181,5],[204,6,181,6],[205,4,182,4],[205,11,182,11,"animationDefinitions"],[205,31,182,31],[206,2,183,0],[207,2,184,0],[207,11,184,9,"getElementSequence"],[207,29,184,27,"getElementSequence"],[207,30,184,28,"element"],[207,37,184,35],[207,39,184,37,"sequences"],[207,48,184,46],[207,50,184,48],[208,4,185,4],[208,5,185,5,"sequences"],[208,14,185,14],[208,15,185,15,"has"],[208,18,185,18],[208,19,185,19,"element"],[208,26,185,26],[208,27,185,27],[208,31,185,31,"sequences"],[208,40,185,40],[208,41,185,41,"set"],[208,44,185,44],[208,45,185,45,"element"],[208,52,185,52],[208,54,185,54],[208,55,185,55],[208,56,185,56],[208,57,185,57],[209,4,186,4],[209,11,186,11,"sequences"],[209,20,186,20],[209,21,186,21,"get"],[209,24,186,24],[209,25,186,25,"element"],[209,32,186,32],[209,33,186,33],[210,2,187,0],[211,2,188,0],[211,11,188,9,"getValueSequence"],[211,27,188,25,"getValueSequence"],[211,28,188,26,"name"],[211,32,188,30],[211,34,188,32,"sequences"],[211,43,188,41],[211,45,188,43],[212,4,189,4],[212,8,189,8],[212,9,189,9,"sequences"],[212,18,189,18],[212,19,189,19,"name"],[212,23,189,23],[212,24,189,24],[212,26,190,8,"sequences"],[212,35,190,17],[212,36,190,18,"name"],[212,40,190,22],[212,41,190,23],[212,44,190,26],[212,46,190,28],[213,4,191,4],[213,11,191,11,"sequences"],[213,20,191,20],[213,21,191,21,"name"],[213,25,191,25],[213,26,191,26],[214,2,192,0],[215,0,192,1],[215,3]],"functionMap":{"names":["<global>","timeline","animationDefinitions.map$argument_0","createAnimationsFromTimeline","easing.createAnimation$argument_1","elementSequences.forEach$argument_0","getElementSequence","getValueSequence"],"mappings":"AAA;ACc;aCO,2CD;CDK;AGC;oBC4D,SD;6BE+C;KF8C;CHE;AMC;CNG;AOC;CPI"},"hasCjsExports":false},"type":"js/module"}]}