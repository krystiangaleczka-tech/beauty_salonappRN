{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"errorConstructors\", {\n    enumerable: true,\n    get: function () {\n      return errorConstructors;\n    }\n  });\n  exports.addKnownErrorConstructor = addKnownErrorConstructor;\n  const list = [\n  // Native ES errors https://262.ecma-international.org/12.0/#sec-well-known-intrinsic-objects\n  Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError, AggregateError,\n  // Built-in errors\n  globalThis.DOMException,\n  // Node-specific errors\n  // https://nodejs.org/api/errors.html\n  globalThis.AssertionError, globalThis.SystemError]\n  // Non-native Errors are used with `globalThis` because they might be missing. This filter drops them when undefined.\n  .filter(Boolean).map(constructor => [constructor.name, constructor]);\n  const errorConstructors = new Map(list);\n  function addKnownErrorConstructor(constructor) {\n    const {\n      name\n    } = constructor;\n    if (errorConstructors.has(name)) {\n      throw new Error(`The error constructor \"${name}\" is already known.`);\n    }\n    try {\n      // eslint-disable-next-line no-new -- It just needs to be verified\n      new constructor();\n    } catch (error) {\n      throw new Error(`The error constructor \"${name}\" is not compatible`, {\n        cause: error\n      });\n    }\n    errorConstructors.set(name, constructor);\n  }\n});","lineCount":42,"map":[[7,2,26,0,"Object"],[7,8,26,0],[7,9,26,0,"defineProperty"],[7,23,26,0],[7,24,26,0,"exports"],[7,31,26,0],[8,4,26,0,"enumerable"],[8,14,26,0],[9,4,26,0,"get"],[9,7,26,0],[9,18,26,0,"get"],[9,19,26,0],[10,6,26,0],[10,13,26,0,"errorConstructors"],[10,30,26,0],[11,4,26,0],[12,2,26,0],[13,2,28,0,"exports"],[13,9,28,0],[13,10,28,0,"addKnownErrorConstructor"],[13,34,28,0],[13,37,28,0,"addKnownErrorConstructor"],[13,61,28,0],[14,2,1,0],[14,8,1,6,"list"],[14,12,1,10],[14,15,1,13],[15,2,2,1],[16,2,3,1,"Error"],[16,7,3,6],[16,9,4,1,"EvalError"],[16,18,4,10],[16,20,5,1,"RangeError"],[16,30,5,11],[16,32,6,1,"ReferenceError"],[16,46,6,15],[16,48,7,1,"SyntaxError"],[16,59,7,12],[16,61,8,1,"TypeError"],[16,70,8,10],[16,72,9,1,"URIError"],[16,80,9,9],[16,82,10,1,"AggregateError"],[16,96,10,15],[17,2,12,1],[18,2,13,1,"globalThis"],[18,12,13,11],[18,13,13,12,"DOMException"],[18,25,13,24],[19,2,15,1],[20,2,16,1],[21,2,17,1,"globalThis"],[21,12,17,11],[21,13,17,12,"AssertionError"],[21,27,17,26],[21,29,18,1,"globalThis"],[21,39,18,11],[21,40,18,12,"SystemError"],[21,51,18,23],[22,2,20,1],[23,2,20,1],[23,3,21,2,"filter"],[23,9,21,8],[23,10,21,9,"Boolean"],[23,17,21,16],[23,18,21,17],[23,19,22,2,"map"],[23,22,22,5],[23,23,23,2,"constructor"],[23,34,23,13],[23,38,23,17],[23,39,23,18,"constructor"],[23,50,23,29],[23,51,23,30,"name"],[23,55,23,34],[23,57,23,36,"constructor"],[23,68,23,47],[23,69,24,1],[23,70,24,2],[24,2,26,7],[24,8,26,13,"errorConstructors"],[24,25,26,30],[24,28,26,33],[24,32,26,37,"Map"],[24,35,26,40],[24,36,26,41,"list"],[24,40,26,45],[24,41,26,46],[25,2,28,7],[25,11,28,16,"addKnownErrorConstructor"],[25,35,28,40,"addKnownErrorConstructor"],[25,36,28,41,"constructor"],[25,47,28,52],[25,49,28,54],[26,4,29,1],[26,10,29,7],[27,6,29,8,"name"],[28,4,29,12],[28,5,29,13],[28,8,29,16,"constructor"],[28,19,29,27],[29,4,30,1],[29,8,30,5,"errorConstructors"],[29,25,30,22],[29,26,30,23,"has"],[29,29,30,26],[29,30,30,27,"name"],[29,34,30,31],[29,35,30,32],[29,37,30,34],[30,6,31,2],[30,12,31,8],[30,16,31,12,"Error"],[30,21,31,17],[30,22,31,18],[30,48,31,44,"name"],[30,52,31,48],[30,73,31,69],[30,74,31,70],[31,4,32,1],[32,4,34,1],[32,8,34,5],[33,6,35,2],[34,6,36,2],[34,10,36,6,"constructor"],[34,21,36,17],[34,22,36,18],[34,23,36,19],[35,4,37,1],[35,5,37,2],[35,6,37,3],[35,13,37,10,"error"],[35,18,37,15],[35,20,37,17],[36,6,38,2],[36,12,38,8],[36,16,38,12,"Error"],[36,21,38,17],[36,22,38,18],[36,48,38,44,"name"],[36,52,38,48],[36,73,38,69],[36,75,38,71],[37,8,38,72,"cause"],[37,13,38,77],[37,15,38,79,"error"],[38,6,38,84],[38,7,38,85],[38,8,38,86],[39,4,39,1],[40,4,41,1,"errorConstructors"],[40,21,41,18],[40,22,41,19,"set"],[40,25,41,22],[40,26,41,23,"name"],[40,30,41,27],[40,32,41,29,"constructor"],[40,43,41,40],[40,44,41,41],[41,2,42,0],[42,0,42,1],[42,3]],"functionMap":{"names":["<global>","filter.map$argument_0","addKnownErrorConstructor"],"mappings":"AAA;ECsB,8CD;OEK;CFc"},"hasCjsExports":false},"type":"js/module"}]}