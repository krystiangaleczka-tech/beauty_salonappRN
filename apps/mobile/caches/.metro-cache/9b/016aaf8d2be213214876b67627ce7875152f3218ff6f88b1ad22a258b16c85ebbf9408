{"dependencies":[{"name":"./_baseGetTag","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":17,"index":17},"end":{"line":1,"column":41,"index":41}}],"key":"D9u35vDFvlkUXMz+IBNjUAZepGE=","exportNames":["*"]}},{"name":"./isObjectLike","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":19,"index":62},"end":{"line":2,"column":44,"index":87}}],"key":"1NdtdOrWPuTg4tR1dSlu9rp7Iig=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseGetTag = require(_dependencyMap[0], \"./_baseGetTag\"),\n    isObjectLike = require(_dependencyMap[1], \"./isObjectLike\");\n\n  /** `Object#toString` result references. */\n  var numberTag = '[object Number]';\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;\n  }\n  module.exports = isNumber;\n});","lineCount":38,"map":[[2,2,1,0],[2,6,1,4,"baseGetTag"],[2,16,1,14],[2,19,1,17,"require"],[2,26,1,24],[2,27,1,24,"_dependencyMap"],[2,41,1,24],[2,61,1,40],[2,62,1,41],[3,4,2,4,"isObjectLike"],[3,16,2,16],[3,19,2,19,"require"],[3,26,2,26],[3,27,2,26,"_dependencyMap"],[3,41,2,26],[3,62,2,43],[3,63,2,44],[5,2,4,0],[6,2,5,0],[6,6,5,4,"numberTag"],[6,15,5,13],[6,18,5,16],[6,35,5,33],[8,2,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,2,33,0],[34,11,33,9,"isNumber"],[34,19,33,17,"isNumber"],[34,20,33,18,"value"],[34,25,33,23],[34,27,33,25],[35,4,34,2],[35,11,34,9],[35,18,34,16,"value"],[35,23,34,21],[35,27,34,25],[35,35,34,33],[35,39,35,5,"isObjectLike"],[35,51,35,17],[35,52,35,18,"value"],[35,57,35,23],[35,58,35,24],[35,62,35,28,"baseGetTag"],[35,72,35,38],[35,73,35,39,"value"],[35,78,35,44],[35,79,35,45],[35,83,35,49,"numberTag"],[35,92,35,59],[36,2,36,0],[37,2,38,0,"module"],[37,8,38,6],[37,9,38,7,"exports"],[37,16,38,14],[37,19,38,17,"isNumber"],[37,27,38,25],[38,0,38,26],[38,3]],"functionMap":{"names":["<global>","isNumber"],"mappings":"AAA;ACgC;CDG"}},"type":"js/module"}]}