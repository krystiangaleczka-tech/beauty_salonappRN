{"dependencies":[{"name":"./mix.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":32,"index":32}}],"key":"cGMAaGaNdnZ8cex/ukVNiXblycw=","exportNames":["*"],"imports":1}},{"name":"style-value-types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":33},"end":{"line":2,"column":52,"index":85}}],"key":"amhWSRCUxLBa3Njmww3P7iM/NQE=","exportNames":["*"],"imports":1}},{"name":"hey-listen","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":86},"end":{"line":3,"column":39,"index":125}}],"key":"5p342VF2FjgsoIiIlnJV4kmYYFQ=","exportNames":["*"],"imports":1}},{"name":"./hsla-to-rgba.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":126},"end":{"line":4,"column":48,"index":174}}],"key":"VG3MqYsD2JqBZSHJCcydBOgHla0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"mixColor\", {\n    enumerable: true,\n    get: function () {\n      return mixColor;\n    }\n  });\n  Object.defineProperty(exports, \"mixLinearColor\", {\n    enumerable: true,\n    get: function () {\n      return mixLinearColor;\n    }\n  });\n  var _mixMjs = require(_dependencyMap[0], \"./mix.mjs\");\n  var _styleValueTypes = require(_dependencyMap[1], \"style-value-types\");\n  var _heyListen = require(_dependencyMap[2], \"hey-listen\");\n  var _hslaToRgbaMjs = require(_dependencyMap[3], \"./hsla-to-rgba.mjs\");\n  var mixLinearColor = (from, to, v) => {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n  };\n  var colorTypes = [_styleValueTypes.hex, _styleValueTypes.rgba, _styleValueTypes.hsla];\n  var getColorType = v => colorTypes.find(type => type.test(v));\n  var notAnimatable = color => `'${color}' is not an animatable color. Use the equivalent color code instead.`;\n  var mixColor = (from, to) => {\n    var fromColorType = getColorType(from);\n    var toColorType = getColorType(to);\n    (0, _heyListen.invariant)(!!fromColorType, notAnimatable(from));\n    (0, _heyListen.invariant)(!!toColorType, notAnimatable(to));\n    var fromColor = fromColorType.parse(from);\n    var toColor = toColorType.parse(to);\n    if (fromColorType === _styleValueTypes.hsla) {\n      fromColor = (0, _hslaToRgbaMjs.hslaToRgba)(fromColor);\n      fromColorType = _styleValueTypes.rgba;\n    }\n    if (toColorType === _styleValueTypes.hsla) {\n      toColor = (0, _hslaToRgbaMjs.hslaToRgba)(toColor);\n      toColorType = _styleValueTypes.rgba;\n    }\n    var blended = Object.assign({}, fromColor);\n    return v => {\n      for (var key in blended) {\n        if (key !== \"alpha\") {\n          blended[key] = mixLinearColor(fromColor[key], toColor[key], v);\n        }\n      }\n      blended.alpha = (0, _mixMjs.mix)(fromColor.alpha, toColor.alpha, v);\n      return fromColorType.transform(blended);\n    };\n  };\n});","lineCount":57,"map":[[7,2,41,0,"Object"],[7,8,41,0],[7,9,41,0,"defineProperty"],[7,23,41,0],[7,24,41,0,"exports"],[7,31,41,0],[8,4,41,0,"enumerable"],[8,14,41,0],[9,4,41,0,"get"],[9,7,41,0],[9,18,41,0,"get"],[9,19,41,0],[10,6,41,0],[10,13,41,9,"mixColor"],[10,21,41,17],[11,4,41,17],[12,2,41,17],[13,2,41,0,"Object"],[13,8,41,0],[13,9,41,0,"defineProperty"],[13,23,41,0],[13,24,41,0,"exports"],[13,31,41,0],[14,4,41,0,"enumerable"],[14,14,41,0],[15,4,41,0,"get"],[15,7,41,0],[15,18,41,0,"get"],[15,19,41,0],[16,6,41,0],[16,13,41,19,"mixLinearColor"],[16,27,41,33],[17,4,41,33],[18,2,41,33],[19,2,1,0],[19,6,1,0,"_mixMjs"],[19,13,1,0],[19,16,1,0,"require"],[19,23,1,0],[19,24,1,0,"_dependencyMap"],[19,38,1,0],[20,2,2,0],[20,6,2,0,"_styleValueTypes"],[20,22,2,0],[20,25,2,0,"require"],[20,32,2,0],[20,33,2,0,"_dependencyMap"],[20,47,2,0],[21,2,3,0],[21,6,3,0,"_heyListen"],[21,16,3,0],[21,19,3,0,"require"],[21,26,3,0],[21,27,3,0,"_dependencyMap"],[21,41,3,0],[22,2,4,0],[22,6,4,0,"_hslaToRgbaMjs"],[22,20,4,0],[22,23,4,0,"require"],[22,30,4,0],[22,31,4,0,"_dependencyMap"],[22,45,4,0],[23,2,6,0],[23,6,6,6,"mixLinearColor"],[23,20,6,20],[23,23,6,23,"mixLinearColor"],[23,24,6,24,"from"],[23,28,6,28],[23,30,6,30,"to"],[23,32,6,32],[23,34,6,34,"v"],[23,35,6,35],[23,40,6,40],[24,4,7,4],[24,8,7,10,"fromExpo"],[24,16,7,18],[24,19,7,21,"from"],[24,23,7,25],[24,26,7,28,"from"],[24,30,7,32],[25,4,8,4],[25,8,8,10,"toExpo"],[25,14,8,16],[25,17,8,19,"to"],[25,19,8,21],[25,22,8,24,"to"],[25,24,8,26],[26,4,9,4],[26,11,9,11,"Math"],[26,15,9,15],[26,16,9,16,"sqrt"],[26,20,9,20],[26,21,9,21,"Math"],[26,25,9,25],[26,26,9,26,"max"],[26,29,9,29],[26,30,9,30],[26,31,9,31],[26,33,9,33,"v"],[26,34,9,34],[26,38,9,38,"toExpo"],[26,44,9,44],[26,47,9,47,"fromExpo"],[26,55,9,55],[26,56,9,56],[26,59,9,59,"fromExpo"],[26,67,9,67],[26,68,9,68],[26,69,9,69],[27,2,10,0],[27,3,10,1],[28,2,11,0],[28,6,11,6,"colorTypes"],[28,16,11,16],[28,19,11,19],[28,20,11,20,"hex"],[28,36,11,23],[28,37,11,23,"hex"],[28,40,11,23],[28,42,11,25,"rgba"],[28,58,11,29],[28,59,11,29,"rgba"],[28,63,11,29],[28,65,11,31,"hsla"],[28,81,11,35],[28,82,11,35,"hsla"],[28,86,11,35],[28,87,11,36],[29,2,12,0],[29,6,12,6,"getColorType"],[29,18,12,18],[29,21,12,22,"v"],[29,22,12,23],[29,26,12,28,"colorTypes"],[29,36,12,38],[29,37,12,39,"find"],[29,41,12,43],[29,42,12,45,"type"],[29,46,12,49],[29,50,12,54,"type"],[29,54,12,58],[29,55,12,59,"test"],[29,59,12,63],[29,60,12,64,"v"],[29,61,12,65],[29,62,12,66],[29,63,12,67],[30,2,13,0],[30,6,13,6,"notAnimatable"],[30,19,13,19],[30,22,13,23,"color"],[30,27,13,28],[30,31,13,33],[30,35,13,37,"color"],[30,40,13,42],[30,110,13,112],[31,2,14,0],[31,6,14,6,"mixColor"],[31,14,14,14],[31,17,14,17,"mixColor"],[31,18,14,18,"from"],[31,22,14,22],[31,24,14,24,"to"],[31,26,14,26],[31,31,14,31],[32,4,15,4],[32,8,15,8,"fromColorType"],[32,21,15,21],[32,24,15,24,"getColorType"],[32,36,15,36],[32,37,15,37,"from"],[32,41,15,41],[32,42,15,42],[33,4,16,4],[33,8,16,8,"toColorType"],[33,19,16,19],[33,22,16,22,"getColorType"],[33,34,16,34],[33,35,16,35,"to"],[33,37,16,37],[33,38,16,38],[34,4,17,4],[34,8,17,4,"invariant"],[34,18,17,13],[34,19,17,13,"invariant"],[34,28,17,13],[34,30,17,14],[34,31,17,15],[34,32,17,16,"fromColorType"],[34,45,17,29],[34,47,17,31,"notAnimatable"],[34,60,17,44],[34,61,17,45,"from"],[34,65,17,49],[34,66,17,50],[34,67,17,51],[35,4,18,4],[35,8,18,4,"invariant"],[35,18,18,13],[35,19,18,13,"invariant"],[35,28,18,13],[35,30,18,14],[35,31,18,15],[35,32,18,16,"toColorType"],[35,43,18,27],[35,45,18,29,"notAnimatable"],[35,58,18,42],[35,59,18,43,"to"],[35,61,18,45],[35,62,18,46],[35,63,18,47],[36,4,19,4],[36,8,19,8,"fromColor"],[36,17,19,17],[36,20,19,20,"fromColorType"],[36,33,19,33],[36,34,19,34,"parse"],[36,39,19,39],[36,40,19,40,"from"],[36,44,19,44],[36,45,19,45],[37,4,20,4],[37,8,20,8,"toColor"],[37,15,20,15],[37,18,20,18,"toColorType"],[37,29,20,29],[37,30,20,30,"parse"],[37,35,20,35],[37,36,20,36,"to"],[37,38,20,38],[37,39,20,39],[38,4,21,4],[38,8,21,8,"fromColorType"],[38,21,21,21],[38,26,21,26,"hsla"],[38,42,21,30],[38,43,21,30,"hsla"],[38,47,21,30],[38,49,21,32],[39,6,22,8,"fromColor"],[39,15,22,17],[39,18,22,20],[39,22,22,20,"hslaToRgba"],[39,36,22,30],[39,37,22,30,"hslaToRgba"],[39,47,22,30],[39,49,22,31,"fromColor"],[39,58,22,40],[39,59,22,41],[40,6,23,8,"fromColorType"],[40,19,23,21],[40,22,23,24,"rgba"],[40,38,23,28],[40,39,23,28,"rgba"],[40,43,23,28],[41,4,24,4],[42,4,25,4],[42,8,25,8,"toColorType"],[42,19,25,19],[42,24,25,24,"hsla"],[42,40,25,28],[42,41,25,28,"hsla"],[42,45,25,28],[42,47,25,30],[43,6,26,8,"toColor"],[43,13,26,15],[43,16,26,18],[43,20,26,18,"hslaToRgba"],[43,34,26,28],[43,35,26,28,"hslaToRgba"],[43,45,26,28],[43,47,26,29,"toColor"],[43,54,26,36],[43,55,26,37],[44,6,27,8,"toColorType"],[44,17,27,19],[44,20,27,22,"rgba"],[44,36,27,26],[44,37,27,26,"rgba"],[44,41,27,26],[45,4,28,4],[46,4,29,4],[46,8,29,10,"blended"],[46,15,29,17],[46,18,29,20,"Object"],[46,24,29,26],[46,25,29,27,"assign"],[46,31,29,33],[46,32,29,34],[46,33,29,35],[46,34,29,36],[46,36,29,38,"fromColor"],[46,45,29,47],[46,46,29,48],[47,4,30,4],[47,11,30,12,"v"],[47,12,30,13],[47,16,30,18],[48,6,31,8],[48,11,31,13],[48,15,31,19,"key"],[48,18,31,22],[48,22,31,26,"blended"],[48,29,31,33],[48,31,31,35],[49,8,32,12],[49,12,32,16,"key"],[49,15,32,19],[49,20,32,24],[49,27,32,31],[49,29,32,33],[50,10,33,16,"blended"],[50,17,33,23],[50,18,33,24,"key"],[50,21,33,27],[50,22,33,28],[50,25,33,31,"mixLinearColor"],[50,39,33,45],[50,40,33,46,"fromColor"],[50,49,33,55],[50,50,33,56,"key"],[50,53,33,59],[50,54,33,60],[50,56,33,62,"toColor"],[50,63,33,69],[50,64,33,70,"key"],[50,67,33,73],[50,68,33,74],[50,70,33,76,"v"],[50,71,33,77],[50,72,33,78],[51,8,34,12],[52,6,35,8],[53,6,36,8,"blended"],[53,13,36,15],[53,14,36,16,"alpha"],[53,19,36,21],[53,22,36,24],[53,26,36,24,"mix"],[53,33,36,27],[53,34,36,27,"mix"],[53,37,36,27],[53,39,36,28,"fromColor"],[53,48,36,37],[53,49,36,38,"alpha"],[53,54,36,43],[53,56,36,45,"toColor"],[53,63,36,52],[53,64,36,53,"alpha"],[53,69,36,58],[53,71,36,60,"v"],[53,72,36,61],[53,73,36,62],[54,6,37,8],[54,13,37,15,"fromColorType"],[54,26,37,28],[54,27,37,29,"transform"],[54,36,37,38],[54,37,37,39,"blended"],[54,44,37,46],[54,45,37,47],[55,4,38,4],[55,5,38,5],[56,2,39,0],[56,3,39,1],[57,0,39,2],[57,3]],"functionMap":{"names":["<global>","mixLinearColor","getColorType","colorTypes.find$argument_0","notAnimatable","mixColor","<anonymous>"],"mappings":"AAA;uBCK;CDI;qBEE,uBC,sBD,CF;sBIC,0FJ;iBKC;WCgB;KDQ;CLC"},"hasCjsExports":false},"type":"js/module"}]}