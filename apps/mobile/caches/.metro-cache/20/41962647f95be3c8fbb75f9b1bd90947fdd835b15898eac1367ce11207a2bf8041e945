{"dependencies":[{"name":"hey-listen","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"5p342VF2FjgsoIiIlnJV4kmYYFQ=","exportNames":["*"],"imports":1}},{"name":"../../utils/clamp.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":38},"end":{"line":2,"column":46,"index":84}}],"key":"4lYq4niBZLcSZeimalNrPfhmC9E=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"calcAngularFreq\", {\n    enumerable: true,\n    get: function () {\n      return calcAngularFreq;\n    }\n  });\n  Object.defineProperty(exports, \"findSpring\", {\n    enumerable: true,\n    get: function () {\n      return findSpring;\n    }\n  });\n  Object.defineProperty(exports, \"maxDamping\", {\n    enumerable: true,\n    get: function () {\n      return maxDamping;\n    }\n  });\n  Object.defineProperty(exports, \"maxDuration\", {\n    enumerable: true,\n    get: function () {\n      return maxDuration;\n    }\n  });\n  Object.defineProperty(exports, \"minDamping\", {\n    enumerable: true,\n    get: function () {\n      return minDamping;\n    }\n  });\n  Object.defineProperty(exports, \"minDuration\", {\n    enumerable: true,\n    get: function () {\n      return minDuration;\n    }\n  });\n  var _heyListen = require(_dependencyMap[0], \"hey-listen\");\n  var _utilsClampMjs = require(_dependencyMap[1], \"../../utils/clamp.mjs\");\n  var safeMin = 0.001;\n  var minDuration = 0.01;\n  var maxDuration = 10.0;\n  var minDamping = 0.05;\n  var maxDamping = 1;\n  function findSpring(_ref) {\n    var _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 800 : _ref$duration,\n      _ref$bounce = _ref.bounce,\n      bounce = _ref$bounce === void 0 ? 0.25 : _ref$bounce,\n      _ref$velocity = _ref.velocity,\n      velocity = _ref$velocity === void 0 ? 0 : _ref$velocity,\n      _ref$mass = _ref.mass,\n      mass = _ref$mass === void 0 ? 1 : _ref$mass;\n    var envelope;\n    var derivative;\n    (0, _heyListen.warning)(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    var dampingRatio = 1 - bounce;\n    dampingRatio = (0, _utilsClampMjs.clamp)(minDamping, maxDamping, dampingRatio);\n    duration = (0, _utilsClampMjs.clamp)(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n      envelope = undampedFreq => {\n        var exponentialDecay = undampedFreq * dampingRatio;\n        var delta = exponentialDecay * duration;\n        var a = exponentialDecay - velocity;\n        var b = calcAngularFreq(undampedFreq, dampingRatio);\n        var c = Math.exp(-delta);\n        return safeMin - a / b * c;\n      };\n      derivative = undampedFreq => {\n        var exponentialDecay = undampedFreq * dampingRatio;\n        var delta = exponentialDecay * duration;\n        var d = delta * velocity + velocity;\n        var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n        var f = Math.exp(-delta);\n        var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n        var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n        return factor * ((d - e) * f) / g;\n      };\n    } else {\n      envelope = undampedFreq => {\n        var a = Math.exp(-undampedFreq * duration);\n        var b = (undampedFreq - velocity) * duration + 1;\n        return -safeMin + a * b;\n      };\n      derivative = undampedFreq => {\n        var a = Math.exp(-undampedFreq * duration);\n        var b = (velocity - undampedFreq) * (duration * duration);\n        return a * b;\n      };\n    }\n    var initialGuess = 5 / duration;\n    var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n      return {\n        stiffness: 100,\n        damping: 10,\n        duration\n      };\n    } else {\n      var stiffness = Math.pow(undampedFreq, 2) * mass;\n      return {\n        stiffness,\n        damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n        duration\n      };\n    }\n  }\n  var rootIterations = 12;\n  function approximateRoot(envelope, derivative, initialGuess) {\n    var result = initialGuess;\n    for (var i = 1; i < rootIterations; i++) {\n      result = result - envelope(result) / derivative(result);\n    }\n    return result;\n  }\n  function calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n  }\n});","lineCount":125,"map":[[7,2,79,0,"Object"],[7,8,79,0],[7,9,79,0,"defineProperty"],[7,23,79,0],[7,24,79,0,"exports"],[7,31,79,0],[8,4,79,0,"enumerable"],[8,14,79,0],[9,4,79,0,"get"],[9,7,79,0],[9,18,79,0,"get"],[9,19,79,0],[10,6,79,0],[10,13,79,9,"calcAngularFreq"],[10,28,79,24],[11,4,79,24],[12,2,79,24],[13,2,79,0,"Object"],[13,8,79,0],[13,9,79,0,"defineProperty"],[13,23,79,0],[13,24,79,0,"exports"],[13,31,79,0],[14,4,79,0,"enumerable"],[14,14,79,0],[15,4,79,0,"get"],[15,7,79,0],[15,18,79,0,"get"],[15,19,79,0],[16,6,79,0],[16,13,79,26,"findSpring"],[16,23,79,36],[17,4,79,36],[18,2,79,36],[19,2,79,0,"Object"],[19,8,79,0],[19,9,79,0,"defineProperty"],[19,23,79,0],[19,24,79,0,"exports"],[19,31,79,0],[20,4,79,0,"enumerable"],[20,14,79,0],[21,4,79,0,"get"],[21,7,79,0],[21,18,79,0,"get"],[21,19,79,0],[22,6,79,0],[22,13,79,38,"maxDamping"],[22,23,79,48],[23,4,79,48],[24,2,79,48],[25,2,79,0,"Object"],[25,8,79,0],[25,9,79,0,"defineProperty"],[25,23,79,0],[25,24,79,0,"exports"],[25,31,79,0],[26,4,79,0,"enumerable"],[26,14,79,0],[27,4,79,0,"get"],[27,7,79,0],[27,18,79,0,"get"],[27,19,79,0],[28,6,79,0],[28,13,79,50,"maxDuration"],[28,24,79,61],[29,4,79,61],[30,2,79,61],[31,2,79,0,"Object"],[31,8,79,0],[31,9,79,0,"defineProperty"],[31,23,79,0],[31,24,79,0,"exports"],[31,31,79,0],[32,4,79,0,"enumerable"],[32,14,79,0],[33,4,79,0,"get"],[33,7,79,0],[33,18,79,0,"get"],[33,19,79,0],[34,6,79,0],[34,13,79,63,"minDamping"],[34,23,79,73],[35,4,79,73],[36,2,79,73],[37,2,79,0,"Object"],[37,8,79,0],[37,9,79,0,"defineProperty"],[37,23,79,0],[37,24,79,0,"exports"],[37,31,79,0],[38,4,79,0,"enumerable"],[38,14,79,0],[39,4,79,0,"get"],[39,7,79,0],[39,18,79,0,"get"],[39,19,79,0],[40,6,79,0],[40,13,79,75,"minDuration"],[40,24,79,86],[41,4,79,86],[42,2,79,86],[43,2,1,0],[43,6,1,0,"_heyListen"],[43,16,1,0],[43,19,1,0,"require"],[43,26,1,0],[43,27,1,0,"_dependencyMap"],[43,41,1,0],[44,2,2,0],[44,6,2,0,"_utilsClampMjs"],[44,20,2,0],[44,23,2,0,"require"],[44,30,2,0],[44,31,2,0,"_dependencyMap"],[44,45,2,0],[45,2,4,0],[45,6,4,6,"safeMin"],[45,13,4,13],[45,16,4,16],[45,21,4,21],[46,2,5,0],[46,6,5,6,"minDuration"],[46,17,5,17],[46,20,5,20],[46,24,5,24],[47,2,6,0],[47,6,6,6,"maxDuration"],[47,17,6,17],[47,20,6,20],[47,24,6,24],[48,2,7,0],[48,6,7,6,"minDamping"],[48,16,7,16],[48,19,7,19],[48,23,7,23],[49,2,8,0],[49,6,8,6,"maxDamping"],[49,16,8,16],[49,19,8,19],[49,20,8,20],[50,2,9,0],[50,11,9,9,"findSpring"],[50,21,9,19,"findSpring"],[50,22,9,19,"_ref"],[50,26,9,19],[50,28,9,80],[51,4,9,80],[51,8,9,80,"_ref$duration"],[51,21,9,80],[51,24,9,80,"_ref"],[51,28,9,80],[51,29,9,22,"duration"],[51,37,9,30],[52,6,9,22,"duration"],[52,14,9,30],[52,17,9,30,"_ref$duration"],[52,30,9,30],[52,44,9,33],[52,47,9,36],[52,50,9,36,"_ref$duration"],[52,63,9,36],[53,6,9,36,"_ref$bounce"],[53,17,9,36],[53,20,9,36,"_ref"],[53,24,9,36],[53,25,9,38,"bounce"],[53,31,9,44],[54,6,9,38,"bounce"],[54,12,9,44],[54,15,9,44,"_ref$bounce"],[54,26,9,44],[54,40,9,47],[54,44,9,51],[54,47,9,51,"_ref$bounce"],[54,58,9,51],[55,6,9,51,"_ref$velocity"],[55,19,9,51],[55,22,9,51,"_ref"],[55,26,9,51],[55,27,9,53,"velocity"],[55,35,9,61],[56,6,9,53,"velocity"],[56,14,9,61],[56,17,9,61,"_ref$velocity"],[56,30,9,61],[56,44,9,64],[56,45,9,65],[56,48,9,65,"_ref$velocity"],[56,61,9,65],[57,6,9,65,"_ref$mass"],[57,15,9,65],[57,18,9,65,"_ref"],[57,22,9,65],[57,23,9,67,"mass"],[57,27,9,71],[58,6,9,67,"mass"],[58,10,9,71],[58,13,9,71,"_ref$mass"],[58,22,9,71],[58,36,9,74],[58,37,9,75],[58,40,9,75,"_ref$mass"],[58,49,9,75],[59,4,10,4],[59,8,10,8,"envelope"],[59,16,10,16],[60,4,11,4],[60,8,11,8,"derivative"],[60,18,11,18],[61,4,12,4],[61,8,12,4,"warning"],[61,18,12,11],[61,19,12,11,"warning"],[61,26,12,11],[61,28,12,12,"duration"],[61,36,12,20],[61,40,12,24,"maxDuration"],[61,51,12,35],[61,54,12,38],[61,58,12,42],[61,60,12,44],[61,104,12,88],[61,105,12,89],[62,4,13,4],[62,8,13,8,"dampingRatio"],[62,20,13,20],[62,23,13,23],[62,24,13,24],[62,27,13,27,"bounce"],[62,33,13,33],[63,4,14,4,"dampingRatio"],[63,16,14,16],[63,19,14,19],[63,23,14,19,"clamp"],[63,37,14,24],[63,38,14,24,"clamp"],[63,43,14,24],[63,45,14,25,"minDamping"],[63,55,14,35],[63,57,14,37,"maxDamping"],[63,67,14,47],[63,69,14,49,"dampingRatio"],[63,81,14,61],[63,82,14,62],[64,4,15,4,"duration"],[64,12,15,12],[64,15,15,15],[64,19,15,15,"clamp"],[64,33,15,20],[64,34,15,20,"clamp"],[64,39,15,20],[64,41,15,21,"minDuration"],[64,52,15,32],[64,54,15,34,"maxDuration"],[64,65,15,45],[64,67,15,47,"duration"],[64,75,15,55],[64,78,15,58],[64,82,15,62],[64,83,15,63],[65,4,16,4],[65,8,16,8,"dampingRatio"],[65,20,16,20],[65,23,16,23],[65,24,16,24],[65,26,16,26],[66,6,17,8,"envelope"],[66,14,17,16],[66,17,17,20,"undampedFreq"],[66,29,17,32],[66,33,17,37],[67,8,18,12],[67,12,18,18,"exponentialDecay"],[67,28,18,34],[67,31,18,37,"undampedFreq"],[67,43,18,49],[67,46,18,52,"dampingRatio"],[67,58,18,64],[68,8,19,12],[68,12,19,18,"delta"],[68,17,19,23],[68,20,19,26,"exponentialDecay"],[68,36,19,42],[68,39,19,45,"duration"],[68,47,19,53],[69,8,20,12],[69,12,20,18,"a"],[69,13,20,19],[69,16,20,22,"exponentialDecay"],[69,32,20,38],[69,35,20,41,"velocity"],[69,43,20,49],[70,8,21,12],[70,12,21,18,"b"],[70,13,21,19],[70,16,21,22,"calcAngularFreq"],[70,31,21,37],[70,32,21,38,"undampedFreq"],[70,44,21,50],[70,46,21,52,"dampingRatio"],[70,58,21,64],[70,59,21,65],[71,8,22,12],[71,12,22,18,"c"],[71,13,22,19],[71,16,22,22,"Math"],[71,20,22,26],[71,21,22,27,"exp"],[71,24,22,30],[71,25,22,31],[71,26,22,32,"delta"],[71,31,22,37],[71,32,22,38],[72,8,23,12],[72,15,23,19,"safeMin"],[72,22,23,26],[72,25,23,30,"a"],[72,26,23,31],[72,29,23,34,"b"],[72,30,23,35],[72,33,23,39,"c"],[72,34,23,40],[73,6,24,8],[73,7,24,9],[74,6,25,8,"derivative"],[74,16,25,18],[74,19,25,22,"undampedFreq"],[74,31,25,34],[74,35,25,39],[75,8,26,12],[75,12,26,18,"exponentialDecay"],[75,28,26,34],[75,31,26,37,"undampedFreq"],[75,43,26,49],[75,46,26,52,"dampingRatio"],[75,58,26,64],[76,8,27,12],[76,12,27,18,"delta"],[76,17,27,23],[76,20,27,26,"exponentialDecay"],[76,36,27,42],[76,39,27,45,"duration"],[76,47,27,53],[77,8,28,12],[77,12,28,18,"d"],[77,13,28,19],[77,16,28,22,"delta"],[77,21,28,27],[77,24,28,30,"velocity"],[77,32,28,38],[77,35,28,41,"velocity"],[77,43,28,49],[78,8,29,12],[78,12,29,18,"e"],[78,13,29,19],[78,16,29,22,"Math"],[78,20,29,26],[78,21,29,27,"pow"],[78,24,29,30],[78,25,29,31,"dampingRatio"],[78,37,29,43],[78,39,29,45],[78,40,29,46],[78,41,29,47],[78,44,29,50,"Math"],[78,48,29,54],[78,49,29,55,"pow"],[78,52,29,58],[78,53,29,59,"undampedFreq"],[78,65,29,71],[78,67,29,73],[78,68,29,74],[78,69,29,75],[78,72,29,78,"duration"],[78,80,29,86],[79,8,30,12],[79,12,30,18,"f"],[79,13,30,19],[79,16,30,22,"Math"],[79,20,30,26],[79,21,30,27,"exp"],[79,24,30,30],[79,25,30,31],[79,26,30,32,"delta"],[79,31,30,37],[79,32,30,38],[80,8,31,12],[80,12,31,18,"g"],[80,13,31,19],[80,16,31,22,"calcAngularFreq"],[80,31,31,37],[80,32,31,38,"Math"],[80,36,31,42],[80,37,31,43,"pow"],[80,40,31,46],[80,41,31,47,"undampedFreq"],[80,53,31,59],[80,55,31,61],[80,56,31,62],[80,57,31,63],[80,59,31,65,"dampingRatio"],[80,71,31,77],[80,72,31,78],[81,8,32,12],[81,12,32,18,"factor"],[81,18,32,24],[81,21,32,27],[81,22,32,28,"envelope"],[81,30,32,36],[81,31,32,37,"undampedFreq"],[81,43,32,49],[81,44,32,50],[81,47,32,53,"safeMin"],[81,54,32,60],[81,57,32,63],[81,58,32,64],[81,61,32,67],[81,62,32,68],[81,63,32,69],[81,66,32,72],[81,67,32,73],[82,8,33,12],[82,15,33,20,"factor"],[82,21,33,26],[82,25,33,30],[82,26,33,31,"d"],[82,27,33,32],[82,30,33,35,"e"],[82,31,33,36],[82,35,33,40,"f"],[82,36,33,41],[82,37,33,42],[82,40,33,46,"g"],[82,41,33,47],[83,6,34,8],[83,7,34,9],[84,4,35,4],[84,5,35,5],[84,11,36,9],[85,6,37,8,"envelope"],[85,14,37,16],[85,17,37,20,"undampedFreq"],[85,29,37,32],[85,33,37,37],[86,8,38,12],[86,12,38,18,"a"],[86,13,38,19],[86,16,38,22,"Math"],[86,20,38,26],[86,21,38,27,"exp"],[86,24,38,30],[86,25,38,31],[86,26,38,32,"undampedFreq"],[86,38,38,44],[86,41,38,47,"duration"],[86,49,38,55],[86,50,38,56],[87,8,39,12],[87,12,39,18,"b"],[87,13,39,19],[87,16,39,22],[87,17,39,23,"undampedFreq"],[87,29,39,35],[87,32,39,38,"velocity"],[87,40,39,46],[87,44,39,50,"duration"],[87,52,39,58],[87,55,39,61],[87,56,39,62],[88,8,40,12],[88,15,40,19],[88,16,40,20,"safeMin"],[88,23,40,27],[88,26,40,30,"a"],[88,27,40,31],[88,30,40,34,"b"],[88,31,40,35],[89,6,41,8],[89,7,41,9],[90,6,42,8,"derivative"],[90,16,42,18],[90,19,42,22,"undampedFreq"],[90,31,42,34],[90,35,42,39],[91,8,43,12],[91,12,43,18,"a"],[91,13,43,19],[91,16,43,22,"Math"],[91,20,43,26],[91,21,43,27,"exp"],[91,24,43,30],[91,25,43,31],[91,26,43,32,"undampedFreq"],[91,38,43,44],[91,41,43,47,"duration"],[91,49,43,55],[91,50,43,56],[92,8,44,12],[92,12,44,18,"b"],[92,13,44,19],[92,16,44,22],[92,17,44,23,"velocity"],[92,25,44,31],[92,28,44,34,"undampedFreq"],[92,40,44,46],[92,45,44,51,"duration"],[92,53,44,59],[92,56,44,62,"duration"],[92,64,44,70],[92,65,44,71],[93,8,45,12],[93,15,45,19,"a"],[93,16,45,20],[93,19,45,23,"b"],[93,20,45,24],[94,6,46,8],[94,7,46,9],[95,4,47,4],[96,4,48,4],[96,8,48,10,"initialGuess"],[96,20,48,22],[96,23,48,25],[96,24,48,26],[96,27,48,29,"duration"],[96,35,48,37],[97,4,49,4],[97,8,49,10,"undampedFreq"],[97,20,49,22],[97,23,49,25,"approximateRoot"],[97,38,49,40],[97,39,49,41,"envelope"],[97,47,49,49],[97,49,49,51,"derivative"],[97,59,49,61],[97,61,49,63,"initialGuess"],[97,73,49,75],[97,74,49,76],[98,4,50,4,"duration"],[98,12,50,12],[98,15,50,15,"duration"],[98,23,50,23],[98,26,50,26],[98,30,50,30],[99,4,51,4],[99,8,51,8,"isNaN"],[99,13,51,13],[99,14,51,14,"undampedFreq"],[99,26,51,26],[99,27,51,27],[99,29,51,29],[100,6,52,8],[100,13,52,15],[101,8,53,12,"stiffness"],[101,17,53,21],[101,19,53,23],[101,22,53,26],[102,8,54,12,"damping"],[102,15,54,19],[102,17,54,21],[102,19,54,23],[103,8,55,12,"duration"],[104,6,56,8],[104,7,56,9],[105,4,57,4],[105,5,57,5],[105,11,58,9],[106,6,59,8],[106,10,59,14,"stiffness"],[106,19,59,23],[106,22,59,26,"Math"],[106,26,59,30],[106,27,59,31,"pow"],[106,30,59,34],[106,31,59,35,"undampedFreq"],[106,43,59,47],[106,45,59,49],[106,46,59,50],[106,47,59,51],[106,50,59,54,"mass"],[106,54,59,58],[107,6,60,8],[107,13,60,15],[108,8,61,12,"stiffness"],[108,17,61,21],[109,8,62,12,"damping"],[109,15,62,19],[109,17,62,21,"dampingRatio"],[109,29,62,33],[109,32,62,36],[109,33,62,37],[109,36,62,40,"Math"],[109,40,62,44],[109,41,62,45,"sqrt"],[109,45,62,49],[109,46,62,50,"mass"],[109,50,62,54],[109,53,62,57,"stiffness"],[109,62,62,66],[109,63,62,67],[110,8,63,12,"duration"],[111,6,64,8],[111,7,64,9],[112,4,65,4],[113,2,66,0],[114,2,67,0],[114,6,67,6,"rootIterations"],[114,20,67,20],[114,23,67,23],[114,25,67,25],[115,2,68,0],[115,11,68,9,"approximateRoot"],[115,26,68,24,"approximateRoot"],[115,27,68,25,"envelope"],[115,35,68,33],[115,37,68,35,"derivative"],[115,47,68,45],[115,49,68,47,"initialGuess"],[115,61,68,59],[115,63,68,61],[116,4,69,4],[116,8,69,8,"result"],[116,14,69,14],[116,17,69,17,"initialGuess"],[116,29,69,29],[117,4,70,4],[117,9,70,9],[117,13,70,13,"i"],[117,14,70,14],[117,17,70,17],[117,18,70,18],[117,20,70,20,"i"],[117,21,70,21],[117,24,70,24,"rootIterations"],[117,38,70,38],[117,40,70,40,"i"],[117,41,70,41],[117,43,70,43],[117,45,70,45],[118,6,71,8,"result"],[118,12,71,14],[118,15,71,17,"result"],[118,21,71,23],[118,24,71,26,"envelope"],[118,32,71,34],[118,33,71,35,"result"],[118,39,71,41],[118,40,71,42],[118,43,71,45,"derivative"],[118,53,71,55],[118,54,71,56,"result"],[118,60,71,62],[118,61,71,63],[119,4,72,4],[120,4,73,4],[120,11,73,11,"result"],[120,17,73,17],[121,2,74,0],[122,2,75,0],[122,11,75,9,"calcAngularFreq"],[122,26,75,24,"calcAngularFreq"],[122,27,75,25,"undampedFreq"],[122,39,75,37],[122,41,75,39,"dampingRatio"],[122,53,75,51],[122,55,75,53],[123,4,76,4],[123,11,76,11,"undampedFreq"],[123,23,76,23],[123,26,76,26,"Math"],[123,30,76,30],[123,31,76,31,"sqrt"],[123,35,76,35],[123,36,76,36],[123,37,76,37],[123,40,76,40,"dampingRatio"],[123,52,76,52],[123,55,76,55,"dampingRatio"],[123,67,76,67],[123,68,76,68],[124,2,77,0],[125,0,77,1],[125,3]],"functionMap":{"names":["<global>","findSpring","envelope","derivative","approximateRoot","calcAngularFreq"],"mappings":"AAA;ACQ;mBCQ;SDO;qBEC;SFS;mBCG;SDI;qBEC;SFI;CDoB;AIE;CJM;AKC;CLE"},"hasCjsExports":false},"type":"js/module"}]}