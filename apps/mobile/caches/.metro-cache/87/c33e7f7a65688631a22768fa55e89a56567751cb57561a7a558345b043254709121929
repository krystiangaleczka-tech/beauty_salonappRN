{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":44},"end":{"line":4,"column":31,"index":75}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@tanstack/query-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":76},"end":{"line":5,"column":47,"index":123}}],"key":"GAsr4MDTe9ve1mRxgvML4iY2BZg=","exportNames":["*"],"imports":1}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":124},"end":{"line":6,"column":58,"index":182}}],"key":"R2Cn87b3k6V9pZdY+hWd8Ft8C58=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/HydrationBoundary.tsx\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"HydrationBoundary\", {\n    enumerable: true,\n    get: function () {\n      return HydrationBoundary;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _tanstackQueryCore = require(_dependencyMap[1], \"@tanstack/query-core\");\n  var _QueryClientProviderJs = require(_dependencyMap[2], \"./QueryClientProvider.js\");\n  var hasProperty = (obj, key) => {\n    return typeof obj === \"object\" && obj !== null && key in obj;\n  };\n  var HydrationBoundary = ({\n    children,\n    options = {},\n    state,\n    queryClient\n  }) => {\n    const client = (0, _QueryClientProviderJs.useQueryClient)(queryClient);\n    const [hydrationQueue, setHydrationQueue] = React.useState();\n    const optionsRef = React.useRef(options);\n    optionsRef.current = options;\n    React.useMemo(() => {\n      if (state) {\n        if (typeof state !== \"object\") {\n          return;\n        }\n        const queryCache = client.getQueryCache();\n        const queries = state.queries || [];\n        const newQueries = [];\n        const existingQueries = [];\n        for (const dehydratedQuery of queries) {\n          const existingQuery = queryCache.get(dehydratedQuery.queryHash);\n          if (!existingQuery) {\n            newQueries.push(dehydratedQuery);\n          } else {\n            const hydrationIsNewer = dehydratedQuery.state.dataUpdatedAt > existingQuery.state.dataUpdatedAt ||\n            // RSC special serialized then-able chunks\n            hasProperty(dehydratedQuery.promise, \"status\") && hasProperty(existingQuery.promise, \"status\") && dehydratedQuery.promise.status !== existingQuery.promise.status;\n            const queryAlreadyQueued = hydrationQueue?.find(query => query.queryHash === dehydratedQuery.queryHash);\n            if (hydrationIsNewer && (!queryAlreadyQueued || dehydratedQuery.state.dataUpdatedAt > queryAlreadyQueued.state.dataUpdatedAt)) {\n              existingQueries.push(dehydratedQuery);\n            }\n          }\n        }\n        if (newQueries.length > 0) {\n          (0, _tanstackQueryCore.hydrate)(client, {\n            queries: newQueries\n          }, optionsRef.current);\n        }\n        if (existingQueries.length > 0) {\n          setHydrationQueue(prev => prev ? [...prev, ...existingQueries] : existingQueries);\n        }\n      }\n    }, [client, hydrationQueue, state]);\n    React.useEffect(() => {\n      if (hydrationQueue) {\n        (0, _tanstackQueryCore.hydrate)(client, {\n          queries: hydrationQueue\n        }, optionsRef.current);\n        setHydrationQueue(void 0);\n      }\n    }, [client, hydrationQueue]);\n    return children;\n  };\n});","lineCount":91,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"value"],[8,9,3,0],[9,2,3,0],[10,2,3,0],[10,11,3,0,"_interopNamespace"],[10,29,3,0,"e"],[10,30,3,0],[11,4,3,0],[11,8,3,0,"e"],[11,9,3,0],[11,13,3,0,"e"],[11,14,3,0],[11,15,3,0,"__esModule"],[11,25,3,0],[11,34,3,0,"e"],[11,35,3,0],[12,4,3,0],[12,8,3,0,"n"],[12,9,3,0],[13,4,3,0],[13,8,3,0,"e"],[13,9,3,0],[13,11,3,0,"Object"],[13,17,3,0],[13,18,3,0,"keys"],[13,22,3,0],[13,23,3,0,"e"],[13,24,3,0],[13,26,3,0,"forEach"],[13,33,3,0],[13,44,3,0,"k"],[13,45,3,0],[14,6,3,0],[14,10,3,0,"d"],[14,11,3,0],[14,14,3,0,"Object"],[14,20,3,0],[14,21,3,0,"getOwnPropertyDescriptor"],[14,45,3,0],[14,46,3,0,"e"],[14,47,3,0],[14,49,3,0,"k"],[14,50,3,0],[15,6,3,0,"Object"],[15,12,3,0],[15,13,3,0,"defineProperty"],[15,27,3,0],[15,28,3,0,"n"],[15,29,3,0],[15,31,3,0,"k"],[15,32,3,0],[15,34,3,0,"d"],[15,35,3,0],[15,36,3,0,"get"],[15,39,3,0],[15,42,3,0,"d"],[15,43,3,0],[16,8,3,0,"enumerable"],[16,18,3,0],[17,8,3,0,"get"],[17,11,3,0],[17,22,3,0,"get"],[17,23,3,0],[18,10,3,0],[18,17,3,0,"e"],[18,18,3,0],[18,19,3,0,"k"],[18,20,3,0],[19,8,3,0],[20,6,3,0],[21,4,3,0],[22,4,3,0,"n"],[22,5,3,0],[22,6,3,0,"default"],[22,13,3,0],[22,16,3,0,"e"],[22,17,3,0],[23,4,3,0],[23,11,3,0,"n"],[23,12,3,0],[24,2,3,0],[25,2,62,0,"Object"],[25,8,62,0],[25,9,62,0,"defineProperty"],[25,23,62,0],[25,24,62,0,"exports"],[25,31,62,0],[26,4,62,0,"enumerable"],[26,14,62,0],[27,4,62,0,"get"],[27,7,62,0],[27,18,62,0,"get"],[27,19,62,0],[28,6,62,0],[28,13,63,2,"HydrationBoundary"],[28,30,63,19],[29,4,63,19],[30,2,63,19],[31,2,4,0],[31,6,4,0,"_react"],[31,12,4,0],[31,15,4,0,"require"],[31,22,4,0],[31,23,4,0,"_dependencyMap"],[31,37,4,0],[32,2,4,0],[32,6,4,0,"React"],[32,11,4,0],[32,14,4,0,"_interopNamespace"],[32,31,4,0],[32,32,4,0,"_react"],[32,38,4,0],[33,2,5,0],[33,6,5,0,"_tanstackQueryCore"],[33,24,5,0],[33,27,5,0,"require"],[33,34,5,0],[33,35,5,0,"_dependencyMap"],[33,49,5,0],[34,2,6,0],[34,6,6,0,"_QueryClientProviderJs"],[34,28,6,0],[34,31,6,0,"require"],[34,38,6,0],[34,39,6,0,"_dependencyMap"],[34,53,6,0],[35,2,7,0],[35,6,7,4,"hasProperty"],[35,17,7,15],[35,20,7,18,"hasProperty"],[35,21,7,19,"obj"],[35,24,7,22],[35,26,7,24,"key"],[35,29,7,27],[35,34,7,32],[36,4,8,2],[36,11,8,9],[36,18,8,16,"obj"],[36,21,8,19],[36,26,8,24],[36,34,8,32],[36,38,8,36,"obj"],[36,41,8,39],[36,46,8,44],[36,50,8,48],[36,54,8,52,"key"],[36,57,8,55],[36,61,8,59,"obj"],[36,64,8,62],[37,2,9,0],[37,3,9,1],[38,2,10,0],[38,6,10,4,"HydrationBoundary"],[38,23,10,21],[38,26,10,24,"HydrationBoundary"],[38,27,10,25],[39,4,11,2,"children"],[39,12,11,10],[40,4,12,2,"options"],[40,11,12,9],[40,14,12,12],[40,15,12,13],[40,16,12,14],[41,4,13,2,"state"],[41,9,13,7],[42,4,14,2,"queryClient"],[43,2,15,0],[43,3,15,1],[43,8,15,6],[44,4,16,2],[44,10,16,8,"client"],[44,16,16,14],[44,19,16,17],[44,23,16,17,"useQueryClient"],[44,45,16,31],[44,46,16,31,"useQueryClient"],[44,60,16,31],[44,62,16,32,"queryClient"],[44,73,16,43],[44,74,16,44],[45,4,17,2],[45,10,17,8],[45,11,17,9,"hydrationQueue"],[45,25,17,23],[45,27,17,25,"setHydrationQueue"],[45,44,17,42],[45,45,17,43],[45,48,17,46,"React"],[45,53,17,51],[45,54,17,52,"useState"],[45,62,17,60],[45,63,17,61],[45,64,17,62],[46,4,18,2],[46,10,18,8,"optionsRef"],[46,20,18,18],[46,23,18,21,"React"],[46,28,18,26],[46,29,18,27,"useRef"],[46,35,18,33],[46,36,18,34,"options"],[46,43,18,41],[46,44,18,42],[47,4,19,2,"optionsRef"],[47,14,19,12],[47,15,19,13,"current"],[47,22,19,20],[47,25,19,23,"options"],[47,32,19,30],[48,4,20,2,"React"],[48,9,20,7],[48,10,20,8,"useMemo"],[48,17,20,15],[48,18,20,16],[48,24,20,22],[49,6,21,4],[49,10,21,8,"state"],[49,15,21,13],[49,17,21,15],[50,8,22,6],[50,12,22,10],[50,19,22,17,"state"],[50,24,22,22],[50,29,22,27],[50,37,22,35],[50,39,22,37],[51,10,23,8],[52,8,24,6],[53,8,25,6],[53,14,25,12,"queryCache"],[53,24,25,22],[53,27,25,25,"client"],[53,33,25,31],[53,34,25,32,"getQueryCache"],[53,47,25,45],[53,48,25,46],[53,49,25,47],[54,8,26,6],[54,14,26,12,"queries"],[54,21,26,19],[54,24,26,22,"state"],[54,29,26,27],[54,30,26,28,"queries"],[54,37,26,35],[54,41,26,39],[54,43,26,41],[55,8,27,6],[55,14,27,12,"newQueries"],[55,24,27,22],[55,27,27,25],[55,29,27,27],[56,8,28,6],[56,14,28,12,"existingQueries"],[56,29,28,27],[56,32,28,30],[56,34,28,32],[57,8,29,6],[57,13,29,11],[57,19,29,17,"dehydratedQuery"],[57,34,29,32],[57,38,29,36,"queries"],[57,45,29,43],[57,47,29,45],[58,10,30,8],[58,16,30,14,"existingQuery"],[58,29,30,27],[58,32,30,30,"queryCache"],[58,42,30,40],[58,43,30,41,"get"],[58,46,30,44],[58,47,30,45,"dehydratedQuery"],[58,62,30,60],[58,63,30,61,"queryHash"],[58,72,30,70],[58,73,30,71],[59,10,31,8],[59,14,31,12],[59,15,31,13,"existingQuery"],[59,28,31,26],[59,30,31,28],[60,12,32,10,"newQueries"],[60,22,32,20],[60,23,32,21,"push"],[60,27,32,25],[60,28,32,26,"dehydratedQuery"],[60,43,32,41],[60,44,32,42],[61,10,33,8],[61,11,33,9],[61,17,33,15],[62,12,34,10],[62,18,34,16,"hydrationIsNewer"],[62,34,34,32],[62,37,34,35,"dehydratedQuery"],[62,52,34,50],[62,53,34,51,"state"],[62,58,34,56],[62,59,34,57,"dataUpdatedAt"],[62,72,34,70],[62,75,34,73,"existingQuery"],[62,88,34,86],[62,89,34,87,"state"],[62,94,34,92],[62,95,34,93,"dataUpdatedAt"],[62,108,34,106],[63,12,34,110],[64,12,35,10,"hasProperty"],[64,23,35,21],[64,24,35,22,"dehydratedQuery"],[64,39,35,37],[64,40,35,38,"promise"],[64,47,35,45],[64,49,35,47],[64,57,35,55],[64,58,35,56],[64,62,35,60,"hasProperty"],[64,73,35,71],[64,74,35,72,"existingQuery"],[64,87,35,85],[64,88,35,86,"promise"],[64,95,35,93],[64,97,35,95],[64,105,35,103],[64,106,35,104],[64,110,35,108,"dehydratedQuery"],[64,125,35,123],[64,126,35,124,"promise"],[64,133,35,131],[64,134,35,132,"status"],[64,140,35,138],[64,145,35,143,"existingQuery"],[64,158,35,156],[64,159,35,157,"promise"],[64,166,35,164],[64,167,35,165,"status"],[64,173,35,171],[65,12,36,10],[65,18,36,16,"queryAlreadyQueued"],[65,36,36,34],[65,39,36,37,"hydrationQueue"],[65,53,36,51],[65,55,36,53,"find"],[65,59,36,57],[65,60,37,13,"query"],[65,65,37,18],[65,69,37,23,"query"],[65,74,37,28],[65,75,37,29,"queryHash"],[65,84,37,38],[65,89,37,43,"dehydratedQuery"],[65,104,37,58],[65,105,37,59,"queryHash"],[65,114,38,10],[65,115,38,11],[66,12,39,10],[66,16,39,14,"hydrationIsNewer"],[66,32,39,30],[66,37,39,35],[66,38,39,36,"queryAlreadyQueued"],[66,56,39,54],[66,60,39,58,"dehydratedQuery"],[66,75,39,73],[66,76,39,74,"state"],[66,81,39,79],[66,82,39,80,"dataUpdatedAt"],[66,95,39,93],[66,98,39,96,"queryAlreadyQueued"],[66,116,39,114],[66,117,39,115,"state"],[66,122,39,120],[66,123,39,121,"dataUpdatedAt"],[66,136,39,134],[66,137,39,135],[66,139,39,137],[67,14,40,12,"existingQueries"],[67,29,40,27],[67,30,40,28,"push"],[67,34,40,32],[67,35,40,33,"dehydratedQuery"],[67,50,40,48],[67,51,40,49],[68,12,41,10],[69,10,42,8],[70,8,43,6],[71,8,44,6],[71,12,44,10,"newQueries"],[71,22,44,20],[71,23,44,21,"length"],[71,29,44,27],[71,32,44,30],[71,33,44,31],[71,35,44,33],[72,10,45,8],[72,14,45,8,"hydrate"],[72,32,45,15],[72,33,45,15,"hydrate"],[72,40,45,15],[72,42,45,16,"client"],[72,48,45,22],[72,50,45,24],[73,12,45,26,"queries"],[73,19,45,33],[73,21,45,35,"newQueries"],[74,10,45,46],[74,11,45,47],[74,13,45,49,"optionsRef"],[74,23,45,59],[74,24,45,60,"current"],[74,31,45,67],[74,32,45,68],[75,8,46,6],[76,8,47,6],[76,12,47,10,"existingQueries"],[76,27,47,25],[76,28,47,26,"length"],[76,34,47,32],[76,37,47,35],[76,38,47,36],[76,40,47,38],[77,10,48,8,"setHydrationQueue"],[77,27,48,25],[77,28,49,11,"prev"],[77,32,49,15],[77,36,49,20,"prev"],[77,40,49,24],[77,43,49,27],[77,44,49,28],[77,47,49,31,"prev"],[77,51,49,35],[77,53,49,37],[77,56,49,40,"existingQueries"],[77,71,49,55],[77,72,49,56],[77,75,49,59,"existingQueries"],[77,90,50,8],[77,91,50,9],[78,8,51,6],[79,6,52,4],[80,4,53,2],[80,5,53,3],[80,7,53,5],[80,8,53,6,"client"],[80,14,53,12],[80,16,53,14,"hydrationQueue"],[80,30,53,28],[80,32,53,30,"state"],[80,37,53,35],[80,38,53,36],[80,39,53,37],[81,4,54,2,"React"],[81,9,54,7],[81,10,54,8,"useEffect"],[81,19,54,17],[81,20,54,18],[81,26,54,24],[82,6,55,4],[82,10,55,8,"hydrationQueue"],[82,24,55,22],[82,26,55,24],[83,8,56,6],[83,12,56,6,"hydrate"],[83,30,56,13],[83,31,56,13,"hydrate"],[83,38,56,13],[83,40,56,14,"client"],[83,46,56,20],[83,48,56,22],[84,10,56,24,"queries"],[84,17,56,31],[84,19,56,33,"hydrationQueue"],[85,8,56,48],[85,9,56,49],[85,11,56,51,"optionsRef"],[85,21,56,61],[85,22,56,62,"current"],[85,29,56,69],[85,30,56,70],[86,8,57,6,"setHydrationQueue"],[86,25,57,23],[86,26,57,24],[86,31,57,29],[86,32,57,30],[86,33,57,31],[87,6,58,4],[88,4,59,2],[88,5,59,3],[88,7,59,5],[88,8,59,6,"client"],[88,14,59,12],[88,16,59,14,"hydrationQueue"],[88,30,59,28],[88,31,59,29],[88,32,59,30],[89,4,60,2],[89,11,60,9,"children"],[89,19,60,17],[90,2,61,0],[90,3,61,1],[91,0,61,2],[91,3]],"functionMap":{"names":["<global>","hasProperty","HydrationBoundary","React.useMemo$argument_0","hydrationQueue.find$argument_0","setHydrationQueue$argument_0","React.useEffect$argument_0"],"mappings":"AAA;kBCM;CDE;wBEC;gBCU;YCiB,wDD;UEY,gEF;GDI;kBIC;GJK;CFE"},"hasCjsExports":false},"type":"js/module"}]}