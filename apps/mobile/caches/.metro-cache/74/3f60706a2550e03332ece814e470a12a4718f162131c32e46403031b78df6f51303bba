{"dependencies":[{"name":"style-value-types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"amhWSRCUxLBa3Njmww3P7iM/NQE=","exportNames":["*"],"imports":1}},{"name":"./mix.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":32,"index":84}}],"key":"cGMAaGaNdnZ8cex/ukVNiXblycw=","exportNames":["*"],"imports":1}},{"name":"./mix-color.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":85},"end":{"line":3,"column":43,"index":128}}],"key":"+Q/GkckNfwQ3OYm5YHzSXLBh0bY=","exportNames":["*"],"imports":1}},{"name":"./inc.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":129},"end":{"line":4,"column":34,"index":163}}],"key":"FrRnIQ1Wl8neesEUfR1VBZEb0Pw=","exportNames":["*"],"imports":1}},{"name":"./pipe.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":164},"end":{"line":5,"column":34,"index":198}}],"key":"+6nkibjaDnDRHp4ZFOkTmHtLS5k=","exportNames":["*"],"imports":1}},{"name":"hey-listen","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":199},"end":{"line":6,"column":37,"index":236}}],"key":"5p342VF2FjgsoIiIlnJV4kmYYFQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"mixArray\", {\n    enumerable: true,\n    get: function () {\n      return mixArray;\n    }\n  });\n  Object.defineProperty(exports, \"mixComplex\", {\n    enumerable: true,\n    get: function () {\n      return mixComplex;\n    }\n  });\n  Object.defineProperty(exports, \"mixObject\", {\n    enumerable: true,\n    get: function () {\n      return mixObject;\n    }\n  });\n  var _styleValueTypes = require(_dependencyMap[0], \"style-value-types\");\n  var _mixMjs = require(_dependencyMap[1], \"./mix.mjs\");\n  var _mixColorMjs = require(_dependencyMap[2], \"./mix-color.mjs\");\n  var _incMjs = require(_dependencyMap[3], \"./inc.mjs\");\n  var _pipeMjs = require(_dependencyMap[4], \"./pipe.mjs\");\n  var _heyListen = require(_dependencyMap[5], \"hey-listen\");\n  function getMixer(origin, target) {\n    if ((0, _incMjs.isNum)(origin)) {\n      return v => (0, _mixMjs.mix)(origin, target, v);\n    } else if (_styleValueTypes.color.test(origin)) {\n      return (0, _mixColorMjs.mixColor)(origin, target);\n    } else {\n      return mixComplex(origin, target);\n    }\n  }\n  var mixArray = (from, to) => {\n    var output = [...from];\n    var numValues = output.length;\n    var blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return v => {\n      for (var i = 0; i < numValues; i++) {\n        output[i] = blendValue[i](v);\n      }\n      return output;\n    };\n  };\n  var mixObject = (origin, target) => {\n    var output = Object.assign(Object.assign({}, origin), target);\n    var blendValue = {};\n    for (var key in output) {\n      if (origin[key] !== undefined && target[key] !== undefined) {\n        blendValue[key] = getMixer(origin[key], target[key]);\n      }\n    }\n    return v => {\n      for (var _key in blendValue) {\n        output[_key] = blendValue[_key](v);\n      }\n      return output;\n    };\n  };\n  function analyse(value) {\n    var parsed = _styleValueTypes.complex.parse(value);\n    var numValues = parsed.length;\n    var numNumbers = 0;\n    var numRGB = 0;\n    var numHSL = 0;\n    for (var i = 0; i < numValues; i++) {\n      if (numNumbers || typeof parsed[i] === \"number\") {\n        numNumbers++;\n      } else {\n        if (parsed[i].hue !== undefined) {\n          numHSL++;\n        } else {\n          numRGB++;\n        }\n      }\n    }\n    return {\n      parsed,\n      numNumbers,\n      numRGB,\n      numHSL\n    };\n  }\n  var mixComplex = (origin, target) => {\n    var template = _styleValueTypes.complex.createTransformer(target);\n    var originStats = analyse(origin);\n    var targetStats = analyse(target);\n    var canInterpolate = originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n      return (0, _pipeMjs.pipe)(mixArray(originStats.parsed, targetStats.parsed), template);\n    } else {\n      (0, _heyListen.warning)(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n      return p => `${p > 0 ? target : origin}`;\n    }\n  };\n});","lineCount":102,"map":[[7,2,82,0,"Object"],[7,8,82,0],[7,9,82,0,"defineProperty"],[7,23,82,0],[7,24,82,0,"exports"],[7,31,82,0],[8,4,82,0,"enumerable"],[8,14,82,0],[9,4,82,0,"get"],[9,7,82,0],[9,18,82,0,"get"],[9,19,82,0],[10,6,82,0],[10,13,82,9,"mixArray"],[10,21,82,17],[11,4,82,17],[12,2,82,17],[13,2,82,0,"Object"],[13,8,82,0],[13,9,82,0,"defineProperty"],[13,23,82,0],[13,24,82,0,"exports"],[13,31,82,0],[14,4,82,0,"enumerable"],[14,14,82,0],[15,4,82,0,"get"],[15,7,82,0],[15,18,82,0,"get"],[15,19,82,0],[16,6,82,0],[16,13,82,19,"mixComplex"],[16,23,82,29],[17,4,82,29],[18,2,82,29],[19,2,82,0,"Object"],[19,8,82,0],[19,9,82,0,"defineProperty"],[19,23,82,0],[19,24,82,0,"exports"],[19,31,82,0],[20,4,82,0,"enumerable"],[20,14,82,0],[21,4,82,0,"get"],[21,7,82,0],[21,18,82,0,"get"],[21,19,82,0],[22,6,82,0],[22,13,82,31,"mixObject"],[22,22,82,40],[23,4,82,40],[24,2,82,40],[25,2,1,0],[25,6,1,0,"_styleValueTypes"],[25,22,1,0],[25,25,1,0,"require"],[25,32,1,0],[25,33,1,0,"_dependencyMap"],[25,47,1,0],[26,2,2,0],[26,6,2,0,"_mixMjs"],[26,13,2,0],[26,16,2,0,"require"],[26,23,2,0],[26,24,2,0,"_dependencyMap"],[26,38,2,0],[27,2,3,0],[27,6,3,0,"_mixColorMjs"],[27,18,3,0],[27,21,3,0,"require"],[27,28,3,0],[27,29,3,0,"_dependencyMap"],[27,43,3,0],[28,2,4,0],[28,6,4,0,"_incMjs"],[28,13,4,0],[28,16,4,0,"require"],[28,23,4,0],[28,24,4,0,"_dependencyMap"],[28,38,4,0],[29,2,5,0],[29,6,5,0,"_pipeMjs"],[29,14,5,0],[29,17,5,0,"require"],[29,24,5,0],[29,25,5,0,"_dependencyMap"],[29,39,5,0],[30,2,6,0],[30,6,6,0,"_heyListen"],[30,16,6,0],[30,19,6,0,"require"],[30,26,6,0],[30,27,6,0,"_dependencyMap"],[30,41,6,0],[31,2,8,0],[31,11,8,9,"getMixer"],[31,19,8,17,"getMixer"],[31,20,8,18,"origin"],[31,26,8,24],[31,28,8,26,"target"],[31,34,8,32],[31,36,8,34],[32,4,9,4],[32,8,9,8],[32,12,9,8,"isNum"],[32,19,9,13],[32,20,9,13,"isNum"],[32,25,9,13],[32,27,9,14,"origin"],[32,33,9,20],[32,34,9,21],[32,36,9,23],[33,6,10,8],[33,13,10,16,"v"],[33,14,10,17],[33,18,10,22],[33,22,10,22,"mix"],[33,29,10,25],[33,30,10,25,"mix"],[33,33,10,25],[33,35,10,26,"origin"],[33,41,10,32],[33,43,10,34,"target"],[33,49,10,40],[33,51,10,42,"v"],[33,52,10,43],[33,53,10,44],[34,4,11,4],[34,5,11,5],[34,11,12,9],[34,15,12,13,"color"],[34,31,12,18],[34,32,12,18,"color"],[34,37,12,18],[34,38,12,19,"test"],[34,42,12,23],[34,43,12,24,"origin"],[34,49,12,30],[34,50,12,31],[34,52,12,33],[35,6,13,8],[35,13,13,15],[35,17,13,15,"mixColor"],[35,29,13,23],[35,30,13,23,"mixColor"],[35,38,13,23],[35,40,13,24,"origin"],[35,46,13,30],[35,48,13,32,"target"],[35,54,13,38],[35,55,13,39],[36,4,14,4],[36,5,14,5],[36,11,15,9],[37,6,16,8],[37,13,16,15,"mixComplex"],[37,23,16,25],[37,24,16,26,"origin"],[37,30,16,32],[37,32,16,34,"target"],[37,38,16,40],[37,39,16,41],[38,4,17,4],[39,2,18,0],[40,2,19,0],[40,6,19,6,"mixArray"],[40,14,19,14],[40,17,19,17,"mixArray"],[40,18,19,18,"from"],[40,22,19,22],[40,24,19,24,"to"],[40,26,19,26],[40,31,19,31],[41,4,20,4],[41,8,20,10,"output"],[41,14,20,16],[41,17,20,19],[41,18,20,20],[41,21,20,23,"from"],[41,25,20,27],[41,26,20,28],[42,4,21,4],[42,8,21,10,"numValues"],[42,17,21,19],[42,20,21,22,"output"],[42,26,21,28],[42,27,21,29,"length"],[42,33,21,35],[43,4,22,4],[43,8,22,10,"blendValue"],[43,18,22,20],[43,21,22,23,"from"],[43,25,22,27],[43,26,22,28,"map"],[43,29,22,31],[43,30,22,32],[43,31,22,33,"fromThis"],[43,39,22,41],[43,41,22,43,"i"],[43,42,22,44],[43,47,22,49,"getMixer"],[43,55,22,57],[43,56,22,58,"fromThis"],[43,64,22,66],[43,66,22,68,"to"],[43,68,22,70],[43,69,22,71,"i"],[43,70,22,72],[43,71,22,73],[43,72,22,74],[43,73,22,75],[44,4,23,4],[44,11,23,12,"v"],[44,12,23,13],[44,16,23,18],[45,6,24,8],[45,11,24,13],[45,15,24,17,"i"],[45,16,24,18],[45,19,24,21],[45,20,24,22],[45,22,24,24,"i"],[45,23,24,25],[45,26,24,28,"numValues"],[45,35,24,37],[45,37,24,39,"i"],[45,38,24,40],[45,40,24,42],[45,42,24,44],[46,8,25,12,"output"],[46,14,25,18],[46,15,25,19,"i"],[46,16,25,20],[46,17,25,21],[46,20,25,24,"blendValue"],[46,30,25,34],[46,31,25,35,"i"],[46,32,25,36],[46,33,25,37],[46,34,25,38,"v"],[46,35,25,39],[46,36,25,40],[47,6,26,8],[48,6,27,8],[48,13,27,15,"output"],[48,19,27,21],[49,4,28,4],[49,5,28,5],[50,2,29,0],[50,3,29,1],[51,2,30,0],[51,6,30,6,"mixObject"],[51,15,30,15],[51,18,30,18,"mixObject"],[51,19,30,19,"origin"],[51,25,30,25],[51,27,30,27,"target"],[51,33,30,33],[51,38,30,38],[52,4,31,4],[52,8,31,10,"output"],[52,14,31,16],[52,17,31,19,"Object"],[52,23,31,25],[52,24,31,26,"assign"],[52,30,31,32],[52,31,31,33,"Object"],[52,37,31,39],[52,38,31,40,"assign"],[52,44,31,46],[52,45,31,47],[52,46,31,48],[52,47,31,49],[52,49,31,51,"origin"],[52,55,31,57],[52,56,31,58],[52,58,31,60,"target"],[52,64,31,66],[52,65,31,67],[53,4,32,4],[53,8,32,10,"blendValue"],[53,18,32,20],[53,21,32,23],[53,22,32,24],[53,23,32,25],[54,4,33,4],[54,9,33,9],[54,13,33,15,"key"],[54,16,33,18],[54,20,33,22,"output"],[54,26,33,28],[54,28,33,30],[55,6,34,8],[55,10,34,12,"origin"],[55,16,34,18],[55,17,34,19,"key"],[55,20,34,22],[55,21,34,23],[55,26,34,28,"undefined"],[55,35,34,37],[55,39,34,41,"target"],[55,45,34,47],[55,46,34,48,"key"],[55,49,34,51],[55,50,34,52],[55,55,34,57,"undefined"],[55,64,34,66],[55,66,34,68],[56,8,35,12,"blendValue"],[56,18,35,22],[56,19,35,23,"key"],[56,22,35,26],[56,23,35,27],[56,26,35,30,"getMixer"],[56,34,35,38],[56,35,35,39,"origin"],[56,41,35,45],[56,42,35,46,"key"],[56,45,35,49],[56,46,35,50],[56,48,35,52,"target"],[56,54,35,58],[56,55,35,59,"key"],[56,58,35,62],[56,59,35,63],[56,60,35,64],[57,6,36,8],[58,4,37,4],[59,4,38,4],[59,11,38,12,"v"],[59,12,38,13],[59,16,38,18],[60,6,39,8],[60,11,39,13],[60,15,39,19,"key"],[60,19,39,22],[60,23,39,26,"blendValue"],[60,33,39,36],[60,35,39,38],[61,8,40,12,"output"],[61,14,40,18],[61,15,40,19,"key"],[61,19,40,22],[61,20,40,23],[61,23,40,26,"blendValue"],[61,33,40,36],[61,34,40,37,"key"],[61,38,40,40],[61,39,40,41],[61,40,40,42,"v"],[61,41,40,43],[61,42,40,44],[62,6,41,8],[63,6,42,8],[63,13,42,15,"output"],[63,19,42,21],[64,4,43,4],[64,5,43,5],[65,2,44,0],[65,3,44,1],[66,2,45,0],[66,11,45,9,"analyse"],[66,18,45,16,"analyse"],[66,19,45,17,"value"],[66,24,45,22],[66,26,45,24],[67,4,46,4],[67,8,46,10,"parsed"],[67,14,46,16],[67,17,46,19,"complex"],[67,33,46,26],[67,34,46,26,"complex"],[67,41,46,26],[67,42,46,27,"parse"],[67,47,46,32],[67,48,46,33,"value"],[67,53,46,38],[67,54,46,39],[68,4,47,4],[68,8,47,10,"numValues"],[68,17,47,19],[68,20,47,22,"parsed"],[68,26,47,28],[68,27,47,29,"length"],[68,33,47,35],[69,4,48,4],[69,8,48,8,"numNumbers"],[69,18,48,18],[69,21,48,21],[69,22,48,22],[70,4,49,4],[70,8,49,8,"numRGB"],[70,14,49,14],[70,17,49,17],[70,18,49,18],[71,4,50,4],[71,8,50,8,"numHSL"],[71,14,50,14],[71,17,50,17],[71,18,50,18],[72,4,51,4],[72,9,51,9],[72,13,51,13,"i"],[72,14,51,14],[72,17,51,17],[72,18,51,18],[72,20,51,20,"i"],[72,21,51,21],[72,24,51,24,"numValues"],[72,33,51,33],[72,35,51,35,"i"],[72,36,51,36],[72,38,51,38],[72,40,51,40],[73,6,52,8],[73,10,52,12,"numNumbers"],[73,20,52,22],[73,24,52,26],[73,31,52,33,"parsed"],[73,37,52,39],[73,38,52,40,"i"],[73,39,52,41],[73,40,52,42],[73,45,52,47],[73,53,52,55],[73,55,52,57],[74,8,53,12,"numNumbers"],[74,18,53,22],[74,20,53,24],[75,6,54,8],[75,7,54,9],[75,13,55,13],[76,8,56,12],[76,12,56,16,"parsed"],[76,18,56,22],[76,19,56,23,"i"],[76,20,56,24],[76,21,56,25],[76,22,56,26,"hue"],[76,25,56,29],[76,30,56,34,"undefined"],[76,39,56,43],[76,41,56,45],[77,10,57,16,"numHSL"],[77,16,57,22],[77,18,57,24],[78,8,58,12],[78,9,58,13],[78,15,59,17],[79,10,60,16,"numRGB"],[79,16,60,22],[79,18,60,24],[80,8,61,12],[81,6,62,8],[82,4,63,4],[83,4,64,4],[83,11,64,11],[84,6,64,13,"parsed"],[84,12,64,19],[85,6,64,21,"numNumbers"],[85,16,64,31],[86,6,64,33,"numRGB"],[86,12,64,39],[87,6,64,41,"numHSL"],[88,4,64,48],[88,5,64,49],[89,2,65,0],[90,2,66,0],[90,6,66,6,"mixComplex"],[90,16,66,16],[90,19,66,19,"mixComplex"],[90,20,66,20,"origin"],[90,26,66,26],[90,28,66,28,"target"],[90,34,66,34],[90,39,66,39],[91,4,67,4],[91,8,67,10,"template"],[91,16,67,18],[91,19,67,21,"complex"],[91,35,67,28],[91,36,67,28,"complex"],[91,43,67,28],[91,44,67,29,"createTransformer"],[91,61,67,46],[91,62,67,47,"target"],[91,68,67,53],[91,69,67,54],[92,4,68,4],[92,8,68,10,"originStats"],[92,19,68,21],[92,22,68,24,"analyse"],[92,29,68,31],[92,30,68,32,"origin"],[92,36,68,38],[92,37,68,39],[93,4,69,4],[93,8,69,10,"targetStats"],[93,19,69,21],[93,22,69,24,"analyse"],[93,29,69,31],[93,30,69,32,"target"],[93,36,69,38],[93,37,69,39],[94,4,70,4],[94,8,70,10,"canInterpolate"],[94,22,70,24],[94,25,70,27,"originStats"],[94,36,70,38],[94,37,70,39,"numHSL"],[94,43,70,45],[94,48,70,50,"targetStats"],[94,59,70,61],[94,60,70,62,"numHSL"],[94,66,70,68],[94,70,71,8,"originStats"],[94,81,71,19],[94,82,71,20,"numRGB"],[94,88,71,26],[94,93,71,31,"targetStats"],[94,104,71,42],[94,105,71,43,"numRGB"],[94,111,71,49],[94,115,72,8,"originStats"],[94,126,72,19],[94,127,72,20,"numNumbers"],[94,137,72,30],[94,141,72,34,"targetStats"],[94,152,72,45],[94,153,72,46,"numNumbers"],[94,163,72,56],[95,4,73,4],[95,8,73,8,"canInterpolate"],[95,22,73,22],[95,24,73,24],[96,6,74,8],[96,13,74,15],[96,17,74,15,"pipe"],[96,25,74,19],[96,26,74,19,"pipe"],[96,30,74,19],[96,32,74,20,"mixArray"],[96,40,74,28],[96,41,74,29,"originStats"],[96,52,74,40],[96,53,74,41,"parsed"],[96,59,74,47],[96,61,74,49,"targetStats"],[96,72,74,60],[96,73,74,61,"parsed"],[96,79,74,67],[96,80,74,68],[96,82,74,70,"template"],[96,90,74,78],[96,91,74,79],[97,4,75,4],[97,5,75,5],[97,11,76,9],[98,6,77,8],[98,10,77,8,"warning"],[98,20,77,15],[98,21,77,15,"warning"],[98,28,77,15],[98,30,77,16],[98,34,77,20],[98,36,77,22],[98,55,77,41,"origin"],[98,61,77,47],[98,71,77,57,"target"],[98,77,77,63],[98,247,77,233],[98,248,77,234],[99,6,78,8],[99,13,78,16,"p"],[99,14,78,17],[99,18,78,22],[99,21,78,25,"p"],[99,22,78,26],[99,25,78,29],[99,26,78,30],[99,29,78,33,"target"],[99,35,78,39],[99,38,78,42,"origin"],[99,44,78,48],[99,46,78,50],[100,4,79,4],[101,2,80,0],[101,3,80,1],[102,0,80,2],[102,3]],"functionMap":{"names":["<global>","getMixer","<anonymous>","mixArray","from.map$argument_0","mixObject","analyse","mixComplex"],"mappings":"AAA;ACO;eCE,6BD;CDQ;iBGC;gCCG,0CD;WDC;KCK;CHC;kBKC;WHQ;KGK;CLC;AMC;CNoB;mBOC;eLY,mCK;CPE"},"hasCjsExports":false},"type":"js/module"}]}