{"dependencies":[{"name":"./_cloneArrayBuffer.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"KnM+zFrIm1wVlL+DS/KdjOyTMf8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _cloneArrayBufferJs = require(_dependencyMap[0], \"./_cloneArrayBuffer.js\");\n  var cloneArrayBuffer = _interopDefault(_cloneArrayBufferJs);\n  /**\n   * Creates a clone of `dataView`.\n   *\n   * @private\n   * @param {Object} dataView The data view to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Object} Returns the cloned data view.\n   */\n  function cloneDataView(dataView, isDeep) {\n    var buffer = isDeep ? (0, cloneArrayBuffer.default)(dataView.buffer) : dataView.buffer;\n    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n  }\n  var _default = cloneDataView;\n});","lineCount":33,"map":[[12,2,16,0,"Object"],[12,8,16,0],[12,9,16,0,"defineProperty"],[12,23,16,0],[12,24,16,0,"exports"],[12,31,16,0],[13,4,16,0,"enumerable"],[13,14,16,0],[14,4,16,0,"get"],[14,7,16,0],[14,18,16,0,"get"],[14,19,16,0],[15,6,16,0],[15,13,16,0,"_default"],[15,21,16,0],[16,4,16,0],[17,2,16,0],[18,2,1,0],[18,6,1,0,"_cloneArrayBufferJs"],[18,25,1,0],[18,28,1,0,"require"],[18,35,1,0],[18,36,1,0,"_dependencyMap"],[18,50,1,0],[19,2,1,0],[19,6,1,0,"cloneArrayBuffer"],[19,22,1,0],[19,25,1,0,"_interopDefault"],[19,40,1,0],[19,41,1,0,"_cloneArrayBufferJs"],[19,60,1,0],[20,2,3,0],[21,0,4,0],[22,0,5,0],[23,0,6,0],[24,0,7,0],[25,0,8,0],[26,0,9,0],[27,0,10,0],[28,2,11,0],[28,11,11,9,"cloneDataView"],[28,24,11,22,"cloneDataView"],[28,25,11,23,"dataView"],[28,33,11,31],[28,35,11,33,"isDeep"],[28,41,11,39],[28,43,11,41],[29,4,12,2],[29,8,12,6,"buffer"],[29,14,12,12],[29,17,12,15,"isDeep"],[29,23,12,21],[29,26,12,24],[29,30,12,24,"cloneArrayBuffer"],[29,46,12,40],[29,47,12,40,"default"],[29,54,12,40],[29,56,12,41,"dataView"],[29,64,12,49],[29,65,12,50,"buffer"],[29,71,12,56],[29,72,12,57],[29,75,12,60,"dataView"],[29,83,12,68],[29,84,12,69,"buffer"],[29,90,12,75],[30,4,13,2],[30,11,13,9],[30,15,13,13,"dataView"],[30,23,13,21],[30,24,13,22,"constructor"],[30,35,13,33],[30,36,13,34,"buffer"],[30,42,13,40],[30,44,13,42,"dataView"],[30,52,13,50],[30,53,13,51,"byteOffset"],[30,63,13,61],[30,65,13,63,"dataView"],[30,73,13,71],[30,74,13,72,"byteLength"],[30,84,13,82],[30,85,13,83],[31,2,14,0],[32,2,16,0],[32,6,16,0,"_default"],[32,14,16,0],[32,17,16,15,"cloneDataView"],[32,30,16,28],[33,0,16,29],[33,3]],"functionMap":{"names":["<global>","cloneDataView"],"mappings":"AAA;ACU;CDG"},"hasCjsExports":false},"type":"js/module"}]}