{"dependencies":[{"name":"@motionone/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":12,"index":27},"end":{"line":3,"column":39,"index":54}}],"key":"FS/MZgsOo2zLy6PbOiduH8x3eaQ=","exportNames":["*"],"imports":1}},{"name":"./defaults.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":43,"index":99}}],"key":"/+fze9XbUAT5NK6xYoOXS+Rw/bo=","exportNames":["*"],"imports":1}},{"name":"./utils.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":115},"end":{"line":5,"column":39,"index":140}}],"key":"xcCnNfXtPJugm6G5UV7vbx9aMw0=","exportNames":["*"],"imports":1}},{"name":"../utils/has-reached-target.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":23,"index":165},"end":{"line":6,"column":68,"index":210}}],"key":"pFm4EH96XrI71rNoVujdS7zjgQI=","exportNames":["*"],"imports":1}},{"name":"../utils/velocity.cjs.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":15,"index":227},"end":{"line":7,"column":50,"index":262}}],"key":"iQjjLp7CGInYbOOzhxfBWLWZ2WU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var utils = require(_dependencyMap[0], \"@motionone/utils\");\n  var defaults = require(_dependencyMap[1], \"./defaults.cjs.js\");\n  var utils$1 = require(_dependencyMap[2], \"./utils.cjs.js\");\n  var hasReachedTarget = require(_dependencyMap[3], \"../utils/has-reached-target.cjs.js\");\n  var velocity = require(_dependencyMap[4], \"../utils/velocity.cjs.js\");\n  var spring = function () {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$stiffness = _ref.stiffness,\n      stiffness = _ref$stiffness === void 0 ? defaults.defaults.stiffness : _ref$stiffness,\n      _ref$damping = _ref.damping,\n      damping = _ref$damping === void 0 ? defaults.defaults.damping : _ref$damping,\n      _ref$mass = _ref.mass,\n      mass = _ref$mass === void 0 ? defaults.defaults.mass : _ref$mass,\n      _ref$from = _ref.from,\n      from = _ref$from === void 0 ? 0 : _ref$from,\n      _ref$to = _ref.to,\n      to = _ref$to === void 0 ? 1 : _ref$to,\n      _ref$velocity = _ref.velocity,\n      velocity$1 = _ref$velocity === void 0 ? 0.0 : _ref$velocity,\n      restSpeed = _ref.restSpeed,\n      restDistance = _ref.restDistance;\n    velocity$1 = velocity$1 ? utils.time.s(velocity$1) : 0.0;\n    var state = {\n      done: false,\n      hasReachedTarget: false,\n      current: from,\n      target: to\n    };\n    var initialDelta = to - from;\n    var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    var dampingRatio = utils$1.calcDampingRatio(stiffness, damping, mass);\n    var isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDistance || (restDistance = isGranularScale ? 0.005 : 0.5);\n    var resolveSpring;\n    if (dampingRatio < 1) {\n      var angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n      // Underdamped spring (bouncy)\n      resolveSpring = t => to - Math.exp(-dampingRatio * undampedAngularFreq * t) * ((-velocity$1 + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t) + initialDelta * Math.cos(angularFreq * t));\n    } else {\n      // Critically damped spring\n      resolveSpring = t => {\n        return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (-velocity$1 + undampedAngularFreq * initialDelta) * t);\n      };\n    }\n    return t => {\n      state.current = resolveSpring(t);\n      var currentVelocity = t === 0 ? velocity$1 : velocity.calcGeneratorVelocity(resolveSpring, t, state.current);\n      var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n      var isBelowDisplacementThreshold = Math.abs(to - state.current) <= restDistance;\n      state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n      state.hasReachedTarget = hasReachedTarget.hasReachedTarget(from, to, state.current);\n      return state;\n    };\n  };\n  exports.spring = spring;\n});","lineCount":60,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"utils"],[4,11,3,9],[4,14,3,12,"require"],[4,21,3,19],[4,22,3,19,"_dependencyMap"],[4,36,3,19],[4,59,3,38],[4,60,3,39],[5,2,4,0],[5,6,4,4,"defaults"],[5,14,4,12],[5,17,4,15,"require"],[5,24,4,22],[5,25,4,22,"_dependencyMap"],[5,39,4,22],[5,63,4,42],[5,64,4,43],[6,2,5,0],[6,6,5,4,"utils$1"],[6,13,5,11],[6,16,5,14,"require"],[6,23,5,21],[6,24,5,21,"_dependencyMap"],[6,38,5,21],[6,59,5,38],[6,60,5,39],[7,2,6,0],[7,6,6,4,"hasReachedTarget"],[7,22,6,20],[7,25,6,23,"require"],[7,32,6,30],[7,33,6,30,"_dependencyMap"],[7,47,6,30],[7,88,6,67],[7,89,6,68],[8,2,7,0],[8,6,7,4,"velocity"],[8,14,7,12],[8,17,7,15,"require"],[8,24,7,22],[8,25,7,22,"_dependencyMap"],[8,39,7,22],[8,70,7,49],[8,71,7,50],[9,2,9,0],[9,6,9,6,"spring"],[9,12,9,12],[9,15,9,15],[9,24,9,15,"spring"],[9,25,9,15],[9,27,9,209],[10,4,9,209],[10,8,9,209,"_ref"],[10,12,9,209],[10,15,9,209,"arguments"],[10,24,9,209],[10,25,9,209,"length"],[10,31,9,209],[10,39,9,209,"arguments"],[10,48,9,209],[10,56,9,209,"undefined"],[10,65,9,209],[10,68,9,209,"arguments"],[10,77,9,209],[10,83,9,202],[10,84,9,203],[10,85,9,204],[11,6,9,204,"_ref$stiffness"],[11,20,9,204],[11,23,9,204,"_ref"],[11,27,9,204],[11,28,9,18,"stiffness"],[11,37,9,27],[12,6,9,18,"stiffness"],[12,15,9,27],[12,18,9,27,"_ref$stiffness"],[12,32,9,27],[12,46,9,30,"defaults"],[12,54,9,38],[12,55,9,39,"defaults"],[12,63,9,47],[12,64,9,48,"stiffness"],[12,73,9,57],[12,76,9,57,"_ref$stiffness"],[12,90,9,57],[13,6,9,57,"_ref$damping"],[13,18,9,57],[13,21,9,57,"_ref"],[13,25,9,57],[13,26,9,59,"damping"],[13,33,9,66],[14,6,9,59,"damping"],[14,13,9,66],[14,16,9,66,"_ref$damping"],[14,28,9,66],[14,42,9,69,"defaults"],[14,50,9,77],[14,51,9,78,"defaults"],[14,59,9,86],[14,60,9,87,"damping"],[14,67,9,94],[14,70,9,94,"_ref$damping"],[14,82,9,94],[15,6,9,94,"_ref$mass"],[15,15,9,94],[15,18,9,94,"_ref"],[15,22,9,94],[15,23,9,96,"mass"],[15,27,9,100],[16,6,9,96,"mass"],[16,10,9,100],[16,13,9,100,"_ref$mass"],[16,22,9,100],[16,36,9,103,"defaults"],[16,44,9,111],[16,45,9,112,"defaults"],[16,53,9,120],[16,54,9,121,"mass"],[16,58,9,125],[16,61,9,125,"_ref$mass"],[16,70,9,125],[17,6,9,125,"_ref$from"],[17,15,9,125],[17,18,9,125,"_ref"],[17,22,9,125],[17,23,9,127,"from"],[17,27,9,131],[18,6,9,127,"from"],[18,10,9,131],[18,13,9,131,"_ref$from"],[18,22,9,131],[18,36,9,134],[18,37,9,135],[18,40,9,135,"_ref$from"],[18,49,9,135],[19,6,9,135,"_ref$to"],[19,13,9,135],[19,16,9,135,"_ref"],[19,20,9,135],[19,21,9,137,"to"],[19,23,9,139],[20,6,9,137,"to"],[20,8,9,139],[20,11,9,139,"_ref$to"],[20,18,9,139],[20,32,9,142],[20,33,9,143],[20,36,9,143,"_ref$to"],[20,43,9,143],[21,6,9,143,"_ref$velocity"],[21,19,9,143],[21,22,9,143,"_ref"],[21,26,9,143],[21,27,9,145,"velocity"],[21,35,9,153],[22,6,9,155,"velocity$1"],[22,16,9,165],[22,19,9,165,"_ref$velocity"],[22,32,9,165],[22,46,9,168],[22,49,9,171],[22,52,9,171,"_ref$velocity"],[22,65,9,171],[23,6,9,173,"restSpeed"],[23,15,9,182],[23,18,9,182,"_ref"],[23,22,9,182],[23,23,9,173,"restSpeed"],[23,32,9,182],[24,6,9,184,"restDistance"],[24,18,9,196],[24,21,9,196,"_ref"],[24,25,9,196],[24,26,9,184,"restDistance"],[24,38,9,196],[25,4,10,4,"velocity$1"],[25,14,10,14],[25,17,10,17,"velocity$1"],[25,27,10,27],[25,30,10,30,"utils"],[25,35,10,35],[25,36,10,36,"time"],[25,40,10,40],[25,41,10,41,"s"],[25,42,10,42],[25,43,10,43,"velocity$1"],[25,53,10,53],[25,54,10,54],[25,57,10,57],[25,60,10,60],[26,4,11,4],[26,8,11,10,"state"],[26,13,11,15],[26,16,11,18],[27,6,12,8,"done"],[27,10,12,12],[27,12,12,14],[27,17,12,19],[28,6,13,8,"hasReachedTarget"],[28,22,13,24],[28,24,13,26],[28,29,13,31],[29,6,14,8,"current"],[29,13,14,15],[29,15,14,17,"from"],[29,19,14,21],[30,6,15,8,"target"],[30,12,15,14],[30,14,15,16,"to"],[31,4,16,4],[31,5,16,5],[32,4,17,4],[32,8,17,10,"initialDelta"],[32,20,17,22],[32,23,17,25,"to"],[32,25,17,27],[32,28,17,30,"from"],[32,32,17,34],[33,4,18,4],[33,8,18,10,"undampedAngularFreq"],[33,27,18,29],[33,30,18,32,"Math"],[33,34,18,36],[33,35,18,37,"sqrt"],[33,39,18,41],[33,40,18,42,"stiffness"],[33,49,18,51],[33,52,18,54,"mass"],[33,56,18,58],[33,57,18,59],[33,60,18,62],[33,64,18,66],[34,4,19,4],[34,8,19,10,"dampingRatio"],[34,20,19,22],[34,23,19,25,"utils$1"],[34,30,19,32],[34,31,19,33,"calcDampingRatio"],[34,47,19,49],[34,48,19,50,"stiffness"],[34,57,19,59],[34,59,19,61,"damping"],[34,66,19,68],[34,68,19,70,"mass"],[34,72,19,74],[34,73,19,75],[35,4,20,4],[35,8,20,10,"isGranularScale"],[35,23,20,25],[35,26,20,28,"Math"],[35,30,20,32],[35,31,20,33,"abs"],[35,34,20,36],[35,35,20,37,"initialDelta"],[35,47,20,49],[35,48,20,50],[35,51,20,53],[35,52,20,54],[36,4,21,4,"restSpeed"],[36,13,21,13],[36,18,21,18,"restSpeed"],[36,27,21,27],[36,30,21,30,"isGranularScale"],[36,45,21,45],[36,48,21,48],[36,52,21,52],[36,55,21,55],[36,56,21,56],[36,57,21,57],[37,4,22,4,"restDistance"],[37,16,22,16],[37,21,22,21,"restDistance"],[37,33,22,33],[37,36,22,36,"isGranularScale"],[37,51,22,51],[37,54,22,54],[37,59,22,59],[37,62,22,62],[37,65,22,65],[37,66,22,66],[38,4,23,4],[38,8,23,8,"resolveSpring"],[38,21,23,21],[39,4,24,4],[39,8,24,8,"dampingRatio"],[39,20,24,20],[39,23,24,23],[39,24,24,24],[39,26,24,26],[40,6,25,8],[40,10,25,14,"angularFreq"],[40,21,25,25],[40,24,25,28,"undampedAngularFreq"],[40,43,25,47],[40,46,25,50,"Math"],[40,50,25,54],[40,51,25,55,"sqrt"],[40,55,25,59],[40,56,25,60],[40,57,25,61],[40,60,25,64,"dampingRatio"],[40,72,25,76],[40,75,25,79,"dampingRatio"],[40,87,25,91],[40,88,25,92],[41,6,26,8],[42,6,27,8,"resolveSpring"],[42,19,27,21],[42,22,27,25,"t"],[42,23,27,26],[42,27,27,31,"to"],[42,29,27,33],[42,32,28,12,"Math"],[42,36,28,16],[42,37,28,17,"exp"],[42,40,28,20],[42,41,28,21],[42,42,28,22,"dampingRatio"],[42,54,28,34],[42,57,28,37,"undampedAngularFreq"],[42,76,28,56],[42,79,28,59,"t"],[42,80,28,60],[42,81,28,61],[42,85,29,18],[42,86,29,19],[42,87,29,20,"velocity$1"],[42,97,29,30],[42,100,29,33,"dampingRatio"],[42,112,29,45],[42,115,29,48,"undampedAngularFreq"],[42,134,29,67],[42,137,29,70,"initialDelta"],[42,149,29,82],[42,153,30,20,"angularFreq"],[42,164,30,31],[42,167,31,20,"Math"],[42,171,31,24],[42,172,31,25,"sin"],[42,175,31,28],[42,176,31,29,"angularFreq"],[42,187,31,40],[42,190,31,43,"t"],[42,191,31,44],[42,192,31,45],[42,195,32,20,"initialDelta"],[42,207,32,32],[42,210,32,35,"Math"],[42,214,32,39],[42,215,32,40,"cos"],[42,218,32,43],[42,219,32,44,"angularFreq"],[42,230,32,55],[42,233,32,58,"t"],[42,234,32,59],[42,235,32,60],[42,236,32,61],[43,4,33,4],[43,5,33,5],[43,11,34,9],[44,6,35,8],[45,6,36,8,"resolveSpring"],[45,19,36,21],[45,22,36,25,"t"],[45,23,36,26],[45,27,36,31],[46,8,37,12],[46,15,37,20,"to"],[46,17,37,22],[46,20,38,16,"Math"],[46,24,38,20],[46,25,38,21,"exp"],[46,28,38,24],[46,29,38,25],[46,30,38,26,"undampedAngularFreq"],[46,49,38,45],[46,52,38,48,"t"],[46,53,38,49],[46,54,38,50],[46,58,39,21,"initialDelta"],[46,70,39,33],[46,73,39,36],[46,74,39,37],[46,75,39,38,"velocity$1"],[46,85,39,48],[46,88,39,51,"undampedAngularFreq"],[46,107,39,70],[46,110,39,73,"initialDelta"],[46,122,39,85],[46,126,39,89,"t"],[46,127,39,90],[46,128,39,91],[47,6,40,8],[47,7,40,9],[48,4,41,4],[49,4,42,4],[49,11,42,12,"t"],[49,12,42,13],[49,16,42,18],[50,6,43,8,"state"],[50,11,43,13],[50,12,43,14,"current"],[50,19,43,21],[50,22,43,24,"resolveSpring"],[50,35,43,37],[50,36,43,38,"t"],[50,37,43,39],[50,38,43,40],[51,6,44,8],[51,10,44,14,"currentVelocity"],[51,25,44,29],[51,28,44,32,"t"],[51,29,44,33],[51,34,44,38],[51,35,44,39],[51,38,45,14,"velocity$1"],[51,48,45,24],[51,51,46,14,"velocity"],[51,59,46,22],[51,60,46,23,"calcGeneratorVelocity"],[51,81,46,44],[51,82,46,45,"resolveSpring"],[51,95,46,58],[51,97,46,60,"t"],[51,98,46,61],[51,100,46,63,"state"],[51,105,46,68],[51,106,46,69,"current"],[51,113,46,76],[51,114,46,77],[52,6,47,8],[52,10,47,14,"isBelowVelocityThreshold"],[52,34,47,38],[52,37,47,41,"Math"],[52,41,47,45],[52,42,47,46,"abs"],[52,45,47,49],[52,46,47,50,"currentVelocity"],[52,61,47,65],[52,62,47,66],[52,66,47,70,"restSpeed"],[52,75,47,79],[53,6,48,8],[53,10,48,14,"isBelowDisplacementThreshold"],[53,38,48,42],[53,41,48,45,"Math"],[53,45,48,49],[53,46,48,50,"abs"],[53,49,48,53],[53,50,48,54,"to"],[53,52,48,56],[53,55,48,59,"state"],[53,60,48,64],[53,61,48,65,"current"],[53,68,48,72],[53,69,48,73],[53,73,48,77,"restDistance"],[53,85,48,89],[54,6,49,8,"state"],[54,11,49,13],[54,12,49,14,"done"],[54,16,49,18],[54,19,49,21,"isBelowVelocityThreshold"],[54,43,49,45],[54,47,49,49,"isBelowDisplacementThreshold"],[54,75,49,77],[55,6,50,8,"state"],[55,11,50,13],[55,12,50,14,"hasReachedTarget"],[55,28,50,30],[55,31,50,33,"hasReachedTarget"],[55,47,50,49],[55,48,50,50,"hasReachedTarget"],[55,64,50,66],[55,65,50,67,"from"],[55,69,50,71],[55,71,50,73,"to"],[55,73,50,75],[55,75,50,77,"state"],[55,80,50,82],[55,81,50,83,"current"],[55,88,50,90],[55,89,50,91],[56,6,51,8],[56,13,51,15,"state"],[56,18,51,20],[57,4,52,4],[57,5,52,5],[58,2,53,0],[58,3,53,1],[59,2,55,0,"exports"],[59,9,55,7],[59,10,55,8,"spring"],[59,16,55,14],[59,19,55,17,"spring"],[59,25,55,23],[60,0,55,24],[60,3]],"functionMap":{"names":["<global>","spring","resolveSpring","<anonymous>"],"mappings":"AAA;eCQ;wBCkB;6DDK;wBCI;SDI;WEE;KFU;CDC"},"hasCjsExports":true},"type":"js/module"}]}