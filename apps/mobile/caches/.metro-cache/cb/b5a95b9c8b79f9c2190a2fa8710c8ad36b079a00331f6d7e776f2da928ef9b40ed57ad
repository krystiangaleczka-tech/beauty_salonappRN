{"dependencies":[{"name":"xdate","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":14,"index":14},"end":{"line":1,"column":30,"index":30}}],"key":"IuA7xzW7NEYpL1z4xYxBhE6c8f8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.padNumber = padNumber;\n  exports.parseDate = parseDate;\n  exports.toMarkingFormat = toMarkingFormat;\n  exports.xdateToData = xdateToData;\n  const XDate = require(_dependencyMap[0], \"xdate\");\n  function padNumber(n) {\n    if (n < 10) {\n      return '0' + n;\n    }\n    return n;\n  }\n  function xdateToData(date) {\n    const d = date instanceof XDate ? date : new XDate(date);\n    const dateString = toMarkingFormat(d);\n    return {\n      year: d.getFullYear(),\n      month: d.getMonth() + 1,\n      day: d.getDate(),\n      timestamp: new XDate(dateString, true).getTime(),\n      dateString: dateString\n    };\n  }\n  function parseDate(d) {\n    if (!d) {\n      return;\n    } else if (d.timestamp) {\n      // conventional data timestamp\n      return new XDate(d.timestamp, true);\n    } else if (d instanceof XDate) {\n      // xdate\n      return new XDate(toMarkingFormat(d), true);\n    } else if (d.getTime) {\n      // javascript date\n      const dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n      return new XDate(dateString, true);\n    } else if (d.year) {\n      const dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n      return new XDate(dateString, true);\n    } else if (d) {\n      // timestamp number or date formatted as string\n      return new XDate(d, true);\n    }\n  }\n  function toMarkingFormat(d) {\n    if (!isNaN(d.getTime())) {\n      const year = `${d.getFullYear()}`;\n      const month = d.getMonth() + 1;\n      const doubleDigitMonth = month < 10 ? `0${month}` : `${month}`;\n      const day = d.getDate();\n      const doubleDigitDay = day < 10 ? `0${day}` : `${day}`;\n      return year + '-' + doubleDigitMonth + '-' + doubleDigitDay;\n    }\n    return 'Invalid Date';\n  }\n});","lineCount":59,"map":[[9,2,1,0],[9,8,1,6,"XDate"],[9,13,1,11],[9,16,1,14,"require"],[9,23,1,21],[9,24,1,21,"_dependencyMap"],[9,38,1,21],[9,50,1,29],[9,51,1,30],[10,2,3,7],[10,11,3,16,"padNumber"],[10,20,3,25,"padNumber"],[10,21,3,26,"n"],[10,22,3,35],[10,24,3,37],[11,4,4,2],[11,8,4,6,"n"],[11,9,4,7],[11,12,4,10],[11,14,4,12],[11,16,4,14],[12,6,5,4],[12,13,5,11],[12,16,5,14],[12,19,5,17,"n"],[12,20,5,18],[13,4,6,2],[14,4,7,2],[14,11,7,9,"n"],[14,12,7,10],[15,2,8,0],[16,2,10,7],[16,11,10,16,"xdateToData"],[16,22,10,27,"xdateToData"],[16,23,10,28,"date"],[16,27,10,48],[16,29,10,50],[17,4,11,2],[17,10,11,8,"d"],[17,11,11,9],[17,14,11,12,"date"],[17,18,11,16],[17,30,11,28,"XDate"],[17,35,11,33],[17,38,11,36,"date"],[17,42,11,40],[17,45,11,43],[17,49,11,47,"XDate"],[17,54,11,52],[17,55,11,53,"date"],[17,59,11,57],[17,60,11,58],[18,4,12,2],[18,10,12,8,"dateString"],[18,20,12,18],[18,23,12,21,"toMarkingFormat"],[18,38,12,36],[18,39,12,37,"d"],[18,40,12,38],[18,41,12,39],[19,4,13,2],[19,11,13,9],[20,6,14,4,"year"],[20,10,14,8],[20,12,14,10,"d"],[20,13,14,11],[20,14,14,12,"getFullYear"],[20,25,14,23],[20,26,14,24],[20,27,14,25],[21,6,15,4,"month"],[21,11,15,9],[21,13,15,11,"d"],[21,14,15,12],[21,15,15,13,"getMonth"],[21,23,15,21],[21,24,15,22],[21,25,15,23],[21,28,15,26],[21,29,15,27],[22,6,16,4,"day"],[22,9,16,7],[22,11,16,9,"d"],[22,12,16,10],[22,13,16,11,"getDate"],[22,20,16,18],[22,21,16,19],[22,22,16,20],[23,6,17,4,"timestamp"],[23,15,17,13],[23,17,17,15],[23,21,17,19,"XDate"],[23,26,17,24],[23,27,17,25,"dateString"],[23,37,17,35],[23,39,17,37],[23,43,17,41],[23,44,17,42],[23,45,17,43,"getTime"],[23,52,17,50],[23,53,17,51],[23,54,17,52],[24,6,18,4,"dateString"],[24,16,18,14],[24,18,18,16,"dateString"],[25,4,19,2],[25,5,19,3],[26,2,20,0],[27,2,22,7],[27,11,22,16,"parseDate"],[27,20,22,25,"parseDate"],[27,21,22,26,"d"],[27,22,22,33],[27,24,22,35],[28,4,23,2],[28,8,23,6],[28,9,23,7,"d"],[28,10,23,8],[28,12,23,10],[29,6,24,4],[30,4,25,2],[30,5,25,3],[30,11,25,9],[30,15,25,13,"d"],[30,16,25,14],[30,17,25,15,"timestamp"],[30,26,25,24],[30,28,25,26],[31,6,26,4],[32,6,27,4],[32,13,27,11],[32,17,27,15,"XDate"],[32,22,27,20],[32,23,27,21,"d"],[32,24,27,22],[32,25,27,23,"timestamp"],[32,34,27,32],[32,36,27,34],[32,40,27,38],[32,41,27,39],[33,4,28,2],[33,5,28,3],[33,11,28,9],[33,15,28,13,"d"],[33,16,28,14],[33,28,28,26,"XDate"],[33,33,28,31],[33,35,28,33],[34,6,29,4],[35,6,30,4],[35,13,30,11],[35,17,30,15,"XDate"],[35,22,30,20],[35,23,30,21,"toMarkingFormat"],[35,38,30,36],[35,39,30,37,"d"],[35,40,30,38],[35,41,30,39],[35,43,30,41],[35,47,30,45],[35,48,30,46],[36,4,31,2],[36,5,31,3],[36,11,31,9],[36,15,31,13,"d"],[36,16,31,14],[36,17,31,15,"getTime"],[36,24,31,22],[36,26,31,24],[37,6,32,4],[38,6,33,4],[38,12,33,10,"dateString"],[38,22,33,20],[38,25,33,23,"d"],[38,26,33,24],[38,27,33,25,"getFullYear"],[38,38,33,36],[38,39,33,37],[38,40,33,38],[38,43,33,41],[38,46,33,44],[38,49,33,47,"padNumber"],[38,58,33,56],[38,59,33,57,"d"],[38,60,33,58],[38,61,33,59,"getMonth"],[38,69,33,67],[38,70,33,68],[38,71,33,69],[38,74,33,72],[38,75,33,73],[38,76,33,74],[38,79,33,77],[38,82,33,80],[38,85,33,83,"padNumber"],[38,94,33,92],[38,95,33,93,"d"],[38,96,33,94],[38,97,33,95,"getDate"],[38,104,33,102],[38,105,33,103],[38,106,33,104],[38,107,33,105],[39,6,34,4],[39,13,34,11],[39,17,34,15,"XDate"],[39,22,34,20],[39,23,34,21,"dateString"],[39,33,34,31],[39,35,34,33],[39,39,34,37],[39,40,34,38],[40,4,35,2],[40,5,35,3],[40,11,35,9],[40,15,35,13,"d"],[40,16,35,14],[40,17,35,15,"year"],[40,21,35,19],[40,23,35,21],[41,6,36,4],[41,12,36,10,"dateString"],[41,22,36,20],[41,25,36,23,"d"],[41,26,36,24],[41,27,36,25,"year"],[41,31,36,29],[41,34,36,32],[41,37,36,35],[41,40,36,38,"padNumber"],[41,49,36,47],[41,50,36,48,"d"],[41,51,36,49],[41,52,36,50,"month"],[41,57,36,55],[41,58,36,56],[41,61,36,59],[41,64,36,62],[41,67,36,65,"padNumber"],[41,76,36,74],[41,77,36,75,"d"],[41,78,36,76],[41,79,36,77,"day"],[41,82,36,80],[41,83,36,81],[42,6,37,4],[42,13,37,11],[42,17,37,15,"XDate"],[42,22,37,20],[42,23,37,21,"dateString"],[42,33,37,31],[42,35,37,33],[42,39,37,37],[42,40,37,38],[43,4,38,2],[43,5,38,3],[43,11,38,9],[43,15,38,13,"d"],[43,16,38,14],[43,18,38,16],[44,6,39,4],[45,6,40,4],[45,13,40,11],[45,17,40,15,"XDate"],[45,22,40,20],[45,23,40,21,"d"],[45,24,40,22],[45,26,40,24],[45,30,40,28],[45,31,40,29],[46,4,41,2],[47,2,42,0],[48,2,44,7],[48,11,44,16,"toMarkingFormat"],[48,26,44,31,"toMarkingFormat"],[48,27,44,32,"d"],[48,28,44,40],[48,30,44,42],[49,4,45,2],[49,8,45,6],[49,9,45,7,"isNaN"],[49,14,45,12],[49,15,45,13,"d"],[49,16,45,14],[49,17,45,15,"getTime"],[49,24,45,22],[49,25,45,23],[49,26,45,24],[49,27,45,25],[49,29,45,27],[50,6,46,4],[50,12,46,10,"year"],[50,16,46,14],[50,19,46,17],[50,22,46,20,"d"],[50,23,46,21],[50,24,46,22,"getFullYear"],[50,35,46,33],[50,36,46,34],[50,37,46,35],[50,39,46,37],[51,6,47,4],[51,12,47,10,"month"],[51,17,47,15],[51,20,47,18,"d"],[51,21,47,19],[51,22,47,20,"getMonth"],[51,30,47,28],[51,31,47,29],[51,32,47,30],[51,35,47,33],[51,36,47,34],[52,6,48,4],[52,12,48,10,"doubleDigitMonth"],[52,28,48,26],[52,31,48,29,"month"],[52,36,48,34],[52,39,48,37],[52,41,48,39],[52,44,48,42],[52,48,48,46,"month"],[52,53,48,51],[52,55,48,53],[52,58,48,56],[52,61,48,59,"month"],[52,66,48,64],[52,68,48,66],[53,6,49,4],[53,12,49,10,"day"],[53,15,49,13],[53,18,49,16,"d"],[53,19,49,17],[53,20,49,18,"getDate"],[53,27,49,25],[53,28,49,26],[53,29,49,27],[54,6,50,4],[54,12,50,10,"doubleDigitDay"],[54,26,50,24],[54,29,50,27,"day"],[54,32,50,30],[54,35,50,33],[54,37,50,35],[54,40,50,38],[54,44,50,42,"day"],[54,47,50,45],[54,49,50,47],[54,52,50,50],[54,55,50,53,"day"],[54,58,50,56],[54,60,50,58],[55,6,51,4],[55,13,51,11,"year"],[55,17,51,15],[55,20,51,18],[55,23,51,21],[55,26,51,24,"doubleDigitMonth"],[55,42,51,40],[55,45,51,43],[55,48,51,46],[55,51,51,49,"doubleDigitDay"],[55,65,51,63],[56,4,52,2],[57,4,53,2],[57,11,53,9],[57,25,53,23],[58,2,54,0],[59,0,54,1],[59,3]],"functionMap":{"names":["<global>","padNumber","xdateToData","parseDate","toMarkingFormat"],"mappings":"AAA;OCE;CDK;OEE;CFU;OGE;CHoB;OIE;CJU"}},"type":"js/module"}]}