{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"expo-crypto","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":38,"index":88}}],"key":"+Akla+LrhuGGU54C9zXxLPlFUv4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.secureSetItem = secureSetItem;\n  exports.secureGetItem = secureGetItem;\n  exports.secureDeleteItem = secureDeleteItem;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _expoCrypto = require(_dependencyMap[2], \"expo-crypto\");\n  var Crypto = _interopNamespace(_expoCrypto);\n  // Encryption key name in SecureStore\n  var ENCRYPTION_KEY_NAME = 'auth_encryption_key';\n\n  /**\n   * Generates or retrieves the encryption key\n   * @returns {Promise<string>} The encryption key\n   */\n  function getEncryptionKey() {\n    return _getEncryptionKey.apply(this, arguments);\n  }\n  /**\n   * Encrypts data before storing it\n   * @param {string} data - Data to encrypt\n   * @returns {Promise<string>} Encrypted data\n   */\n  function _getEncryptionKey() {\n    _getEncryptionKey = (0, _asyncToGenerator.default)(function* () {\n      var key = yield SecureStore.getItemAsync(ENCRYPTION_KEY_NAME);\n      if (!key) {\n        // Generate a new encryption key if none exists\n        var randomBytes = yield Crypto.getRandomBytesAsync(32);\n        key = Array.from(randomBytes).map(byte => byte.toString(16).padStart(2, '0')).join('');\n        yield SecureStore.setItemAsync(ENCRYPTION_KEY_NAME, key);\n      }\n      return key;\n    });\n    return _getEncryptionKey.apply(this, arguments);\n  }\n  function encrypt(_x) {\n    return _encrypt.apply(this, arguments);\n  }\n  /**\n   * Decrypts stored data\n   * @param {string} encryptedData - Data to decrypt\n   * @returns {Promise<string|null>} Decrypted data or null if decryption fails\n   */\n  function _encrypt() {\n    _encrypt = (0, _asyncToGenerator.default)(function* (data) {\n      try {\n        var key = yield getEncryptionKey();\n        // Generate a random IV for each encryption\n        var iv = yield Crypto.getRandomBytesAsync(16);\n        var ivHex = Array.from(iv).map(byte => byte.toString(16).padStart(2, '0')).join('');\n\n        // Use a simple XOR encryption with the key and IV\n        // In a production app, you would use a proper encryption algorithm like AES\n        var encrypted = '';\n        for (var i = 0; i < data.length; i++) {\n          var keyChar = key.charCodeAt(i % key.length);\n          var ivChar = parseInt(ivHex.charAt(i % ivHex.length), 16);\n          var dataChar = data.charCodeAt(i);\n          var encryptedChar = (dataChar ^ keyChar ^ ivChar) % 256;\n          encrypted += encryptedChar.toString(16).padStart(2, '0');\n        }\n\n        // Store the IV with the encrypted data\n        return JSON.stringify({\n          iv: ivHex,\n          data: encrypted\n        });\n      } catch (error) {\n        console.error('Encryption error:', error);\n        return data; // Fallback to unencrypted data\n      }\n    });\n    return _encrypt.apply(this, arguments);\n  }\n  function decrypt(_x2) {\n    return _decrypt.apply(this, arguments);\n  }\n  /**\n   * Securely stores an item in SecureStore with encryption\n   * @param {string} key - Storage key\n   * @param {string} value - Value to store\n   * @returns {Promise<void>}\n   */\n  function _decrypt() {\n    _decrypt = (0, _asyncToGenerator.default)(function* (encryptedData) {\n      try {\n        // Try to parse the encrypted data\n        var _JSON$parse = JSON.parse(encryptedData),\n          iv = _JSON$parse.iv,\n          data = _JSON$parse.data;\n\n        // If we have valid encrypted data format\n        if (iv && data) {\n          var key = yield getEncryptionKey();\n\n          // Decrypt using the same XOR method\n          var decrypted = '';\n          for (var i = 0; i < data.length; i += 2) {\n            var encryptedByte = parseInt(data.substr(i, 2), 16);\n            var keyChar = key.charCodeAt(i / 2 % key.length);\n            var ivChar = parseInt(iv.charAt(i / 2 % iv.length), 16);\n            var decryptedChar = (encryptedByte ^ keyChar ^ ivChar) % 256;\n            decrypted += String.fromCharCode(decryptedChar);\n          }\n          return decrypted;\n        }\n\n        // If the format is invalid, return null\n        return null;\n      } catch (error) {\n        // If parsing fails, it's likely not encrypted data\n        console.error('Decryption error:', error);\n        return encryptedData; // Return the original data\n      }\n    });\n    return _decrypt.apply(this, arguments);\n  }\n  function secureSetItem(_x3, _x4) {\n    return _secureSetItem.apply(this, arguments);\n  }\n  /**\n   * Securely retrieves an item from SecureStore with decryption\n   * @param {string} key - Storage key\n   * @returns {Promise<string|null>} Retrieved value or null\n   */\n  function _secureSetItem() {\n    _secureSetItem = (0, _asyncToGenerator.default)(function* (key, value) {\n      try {\n        var encryptedValue = yield encrypt(value);\n        yield SecureStore.setItemAsync(key, encryptedValue);\n      } catch (error) {\n        console.error('Error storing secure item:', error);\n        // Fallback to regular storage\n        yield SecureStore.setItemAsync(key, value);\n      }\n    });\n    return _secureSetItem.apply(this, arguments);\n  }\n  function secureGetItem(_x5) {\n    return _secureGetItem.apply(this, arguments);\n  }\n  /**\n   * Securely deletes an item from SecureStore\n   * @param {string} key - Storage key\n   * @returns {Promise<void>}\n   */\n  function _secureGetItem() {\n    _secureGetItem = (0, _asyncToGenerator.default)(function* (key) {\n      try {\n        var encryptedValue = yield SecureStore.getItemAsync(key);\n        if (!encryptedValue) return null;\n        return yield decrypt(encryptedValue);\n      } catch (error) {\n        console.error('Error retrieving secure item:', error);\n        // Attempt to get the value without decryption as fallback\n        return yield SecureStore.getItemAsync(key);\n      }\n    });\n    return _secureGetItem.apply(this, arguments);\n  }\n  function secureDeleteItem(_x6) {\n    return _secureDeleteItem.apply(this, arguments);\n  }\n  function _secureDeleteItem() {\n    _secureDeleteItem = (0, _asyncToGenerator.default)(function* (key) {\n      try {\n        yield SecureStore.deleteItemAsync(key);\n      } catch (error) {\n        console.error('Error deleting secure item:', error);\n      }\n    });\n    return _secureDeleteItem.apply(this, arguments);\n  }\n});","lineCount":202,"map":[[27,2,105,0,"exports"],[27,9,105,0],[27,10,105,0,"secureSetItem"],[27,23,105,0],[27,26,105,0,"secureSetItem"],[27,39,105,0],[28,2,121,0,"exports"],[28,9,121,0],[28,10,121,0,"secureGetItem"],[28,23,121,0],[28,26,121,0,"secureGetItem"],[28,39,121,0],[29,2,139,0,"exports"],[29,9,139,0],[29,10,139,0,"secureDeleteItem"],[29,26,139,0],[29,29,139,0,"secureDeleteItem"],[29,45,139,0],[30,2,145,1],[30,6,145,1,"_babelRuntimeHelpersAsyncToGenerator"],[30,42,145,1],[30,45,145,1,"require"],[30,52,145,1],[30,53,145,1,"_dependencyMap"],[30,67,145,1],[31,2,145,1],[31,6,145,1,"_asyncToGenerator"],[31,23,145,1],[31,26,145,1,"_interopDefault"],[31,41,145,1],[31,42,145,1,"_babelRuntimeHelpersAsyncToGenerator"],[31,78,145,1],[32,2,1,0],[32,6,1,0,"_expoSecureStore"],[32,22,1,0],[32,25,1,0,"require"],[32,32,1,0],[32,33,1,0,"_dependencyMap"],[32,47,1,0],[33,2,1,0],[33,6,1,0,"SecureStore"],[33,17,1,0],[33,20,1,0,"_interopNamespace"],[33,37,1,0],[33,38,1,0,"_expoSecureStore"],[33,54,1,0],[34,2,2,0],[34,6,2,0,"_expoCrypto"],[34,17,2,0],[34,20,2,0,"require"],[34,27,2,0],[34,28,2,0,"_dependencyMap"],[34,42,2,0],[35,2,2,0],[35,6,2,0,"Crypto"],[35,12,2,0],[35,15,2,0,"_interopNamespace"],[35,32,2,0],[35,33,2,0,"_expoCrypto"],[35,44,2,0],[36,2,4,0],[37,2,5,0],[37,6,5,6,"ENCRYPTION_KEY_NAME"],[37,25,5,25],[37,28,5,28],[37,49,5,49],[39,2,7,0],[40,0,8,0],[41,0,9,0],[42,0,10,0],[43,2,7,0],[43,11,11,15,"getEncryptionKey"],[43,27,11,31,"getEncryptionKey"],[43,28,11,31],[44,4,11,31],[44,11,11,31,"_getEncryptionKey"],[44,28,11,31],[44,29,11,31,"apply"],[44,34,11,31],[44,41,11,31,"arguments"],[44,50,11,31],[45,2,11,31],[46,2,27,0],[47,0,28,0],[48,0,29,0],[49,0,30,0],[50,0,31,0],[51,2,27,0],[51,11,27,0,"_getEncryptionKey"],[51,29,27,0],[52,4,27,0,"_getEncryptionKey"],[52,21,27,0],[52,28,27,0,"_asyncToGenerator"],[52,45,27,0],[52,46,27,0,"default"],[52,53,27,0],[52,55,11,0],[52,68,11,34],[53,6,12,2],[53,10,12,6,"key"],[53,13,12,9],[53,22,12,18,"SecureStore"],[53,33,12,29],[53,34,12,30,"getItemAsync"],[53,46,12,42],[53,47,12,43,"ENCRYPTION_KEY_NAME"],[53,66,12,62],[53,67,12,63],[54,6,14,2],[54,10,14,6],[54,11,14,7,"key"],[54,14,14,10],[54,16,14,12],[55,8,15,4],[56,8,16,4],[56,12,16,10,"randomBytes"],[56,23,16,21],[56,32,16,30,"Crypto"],[56,38,16,36],[56,39,16,37,"getRandomBytesAsync"],[56,58,16,56],[56,59,16,57],[56,61,16,59],[56,62,16,60],[57,8,17,4,"key"],[57,11,17,7],[57,14,17,10,"Array"],[57,19,17,15],[57,20,17,16,"from"],[57,24,17,20],[57,25,17,21,"randomBytes"],[57,36,17,32],[57,37,17,33],[57,38,18,7,"map"],[57,41,18,10],[57,42,18,11,"byte"],[57,46,18,15],[57,50,18,19,"byte"],[57,54,18,23],[57,55,18,24,"toString"],[57,63,18,32],[57,64,18,33],[57,66,18,35],[57,67,18,36],[57,68,18,37,"padStart"],[57,76,18,45],[57,77,18,46],[57,78,18,47],[57,80,18,49],[57,83,18,52],[57,84,18,53],[57,85,18,54],[57,86,19,7,"join"],[57,90,19,11],[57,91,19,12],[57,93,19,14],[57,94,19,15],[58,8,21,4],[58,14,21,10,"SecureStore"],[58,25,21,21],[58,26,21,22,"setItemAsync"],[58,38,21,34],[58,39,21,35,"ENCRYPTION_KEY_NAME"],[58,58,21,54],[58,60,21,56,"key"],[58,63,21,59],[58,64,21,60],[59,6,22,2],[60,6,24,2],[60,13,24,9,"key"],[60,16,24,12],[61,4,25,0],[61,5,25,1],[62,4,25,1],[62,11,25,1,"_getEncryptionKey"],[62,28,25,1],[62,29,25,1,"apply"],[62,34,25,1],[62,41,25,1,"arguments"],[62,50,25,1],[63,2,25,1],[64,2,25,1],[64,11,32,15,"encrypt"],[64,18,32,22,"encrypt"],[64,19,32,22,"_x"],[64,21,32,22],[65,4,32,22],[65,11,32,22,"_encrypt"],[65,19,32,22],[65,20,32,22,"apply"],[65,25,32,22],[65,32,32,22,"arguments"],[65,41,32,22],[66,2,32,22],[67,2,63,0],[68,0,64,0],[69,0,65,0],[70,0,66,0],[71,0,67,0],[72,2,63,0],[72,11,63,0,"_encrypt"],[72,20,63,0],[73,4,63,0,"_encrypt"],[73,12,63,0],[73,19,63,0,"_asyncToGenerator"],[73,36,63,0],[73,37,63,0,"default"],[73,44,63,0],[73,46,32,0],[73,57,32,23,"data"],[73,61,32,27],[73,63,32,29],[74,6,33,2],[74,10,33,6],[75,8,34,4],[75,12,34,10,"key"],[75,15,34,13],[75,24,34,22,"getEncryptionKey"],[75,40,34,38],[75,41,34,39],[75,42,34,40],[76,8,35,4],[77,8,36,4],[77,12,36,10,"iv"],[77,14,36,12],[77,23,36,21,"Crypto"],[77,29,36,27],[77,30,36,28,"getRandomBytesAsync"],[77,49,36,47],[77,50,36,48],[77,52,36,50],[77,53,36,51],[78,8,37,4],[78,12,37,10,"ivHex"],[78,17,37,15],[78,20,37,18,"Array"],[78,25,37,23],[78,26,37,24,"from"],[78,30,37,28],[78,31,37,29,"iv"],[78,33,37,31],[78,34,37,32],[78,35,38,7,"map"],[78,38,38,10],[78,39,38,11,"byte"],[78,43,38,15],[78,47,38,19,"byte"],[78,51,38,23],[78,52,38,24,"toString"],[78,60,38,32],[78,61,38,33],[78,63,38,35],[78,64,38,36],[78,65,38,37,"padStart"],[78,73,38,45],[78,74,38,46],[78,75,38,47],[78,77,38,49],[78,80,38,52],[78,81,38,53],[78,82,38,54],[78,83,39,7,"join"],[78,87,39,11],[78,88,39,12],[78,90,39,14],[78,91,39,15],[80,8,41,4],[81,8,42,4],[82,8,43,4],[82,12,43,8,"encrypted"],[82,21,43,17],[82,24,43,20],[82,26,43,22],[83,8,44,4],[83,13,44,9],[83,17,44,13,"i"],[83,18,44,14],[83,21,44,17],[83,22,44,18],[83,24,44,20,"i"],[83,25,44,21],[83,28,44,24,"data"],[83,32,44,28],[83,33,44,29,"length"],[83,39,44,35],[83,41,44,37,"i"],[83,42,44,38],[83,44,44,40],[83,46,44,42],[84,10,45,6],[84,14,45,12,"keyChar"],[84,21,45,19],[84,24,45,22,"key"],[84,27,45,25],[84,28,45,26,"charCodeAt"],[84,38,45,36],[84,39,45,37,"i"],[84,40,45,38],[84,43,45,41,"key"],[84,46,45,44],[84,47,45,45,"length"],[84,53,45,51],[84,54,45,52],[85,10,46,6],[85,14,46,12,"ivChar"],[85,20,46,18],[85,23,46,21,"parseInt"],[85,31,46,29],[85,32,46,30,"ivHex"],[85,37,46,35],[85,38,46,36,"charAt"],[85,44,46,42],[85,45,46,43,"i"],[85,46,46,44],[85,49,46,47,"ivHex"],[85,54,46,52],[85,55,46,53,"length"],[85,61,46,59],[85,62,46,60],[85,64,46,62],[85,66,46,64],[85,67,46,65],[86,10,47,6],[86,14,47,12,"dataChar"],[86,22,47,20],[86,25,47,23,"data"],[86,29,47,27],[86,30,47,28,"charCodeAt"],[86,40,47,38],[86,41,47,39,"i"],[86,42,47,40],[86,43,47,41],[87,10,48,6],[87,14,48,12,"encryptedChar"],[87,27,48,25],[87,30,48,28],[87,31,48,29,"dataChar"],[87,39,48,37],[87,42,48,40,"keyChar"],[87,49,48,47],[87,52,48,50,"ivChar"],[87,58,48,56],[87,62,48,60],[87,65,48,63],[88,10,49,6,"encrypted"],[88,19,49,15],[88,23,49,19,"encryptedChar"],[88,36,49,32],[88,37,49,33,"toString"],[88,45,49,41],[88,46,49,42],[88,48,49,44],[88,49,49,45],[88,50,49,46,"padStart"],[88,58,49,54],[88,59,49,55],[88,60,49,56],[88,62,49,58],[88,65,49,61],[88,66,49,62],[89,8,50,4],[91,8,52,4],[92,8,53,4],[92,15,53,11,"JSON"],[92,19,53,15],[92,20,53,16,"stringify"],[92,29,53,25],[92,30,53,26],[93,10,54,6,"iv"],[93,12,54,8],[93,14,54,10,"ivHex"],[93,19,54,15],[94,10,55,6,"data"],[94,14,55,10],[94,16,55,12,"encrypted"],[95,8,56,4],[95,9,56,5],[95,10,56,6],[96,6,57,2],[96,7,57,3],[96,8,57,4],[96,15,57,11,"error"],[96,20,57,16],[96,22,57,18],[97,8,58,4,"console"],[97,15,58,11],[97,16,58,12,"error"],[97,21,58,17],[97,22,58,18],[97,41,58,37],[97,43,58,39,"error"],[97,48,58,44],[97,49,58,45],[98,8,59,4],[98,15,59,11,"data"],[98,19,59,15],[98,20,59,16],[98,21,59,17],[99,6,60,2],[100,4,61,0],[100,5,61,1],[101,4,61,1],[101,11,61,1,"_encrypt"],[101,19,61,1],[101,20,61,1,"apply"],[101,25,61,1],[101,32,61,1,"arguments"],[101,41,61,1],[102,2,61,1],[103,2,61,1],[103,11,68,15,"decrypt"],[103,18,68,22,"decrypt"],[103,19,68,22,"_x2"],[103,22,68,22],[104,4,68,22],[104,11,68,22,"_decrypt"],[104,19,68,22],[104,20,68,22,"apply"],[104,25,68,22],[104,32,68,22,"arguments"],[104,41,68,22],[105,2,68,22],[106,2,99,0],[107,0,100,0],[108,0,101,0],[109,0,102,0],[110,0,103,0],[111,0,104,0],[112,2,99,0],[112,11,99,0,"_decrypt"],[112,20,99,0],[113,4,99,0,"_decrypt"],[113,12,99,0],[113,19,99,0,"_asyncToGenerator"],[113,36,99,0],[113,37,99,0,"default"],[113,44,99,0],[113,46,68,0],[113,57,68,23,"encryptedData"],[113,70,68,36],[113,72,68,38],[114,6,69,2],[114,10,69,6],[115,8,70,4],[116,8,71,4],[116,12,71,4,"_JSON$parse"],[116,23,71,4],[116,26,71,25,"JSON"],[116,30,71,29],[116,31,71,30,"parse"],[116,36,71,35],[116,37,71,36,"encryptedData"],[116,50,71,49],[116,51,71,50],[117,10,71,12,"iv"],[117,12,71,14],[117,15,71,14,"_JSON$parse"],[117,26,71,14],[117,27,71,12,"iv"],[117,29,71,14],[118,10,71,16,"data"],[118,14,71,20],[118,17,71,20,"_JSON$parse"],[118,28,71,20],[118,29,71,16,"data"],[118,33,71,20],[120,8,73,4],[121,8,74,4],[121,12,74,8,"iv"],[121,14,74,10],[121,18,74,14,"data"],[121,22,74,18],[121,24,74,20],[122,10,75,6],[122,14,75,12,"key"],[122,17,75,15],[122,26,75,24,"getEncryptionKey"],[122,42,75,40],[122,43,75,41],[122,44,75,42],[124,10,77,6],[125,10,78,6],[125,14,78,10,"decrypted"],[125,23,78,19],[125,26,78,22],[125,28,78,24],[126,10,79,6],[126,15,79,11],[126,19,79,15,"i"],[126,20,79,16],[126,23,79,19],[126,24,79,20],[126,26,79,22,"i"],[126,27,79,23],[126,30,79,26,"data"],[126,34,79,30],[126,35,79,31,"length"],[126,41,79,37],[126,43,79,39,"i"],[126,44,79,40],[126,48,79,44],[126,49,79,45],[126,51,79,47],[127,12,80,8],[127,16,80,14,"encryptedByte"],[127,29,80,27],[127,32,80,30,"parseInt"],[127,40,80,38],[127,41,80,39,"data"],[127,45,80,43],[127,46,80,44,"substr"],[127,52,80,50],[127,53,80,51,"i"],[127,54,80,52],[127,56,80,54],[127,57,80,55],[127,58,80,56],[127,60,80,58],[127,62,80,60],[127,63,80,61],[128,12,81,8],[128,16,81,14,"keyChar"],[128,23,81,21],[128,26,81,24,"key"],[128,29,81,27],[128,30,81,28,"charCodeAt"],[128,40,81,38],[128,41,81,40,"i"],[128,42,81,41],[128,45,81,44],[128,46,81,45],[128,49,81,49,"key"],[128,52,81,52],[128,53,81,53,"length"],[128,59,81,59],[128,60,81,60],[129,12,82,8],[129,16,82,14,"ivChar"],[129,22,82,20],[129,25,82,23,"parseInt"],[129,33,82,31],[129,34,82,32,"iv"],[129,36,82,34],[129,37,82,35,"charAt"],[129,43,82,41],[129,44,82,43,"i"],[129,45,82,44],[129,48,82,47],[129,49,82,48],[129,52,82,52,"iv"],[129,54,82,54],[129,55,82,55,"length"],[129,61,82,61],[129,62,82,62],[129,64,82,64],[129,66,82,66],[129,67,82,67],[130,12,83,8],[130,16,83,14,"decryptedChar"],[130,29,83,27],[130,32,83,30],[130,33,83,31,"encryptedByte"],[130,46,83,44],[130,49,83,47,"keyChar"],[130,56,83,54],[130,59,83,57,"ivChar"],[130,65,83,63],[130,69,83,67],[130,72,83,70],[131,12,84,8,"decrypted"],[131,21,84,17],[131,25,84,21,"String"],[131,31,84,27],[131,32,84,28,"fromCharCode"],[131,44,84,40],[131,45,84,41,"decryptedChar"],[131,58,84,54],[131,59,84,55],[132,10,85,6],[133,10,87,6],[133,17,87,13,"decrypted"],[133,26,87,22],[134,8,88,4],[136,8,90,4],[137,8,91,4],[137,15,91,11],[137,19,91,15],[138,6,92,2],[138,7,92,3],[138,8,92,4],[138,15,92,11,"error"],[138,20,92,16],[138,22,92,18],[139,8,93,4],[140,8,94,4,"console"],[140,15,94,11],[140,16,94,12,"error"],[140,21,94,17],[140,22,94,18],[140,41,94,37],[140,43,94,39,"error"],[140,48,94,44],[140,49,94,45],[141,8,95,4],[141,15,95,11,"encryptedData"],[141,28,95,24],[141,29,95,25],[141,30,95,26],[142,6,96,2],[143,4,97,0],[143,5,97,1],[144,4,97,1],[144,11,97,1,"_decrypt"],[144,19,97,1],[144,20,97,1,"apply"],[144,25,97,1],[144,32,97,1,"arguments"],[144,41,97,1],[145,2,97,1],[146,2,97,1],[146,11,105,22,"secureSetItem"],[146,24,105,35,"secureSetItem"],[146,25,105,35,"_x3"],[146,28,105,35],[146,30,105,35,"_x4"],[146,33,105,35],[147,4,105,35],[147,11,105,35,"_secureSetItem"],[147,25,105,35],[147,26,105,35,"apply"],[147,31,105,35],[147,38,105,35,"arguments"],[147,47,105,35],[148,2,105,35],[149,2,116,0],[150,0,117,0],[151,0,118,0],[152,0,119,0],[153,0,120,0],[154,2,116,0],[154,11,116,0,"_secureSetItem"],[154,26,116,0],[155,4,116,0,"_secureSetItem"],[155,18,116,0],[155,25,116,0,"_asyncToGenerator"],[155,42,116,0],[155,43,116,0,"default"],[155,50,116,0],[155,52,105,7],[155,63,105,36,"key"],[155,66,105,39],[155,68,105,41,"value"],[155,73,105,46],[155,75,105,48],[156,6,106,2],[156,10,106,6],[157,8,107,4],[157,12,107,10,"encryptedValue"],[157,26,107,24],[157,35,107,33,"encrypt"],[157,42,107,40],[157,43,107,41,"value"],[157,48,107,46],[157,49,107,47],[158,8,108,4],[158,14,108,10,"SecureStore"],[158,25,108,21],[158,26,108,22,"setItemAsync"],[158,38,108,34],[158,39,108,35,"key"],[158,42,108,38],[158,44,108,40,"encryptedValue"],[158,58,108,54],[158,59,108,55],[159,6,109,2],[159,7,109,3],[159,8,109,4],[159,15,109,11,"error"],[159,20,109,16],[159,22,109,18],[160,8,110,4,"console"],[160,15,110,11],[160,16,110,12,"error"],[160,21,110,17],[160,22,110,18],[160,50,110,46],[160,52,110,48,"error"],[160,57,110,53],[160,58,110,54],[161,8,111,4],[162,8,112,4],[162,14,112,10,"SecureStore"],[162,25,112,21],[162,26,112,22,"setItemAsync"],[162,38,112,34],[162,39,112,35,"key"],[162,42,112,38],[162,44,112,40,"value"],[162,49,112,45],[162,50,112,46],[163,6,113,2],[164,4,114,0],[164,5,114,1],[165,4,114,1],[165,11,114,1,"_secureSetItem"],[165,25,114,1],[165,26,114,1,"apply"],[165,31,114,1],[165,38,114,1,"arguments"],[165,47,114,1],[166,2,114,1],[167,2,114,1],[167,11,121,22,"secureGetItem"],[167,24,121,35,"secureGetItem"],[167,25,121,35,"_x5"],[167,28,121,35],[168,4,121,35],[168,11,121,35,"_secureGetItem"],[168,25,121,35],[168,26,121,35,"apply"],[168,31,121,35],[168,38,121,35,"arguments"],[168,47,121,35],[169,2,121,35],[170,2,134,0],[171,0,135,0],[172,0,136,0],[173,0,137,0],[174,0,138,0],[175,2,134,0],[175,11,134,0,"_secureGetItem"],[175,26,134,0],[176,4,134,0,"_secureGetItem"],[176,18,134,0],[176,25,134,0,"_asyncToGenerator"],[176,42,134,0],[176,43,134,0,"default"],[176,50,134,0],[176,52,121,7],[176,63,121,36,"key"],[176,66,121,39],[176,68,121,41],[177,6,122,2],[177,10,122,6],[178,8,123,4],[178,12,123,10,"encryptedValue"],[178,26,123,24],[178,35,123,33,"SecureStore"],[178,46,123,44],[178,47,123,45,"getItemAsync"],[178,59,123,57],[178,60,123,58,"key"],[178,63,123,61],[178,64,123,62],[179,8,124,4],[179,12,124,8],[179,13,124,9,"encryptedValue"],[179,27,124,23],[179,29,124,25],[179,36,124,32],[179,40,124,36],[180,8,126,4],[180,21,126,17,"decrypt"],[180,28,126,24],[180,29,126,25,"encryptedValue"],[180,43,126,39],[180,44,126,40],[181,6,127,2],[181,7,127,3],[181,8,127,4],[181,15,127,11,"error"],[181,20,127,16],[181,22,127,18],[182,8,128,4,"console"],[182,15,128,11],[182,16,128,12,"error"],[182,21,128,17],[182,22,128,18],[182,53,128,49],[182,55,128,51,"error"],[182,60,128,56],[182,61,128,57],[183,8,129,4],[184,8,130,4],[184,21,130,17,"SecureStore"],[184,32,130,28],[184,33,130,29,"getItemAsync"],[184,45,130,41],[184,46,130,42,"key"],[184,49,130,45],[184,50,130,46],[185,6,131,2],[186,4,132,0],[186,5,132,1],[187,4,132,1],[187,11,132,1,"_secureGetItem"],[187,25,132,1],[187,26,132,1,"apply"],[187,31,132,1],[187,38,132,1,"arguments"],[187,47,132,1],[188,2,132,1],[189,2,132,1],[189,11,139,22,"secureDeleteItem"],[189,27,139,38,"secureDeleteItem"],[189,28,139,38,"_x6"],[189,31,139,38],[190,4,139,38],[190,11,139,38,"_secureDeleteItem"],[190,28,139,38],[190,29,139,38,"apply"],[190,34,139,38],[190,41,139,38,"arguments"],[190,50,139,38],[191,2,139,38],[192,2,139,38],[192,11,139,38,"_secureDeleteItem"],[192,29,139,38],[193,4,139,38,"_secureDeleteItem"],[193,21,139,38],[193,28,139,38,"_asyncToGenerator"],[193,45,139,38],[193,46,139,38,"default"],[193,53,139,38],[193,55,139,7],[193,66,139,39,"key"],[193,69,139,42],[193,71,139,44],[194,6,140,2],[194,10,140,6],[195,8,141,4],[195,14,141,10,"SecureStore"],[195,25,141,21],[195,26,141,22,"deleteItemAsync"],[195,41,141,37],[195,42,141,38,"key"],[195,45,141,41],[195,46,141,42],[196,6,142,2],[196,7,142,3],[196,8,142,4],[196,15,142,11,"error"],[196,20,142,16],[196,22,142,18],[197,8,143,4,"console"],[197,15,143,11],[197,16,143,12,"error"],[197,21,143,17],[197,22,143,18],[197,51,143,47],[197,53,143,49,"error"],[197,58,143,54],[197,59,143,55],[198,6,144,2],[199,4,145,0],[199,5,145,1],[200,4,145,1],[200,11,145,1,"_secureDeleteItem"],[200,28,145,1],[200,29,145,1,"apply"],[200,34,145,1],[200,41,145,1,"arguments"],[200,50,145,1],[201,2,145,1],[202,0,145,1],[202,3]],"functionMap":{"names":["<global>","getEncryptionKey","Array.from.map$argument_0","encrypt","decrypt","secureSetItem","secureGetItem","secureDeleteItem"],"mappings":"AAA;ACU;WCO,0CD;CDO;AGO;WDM,0CC;CHuB;AIO;CJ6B;OKQ;CLS;OMO;CNW;OOO"},"hasCjsExports":false},"type":"js/module"}]}