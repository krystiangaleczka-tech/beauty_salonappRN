{"dependencies":[{"name":"style-value-types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"amhWSRCUxLBa3Njmww3P7iM/NQE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"isAnimatable\", {\n    enumerable: true,\n    get: function () {\n      return isAnimatable;\n    }\n  });\n  var _styleValueTypes = require(_dependencyMap[0], \"style-value-types\");\n  /**\n   * Check if a value is animatable. Examples:\n   *\n   * ✅: 100, \"100px\", \"#fff\"\n   * ❌: \"block\", \"url(2.jpg)\"\n   * @param value\n   *\n   * @internal\n   */\n  var isAnimatable = function (key, value) {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\") return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value)) return true;\n    if (typeof value === \"string\" &&\n    // It's animatable if we have a string\n    _styleValueTypes.complex.test(value) &&\n    // And it contains numbers and/or colors\n    !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n      return true;\n    }\n    return false;\n  };\n});","lineCount":40,"map":[[7,2,30,0,"Object"],[7,8,30,0],[7,9,30,0,"defineProperty"],[7,23,30,0],[7,24,30,0,"exports"],[7,31,30,0],[8,4,30,0,"enumerable"],[8,14,30,0],[9,4,30,0,"get"],[9,7,30,0],[9,18,30,0,"get"],[9,19,30,0],[10,6,30,0],[10,13,30,9,"isAnimatable"],[10,25,30,21],[11,4,30,21],[12,2,30,21],[13,2,1,0],[13,6,1,0,"_styleValueTypes"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,3,0],[15,0,4,0],[16,0,5,0],[17,0,6,0],[18,0,7,0],[19,0,8,0],[20,0,9,0],[21,0,10,0],[22,0,11,0],[23,2,12,0],[23,6,12,4,"isAnimatable"],[23,18,12,16],[23,21,12,19],[23,30,12,19,"isAnimatable"],[23,31,12,29,"key"],[23,34,12,32],[23,36,12,34,"value"],[23,41,12,39],[23,43,12,41],[24,4,13,4],[25,4,14,4],[25,8,14,8,"key"],[25,11,14,11],[25,16,14,16],[25,24,14,24],[25,26,15,8],[25,33,15,15],[25,38,15,20],[26,4,16,4],[27,4,17,4],[28,4,18,4],[29,4,19,4],[29,8,19,8],[29,15,19,15,"value"],[29,20,19,20],[29,25,19,25],[29,33,19,33],[29,37,19,37,"Array"],[29,42,19,42],[29,43,19,43,"isArray"],[29,50,19,50],[29,51,19,51,"value"],[29,56,19,56],[29,57,19,57],[29,59,20,8],[29,66,20,15],[29,70,20,19],[30,4,21,4],[30,8,21,8],[30,15,21,15,"value"],[30,20,21,20],[30,25,21,25],[30,33,21,33],[31,4,21,37],[32,4,22,8,"complex"],[32,20,22,15],[32,21,22,15,"complex"],[32,28,22,15],[32,29,22,16,"test"],[32,33,22,20],[32,34,22,21,"value"],[32,39,22,26],[32,40,22,27],[33,4,22,31],[34,4,23,8],[34,5,23,9,"value"],[34,10,23,14],[34,11,23,15,"startsWith"],[34,21,23,25],[34,22,23,26],[34,28,23,32],[34,29,23,33],[34,30,23,34],[35,4,23,34],[35,6,24,6],[36,6,25,8],[36,13,25,15],[36,17,25,19],[37,4,26,4],[38,4,27,4],[38,11,27,11],[38,16,27,16],[39,2,28,0],[39,3,28,1],[40,0,28,2],[40,3]],"functionMap":{"names":["<global>","isAnimatable"],"mappings":"AAA;mBCW;CDgB"},"hasCjsExports":false},"type":"js/module"}]}