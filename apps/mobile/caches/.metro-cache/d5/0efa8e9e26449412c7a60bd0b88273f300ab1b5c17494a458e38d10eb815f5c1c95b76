{"dependencies":[{"name":"./_castPath","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":37,"index":37}}],"key":"gThAZbcxzplaHx+ZHPkGwyOqdbE=","exportNames":["*"]}},{"name":"./isArguments","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":18,"index":57},"end":{"line":2,"column":42,"index":81}}],"key":"HD8q1j8YwiXe5LPVP2ZkI1qLoNI=","exportNames":["*"]}},{"name":"./isArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":14,"index":97},"end":{"line":3,"column":34,"index":117}}],"key":"cpLl3Nq+ZgzwmgESYQ2NCH3CqEk=","exportNames":["*"]}},{"name":"./_isIndex","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":133},"end":{"line":4,"column":35,"index":154}}],"key":"S6wckcT8wNEzB2hzznJCHR2zxmY=","exportNames":["*"]}},{"name":"./isLength","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":15,"index":171},"end":{"line":5,"column":36,"index":192}}],"key":"vrfFV6fayKNgZeWUeIJJ0BtKAEc=","exportNames":["*"]}},{"name":"./_toKey","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":12,"index":206},"end":{"line":6,"column":31,"index":225}}],"key":"Orj83O1n3KF9HuqtrxUAA2MggOw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var castPath = require(_dependencyMap[0], \"./_castPath\"),\n    isArguments = require(_dependencyMap[1], \"./isArguments\"),\n    isArray = require(_dependencyMap[2], \"./isArray\"),\n    isIndex = require(_dependencyMap[3], \"./_isIndex\"),\n    isLength = require(_dependencyMap[4], \"./isLength\"),\n    toKey = require(_dependencyMap[5], \"./_toKey\");\n\n  /**\n   * Checks if `path` exists on `object`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @param {Function} hasFunc The function to check properties.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   */\n  function hasPath(object, path, hasFunc) {\n    path = castPath(path, object);\n    var index = -1,\n      length = path.length,\n      result = false;\n    while (++index < length) {\n      var key = toKey(path[index]);\n      if (!(result = object != null && hasFunc(object, key))) {\n        break;\n      }\n      object = object[key];\n    }\n    if (result || ++index != length) {\n      return result;\n    }\n    length = object == null ? 0 : object.length;\n    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n  }\n  module.exports = hasPath;\n});","lineCount":37,"map":[[2,2,1,0],[2,6,1,4,"castPath"],[2,14,1,12],[2,17,1,15,"require"],[2,24,1,22],[2,25,1,22,"_dependencyMap"],[2,39,1,22],[2,57,1,36],[2,58,1,37],[3,4,2,4,"isArguments"],[3,15,2,15],[3,18,2,18,"require"],[3,25,2,25],[3,26,2,25,"_dependencyMap"],[3,40,2,25],[3,60,2,41],[3,61,2,42],[4,4,3,4,"isArray"],[4,11,3,11],[4,14,3,14,"require"],[4,21,3,21],[4,22,3,21,"_dependencyMap"],[4,36,3,21],[4,52,3,33],[4,53,3,34],[5,4,4,4,"isIndex"],[5,11,4,11],[5,14,4,14,"require"],[5,21,4,21],[5,22,4,21,"_dependencyMap"],[5,36,4,21],[5,53,4,34],[5,54,4,35],[6,4,5,4,"isLength"],[6,12,5,12],[6,15,5,15,"require"],[6,22,5,22],[6,23,5,22,"_dependencyMap"],[6,37,5,22],[6,54,5,35],[6,55,5,36],[7,4,6,4,"toKey"],[7,9,6,9],[7,12,6,12,"require"],[7,19,6,19],[7,20,6,19,"_dependencyMap"],[7,34,6,19],[7,49,6,30],[7,50,6,31],[9,2,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,2,17,0],[18,11,17,9,"hasPath"],[18,18,17,16,"hasPath"],[18,19,17,17,"object"],[18,25,17,23],[18,27,17,25,"path"],[18,31,17,29],[18,33,17,31,"hasFunc"],[18,40,17,38],[18,42,17,40],[19,4,18,2,"path"],[19,8,18,6],[19,11,18,9,"castPath"],[19,19,18,17],[19,20,18,18,"path"],[19,24,18,22],[19,26,18,24,"object"],[19,32,18,30],[19,33,18,31],[20,4,20,2],[20,8,20,6,"index"],[20,13,20,11],[20,16,20,14],[20,17,20,15],[20,18,20,16],[21,6,21,6,"length"],[21,12,21,12],[21,15,21,15,"path"],[21,19,21,19],[21,20,21,20,"length"],[21,26,21,26],[22,6,22,6,"result"],[22,12,22,12],[22,15,22,15],[22,20,22,20],[23,4,24,2],[23,11,24,9],[23,13,24,11,"index"],[23,18,24,16],[23,21,24,19,"length"],[23,27,24,25],[23,29,24,27],[24,6,25,4],[24,10,25,8,"key"],[24,13,25,11],[24,16,25,14,"toKey"],[24,21,25,19],[24,22,25,20,"path"],[24,26,25,24],[24,27,25,25,"index"],[24,32,25,30],[24,33,25,31],[24,34,25,32],[25,6,26,4],[25,10,26,8],[25,12,26,10,"result"],[25,18,26,16],[25,21,26,19,"object"],[25,27,26,25],[25,31,26,29],[25,35,26,33],[25,39,26,37,"hasFunc"],[25,46,26,44],[25,47,26,45,"object"],[25,53,26,51],[25,55,26,53,"key"],[25,58,26,56],[25,59,26,57],[25,60,26,58],[25,62,26,60],[26,8,27,6],[27,6,28,4],[28,6,29,4,"object"],[28,12,29,10],[28,15,29,13,"object"],[28,21,29,19],[28,22,29,20,"key"],[28,25,29,23],[28,26,29,24],[29,4,30,2],[30,4,31,2],[30,8,31,6,"result"],[30,14,31,12],[30,18,31,16],[30,20,31,18,"index"],[30,25,31,23],[30,29,31,27,"length"],[30,35,31,33],[30,37,31,35],[31,6,32,4],[31,13,32,11,"result"],[31,19,32,17],[32,4,33,2],[33,4,34,2,"length"],[33,10,34,8],[33,13,34,11,"object"],[33,19,34,17],[33,23,34,21],[33,27,34,25],[33,30,34,28],[33,31,34,29],[33,34,34,32,"object"],[33,40,34,38],[33,41,34,39,"length"],[33,47,34,45],[34,4,35,2],[34,11,35,9],[34,12,35,10],[34,13,35,11,"length"],[34,19,35,17],[34,23,35,21,"isLength"],[34,31,35,29],[34,32,35,30,"length"],[34,38,35,36],[34,39,35,37],[34,43,35,41,"isIndex"],[34,50,35,48],[34,51,35,49,"key"],[34,54,35,52],[34,56,35,54,"length"],[34,62,35,60],[34,63,35,61],[34,68,36,5,"isArray"],[34,75,36,12],[34,76,36,13,"object"],[34,82,36,19],[34,83,36,20],[34,87,36,24,"isArguments"],[34,98,36,35],[34,99,36,36,"object"],[34,105,36,42],[34,106,36,43],[34,107,36,44],[35,2,37,0],[36,2,39,0,"module"],[36,8,39,6],[36,9,39,7,"exports"],[36,16,39,14],[36,19,39,17,"hasPath"],[36,26,39,24],[37,0,39,25],[37,3]],"functionMap":{"names":["<global>","hasPath"],"mappings":"AAA;ACgB;CDoB"}},"type":"js/module"}]}